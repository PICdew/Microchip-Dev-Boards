

Microchip Technology PIC LITE Macro Assembler V1.42 build -159332390 
                                                                                               Mon Jun 12 14:23:46 2017

Microchip Technology Omniscient Code Generator v1.42 (Free mode) build 201704130522
     1                           	processor	10F322
     2                           	opt	pw 120
     3                           	opt	lm
     4                           	psect	nvBANK0,global,class=BANK0,space=1,delta=1
     5                           	psect	cinit,global,class=CODE,merge=1,delta=2
     6                           	psect	cstackCOMMON,global,class=COMMON,space=1,delta=1
     7                           	psect	cstackBANK0,global,class=BANK0,space=1,delta=1
     8                           	psect	maintext,global,class=CODE,split=1,delta=2
     9                           	psect	text1,local,class=CODE,merge=1,delta=2
    10                           	psect	text2,local,class=CODE,merge=1,delta=2
    11                           	psect	text3,local,class=CODE,merge=1,delta=2
    12                           	psect	text4,local,class=CODE,merge=1,delta=2
    13                           	psect	text5,local,class=CODE,merge=1,delta=2
    14                           	psect	text6,local,class=CODE,merge=1,delta=2
    15                           	psect	text7,local,class=CODE,merge=1,delta=2
    16                           	psect	text8,local,class=CODE,merge=1,delta=2
    17                           	dabs	1,0x7E,2
    18  0000                     
    19                           ; Version 1.42
    20                           ; Generated 13/04/2017 GMT
    21                           ; 
    22                           ; Copyright Â© 2017, Microchip Technology Inc. and its subsidiaries ("Microchip")
    23                           ; All rights reserved.
    24                           ; 
    25                           ; This software is developed by Microchip Technology Inc. and its subsidiaries ("Microch
      +                          ip").
    26                           ; 
    27                           ; Redistribution and use in source and binary forms, with or without modification, are
    28                           ; permitted provided that the following conditions are met:
    29                           ; 
    30                           ;     1. Redistributions of source code must retain the above copyright notice, this lis
      +                          t of
    31                           ;        conditions and the following disclaimer.
    32                           ; 
    33                           ;     2. Redistributions in binary form must reproduce the above copyright notice, this 
      +                          list
    34                           ;        of conditions and the following disclaimer in the documentation and/or other
    35                           ;        materials provided with the distribution.
    36                           ; 
    37                           ;     3. Microchip's name may not be used to endorse or promote products derived from th
      +                          is
    38                           ;        software without specific prior written permission.
    39                           ; 
    40                           ; THIS SOFTWARE IS PROVIDED BY MICROCHIP "AS IS" AND ANY EXPRESS OR IMPLIED WARRANTIES,
    41                           ; INCLUDING, BUT NOT LIMITED TO, THE IMPLIED WARRANTIES OF MERCHANTABILITY AND FITNESS F
      +                          OR
    42                           ; PURPOSE ARE DISCLAIMED.  IN NO EVENT SHALL MICROCHIP BE LIABLE FOR ANY DIRECT, INDIREC
      +                          T,
    43                           ; INCIDENTAL, SPECIAL, EXEMPLARY, OR CONSEQUENTIAL DAMAGES (INCLUDING BUT NOT LIMITED TO
    44                           ; PROCUREMENT OF SUBSTITUTE GOODS OR SERVICES; LOSS OF USE, DATA OR PROFITS; OR BUSINESS
    45                           ; INTERRUPTION) HOWSOEVER CAUSED AND ON ANY THEORY OF LIABILITY, WHETHER IN CONTRACT, ST
      +                          RICT
    46                           ; LIABILITY, OR TORT (INCLUDING NEGLIGENCE OR OTHERWISE) ARISING IN ANY WAY OUT OF THE U
      +                          SE OF
    47                           ; THIS SOFTWARE, EVEN IF ADVISED OF THE POSSIBILITY OF SUCH DAMAGE.
    48                           ; 
    49                           ; 
    50                           ; Code-generator required, PIC10F322 Definitions
    51                           ; 
    52                           ; SFR Addresses
    53  0000                     	;# 
    54  0001                     	;# 
    55  0002                     	;# 
    56  0003                     	;# 
    57  0004                     	;# 
    58  0005                     	;# 
    59  0006                     	;# 
    60  0007                     	;# 
    61  0008                     	;# 
    62  0009                     	;# 
    63  000A                     	;# 
    64  000B                     	;# 
    65  000C                     	;# 
    66  000D                     	;# 
    67  000E                     	;# 
    68  000F                     	;# 
    69  0010                     	;# 
    70  0011                     	;# 
    71  0012                     	;# 
    72  0013                     	;# 
    73  0014                     	;# 
    74  0015                     	;# 
    75  0016                     	;# 
    76  0016                     	;# 
    77  0017                     	;# 
    78  0018                     	;# 
    79  0019                     	;# 
    80  0019                     	;# 
    81  001A                     	;# 
    82  001B                     	;# 
    83  001C                     	;# 
    84  001D                     	;# 
    85  001E                     	;# 
    86  001F                     	;# 
    87  0020                     	;# 
    88  0020                     	;# 
    89  0021                     	;# 
    90  0022                     	;# 
    91  0022                     	;# 
    92  0023                     	;# 
    93  0024                     	;# 
    94  0025                     	;# 
    95  0026                     	;# 
    96  0027                     	;# 
    97  0027                     	;# 
    98  0028                     	;# 
    99  0029                     	;# 
   100  002A                     	;# 
   101  002A                     	;# 
   102  002B                     	;# 
   103  002C                     	;# 
   104  002D                     	;# 
   105  002E                     	;# 
   106  0030                     	;# 
   107  0031                     	;# 
   108  0032                     	;# 
   109  0033                     	;# 
   110  0034                     	;# 
   111  0035                     	;# 
   112  0036                     	;# 
   113  0037                     	;# 
   114  0038                     	;# 
   115  0039                     	;# 
   116  003A                     	;# 
   117  003B                     	;# 
   118  003C                     	;# 
   119  003D                     	;# 
   120  003E                     	;# 
   121  003F                     	;# 
   122  0000                     	;# 
   123  0001                     	;# 
   124  0002                     	;# 
   125  0003                     	;# 
   126  0004                     	;# 
   127  0005                     	;# 
   128  0006                     	;# 
   129  0007                     	;# 
   130  0008                     	;# 
   131  0009                     	;# 
   132  000A                     	;# 
   133  000B                     	;# 
   134  000C                     	;# 
   135  000D                     	;# 
   136  000E                     	;# 
   137  000F                     	;# 
   138  0010                     	;# 
   139  0011                     	;# 
   140  0012                     	;# 
   141  0013                     	;# 
   142  0014                     	;# 
   143  0015                     	;# 
   144  0016                     	;# 
   145  0016                     	;# 
   146  0017                     	;# 
   147  0018                     	;# 
   148  0019                     	;# 
   149  0019                     	;# 
   150  001A                     	;# 
   151  001B                     	;# 
   152  001C                     	;# 
   153  001D                     	;# 
   154  001E                     	;# 
   155  001F                     	;# 
   156  0020                     	;# 
   157  0020                     	;# 
   158  0021                     	;# 
   159  0022                     	;# 
   160  0022                     	;# 
   161  0023                     	;# 
   162  0024                     	;# 
   163  0025                     	;# 
   164  0026                     	;# 
   165  0027                     	;# 
   166  0027                     	;# 
   167  0028                     	;# 
   168  0029                     	;# 
   169  002A                     	;# 
   170  002A                     	;# 
   171  002B                     	;# 
   172  002C                     	;# 
   173  002D                     	;# 
   174  002E                     	;# 
   175  0030                     	;# 
   176  0031                     	;# 
   177  0032                     	;# 
   178  0033                     	;# 
   179  0034                     	;# 
   180  0035                     	;# 
   181  0036                     	;# 
   182  0037                     	;# 
   183  0038                     	;# 
   184  0039                     	;# 
   185  003A                     	;# 
   186  003B                     	;# 
   187  003C                     	;# 
   188  003D                     	;# 
   189  003E                     	;# 
   190  003F                     	;# 
   191  0000                     	;# 
   192  0001                     	;# 
   193  0002                     	;# 
   194  0003                     	;# 
   195  0004                     	;# 
   196  0005                     	;# 
   197  0006                     	;# 
   198  0007                     	;# 
   199  0008                     	;# 
   200  0009                     	;# 
   201  000A                     	;# 
   202  000B                     	;# 
   203  000C                     	;# 
   204  000D                     	;# 
   205  000E                     	;# 
   206  000F                     	;# 
   207  0010                     	;# 
   208  0011                     	;# 
   209  0012                     	;# 
   210  0013                     	;# 
   211  0014                     	;# 
   212  0015                     	;# 
   213  0016                     	;# 
   214  0016                     	;# 
   215  0017                     	;# 
   216  0018                     	;# 
   217  0019                     	;# 
   218  0019                     	;# 
   219  001A                     	;# 
   220  001B                     	;# 
   221  001C                     	;# 
   222  001D                     	;# 
   223  001E                     	;# 
   224  001F                     	;# 
   225  0020                     	;# 
   226  0020                     	;# 
   227  0021                     	;# 
   228  0022                     	;# 
   229  0022                     	;# 
   230  0023                     	;# 
   231  0024                     	;# 
   232  0025                     	;# 
   233  0026                     	;# 
   234  0027                     	;# 
   235  0027                     	;# 
   236  0028                     	;# 
   237  0029                     	;# 
   238  002A                     	;# 
   239  002A                     	;# 
   240  002B                     	;# 
   241  002C                     	;# 
   242  002D                     	;# 
   243  002E                     	;# 
   244  0030                     	;# 
   245  0031                     	;# 
   246  0032                     	;# 
   247  0033                     	;# 
   248  0034                     	;# 
   249  0035                     	;# 
   250  0036                     	;# 
   251  0037                     	;# 
   252  0038                     	;# 
   253  0039                     	;# 
   254  003A                     	;# 
   255  003B                     	;# 
   256  003C                     	;# 
   257  003D                     	;# 
   258  003E                     	;# 
   259  003F                     	;# 
   260  0000                     	;# 
   261  0001                     	;# 
   262  0002                     	;# 
   263  0003                     	;# 
   264  0004                     	;# 
   265  0005                     	;# 
   266  0006                     	;# 
   267  0007                     	;# 
   268  0008                     	;# 
   269  0009                     	;# 
   270  000A                     	;# 
   271  000B                     	;# 
   272  000C                     	;# 
   273  000D                     	;# 
   274  000E                     	;# 
   275  000F                     	;# 
   276  0010                     	;# 
   277  0011                     	;# 
   278  0012                     	;# 
   279  0013                     	;# 
   280  0014                     	;# 
   281  0015                     	;# 
   282  0016                     	;# 
   283  0016                     	;# 
   284  0017                     	;# 
   285  0018                     	;# 
   286  0019                     	;# 
   287  0019                     	;# 
   288  001A                     	;# 
   289  001B                     	;# 
   290  001C                     	;# 
   291  001D                     	;# 
   292  001E                     	;# 
   293  001F                     	;# 
   294  0020                     	;# 
   295  0020                     	;# 
   296  0021                     	;# 
   297  0022                     	;# 
   298  0022                     	;# 
   299  0023                     	;# 
   300  0024                     	;# 
   301  0025                     	;# 
   302  0026                     	;# 
   303  0027                     	;# 
   304  0027                     	;# 
   305  0028                     	;# 
   306  0029                     	;# 
   307  002A                     	;# 
   308  002A                     	;# 
   309  002B                     	;# 
   310  002C                     	;# 
   311  002D                     	;# 
   312  002E                     	;# 
   313  0030                     	;# 
   314  0031                     	;# 
   315  0032                     	;# 
   316  0033                     	;# 
   317  0034                     	;# 
   318  0035                     	;# 
   319  0036                     	;# 
   320  0037                     	;# 
   321  0038                     	;# 
   322  0039                     	;# 
   323  003A                     	;# 
   324  003B                     	;# 
   325  003C                     	;# 
   326  003D                     	;# 
   327  003E                     	;# 
   328  003F                     	;# 
   329  0000                     	;# 
   330  0001                     	;# 
   331  0002                     	;# 
   332  0003                     	;# 
   333  0004                     	;# 
   334  0005                     	;# 
   335  0006                     	;# 
   336  0007                     	;# 
   337  0008                     	;# 
   338  0009                     	;# 
   339  000A                     	;# 
   340  000B                     	;# 
   341  000C                     	;# 
   342  000D                     	;# 
   343  000E                     	;# 
   344  000F                     	;# 
   345  0010                     	;# 
   346  0011                     	;# 
   347  0012                     	;# 
   348  0013                     	;# 
   349  0014                     	;# 
   350  0015                     	;# 
   351  0016                     	;# 
   352  0016                     	;# 
   353  0017                     	;# 
   354  0018                     	;# 
   355  0019                     	;# 
   356  0019                     	;# 
   357  001A                     	;# 
   358  001B                     	;# 
   359  001C                     	;# 
   360  001D                     	;# 
   361  001E                     	;# 
   362  001F                     	;# 
   363  0020                     	;# 
   364  0020                     	;# 
   365  0021                     	;# 
   366  0022                     	;# 
   367  0022                     	;# 
   368  0023                     	;# 
   369  0024                     	;# 
   370  0025                     	;# 
   371  0026                     	;# 
   372  0027                     	;# 
   373  0027                     	;# 
   374  0028                     	;# 
   375  0029                     	;# 
   376  002A                     	;# 
   377  002A                     	;# 
   378  002B                     	;# 
   379  002C                     	;# 
   380  002D                     	;# 
   381  002E                     	;# 
   382  0030                     	;# 
   383  0031                     	;# 
   384  0032                     	;# 
   385  0033                     	;# 
   386  0034                     	;# 
   387  0035                     	;# 
   388  0036                     	;# 
   389  0037                     	;# 
   390  0038                     	;# 
   391  0039                     	;# 
   392  003A                     	;# 
   393  003B                     	;# 
   394  003C                     	;# 
   395  003D                     	;# 
   396  003E                     	;# 
   397  003F                     	;# 
   398                           
   399                           	psect	nvBANK0
   400  0046                     __pnvBANK0:	
   401  0046                     _dutycycle:	
   402  0046                     	ds	2
   403  0007                     _LATAbits	set	7
   404  0013                     _T2CONbits	set	19
   405  000C                     _PIR1bits	set	12
   406  0011                     _TMR2	set	17
   407  0012                     _PR2	set	18
   408  0013                     _T2CON	set	19
   409  0015                     _PWM1DCH	set	21
   410  0014                     _PWM1DCL	set	20
   411  0016                     _PWM1CON	set	22
   412  0010                     _OSCCON	set	16
   413  001E                     _ADRES	set	30
   414  001F                     _ADCONbits	set	31
   415  0008                     _ANSELAbits	set	8
   416  0006                     _TRISAbits	set	6
   417  001F                     _ADCON	set	31
   418                           
   419                           ; #config settings
   420  0000                     
   421                           	psect	cinit
   422  01FE                     start_initialization:	
   423  01FE                     __initialization:	
   424  01FE                     end_of_initialization:	
   425                           ;End of C runtime variable initialization code
   426                           
   427  01FE                     __end_of__initialization:	
   428  01FE  0183               	clrf	3
   429  01FF  29E5               	ljmp	_main	;jump to C main() function
   430                           
   431                           	psect	cstackCOMMON
   432  0000                     __pcstackCOMMON:	
   433  0000                     ??_OSCILLATOR_Initialize:	
   434  0000                     ??_PWM_Initialize:	
   435                           ; 1 bytes @ 0x0
   436                           
   437  0000                     ??_TMR2_Initialize:	
   438                           ; 1 bytes @ 0x0
   439                           
   440  0000                     ??_ADC_Initialize:	
   441                           ; 1 bytes @ 0x0
   442                           
   443  0000                     ??_SYSTEM_Initialize:	
   444                           ; 1 bytes @ 0x0
   445                           
   446  0000                     ??_TMR2_StartTimer:	
   447                           ; 1 bytes @ 0x0
   448                           
   449                           
   450                           	psect	cstackBANK0
   451  0040                     __pcstackBANK0:	
   452                           ; 1 bytes @ 0x0
   453                           
   454  0040                     ?_OSCILLATOR_Initialize:	
   455  0040                     ?_PWM_Initialize:	
   456                           ; 1 bytes @ 0x0
   457                           
   458  0040                     ?_TMR2_Initialize:	
   459                           ; 1 bytes @ 0x0
   460                           
   461  0040                     ?_ADC_Initialize:	
   462                           ; 1 bytes @ 0x0
   463                           
   464  0040                     ?_ADC_GetConversion:	
   465                           ; 1 bytes @ 0x0
   466                           
   467  0040                     ??_ADC_GetConversion:	
   468                           ; 1 bytes @ 0x0
   469                           
   470  0040                     ?_SYSTEM_Initialize:	
   471                           ; 1 bytes @ 0x0
   472                           
   473  0040                     ?_PWM_LoadDutyValue:	
   474                           ; 1 bytes @ 0x0
   475                           
   476  0040                     ?_TMR2_StartTimer:	
   477                           ; 1 bytes @ 0x0
   478                           
   479  0040                     ?_main:	
   480                           ; 1 bytes @ 0x0
   481                           
   482  0040                     PWM_LoadDutyValue@dutyValue:	
   483                           ; 1 bytes @ 0x0
   484                           
   485                           
   486                           ; 2 bytes @ 0x0
   487  0040                     	ds	1
   488  0041                     ADC_GetConversion@channel:	
   489                           
   490                           ; 1 bytes @ 0x1
   491  0041                     	ds	1
   492  0042                     ??_PWM_LoadDutyValue:	
   493                           
   494                           ; 1 bytes @ 0x2
   495  0042                     	ds	2
   496  0044                     ??_main:	
   497                           
   498                           ; 1 bytes @ 0x4
   499  0044                     	ds	2
   500                           
   501                           	psect	maintext
   502  01E5                     __pmaintext:	
   503 ;;
   504 ;;Main: autosize = 0, tempsize = 2, incstack = 0, save=0
   505 ;;
   506 ;; *************** function _main *****************
   507 ;; Defined at:
   508 ;;		line 49 in file "main.c"
   509 ;; Parameters:    Size  Location     Type
   510 ;;		None
   511 ;; Auto vars:     Size  Location     Type
   512 ;;		None
   513 ;; Return value:  Size  Location     Type
   514 ;;                  1    wreg      void 
   515 ;; Registers used:
   516 ;;		wreg, status,2, status,0, pclath, cstack
   517 ;; Tracked objects:
   518 ;;		On entry : B00/0
   519 ;;		On exit  : 0/0
   520 ;;		Unchanged: 0/0
   521 ;; Data sizes:     COMMON   BANK0
   522 ;;      Params:         0       0
   523 ;;      Locals:         0       0
   524 ;;      Temps:          0       2
   525 ;;      Totals:         0       2
   526 ;;Total ram usage:        2 bytes
   527 ;; Hardware stack levels required when called:    2
   528 ;; This function calls:
   529 ;;		_ADC_GetConversion
   530 ;;		_PWM_LoadDutyValue
   531 ;;		_SYSTEM_Initialize
   532 ;;		_TMR2_StartTimer
   533 ;; This function is called by:
   534 ;;		Startup code after reset
   535 ;; This function uses a non-reentrant model
   536 ;;
   537                           
   538                           
   539                           ;psect for function _main
   540  01E5                     _main:	
   541                           
   542                           ;main.c: 51: SYSTEM_Initialize();
   543                           
   544                           ;incstack = 0
   545                           ; Regs used in _main: [wreg+status,2+status,0+pclath+cstack]
   546  01E5  21B2               	fcall	_SYSTEM_Initialize
   547                           
   548                           ;main.c: 53: TRISAbits.TRISA0 = 0;
   549  01E6  1006               	bcf	6,0	;volatile
   550                           
   551                           ;main.c: 54: TRISAbits.TRISA1 = 0;
   552  01E7  1086               	bcf	6,1	;volatile
   553                           
   554                           ;main.c: 55: LATAbits.LATA1 = 1;
   555  01E8  1487               	bsf	7,1	;volatile
   556                           
   557                           ;main.c: 57: TMR2_StartTimer();
   558  01E9  21A5               	fcall	_TMR2_StartTimer
   559  01EA                     l553:	
   560                           ;main.c: 59: while (1)
   561                           
   562                           
   563                           ;main.c: 60: {
   564                           ;main.c: 64: dutycycle = (ADC_GetConversion (channel_AN2) * 4);
   565  01EA  3002               	movlw	2
   566  01EB  21BD               	fcall	_ADC_GetConversion
   567  01EC  00C4               	movwf	??_main
   568  01ED  01C5               	clrf	??_main+1
   569  01EE  1003               	clrc
   570  01EF  0DC4               	rlf	??_main,f
   571  01F0  0DC5               	rlf	??_main+1,f
   572  01F1  1003               	clrc
   573  01F2  0DC4               	rlf	??_main,f
   574  01F3  0DC5               	rlf	??_main+1,f
   575  01F4  0844               	movf	??_main,w
   576  01F5  00C6               	movwf	_dutycycle
   577  01F6  0845               	movf	??_main+1,w
   578  01F7  00C7               	movwf	_dutycycle+1
   579                           
   580                           ;main.c: 66: PWM_LoadDutyValue (dutycycle);
   581  01F8  0847               	movf	_dutycycle+1,w
   582  01F9  00C1               	movwf	PWM_LoadDutyValue@dutyValue+1
   583  01FA  0846               	movf	_dutycycle,w
   584  01FB  00C0               	movwf	PWM_LoadDutyValue@dutyValue
   585  01FC  21CD               	fcall	_PWM_LoadDutyValue
   586  01FD  29EA               	goto	l553
   587  01FE                     __end_of_main:	
   588                           
   589                           	psect	text1
   590  01A5                     __ptext1:	
   591 ;; *************** function _TMR2_StartTimer *****************
   592 ;; Defined at:
   593 ;;		line 39 in file "tmr2.c"
   594 ;; Parameters:    Size  Location     Type
   595 ;;		None
   596 ;; Auto vars:     Size  Location     Type
   597 ;;		None
   598 ;; Return value:  Size  Location     Type
   599 ;;                  1    wreg      void 
   600 ;; Registers used:
   601 ;;		None
   602 ;; Tracked objects:
   603 ;;		On entry : 0/0
   604 ;;		On exit  : 0/0
   605 ;;		Unchanged: 0/0
   606 ;; Data sizes:     COMMON   BANK0
   607 ;;      Params:         0       0
   608 ;;      Locals:         0       0
   609 ;;      Temps:          0       0
   610 ;;      Totals:         0       0
   611 ;;Total ram usage:        0 bytes
   612 ;; Hardware stack levels used:    1
   613 ;; This function calls:
   614 ;;		Nothing
   615 ;; This function is called by:
   616 ;;		_main
   617 ;; This function uses a non-reentrant model
   618 ;;
   619                           
   620                           
   621                           ;psect for function _TMR2_StartTimer
   622  01A5                     _TMR2_StartTimer:	
   623                           
   624                           ;tmr2.c: 42: T2CONbits.TMR2ON = 1;
   625                           
   626                           ;incstack = 0
   627                           ; Regs used in _TMR2_StartTimer: []
   628  01A5  1513               	bsf	19,2	;volatile
   629  01A6  0008               	return
   630  01A7                     __end_of_TMR2_StartTimer:	
   631                           
   632                           	psect	text2
   633  01B2                     __ptext2:	
   634 ;; *************** function _SYSTEM_Initialize *****************
   635 ;; Defined at:
   636 ;;		line 33 in file "device_initialize.c"
   637 ;; Parameters:    Size  Location     Type
   638 ;;		None
   639 ;; Auto vars:     Size  Location     Type
   640 ;;		None
   641 ;; Return value:  Size  Location     Type
   642 ;;                  1    wreg      void 
   643 ;; Registers used:
   644 ;;		wreg, status,2, status,0, pclath, cstack
   645 ;; Tracked objects:
   646 ;;		On entry : 0/0
   647 ;;		On exit  : 0/0
   648 ;;		Unchanged: 0/0
   649 ;; Data sizes:     COMMON   BANK0
   650 ;;      Params:         0       0
   651 ;;      Locals:         0       0
   652 ;;      Temps:          0       0
   653 ;;      Totals:         0       0
   654 ;;Total ram usage:        0 bytes
   655 ;; Hardware stack levels used:    1
   656 ;; Hardware stack levels required when called:    1
   657 ;; This function calls:
   658 ;;		_ADC_Initialize
   659 ;;		_OSCILLATOR_Initialize
   660 ;;		_PWM_Initialize
   661 ;;		_TMR2_Initialize
   662 ;; This function is called by:
   663 ;;		_main
   664 ;; This function uses a non-reentrant model
   665 ;;
   666                           
   667                           
   668                           ;psect for function _SYSTEM_Initialize
   669  01B2                     _SYSTEM_Initialize:	
   670                           
   671                           ;device_initialize.c: 35: OSCILLATOR_Initialize();
   672                           
   673                           ;incstack = 0
   674                           ; Regs used in _SYSTEM_Initialize: [wreg+status,2+status,0+pclath+cstack]
   675  01B2  21A7               	fcall	_OSCILLATOR_Initialize
   676                           
   677                           ;device_initialize.c: 36: ADC_Initialize();
   678  01B3  21AD               	fcall	_ADC_Initialize
   679                           
   680                           ;device_initialize.c: 37: PWM_Initialize();
   681  01B4  21AA               	fcall	_PWM_Initialize
   682                           
   683                           ;device_initialize.c: 38: TMR2_Initialize();
   684  01B5  21B7               	fcall	_TMR2_Initialize
   685  01B6  0008               	return
   686  01B7                     __end_of_SYSTEM_Initialize:	
   687                           
   688                           	psect	text3
   689  01B7                     __ptext3:	
   690 ;; *************** function _TMR2_Initialize *****************
   691 ;; Defined at:
   692 ;;		line 24 in file "tmr2.c"
   693 ;; Parameters:    Size  Location     Type
   694 ;;		None
   695 ;; Auto vars:     Size  Location     Type
   696 ;;		None
   697 ;; Return value:  Size  Location     Type
   698 ;;                  1    wreg      void 
   699 ;; Registers used:
   700 ;;		wreg, status,2
   701 ;; Tracked objects:
   702 ;;		On entry : 0/0
   703 ;;		On exit  : 0/0
   704 ;;		Unchanged: 0/0
   705 ;; Data sizes:     COMMON   BANK0
   706 ;;      Params:         0       0
   707 ;;      Locals:         0       0
   708 ;;      Temps:          0       0
   709 ;;      Totals:         0       0
   710 ;;Total ram usage:        0 bytes
   711 ;; Hardware stack levels used:    1
   712 ;; This function calls:
   713 ;;		Nothing
   714 ;; This function is called by:
   715 ;;		_SYSTEM_Initialize
   716 ;; This function uses a non-reentrant model
   717 ;;
   718                           
   719                           
   720                           ;psect for function _TMR2_Initialize
   721  01B7                     _TMR2_Initialize:	
   722                           
   723                           ;tmr2.c: 27: T2CON = 0x00;
   724                           
   725                           ;incstack = 0
   726                           ; Regs used in _TMR2_Initialize: [wreg+status,2]
   727  01B7  0193               	clrf	19	;volatile
   728                           
   729                           ;tmr2.c: 30: PR2 = 0xFF;
   730  01B8  30FF               	movlw	255
   731  01B9  0092               	movwf	18	;volatile
   732                           
   733                           ;tmr2.c: 33: TMR2 = 0x00;
   734  01BA  0191               	clrf	17	;volatile
   735                           
   736                           ;tmr2.c: 36: PIR1bits.TMR2IF = 0;
   737  01BB  108C               	bcf	12,1	;volatile
   738  01BC  0008               	return
   739  01BD                     __end_of_TMR2_Initialize:	
   740                           
   741                           	psect	text4
   742  01AA                     __ptext4:	
   743 ;; *************** function _PWM_Initialize *****************
   744 ;; Defined at:
   745 ;;		line 26 in file "pwm.c"
   746 ;; Parameters:    Size  Location     Type
   747 ;;		None
   748 ;; Auto vars:     Size  Location     Type
   749 ;;		None
   750 ;; Return value:  Size  Location     Type
   751 ;;                  1    wreg      void 
   752 ;; Registers used:
   753 ;;		wreg
   754 ;; Tracked objects:
   755 ;;		On entry : 0/0
   756 ;;		On exit  : 0/0
   757 ;;		Unchanged: 0/0
   758 ;; Data sizes:     COMMON   BANK0
   759 ;;      Params:         0       0
   760 ;;      Locals:         0       0
   761 ;;      Temps:          0       0
   762 ;;      Totals:         0       0
   763 ;;Total ram usage:        0 bytes
   764 ;; Hardware stack levels used:    1
   765 ;; This function calls:
   766 ;;		Nothing
   767 ;; This function is called by:
   768 ;;		_SYSTEM_Initialize
   769 ;; This function uses a non-reentrant model
   770 ;;
   771                           
   772                           
   773                           ;psect for function _PWM_Initialize
   774  01AA                     _PWM_Initialize:	
   775                           
   776                           ;pwm.c: 29: PWM1CON = 0xc0;
   777                           
   778                           ;incstack = 0
   779                           ; Regs used in _PWM_Initialize: [wreg]
   780  01AA  30C0               	movlw	192
   781  01AB  0096               	movwf	22	;volatile
   782  01AC  0008               	return
   783  01AD                     __end_of_PWM_Initialize:	
   784                           
   785                           	psect	text5
   786  01A7                     __ptext5:	
   787 ;; *************** function _OSCILLATOR_Initialize *****************
   788 ;; Defined at:
   789 ;;		line 41 in file "device_initialize.c"
   790 ;; Parameters:    Size  Location     Type
   791 ;;		None
   792 ;; Auto vars:     Size  Location     Type
   793 ;;		None
   794 ;; Return value:  Size  Location     Type
   795 ;;                  1    wreg      void 
   796 ;; Registers used:
   797 ;;		wreg
   798 ;; Tracked objects:
   799 ;;		On entry : 0/0
   800 ;;		On exit  : 0/0
   801 ;;		Unchanged: 0/0
   802 ;; Data sizes:     COMMON   BANK0
   803 ;;      Params:         0       0
   804 ;;      Locals:         0       0
   805 ;;      Temps:          0       0
   806 ;;      Totals:         0       0
   807 ;;Total ram usage:        0 bytes
   808 ;; Hardware stack levels used:    1
   809 ;; This function calls:
   810 ;;		Nothing
   811 ;; This function is called by:
   812 ;;		_SYSTEM_Initialize
   813 ;; This function uses a non-reentrant model
   814 ;;
   815                           
   816                           
   817                           ;psect for function _OSCILLATOR_Initialize
   818  01A7                     _OSCILLATOR_Initialize:	
   819                           
   820                           ;device_initialize.c: 44: OSCCON = 0x60;
   821                           
   822                           ;incstack = 0
   823                           ; Regs used in _OSCILLATOR_Initialize: [wreg]
   824  01A7  3060               	movlw	96
   825  01A8  0090               	movwf	16	;volatile
   826  01A9  0008               	return
   827  01AA                     __end_of_OSCILLATOR_Initialize:	
   828                           
   829                           	psect	text6
   830  01AD                     __ptext6:	
   831 ;; *************** function _ADC_Initialize *****************
   832 ;; Defined at:
   833 ;;		line 26 in file "adc.c"
   834 ;; Parameters:    Size  Location     Type
   835 ;;		None
   836 ;; Auto vars:     Size  Location     Type
   837 ;;		None
   838 ;; Return value:  Size  Location     Type
   839 ;;                  1    wreg      void 
   840 ;; Registers used:
   841 ;;		wreg
   842 ;; Tracked objects:
   843 ;;		On entry : 0/0
   844 ;;		On exit  : 0/0
   845 ;;		Unchanged: 0/0
   846 ;; Data sizes:     COMMON   BANK0
   847 ;;      Params:         0       0
   848 ;;      Locals:         0       0
   849 ;;      Temps:          0       0
   850 ;;      Totals:         0       0
   851 ;;Total ram usage:        0 bytes
   852 ;; Hardware stack levels used:    1
   853 ;; This function calls:
   854 ;;		Nothing
   855 ;; This function is called by:
   856 ;;		_SYSTEM_Initialize
   857 ;; This function uses a non-reentrant model
   858 ;;
   859                           
   860                           
   861                           ;psect for function _ADC_Initialize
   862  01AD                     _ADC_Initialize:	
   863                           
   864                           ;adc.c: 28: ADCON = 0x89;
   865                           
   866                           ;incstack = 0
   867                           ; Regs used in _ADC_Initialize: [wreg]
   868  01AD  3089               	movlw	137
   869  01AE  009F               	movwf	31	;volatile
   870                           
   871                           ;adc.c: 30: TRISAbits.TRISA2 = 1;
   872  01AF  1506               	bsf	6,2	;volatile
   873                           
   874                           ;adc.c: 31: ANSELAbits.ANSA2 = 1;
   875  01B0  1508               	bsf	8,2	;volatile
   876  01B1  0008               	return
   877  01B2                     __end_of_ADC_Initialize:	
   878                           
   879                           	psect	text7
   880  01CD                     __ptext7:	
   881 ;; *************** function _PWM_LoadDutyValue *****************
   882 ;; Defined at:
   883 ;;		line 32 in file "pwm.c"
   884 ;; Parameters:    Size  Location     Type
   885 ;;  dutyValue       2    0[BANK0 ] unsigned int 
   886 ;; Auto vars:     Size  Location     Type
   887 ;;		None
   888 ;; Return value:  Size  Location     Type
   889 ;;                  1    wreg      void 
   890 ;; Registers used:
   891 ;;		wreg, status,2, status,0
   892 ;; Tracked objects:
   893 ;;		On entry : 0/0
   894 ;;		On exit  : 0/0
   895 ;;		Unchanged: 0/0
   896 ;; Data sizes:     COMMON   BANK0
   897 ;;      Params:         0       2
   898 ;;      Locals:         0       0
   899 ;;      Temps:          0       2
   900 ;;      Totals:         0       4
   901 ;;Total ram usage:        4 bytes
   902 ;; Hardware stack levels used:    1
   903 ;; This function calls:
   904 ;;		Nothing
   905 ;; This function is called by:
   906 ;;		_main
   907 ;; This function uses a non-reentrant model
   908 ;;
   909                           
   910                           
   911                           ;psect for function _PWM_LoadDutyValue
   912  01CD                     _PWM_LoadDutyValue:	
   913                           
   914                           ;pwm.c: 35: PWM1DCL = dutyValue << 6;
   915                           
   916                           ;incstack = 0
   917                           ; Regs used in _PWM_LoadDutyValue: [wreg+status,2+status,0]
   918  01CD  0840               	movf	PWM_LoadDutyValue@dutyValue,w
   919  01CE  00C2               	movwf	??_PWM_LoadDutyValue
   920  01CF  3005               	movlw	5
   921  01D0                     u45:	
   922  01D0  1003               	clrc
   923  01D1  0DC2               	rlf	??_PWM_LoadDutyValue,f
   924  01D2  3EFF               	addlw	-1
   925  01D3  1D03               	skipz
   926  01D4  29D0               	goto	u45
   927  01D5  1003               	clrc
   928  01D6  0D42               	rlf	??_PWM_LoadDutyValue,w
   929  01D7  0094               	movwf	20	;volatile
   930                           
   931                           ;pwm.c: 38: PWM1DCH = dutyValue >> 2;
   932  01D8  0841               	movf	PWM_LoadDutyValue@dutyValue+1,w
   933  01D9  00C3               	movwf	??_PWM_LoadDutyValue+1
   934  01DA  0840               	movf	PWM_LoadDutyValue@dutyValue,w
   935  01DB  00C2               	movwf	??_PWM_LoadDutyValue
   936  01DC  1003               	clrc
   937  01DD  0CC3               	rrf	??_PWM_LoadDutyValue+1,f
   938  01DE  0CC2               	rrf	??_PWM_LoadDutyValue,f
   939  01DF  1003               	clrc
   940  01E0  0CC3               	rrf	??_PWM_LoadDutyValue+1,f
   941  01E1  0CC2               	rrf	??_PWM_LoadDutyValue,f
   942  01E2  0842               	movf	??_PWM_LoadDutyValue,w
   943  01E3  0095               	movwf	21	;volatile
   944  01E4  0008               	return
   945  01E5                     __end_of_PWM_LoadDutyValue:	
   946                           
   947                           	psect	text8
   948  01BD                     __ptext8:	
   949 ;; *************** function _ADC_GetConversion *****************
   950 ;; Defined at:
   951 ;;		line 36 in file "adc.c"
   952 ;; Parameters:    Size  Location     Type
   953 ;;  channel         1    wreg     enum E1463
   954 ;; Auto vars:     Size  Location     Type
   955 ;;  channel         1    1[BANK0 ] enum E1463
   956 ;; Return value:  Size  Location     Type
   957 ;;                  1    wreg      unsigned char 
   958 ;; Registers used:
   959 ;;		wreg, status,2, status,0
   960 ;; Tracked objects:
   961 ;;		On entry : 0/0
   962 ;;		On exit  : 0/0
   963 ;;		Unchanged: 0/0
   964 ;; Data sizes:     COMMON   BANK0
   965 ;;      Params:         0       0
   966 ;;      Locals:         0       1
   967 ;;      Temps:          0       1
   968 ;;      Totals:         0       2
   969 ;;Total ram usage:        2 bytes
   970 ;; Hardware stack levels used:    1
   971 ;; This function calls:
   972 ;;		Nothing
   973 ;; This function is called by:
   974 ;;		_main
   975 ;; This function uses a non-reentrant model
   976 ;;
   977                           
   978                           
   979                           ;psect for function _ADC_GetConversion
   980  01BD                     _ADC_GetConversion:	
   981                           
   982                           ;incstack = 0
   983                           ; Regs used in _ADC_GetConversion: [wreg+status,2+status,0]
   984                           ;ADC_GetConversion@channel stored from wreg
   985  01BD  00C1               	movwf	ADC_GetConversion@channel
   986                           
   987                           ;adc.c: 39: ADCONbits.CHS = channel;
   988  01BE  0841               	movf	ADC_GetConversion@channel,w
   989  01BF  00C0               	movwf	??_ADC_GetConversion
   990  01C0  0DC0               	rlf	??_ADC_GetConversion,f
   991  01C1  0DC0               	rlf	??_ADC_GetConversion,f
   992  01C2  081F               	movf	31,w	;volatile
   993  01C3  0640               	xorwf	??_ADC_GetConversion,w
   994  01C4  39E3               	andlw	-29
   995  01C5  0640               	xorwf	??_ADC_GetConversion,w
   996  01C6  009F               	movwf	31	;volatile
   997                           
   998                           ;adc.c: 42: ADCONbits.ADON = 1;
   999  01C7  141F               	bsf	31,0	;volatile
  1000                           
  1001                           ;adc.c: 45: ADCONbits.GO_nDONE = 1;
  1002  01C8  149F               	bsf	31,1	;volatile
  1003  01C9                     l16:	
  1004                           ;adc.c: 48: while (ADCONbits.GO_nDONE);
  1005                           
  1006  01C9  189F               	btfsc	31,1	;volatile
  1007  01CA  29C9               	goto	l16
  1008                           
  1009                           ;adc.c: 51: return ADRES;
  1010  01CB  081E               	movf	30,w	;volatile
  1011  01CC  0008               	return
  1012  01CD                     __end_of_ADC_GetConversion:	
  1013  007E                     btemp	set	126	;btemp
  1014  007E                     wtemp0	set	126


Data Sizes:
    Strings     0
    Constant    0
    Data        0
    BSS         0
    Persistent  2
    Stack       0

Auto Spaces:
    Space          Size  Autos    Used
    COMMON            0      0       0
    BANK0            62      6       8

Pointer List with Targets:

    None.

Critical Paths under _main in COMMON

    None.

Critical Paths under _main in BANK0

    _main->_PWM_LoadDutyValue

Call Graph Tables:

 ---------------------------------------------------------------------------------
 (Depth) Function   	        Calls       Base Space   Used Autos Params    Refs
 ---------------------------------------------------------------------------------
 (0) _main                                                 2     2      0     109
                                              4 BANK0      2     2      0
                  _ADC_GetConversion
                  _PWM_LoadDutyValue
                  _SYSTEM_Initialize
                    _TMR2_StartTimer
 ---------------------------------------------------------------------------------
 (1) _TMR2_StartTimer                                      0     0      0       0
 ---------------------------------------------------------------------------------
 (1) _SYSTEM_Initialize                                    0     0      0       0
                     _ADC_Initialize
              _OSCILLATOR_Initialize
                     _PWM_Initialize
                    _TMR2_Initialize
 ---------------------------------------------------------------------------------
 (2) _TMR2_Initialize                                      0     0      0       0
 ---------------------------------------------------------------------------------
 (2) _PWM_Initialize                                       0     0      0       0
 ---------------------------------------------------------------------------------
 (2) _OSCILLATOR_Initialize                                0     0      0       0
 ---------------------------------------------------------------------------------
 (2) _ADC_Initialize                                       0     0      0       0
 ---------------------------------------------------------------------------------
 (1) _PWM_LoadDutyValue                                    4     2      2      87
                                              0 BANK0      4     2      2
 ---------------------------------------------------------------------------------
 (1) _ADC_GetConversion                                    2     2      0      22
                                              0 BANK0      2     2      0
 ---------------------------------------------------------------------------------
 Estimated maximum stack depth 2
 ---------------------------------------------------------------------------------

 Call Graph Graphs:

 _main (ROOT)
   _ADC_GetConversion
   _PWM_LoadDutyValue
   _SYSTEM_Initialize
     _ADC_Initialize
     _OSCILLATOR_Initialize
     _PWM_Initialize
     _TMR2_Initialize
   _TMR2_StartTimer

 Address spaces:
Name               Size   Autos  Total    Cost      Usage
BITCOMMON            0      0       0       0        0.0%
NULL                 0      0       0       0        0.0%
CODE                 0      0       0       0        0.0%
BITSFR0              0      0       0       1        0.0%
SFR0                 0      0       0       1        0.0%
COMMON               0      0       0       1        0.0%
STACK                0      0       0       2        0.0%
BANK0               3E      6       8       3       12.9%
ABS                  0      0       8       4        0.0%
DATA                 0      0       8       5        0.0%
BITBANK0            3E      0       0       6        0.0%


Microchip Technology PIC Macro Assembler V1.42 build -159332390 
Symbol Table                                                                                   Mon Jun 12 14:23:46 2017

       __size_of_PWM_Initialize 0003                     __CFG_CP$OFF 0000                              l16 01C9  
                            u45 01D0                     __CFG_LVP$ON 0000                             l553 01EA  
                           _PR2 0012                 _TMR2_Initialize 01B7                    __CFG_BORV$LO 0000  
                          _TMR2 0011                    __CFG_WRT$OFF 0000                            _main 01E5  
                          btemp 007E                            start 0000                   __CFG_MCLRE$ON 0000  
__size_of_OSCILLATOR_Initialize 0003   __end_of_OSCILLATOR_Initialize 01AA                           ?_main 0040  
                         _ADCON 001F                           _ADRES 001E                   __CFG_WDTE$OFF 0000  
                         _T2CON 0013                  __CFG_BOREN$OFF 0000                           status 0003  
                         wtemp0 007E                 _TMR2_StartTimer 01A5                 __initialization 01FE  
                  __end_of_main 01FE         __end_of_TMR2_Initialize 01BD                  __CFG_LPBOR$OFF 0000  
                        ??_main 0044                          _OSCCON 0010                  __CFG_PWRTE$OFF 0000  
                _PWM_Initialize 01AA        ADC_GetConversion@channel 0041         __end_of_TMR2_StartTimer 01A7  
             _SYSTEM_Initialize 01B2         __end_of__initialization 01FE              ?_SYSTEM_Initialize 0040  
        __end_of_PWM_Initialize 01AD                  __pcstackCOMMON 0000             ??_SYSTEM_Initialize 0000  
              ?_TMR2_Initialize 0040       __end_of_SYSTEM_Initialize 01B7                 ?_PWM_Initialize 0040  
                    __pmaintext 01E5         __size_of_ADC_Initialize 0005                         _PWM1DCH 0015  
                       _PWM1DCL 0014                         _PWM1CON 0016                ?_TMR2_StartTimer 0040  
                     _ADCONbits 001F                         __ptext1 01A5                         __ptext2 01B2  
                       __ptext3 01B7                         __ptext4 01AA                         __ptext5 01A7  
                       __ptext6 01AD                         __ptext7 01CD                         __ptext8 01BD  
         _OSCILLATOR_Initialize 01A7                       _T2CONbits 0013      __size_of_SYSTEM_Initialize 0005  
          end_of_initialization 01FE                __CFG_FOSC$INTOSC 0000                       _TRISAbits 0006  
             _PWM_LoadDutyValue 01CD              ?_PWM_LoadDutyValue 0040             ??_PWM_LoadDutyValue 0042  
                _ADC_Initialize 01AD          ?_OSCILLATOR_Initialize 0040             start_initialization 01FE  
     __end_of_PWM_LoadDutyValue 01E5                ??_PWM_Initialize 0000          __end_of_ADC_Initialize 01B2  
                     ___latbits 0000                   __pcstackBANK0 0040        __size_of_TMR2_Initialize 0006  
                     __pnvBANK0 0046                 ?_ADC_Initialize 0040      __size_of_PWM_LoadDutyValue 0018  
                     _dutycycle 0046                        _LATAbits 0007        __size_of_TMR2_StartTimer 0002  
                      _PIR1bits 000C               ??_TMR2_Initialize 0000      PWM_LoadDutyValue@dutyValue 0040  
             _ADC_GetConversion 01BD         ??_OSCILLATOR_Initialize 0000              ?_ADC_GetConversion 0040  
                    _ANSELAbits 0008             ??_ADC_GetConversion 0040                   __size_of_main 0019  
     __end_of_ADC_GetConversion 01CD               ??_TMR2_StartTimer 0000                ??_ADC_Initialize 0000  
    __size_of_ADC_GetConversion 0010  
