

Microchip Technology PIC LITE Macro Assembler V1.41 build -162212810 
                                                                                               Thu Mar 23 18:51:03 2017

Microchip Technology Omniscient Code Generator v1.41 (Free mode) build 201701250102
     1                           	processor	16F18855
     2                           	opt	pw 120
     3                           	opt	lm
     4                           	psect	stringtext,global,class=STRCODE,delta=2
     5                           	psect	cinit,global,class=CODE,merge=1,delta=2
     6                           	psect	bssCOMMON,global,class=COMMON,space=1,delta=1
     7                           	psect	bssBANK0,global,class=BANK0,space=1,delta=1
     8                           	psect	clrtext,global,class=CODE,delta=2
     9                           	psect	cstackCOMMON,global,class=COMMON,space=1,delta=1
    10                           	psect	cstackBANK0,global,class=BANK0,space=1,delta=1
    11                           	psect	maintext,global,class=CODE,merge=1,split=1,delta=2
    12                           	psect	text1,local,class=CODE,merge=1,delta=2
    13                           	psect	text2,local,class=CODE,merge=1,delta=2
    14                           	psect	text3,local,class=CODE,merge=1,delta=2
    15                           	psect	text4,local,class=CODE,merge=1,delta=2
    16                           	psect	text5,local,class=CODE,merge=1,delta=2
    17                           	psect	text6,local,class=CODE,merge=1,delta=2
    18                           	psect	text7,local,class=CODE,merge=1,delta=2
    19                           	psect	text8,local,class=CODE,merge=1,delta=2,group=2
    20                           	psect	text9,local,class=CODE,merge=1,delta=2,group=2
    21                           	psect	text10,local,class=CODE,merge=1,delta=2
    22                           	psect	text11,local,class=CODE,merge=1,delta=2
    23                           	psect	text12,local,class=CODE,merge=1,delta=2
    24                           	psect	text13,local,class=CODE,merge=1,delta=2,group=2
    25                           	psect	text14,local,class=CODE,merge=1,delta=2,group=2
    26                           	psect	text15,local,class=CODE,merge=1,delta=2,group=2
    27                           	psect	text16,local,class=CODE,merge=1,delta=2
    28                           	psect	text17,local,class=CODE,merge=1,delta=2
    29                           	psect	text18,local,class=CODE,merge=1,delta=2
    30                           	psect	text19,local,class=CODE,merge=1,delta=2
    31                           	psect	intentry,global,class=CODE,delta=2
    32                           	psect	text21,local,class=CODE,merge=1,delta=2
    33                           	psect	swtext1,local,class=CONST,delta=2
    34                           	psect	text22,local,class=CODE,merge=1,delta=2
    35                           	psect	text23,local,class=CODE,merge=1,delta=2
    36                           	psect	text24,local,class=CODE,merge=1,delta=2
    37                           	dabs	1,0x7E,2
    38  0000                     
    39                           ; Version 1.41
    40                           ; Generated 25/01/2017 GMT
    41                           ; 
    42                           ; Copyright Â© 2017, Microchip Technology Inc. and its subsidiaries ("Microchip")
    43                           ; All rights reserved.
    44                           ; 
    45                           ; This software is developed by Microchip Technology Inc. and its subsidiaries ("Microch
      +                          ip").
    46                           ; 
    47                           ; Redistribution and use in source and binary forms, with or without modification, are
    48                           ; permitted provided that the following conditions are met:
    49                           ; 
    50                           ;     1. Redistributions of source code must retain the above copyright notice, this lis
      +                          t of
    51                           ;        conditions and the following disclaimer.
    52                           ; 
    53                           ;     2. Redistributions in binary form must reproduce the above copyright notice, this 
      +                          list
    54                           ;        of conditions and the following disclaimer in the documentation and/or other
    55                           ;        materials provided with the distribution.
    56                           ; 
    57                           ;     3. Microchip's name may not be used to endorse or promote products derived from th
      +                          is
    58                           ;        software without specific prior written permission.
    59                           ; 
    60                           ; THIS SOFTWARE IS PROVIDED BY MICROCHIP "AS IS" AND ANY EXPRESS OR IMPLIED WARRANTIES,
    61                           ; INCLUDING, BUT NOT LIMITED TO, THE IMPLIED WARRANTIES OF MERCHANTABILITY AND FITNESS F
      +                          OR
    62                           ; PURPOSE ARE DISCLAIMED.  IN NO EVENT SHALL MICROCHIP BE LIABLE FOR ANY DIRECT, INDIREC
      +                          T,
    63                           ; INCIDENTAL, SPECIAL, EXEMPLARY, OR CONSEQUENTIAL DAMAGES (INCLUDING BUT NOT LIMITED TO
    64                           ; PROCUREMENT OF SUBSTITUTE GOODS OR SERVICES; LOSS OF USE, DATA OR PROFITS; OR BUSINESS
    65                           ; INTERRUPTION) HOWSOEVER CAUSED AND ON ANY THEORY OF LIABILITY, WHETHER IN CONTRACT, ST
      +                          RICT
    66                           ; LIABILITY, OR TORT (INCLUDING NEGLIGENCE OR OTHERWISE) ARISING IN ANY WAY OUT OF THE U
      +                          SE OF
    67                           ; THIS SOFTWARE, EVEN IF ADVISED OF THE POSSIBILITY OF SUCH DAMAGE.
    68                           ; 
    69                           ; 
    70                           ; Code-generator required, PIC16F18855 Definitions
    71                           ; 
    72                           ; SFR Addresses
    73  0000                     	;# 
    74  0001                     	;# 
    75  0002                     	;# 
    76  0003                     	;# 
    77  0004                     	;# 
    78  0005                     	;# 
    79  0006                     	;# 
    80  0007                     	;# 
    81  0008                     	;# 
    82  0009                     	;# 
    83  000A                     	;# 
    84  000B                     	;# 
    85  000C                     	;# 
    86  000D                     	;# 
    87  000E                     	;# 
    88  0010                     	;# 
    89  0011                     	;# 
    90  0012                     	;# 
    91  0013                     	;# 
    92  0016                     	;# 
    93  0017                     	;# 
    94  0018                     	;# 
    95  001C                     	;# 
    96  001C                     	;# 
    97  001D                     	;# 
    98  001D                     	;# 
    99  001E                     	;# 
   100  001F                     	;# 
   101  008C                     	;# 
   102  008C                     	;# 
   103  008D                     	;# 
   104  008E                     	;# 
   105  008E                     	;# 
   106  008F                     	;# 
   107  0090                     	;# 
   108  0090                     	;# 
   109  0091                     	;# 
   110  0093                     	;# 
   111  0094                     	;# 
   112  0095                     	;# 
   113  0096                     	;# 
   114  0097                     	;# 
   115  0098                     	;# 
   116  0099                     	;# 
   117  009A                     	;# 
   118  009B                     	;# 
   119  009C                     	;# 
   120  009D                     	;# 
   121  009E                     	;# 
   122  010C                     	;# 
   123  010D                     	;# 
   124  010E                     	;# 
   125  010E                     	;# 
   126  010F                     	;# 
   127  0110                     	;# 
   128  0110                     	;# 
   129  0111                     	;# 
   130  0112                     	;# 
   131  0112                     	;# 
   132  0113                     	;# 
   133  0114                     	;# 
   134  0114                     	;# 
   135  0115                     	;# 
   136  0116                     	;# 
   137  0116                     	;# 
   138  0117                     	;# 
   139  0119                     	;# 
   140  0119                     	;# 
   141  0119                     	;# 
   142  011A                     	;# 
   143  011A                     	;# 
   144  011A                     	;# 
   145  011B                     	;# 
   146  011B                     	;# 
   147  011B                     	;# 
   148  011B                     	;# 
   149  011B                     	;# 
   150  011C                     	;# 
   151  011C                     	;# 
   152  011C                     	;# 
   153  011D                     	;# 
   154  011D                     	;# 
   155  011D                     	;# 
   156  011E                     	;# 
   157  011E                     	;# 
   158  011E                     	;# 
   159  011F                     	;# 
   160  011F                     	;# 
   161  011F                     	;# 
   162  011F                     	;# 
   163  011F                     	;# 
   164  018C                     	;# 
   165  018D                     	;# 
   166  018E                     	;# 
   167  018F                     	;# 
   168  0190                     	;# 
   169  0191                     	;# 
   170  0192                     	;# 
   171  0196                     	;# 
   172  0197                     	;# 
   173  0198                     	;# 
   174  0199                     	;# 
   175  019A                     	;# 
   176  019B                     	;# 
   177  019C                     	;# 
   178  020C                     	;# 
   179  020C                     	;# 
   180  020D                     	;# 
   181  020E                     	;# 
   182  020F                     	;# 
   183  020F                     	;# 
   184  0210                     	;# 
   185  0210                     	;# 
   186  0211                     	;# 
   187  0211                     	;# 
   188  0212                     	;# 
   189  0212                     	;# 
   190  0213                     	;# 
   191  0214                     	;# 
   192  0215                     	;# 
   193  0215                     	;# 
   194  0216                     	;# 
   195  0216                     	;# 
   196  0217                     	;# 
   197  0217                     	;# 
   198  0218                     	;# 
   199  0218                     	;# 
   200  0219                     	;# 
   201  021A                     	;# 
   202  021B                     	;# 
   203  021B                     	;# 
   204  021C                     	;# 
   205  021C                     	;# 
   206  021D                     	;# 
   207  021D                     	;# 
   208  021E                     	;# 
   209  021F                     	;# 
   210  028C                     	;# 
   211  028C                     	;# 
   212  028D                     	;# 
   213  028D                     	;# 
   214  028E                     	;# 
   215  028F                     	;# 
   216  0290                     	;# 
   217  0290                     	;# 
   218  0291                     	;# 
   219  0292                     	;# 
   220  0292                     	;# 
   221  0293                     	;# 
   222  0293                     	;# 
   223  0294                     	;# 
   224  0295                     	;# 
   225  0296                     	;# 
   226  0296                     	;# 
   227  0297                     	;# 
   228  0298                     	;# 
   229  0298                     	;# 
   230  0299                     	;# 
   231  0299                     	;# 
   232  029A                     	;# 
   233  029B                     	;# 
   234  029C                     	;# 
   235  029C                     	;# 
   236  029D                     	;# 
   237  030C                     	;# 
   238  030C                     	;# 
   239  030D                     	;# 
   240  030E                     	;# 
   241  030F                     	;# 
   242  0310                     	;# 
   243  0310                     	;# 
   244  0311                     	;# 
   245  0312                     	;# 
   246  0313                     	;# 
   247  0314                     	;# 
   248  0314                     	;# 
   249  0315                     	;# 
   250  0316                     	;# 
   251  0317                     	;# 
   252  0318                     	;# 
   253  0318                     	;# 
   254  0319                     	;# 
   255  031A                     	;# 
   256  031B                     	;# 
   257  031C                     	;# 
   258  031C                     	;# 
   259  031D                     	;# 
   260  031E                     	;# 
   261  031F                     	;# 
   262  038C                     	;# 
   263  038D                     	;# 
   264  038E                     	;# 
   265  0390                     	;# 
   266  0391                     	;# 
   267  0392                     	;# 
   268  040C                     	;# 
   269  040D                     	;# 
   270  040E                     	;# 
   271  040F                     	;# 
   272  0410                     	;# 
   273  0411                     	;# 
   274  0416                     	;# 
   275  0416                     	;# 
   276  0417                     	;# 
   277  0418                     	;# 
   278  0418                     	;# 
   279  0419                     	;# 
   280  041A                     	;# 
   281  041A                     	;# 
   282  041B                     	;# 
   283  041C                     	;# 
   284  041C                     	;# 
   285  041D                     	;# 
   286  041E                     	;# 
   287  041F                     	;# 
   288  048C                     	;# 
   289  048C                     	;# 
   290  048D                     	;# 
   291  048E                     	;# 
   292  048F                     	;# 
   293  048F                     	;# 
   294  0490                     	;# 
   295  0491                     	;# 
   296  0492                     	;# 
   297  0492                     	;# 
   298  0493                     	;# 
   299  0494                     	;# 
   300  0495                     	;# 
   301  0495                     	;# 
   302  0496                     	;# 
   303  0497                     	;# 
   304  0498                     	;# 
   305  0499                     	;# 
   306  049A                     	;# 
   307  049B                     	;# 
   308  049C                     	;# 
   309  049D                     	;# 
   310  050C                     	;# 
   311  050C                     	;# 
   312  050D                     	;# 
   313  050E                     	;# 
   314  050F                     	;# 
   315  050F                     	;# 
   316  0510                     	;# 
   317  0511                     	;# 
   318  0512                     	;# 
   319  0512                     	;# 
   320  0513                     	;# 
   321  0514                     	;# 
   322  0515                     	;# 
   323  0515                     	;# 
   324  0516                     	;# 
   325  0517                     	;# 
   326  0518                     	;# 
   327  0519                     	;# 
   328  051A                     	;# 
   329  051B                     	;# 
   330  051C                     	;# 
   331  051D                     	;# 
   332  058C                     	;# 
   333  058C                     	;# 
   334  058D                     	;# 
   335  058E                     	;# 
   336  058F                     	;# 
   337  058F                     	;# 
   338  0590                     	;# 
   339  0591                     	;# 
   340  0592                     	;# 
   341  0593                     	;# 
   342  060C                     	;# 
   343  060D                     	;# 
   344  060E                     	;# 
   345  060F                     	;# 
   346  0610                     	;# 
   347  0611                     	;# 
   348  0612                     	;# 
   349  0613                     	;# 
   350  0614                     	;# 
   351  0616                     	;# 
   352  0617                     	;# 
   353  0618                     	;# 
   354  0619                     	;# 
   355  061A                     	;# 
   356  061B                     	;# 
   357  061C                     	;# 
   358  061D                     	;# 
   359  061E                     	;# 
   360  068C                     	;# 
   361  068D                     	;# 
   362  068E                     	;# 
   363  068F                     	;# 
   364  0690                     	;# 
   365  0691                     	;# 
   366  0692                     	;# 
   367  0693                     	;# 
   368  0694                     	;# 
   369  070C                     	;# 
   370  070D                     	;# 
   371  070E                     	;# 
   372  070F                     	;# 
   373  0710                     	;# 
   374  0711                     	;# 
   375  0712                     	;# 
   376  0713                     	;# 
   377  0714                     	;# 
   378  0716                     	;# 
   379  0717                     	;# 
   380  0718                     	;# 
   381  0719                     	;# 
   382  071A                     	;# 
   383  071B                     	;# 
   384  071C                     	;# 
   385  071D                     	;# 
   386  071E                     	;# 
   387  0796                     	;# 
   388  0797                     	;# 
   389  0798                     	;# 
   390  0799                     	;# 
   391  079A                     	;# 
   392  079B                     	;# 
   393  080C                     	;# 
   394  080D                     	;# 
   395  080E                     	;# 
   396  080F                     	;# 
   397  0810                     	;# 
   398  0811                     	;# 
   399  0812                     	;# 
   400  0813                     	;# 
   401  0814                     	;# 
   402  081A                     	;# 
   403  081B                     	;# 
   404  081C                     	;# 
   405  081D                     	;# 
   406  081E                     	;# 
   407  081F                     	;# 
   408  088C                     	;# 
   409  088D                     	;# 
   410  088E                     	;# 
   411  088F                     	;# 
   412  0890                     	;# 
   413  0891                     	;# 
   414  0892                     	;# 
   415  0893                     	;# 
   416  0895                     	;# 
   417  0896                     	;# 
   418  0897                     	;# 
   419  0898                     	;# 
   420  0899                     	;# 
   421  089A                     	;# 
   422  089B                     	;# 
   423  090C                     	;# 
   424  090E                     	;# 
   425  090F                     	;# 
   426  091F                     	;# 
   427  091F                     	;# 
   428  098F                     	;# 
   429  098F                     	;# 
   430  0990                     	;# 
   431  0991                     	;# 
   432  0992                     	;# 
   433  0993                     	;# 
   434  0994                     	;# 
   435  0995                     	;# 
   436  0996                     	;# 
   437  0997                     	;# 
   438  0E0F                     	;# 
   439  0E10                     	;# 
   440  0E11                     	;# 
   441  0E12                     	;# 
   442  0E13                     	;# 
   443  0E14                     	;# 
   444  0E15                     	;# 
   445  0E16                     	;# 
   446  0E17                     	;# 
   447  0E18                     	;# 
   448  0E19                     	;# 
   449  0E1A                     	;# 
   450  0E1B                     	;# 
   451  0E1C                     	;# 
   452  0E1D                     	;# 
   453  0E1E                     	;# 
   454  0E1F                     	;# 
   455  0E20                     	;# 
   456  0E21                     	;# 
   457  0E22                     	;# 
   458  0E23                     	;# 
   459  0E24                     	;# 
   460  0E25                     	;# 
   461  0E26                     	;# 
   462  0E27                     	;# 
   463  0E28                     	;# 
   464  0E29                     	;# 
   465  0E2A                     	;# 
   466  0E2B                     	;# 
   467  0E2C                     	;# 
   468  0E2D                     	;# 
   469  0E2E                     	;# 
   470  0E2F                     	;# 
   471  0E30                     	;# 
   472  0E31                     	;# 
   473  0E32                     	;# 
   474  0E33                     	;# 
   475  0E34                     	;# 
   476  0E35                     	;# 
   477  0E36                     	;# 
   478  0E37                     	;# 
   479  0E8F                     	;# 
   480  0E90                     	;# 
   481  0E91                     	;# 
   482  0E92                     	;# 
   483  0E93                     	;# 
   484  0E94                     	;# 
   485  0E95                     	;# 
   486  0E96                     	;# 
   487  0E97                     	;# 
   488  0E9C                     	;# 
   489  0E9D                     	;# 
   490  0E9E                     	;# 
   491  0EA1                     	;# 
   492  0EA2                     	;# 
   493  0EA3                     	;# 
   494  0EA4                     	;# 
   495  0EA5                     	;# 
   496  0EA9                     	;# 
   497  0EAA                     	;# 
   498  0EAB                     	;# 
   499  0EAC                     	;# 
   500  0EB1                     	;# 
   501  0EB2                     	;# 
   502  0EB3                     	;# 
   503  0EB8                     	;# 
   504  0EB9                     	;# 
   505  0EBA                     	;# 
   506  0EBB                     	;# 
   507  0EBC                     	;# 
   508  0EBD                     	;# 
   509  0EBE                     	;# 
   510  0EC3                     	;# 
   511  0EC5                     	;# 
   512  0EC6                     	;# 
   513  0EC7                     	;# 
   514  0EC8                     	;# 
   515  0EC9                     	;# 
   516  0ECA                     	;# 
   517  0ECB                     	;# 
   518  0ECC                     	;# 
   519  0F10                     	;# 
   520  0F11                     	;# 
   521  0F12                     	;# 
   522  0F13                     	;# 
   523  0F14                     	;# 
   524  0F15                     	;# 
   525  0F16                     	;# 
   526  0F17                     	;# 
   527  0F18                     	;# 
   528  0F19                     	;# 
   529  0F1A                     	;# 
   530  0F1B                     	;# 
   531  0F1C                     	;# 
   532  0F1D                     	;# 
   533  0F1E                     	;# 
   534  0F1F                     	;# 
   535  0F20                     	;# 
   536  0F21                     	;# 
   537  0F22                     	;# 
   538  0F23                     	;# 
   539  0F24                     	;# 
   540  0F25                     	;# 
   541  0F26                     	;# 
   542  0F27                     	;# 
   543  0F38                     	;# 
   544  0F39                     	;# 
   545  0F3A                     	;# 
   546  0F3B                     	;# 
   547  0F3C                     	;# 
   548  0F3D                     	;# 
   549  0F3E                     	;# 
   550  0F3F                     	;# 
   551  0F40                     	;# 
   552  0F41                     	;# 
   553  0F43                     	;# 
   554  0F44                     	;# 
   555  0F45                     	;# 
   556  0F46                     	;# 
   557  0F47                     	;# 
   558  0F48                     	;# 
   559  0F49                     	;# 
   560  0F4A                     	;# 
   561  0F4B                     	;# 
   562  0F4C                     	;# 
   563  0F4E                     	;# 
   564  0F4F                     	;# 
   565  0F50                     	;# 
   566  0F51                     	;# 
   567  0F52                     	;# 
   568  0F53                     	;# 
   569  0F54                     	;# 
   570  0F55                     	;# 
   571  0F56                     	;# 
   572  0F57                     	;# 
   573  0F65                     	;# 
   574  0F68                     	;# 
   575  0F69                     	;# 
   576  0F6A                     	;# 
   577  0F6B                     	;# 
   578  0FE4                     	;# 
   579  0FE5                     	;# 
   580  0FE6                     	;# 
   581  0FE7                     	;# 
   582  0FE8                     	;# 
   583  0FE9                     	;# 
   584  0FEA                     	;# 
   585  0FEB                     	;# 
   586  0FED                     	;# 
   587  0FEE                     	;# 
   588  0FEF                     	;# 
   589  0000                     	;# 
   590  0001                     	;# 
   591  0002                     	;# 
   592  0003                     	;# 
   593  0004                     	;# 
   594  0005                     	;# 
   595  0006                     	;# 
   596  0007                     	;# 
   597  0008                     	;# 
   598  0009                     	;# 
   599  000A                     	;# 
   600  000B                     	;# 
   601  000C                     	;# 
   602  000D                     	;# 
   603  000E                     	;# 
   604  0010                     	;# 
   605  0011                     	;# 
   606  0012                     	;# 
   607  0013                     	;# 
   608  0016                     	;# 
   609  0017                     	;# 
   610  0018                     	;# 
   611  001C                     	;# 
   612  001C                     	;# 
   613  001D                     	;# 
   614  001D                     	;# 
   615  001E                     	;# 
   616  001F                     	;# 
   617  008C                     	;# 
   618  008C                     	;# 
   619  008D                     	;# 
   620  008E                     	;# 
   621  008E                     	;# 
   622  008F                     	;# 
   623  0090                     	;# 
   624  0090                     	;# 
   625  0091                     	;# 
   626  0093                     	;# 
   627  0094                     	;# 
   628  0095                     	;# 
   629  0096                     	;# 
   630  0097                     	;# 
   631  0098                     	;# 
   632  0099                     	;# 
   633  009A                     	;# 
   634  009B                     	;# 
   635  009C                     	;# 
   636  009D                     	;# 
   637  009E                     	;# 
   638  010C                     	;# 
   639  010D                     	;# 
   640  010E                     	;# 
   641  010E                     	;# 
   642  010F                     	;# 
   643  0110                     	;# 
   644  0110                     	;# 
   645  0111                     	;# 
   646  0112                     	;# 
   647  0112                     	;# 
   648  0113                     	;# 
   649  0114                     	;# 
   650  0114                     	;# 
   651  0115                     	;# 
   652  0116                     	;# 
   653  0116                     	;# 
   654  0117                     	;# 
   655  0119                     	;# 
   656  0119                     	;# 
   657  0119                     	;# 
   658  011A                     	;# 
   659  011A                     	;# 
   660  011A                     	;# 
   661  011B                     	;# 
   662  011B                     	;# 
   663  011B                     	;# 
   664  011B                     	;# 
   665  011B                     	;# 
   666  011C                     	;# 
   667  011C                     	;# 
   668  011C                     	;# 
   669  011D                     	;# 
   670  011D                     	;# 
   671  011D                     	;# 
   672  011E                     	;# 
   673  011E                     	;# 
   674  011E                     	;# 
   675  011F                     	;# 
   676  011F                     	;# 
   677  011F                     	;# 
   678  011F                     	;# 
   679  011F                     	;# 
   680  018C                     	;# 
   681  018D                     	;# 
   682  018E                     	;# 
   683  018F                     	;# 
   684  0190                     	;# 
   685  0191                     	;# 
   686  0192                     	;# 
   687  0196                     	;# 
   688  0197                     	;# 
   689  0198                     	;# 
   690  0199                     	;# 
   691  019A                     	;# 
   692  019B                     	;# 
   693  019C                     	;# 
   694  020C                     	;# 
   695  020C                     	;# 
   696  020D                     	;# 
   697  020E                     	;# 
   698  020F                     	;# 
   699  020F                     	;# 
   700  0210                     	;# 
   701  0210                     	;# 
   702  0211                     	;# 
   703  0211                     	;# 
   704  0212                     	;# 
   705  0212                     	;# 
   706  0213                     	;# 
   707  0214                     	;# 
   708  0215                     	;# 
   709  0215                     	;# 
   710  0216                     	;# 
   711  0216                     	;# 
   712  0217                     	;# 
   713  0217                     	;# 
   714  0218                     	;# 
   715  0218                     	;# 
   716  0219                     	;# 
   717  021A                     	;# 
   718  021B                     	;# 
   719  021B                     	;# 
   720  021C                     	;# 
   721  021C                     	;# 
   722  021D                     	;# 
   723  021D                     	;# 
   724  021E                     	;# 
   725  021F                     	;# 
   726  028C                     	;# 
   727  028C                     	;# 
   728  028D                     	;# 
   729  028D                     	;# 
   730  028E                     	;# 
   731  028F                     	;# 
   732  0290                     	;# 
   733  0290                     	;# 
   734  0291                     	;# 
   735  0292                     	;# 
   736  0292                     	;# 
   737  0293                     	;# 
   738  0293                     	;# 
   739  0294                     	;# 
   740  0295                     	;# 
   741  0296                     	;# 
   742  0296                     	;# 
   743  0297                     	;# 
   744  0298                     	;# 
   745  0298                     	;# 
   746  0299                     	;# 
   747  0299                     	;# 
   748  029A                     	;# 
   749  029B                     	;# 
   750  029C                     	;# 
   751  029C                     	;# 
   752  029D                     	;# 
   753  030C                     	;# 
   754  030C                     	;# 
   755  030D                     	;# 
   756  030E                     	;# 
   757  030F                     	;# 
   758  0310                     	;# 
   759  0310                     	;# 
   760  0311                     	;# 
   761  0312                     	;# 
   762  0313                     	;# 
   763  0314                     	;# 
   764  0314                     	;# 
   765  0315                     	;# 
   766  0316                     	;# 
   767  0317                     	;# 
   768  0318                     	;# 
   769  0318                     	;# 
   770  0319                     	;# 
   771  031A                     	;# 
   772  031B                     	;# 
   773  031C                     	;# 
   774  031C                     	;# 
   775  031D                     	;# 
   776  031E                     	;# 
   777  031F                     	;# 
   778  038C                     	;# 
   779  038D                     	;# 
   780  038E                     	;# 
   781  0390                     	;# 
   782  0391                     	;# 
   783  0392                     	;# 
   784  040C                     	;# 
   785  040D                     	;# 
   786  040E                     	;# 
   787  040F                     	;# 
   788  0410                     	;# 
   789  0411                     	;# 
   790  0416                     	;# 
   791  0416                     	;# 
   792  0417                     	;# 
   793  0418                     	;# 
   794  0418                     	;# 
   795  0419                     	;# 
   796  041A                     	;# 
   797  041A                     	;# 
   798  041B                     	;# 
   799  041C                     	;# 
   800  041C                     	;# 
   801  041D                     	;# 
   802  041E                     	;# 
   803  041F                     	;# 
   804  048C                     	;# 
   805  048C                     	;# 
   806  048D                     	;# 
   807  048E                     	;# 
   808  048F                     	;# 
   809  048F                     	;# 
   810  0490                     	;# 
   811  0491                     	;# 
   812  0492                     	;# 
   813  0492                     	;# 
   814  0493                     	;# 
   815  0494                     	;# 
   816  0495                     	;# 
   817  0495                     	;# 
   818  0496                     	;# 
   819  0497                     	;# 
   820  0498                     	;# 
   821  0499                     	;# 
   822  049A                     	;# 
   823  049B                     	;# 
   824  049C                     	;# 
   825  049D                     	;# 
   826  050C                     	;# 
   827  050C                     	;# 
   828  050D                     	;# 
   829  050E                     	;# 
   830  050F                     	;# 
   831  050F                     	;# 
   832  0510                     	;# 
   833  0511                     	;# 
   834  0512                     	;# 
   835  0512                     	;# 
   836  0513                     	;# 
   837  0514                     	;# 
   838  0515                     	;# 
   839  0515                     	;# 
   840  0516                     	;# 
   841  0517                     	;# 
   842  0518                     	;# 
   843  0519                     	;# 
   844  051A                     	;# 
   845  051B                     	;# 
   846  051C                     	;# 
   847  051D                     	;# 
   848  058C                     	;# 
   849  058C                     	;# 
   850  058D                     	;# 
   851  058E                     	;# 
   852  058F                     	;# 
   853  058F                     	;# 
   854  0590                     	;# 
   855  0591                     	;# 
   856  0592                     	;# 
   857  0593                     	;# 
   858  060C                     	;# 
   859  060D                     	;# 
   860  060E                     	;# 
   861  060F                     	;# 
   862  0610                     	;# 
   863  0611                     	;# 
   864  0612                     	;# 
   865  0613                     	;# 
   866  0614                     	;# 
   867  0616                     	;# 
   868  0617                     	;# 
   869  0618                     	;# 
   870  0619                     	;# 
   871  061A                     	;# 
   872  061B                     	;# 
   873  061C                     	;# 
   874  061D                     	;# 
   875  061E                     	;# 
   876  068C                     	;# 
   877  068D                     	;# 
   878  068E                     	;# 
   879  068F                     	;# 
   880  0690                     	;# 
   881  0691                     	;# 
   882  0692                     	;# 
   883  0693                     	;# 
   884  0694                     	;# 
   885  070C                     	;# 
   886  070D                     	;# 
   887  070E                     	;# 
   888  070F                     	;# 
   889  0710                     	;# 
   890  0711                     	;# 
   891  0712                     	;# 
   892  0713                     	;# 
   893  0714                     	;# 
   894  0716                     	;# 
   895  0717                     	;# 
   896  0718                     	;# 
   897  0719                     	;# 
   898  071A                     	;# 
   899  071B                     	;# 
   900  071C                     	;# 
   901  071D                     	;# 
   902  071E                     	;# 
   903  0796                     	;# 
   904  0797                     	;# 
   905  0798                     	;# 
   906  0799                     	;# 
   907  079A                     	;# 
   908  079B                     	;# 
   909  080C                     	;# 
   910  080D                     	;# 
   911  080E                     	;# 
   912  080F                     	;# 
   913  0810                     	;# 
   914  0811                     	;# 
   915  0812                     	;# 
   916  0813                     	;# 
   917  0814                     	;# 
   918  081A                     	;# 
   919  081B                     	;# 
   920  081C                     	;# 
   921  081D                     	;# 
   922  081E                     	;# 
   923  081F                     	;# 
   924  088C                     	;# 
   925  088D                     	;# 
   926  088E                     	;# 
   927  088F                     	;# 
   928  0890                     	;# 
   929  0891                     	;# 
   930  0892                     	;# 
   931  0893                     	;# 
   932  0895                     	;# 
   933  0896                     	;# 
   934  0897                     	;# 
   935  0898                     	;# 
   936  0899                     	;# 
   937  089A                     	;# 
   938  089B                     	;# 
   939  090C                     	;# 
   940  090E                     	;# 
   941  090F                     	;# 
   942  091F                     	;# 
   943  091F                     	;# 
   944  098F                     	;# 
   945  098F                     	;# 
   946  0990                     	;# 
   947  0991                     	;# 
   948  0992                     	;# 
   949  0993                     	;# 
   950  0994                     	;# 
   951  0995                     	;# 
   952  0996                     	;# 
   953  0997                     	;# 
   954  0E0F                     	;# 
   955  0E10                     	;# 
   956  0E11                     	;# 
   957  0E12                     	;# 
   958  0E13                     	;# 
   959  0E14                     	;# 
   960  0E15                     	;# 
   961  0E16                     	;# 
   962  0E17                     	;# 
   963  0E18                     	;# 
   964  0E19                     	;# 
   965  0E1A                     	;# 
   966  0E1B                     	;# 
   967  0E1C                     	;# 
   968  0E1D                     	;# 
   969  0E1E                     	;# 
   970  0E1F                     	;# 
   971  0E20                     	;# 
   972  0E21                     	;# 
   973  0E22                     	;# 
   974  0E23                     	;# 
   975  0E24                     	;# 
   976  0E25                     	;# 
   977  0E26                     	;# 
   978  0E27                     	;# 
   979  0E28                     	;# 
   980  0E29                     	;# 
   981  0E2A                     	;# 
   982  0E2B                     	;# 
   983  0E2C                     	;# 
   984  0E2D                     	;# 
   985  0E2E                     	;# 
   986  0E2F                     	;# 
   987  0E30                     	;# 
   988  0E31                     	;# 
   989  0E32                     	;# 
   990  0E33                     	;# 
   991  0E34                     	;# 
   992  0E35                     	;# 
   993  0E36                     	;# 
   994  0E37                     	;# 
   995  0E8F                     	;# 
   996  0E90                     	;# 
   997  0E91                     	;# 
   998  0E92                     	;# 
   999  0E93                     	;# 
  1000  0E94                     	;# 
  1001  0E95                     	;# 
  1002  0E96                     	;# 
  1003  0E97                     	;# 
  1004  0E9C                     	;# 
  1005  0E9D                     	;# 
  1006  0E9E                     	;# 
  1007  0EA1                     	;# 
  1008  0EA2                     	;# 
  1009  0EA3                     	;# 
  1010  0EA4                     	;# 
  1011  0EA5                     	;# 
  1012  0EA9                     	;# 
  1013  0EAA                     	;# 
  1014  0EAB                     	;# 
  1015  0EAC                     	;# 
  1016  0EB1                     	;# 
  1017  0EB2                     	;# 
  1018  0EB3                     	;# 
  1019  0EB8                     	;# 
  1020  0EB9                     	;# 
  1021  0EBA                     	;# 
  1022  0EBB                     	;# 
  1023  0EBC                     	;# 
  1024  0EBD                     	;# 
  1025  0EBE                     	;# 
  1026  0EC3                     	;# 
  1027  0EC5                     	;# 
  1028  0EC6                     	;# 
  1029  0EC7                     	;# 
  1030  0EC8                     	;# 
  1031  0EC9                     	;# 
  1032  0ECA                     	;# 
  1033  0ECB                     	;# 
  1034  0ECC                     	;# 
  1035  0F10                     	;# 
  1036  0F11                     	;# 
  1037  0F12                     	;# 
  1038  0F13                     	;# 
  1039  0F14                     	;# 
  1040  0F15                     	;# 
  1041  0F16                     	;# 
  1042  0F17                     	;# 
  1043  0F18                     	;# 
  1044  0F19                     	;# 
  1045  0F1A                     	;# 
  1046  0F1B                     	;# 
  1047  0F1C                     	;# 
  1048  0F1D                     	;# 
  1049  0F1E                     	;# 
  1050  0F1F                     	;# 
  1051  0F20                     	;# 
  1052  0F21                     	;# 
  1053  0F22                     	;# 
  1054  0F23                     	;# 
  1055  0F24                     	;# 
  1056  0F25                     	;# 
  1057  0F26                     	;# 
  1058  0F27                     	;# 
  1059  0F38                     	;# 
  1060  0F39                     	;# 
  1061  0F3A                     	;# 
  1062  0F3B                     	;# 
  1063  0F3C                     	;# 
  1064  0F3D                     	;# 
  1065  0F3E                     	;# 
  1066  0F3F                     	;# 
  1067  0F40                     	;# 
  1068  0F41                     	;# 
  1069  0F43                     	;# 
  1070  0F44                     	;# 
  1071  0F45                     	;# 
  1072  0F46                     	;# 
  1073  0F47                     	;# 
  1074  0F48                     	;# 
  1075  0F49                     	;# 
  1076  0F4A                     	;# 
  1077  0F4B                     	;# 
  1078  0F4C                     	;# 
  1079  0F4E                     	;# 
  1080  0F4F                     	;# 
  1081  0F50                     	;# 
  1082  0F51                     	;# 
  1083  0F52                     	;# 
  1084  0F53                     	;# 
  1085  0F54                     	;# 
  1086  0F55                     	;# 
  1087  0F56                     	;# 
  1088  0F57                     	;# 
  1089  0F65                     	;# 
  1090  0F68                     	;# 
  1091  0F69                     	;# 
  1092  0F6A                     	;# 
  1093  0F6B                     	;# 
  1094  0FE4                     	;# 
  1095  0FE5                     	;# 
  1096  0FE6                     	;# 
  1097  0FE7                     	;# 
  1098  0FE8                     	;# 
  1099  0FE9                     	;# 
  1100  0FEA                     	;# 
  1101  0FEB                     	;# 
  1102  0FED                     	;# 
  1103  0FEE                     	;# 
  1104  0FEF                     	;# 
  1105  0000                     	;# 
  1106  0001                     	;# 
  1107  0002                     	;# 
  1108  0003                     	;# 
  1109  0004                     	;# 
  1110  0005                     	;# 
  1111  0006                     	;# 
  1112  0007                     	;# 
  1113  0008                     	;# 
  1114  0009                     	;# 
  1115  000A                     	;# 
  1116  000B                     	;# 
  1117  000C                     	;# 
  1118  000D                     	;# 
  1119  000E                     	;# 
  1120  0010                     	;# 
  1121  0011                     	;# 
  1122  0012                     	;# 
  1123  0013                     	;# 
  1124  0016                     	;# 
  1125  0017                     	;# 
  1126  0018                     	;# 
  1127  001C                     	;# 
  1128  001C                     	;# 
  1129  001D                     	;# 
  1130  001D                     	;# 
  1131  001E                     	;# 
  1132  001F                     	;# 
  1133  008C                     	;# 
  1134  008C                     	;# 
  1135  008D                     	;# 
  1136  008E                     	;# 
  1137  008E                     	;# 
  1138  008F                     	;# 
  1139  0090                     	;# 
  1140  0090                     	;# 
  1141  0091                     	;# 
  1142  0093                     	;# 
  1143  0094                     	;# 
  1144  0095                     	;# 
  1145  0096                     	;# 
  1146  0097                     	;# 
  1147  0098                     	;# 
  1148  0099                     	;# 
  1149  009A                     	;# 
  1150  009B                     	;# 
  1151  009C                     	;# 
  1152  009D                     	;# 
  1153  009E                     	;# 
  1154  010C                     	;# 
  1155  010D                     	;# 
  1156  010E                     	;# 
  1157  010E                     	;# 
  1158  010F                     	;# 
  1159  0110                     	;# 
  1160  0110                     	;# 
  1161  0111                     	;# 
  1162  0112                     	;# 
  1163  0112                     	;# 
  1164  0113                     	;# 
  1165  0114                     	;# 
  1166  0114                     	;# 
  1167  0115                     	;# 
  1168  0116                     	;# 
  1169  0116                     	;# 
  1170  0117                     	;# 
  1171  0119                     	;# 
  1172  0119                     	;# 
  1173  0119                     	;# 
  1174  011A                     	;# 
  1175  011A                     	;# 
  1176  011A                     	;# 
  1177  011B                     	;# 
  1178  011B                     	;# 
  1179  011B                     	;# 
  1180  011B                     	;# 
  1181  011B                     	;# 
  1182  011C                     	;# 
  1183  011C                     	;# 
  1184  011C                     	;# 
  1185  011D                     	;# 
  1186  011D                     	;# 
  1187  011D                     	;# 
  1188  011E                     	;# 
  1189  011E                     	;# 
  1190  011E                     	;# 
  1191  011F                     	;# 
  1192  011F                     	;# 
  1193  011F                     	;# 
  1194  011F                     	;# 
  1195  011F                     	;# 
  1196  018C                     	;# 
  1197  018D                     	;# 
  1198  018E                     	;# 
  1199  018F                     	;# 
  1200  0190                     	;# 
  1201  0191                     	;# 
  1202  0192                     	;# 
  1203  0196                     	;# 
  1204  0197                     	;# 
  1205  0198                     	;# 
  1206  0199                     	;# 
  1207  019A                     	;# 
  1208  019B                     	;# 
  1209  019C                     	;# 
  1210  020C                     	;# 
  1211  020C                     	;# 
  1212  020D                     	;# 
  1213  020E                     	;# 
  1214  020F                     	;# 
  1215  020F                     	;# 
  1216  0210                     	;# 
  1217  0210                     	;# 
  1218  0211                     	;# 
  1219  0211                     	;# 
  1220  0212                     	;# 
  1221  0212                     	;# 
  1222  0213                     	;# 
  1223  0214                     	;# 
  1224  0215                     	;# 
  1225  0215                     	;# 
  1226  0216                     	;# 
  1227  0216                     	;# 
  1228  0217                     	;# 
  1229  0217                     	;# 
  1230  0218                     	;# 
  1231  0218                     	;# 
  1232  0219                     	;# 
  1233  021A                     	;# 
  1234  021B                     	;# 
  1235  021B                     	;# 
  1236  021C                     	;# 
  1237  021C                     	;# 
  1238  021D                     	;# 
  1239  021D                     	;# 
  1240  021E                     	;# 
  1241  021F                     	;# 
  1242  028C                     	;# 
  1243  028C                     	;# 
  1244  028D                     	;# 
  1245  028D                     	;# 
  1246  028E                     	;# 
  1247  028F                     	;# 
  1248  0290                     	;# 
  1249  0290                     	;# 
  1250  0291                     	;# 
  1251  0292                     	;# 
  1252  0292                     	;# 
  1253  0293                     	;# 
  1254  0293                     	;# 
  1255  0294                     	;# 
  1256  0295                     	;# 
  1257  0296                     	;# 
  1258  0296                     	;# 
  1259  0297                     	;# 
  1260  0298                     	;# 
  1261  0298                     	;# 
  1262  0299                     	;# 
  1263  0299                     	;# 
  1264  029A                     	;# 
  1265  029B                     	;# 
  1266  029C                     	;# 
  1267  029C                     	;# 
  1268  029D                     	;# 
  1269  030C                     	;# 
  1270  030C                     	;# 
  1271  030D                     	;# 
  1272  030E                     	;# 
  1273  030F                     	;# 
  1274  0310                     	;# 
  1275  0310                     	;# 
  1276  0311                     	;# 
  1277  0312                     	;# 
  1278  0313                     	;# 
  1279  0314                     	;# 
  1280  0314                     	;# 
  1281  0315                     	;# 
  1282  0316                     	;# 
  1283  0317                     	;# 
  1284  0318                     	;# 
  1285  0318                     	;# 
  1286  0319                     	;# 
  1287  031A                     	;# 
  1288  031B                     	;# 
  1289  031C                     	;# 
  1290  031C                     	;# 
  1291  031D                     	;# 
  1292  031E                     	;# 
  1293  031F                     	;# 
  1294  038C                     	;# 
  1295  038D                     	;# 
  1296  038E                     	;# 
  1297  0390                     	;# 
  1298  0391                     	;# 
  1299  0392                     	;# 
  1300  040C                     	;# 
  1301  040D                     	;# 
  1302  040E                     	;# 
  1303  040F                     	;# 
  1304  0410                     	;# 
  1305  0411                     	;# 
  1306  0416                     	;# 
  1307  0416                     	;# 
  1308  0417                     	;# 
  1309  0418                     	;# 
  1310  0418                     	;# 
  1311  0419                     	;# 
  1312  041A                     	;# 
  1313  041A                     	;# 
  1314  041B                     	;# 
  1315  041C                     	;# 
  1316  041C                     	;# 
  1317  041D                     	;# 
  1318  041E                     	;# 
  1319  041F                     	;# 
  1320  048C                     	;# 
  1321  048C                     	;# 
  1322  048D                     	;# 
  1323  048E                     	;# 
  1324  048F                     	;# 
  1325  048F                     	;# 
  1326  0490                     	;# 
  1327  0491                     	;# 
  1328  0492                     	;# 
  1329  0492                     	;# 
  1330  0493                     	;# 
  1331  0494                     	;# 
  1332  0495                     	;# 
  1333  0495                     	;# 
  1334  0496                     	;# 
  1335  0497                     	;# 
  1336  0498                     	;# 
  1337  0499                     	;# 
  1338  049A                     	;# 
  1339  049B                     	;# 
  1340  049C                     	;# 
  1341  049D                     	;# 
  1342  050C                     	;# 
  1343  050C                     	;# 
  1344  050D                     	;# 
  1345  050E                     	;# 
  1346  050F                     	;# 
  1347  050F                     	;# 
  1348  0510                     	;# 
  1349  0511                     	;# 
  1350  0512                     	;# 
  1351  0512                     	;# 
  1352  0513                     	;# 
  1353  0514                     	;# 
  1354  0515                     	;# 
  1355  0515                     	;# 
  1356  0516                     	;# 
  1357  0517                     	;# 
  1358  0518                     	;# 
  1359  0519                     	;# 
  1360  051A                     	;# 
  1361  051B                     	;# 
  1362  051C                     	;# 
  1363  051D                     	;# 
  1364  058C                     	;# 
  1365  058C                     	;# 
  1366  058D                     	;# 
  1367  058E                     	;# 
  1368  058F                     	;# 
  1369  058F                     	;# 
  1370  0590                     	;# 
  1371  0591                     	;# 
  1372  0592                     	;# 
  1373  0593                     	;# 
  1374  060C                     	;# 
  1375  060D                     	;# 
  1376  060E                     	;# 
  1377  060F                     	;# 
  1378  0610                     	;# 
  1379  0611                     	;# 
  1380  0612                     	;# 
  1381  0613                     	;# 
  1382  0614                     	;# 
  1383  0616                     	;# 
  1384  0617                     	;# 
  1385  0618                     	;# 
  1386  0619                     	;# 
  1387  061A                     	;# 
  1388  061B                     	;# 
  1389  061C                     	;# 
  1390  061D                     	;# 
  1391  061E                     	;# 
  1392  068C                     	;# 
  1393  068D                     	;# 
  1394  068E                     	;# 
  1395  068F                     	;# 
  1396  0690                     	;# 
  1397  0691                     	;# 
  1398  0692                     	;# 
  1399  0693                     	;# 
  1400  0694                     	;# 
  1401  070C                     	;# 
  1402  070D                     	;# 
  1403  070E                     	;# 
  1404  070F                     	;# 
  1405  0710                     	;# 
  1406  0711                     	;# 
  1407  0712                     	;# 
  1408  0713                     	;# 
  1409  0714                     	;# 
  1410  0716                     	;# 
  1411  0717                     	;# 
  1412  0718                     	;# 
  1413  0719                     	;# 
  1414  071A                     	;# 
  1415  071B                     	;# 
  1416  071C                     	;# 
  1417  071D                     	;# 
  1418  071E                     	;# 
  1419  0796                     	;# 
  1420  0797                     	;# 
  1421  0798                     	;# 
  1422  0799                     	;# 
  1423  079A                     	;# 
  1424  079B                     	;# 
  1425  080C                     	;# 
  1426  080D                     	;# 
  1427  080E                     	;# 
  1428  080F                     	;# 
  1429  0810                     	;# 
  1430  0811                     	;# 
  1431  0812                     	;# 
  1432  0813                     	;# 
  1433  0814                     	;# 
  1434  081A                     	;# 
  1435  081B                     	;# 
  1436  081C                     	;# 
  1437  081D                     	;# 
  1438  081E                     	;# 
  1439  081F                     	;# 
  1440  088C                     	;# 
  1441  088D                     	;# 
  1442  088E                     	;# 
  1443  088F                     	;# 
  1444  0890                     	;# 
  1445  0891                     	;# 
  1446  0892                     	;# 
  1447  0893                     	;# 
  1448  0895                     	;# 
  1449  0896                     	;# 
  1450  0897                     	;# 
  1451  0898                     	;# 
  1452  0899                     	;# 
  1453  089A                     	;# 
  1454  089B                     	;# 
  1455  090C                     	;# 
  1456  090E                     	;# 
  1457  090F                     	;# 
  1458  091F                     	;# 
  1459  091F                     	;# 
  1460  098F                     	;# 
  1461  098F                     	;# 
  1462  0990                     	;# 
  1463  0991                     	;# 
  1464  0992                     	;# 
  1465  0993                     	;# 
  1466  0994                     	;# 
  1467  0995                     	;# 
  1468  0996                     	;# 
  1469  0997                     	;# 
  1470  0E0F                     	;# 
  1471  0E10                     	;# 
  1472  0E11                     	;# 
  1473  0E12                     	;# 
  1474  0E13                     	;# 
  1475  0E14                     	;# 
  1476  0E15                     	;# 
  1477  0E16                     	;# 
  1478  0E17                     	;# 
  1479  0E18                     	;# 
  1480  0E19                     	;# 
  1481  0E1A                     	;# 
  1482  0E1B                     	;# 
  1483  0E1C                     	;# 
  1484  0E1D                     	;# 
  1485  0E1E                     	;# 
  1486  0E1F                     	;# 
  1487  0E20                     	;# 
  1488  0E21                     	;# 
  1489  0E22                     	;# 
  1490  0E23                     	;# 
  1491  0E24                     	;# 
  1492  0E25                     	;# 
  1493  0E26                     	;# 
  1494  0E27                     	;# 
  1495  0E28                     	;# 
  1496  0E29                     	;# 
  1497  0E2A                     	;# 
  1498  0E2B                     	;# 
  1499  0E2C                     	;# 
  1500  0E2D                     	;# 
  1501  0E2E                     	;# 
  1502  0E2F                     	;# 
  1503  0E30                     	;# 
  1504  0E31                     	;# 
  1505  0E32                     	;# 
  1506  0E33                     	;# 
  1507  0E34                     	;# 
  1508  0E35                     	;# 
  1509  0E36                     	;# 
  1510  0E37                     	;# 
  1511  0E8F                     	;# 
  1512  0E90                     	;# 
  1513  0E91                     	;# 
  1514  0E92                     	;# 
  1515  0E93                     	;# 
  1516  0E94                     	;# 
  1517  0E95                     	;# 
  1518  0E96                     	;# 
  1519  0E97                     	;# 
  1520  0E9C                     	;# 
  1521  0E9D                     	;# 
  1522  0E9E                     	;# 
  1523  0EA1                     	;# 
  1524  0EA2                     	;# 
  1525  0EA3                     	;# 
  1526  0EA4                     	;# 
  1527  0EA5                     	;# 
  1528  0EA9                     	;# 
  1529  0EAA                     	;# 
  1530  0EAB                     	;# 
  1531  0EAC                     	;# 
  1532  0EB1                     	;# 
  1533  0EB2                     	;# 
  1534  0EB3                     	;# 
  1535  0EB8                     	;# 
  1536  0EB9                     	;# 
  1537  0EBA                     	;# 
  1538  0EBB                     	;# 
  1539  0EBC                     	;# 
  1540  0EBD                     	;# 
  1541  0EBE                     	;# 
  1542  0EC3                     	;# 
  1543  0EC5                     	;# 
  1544  0EC6                     	;# 
  1545  0EC7                     	;# 
  1546  0EC8                     	;# 
  1547  0EC9                     	;# 
  1548  0ECA                     	;# 
  1549  0ECB                     	;# 
  1550  0ECC                     	;# 
  1551  0F10                     	;# 
  1552  0F11                     	;# 
  1553  0F12                     	;# 
  1554  0F13                     	;# 
  1555  0F14                     	;# 
  1556  0F15                     	;# 
  1557  0F16                     	;# 
  1558  0F17                     	;# 
  1559  0F18                     	;# 
  1560  0F19                     	;# 
  1561  0F1A                     	;# 
  1562  0F1B                     	;# 
  1563  0F1C                     	;# 
  1564  0F1D                     	;# 
  1565  0F1E                     	;# 
  1566  0F1F                     	;# 
  1567  0F20                     	;# 
  1568  0F21                     	;# 
  1569  0F22                     	;# 
  1570  0F23                     	;# 
  1571  0F24                     	;# 
  1572  0F25                     	;# 
  1573  0F26                     	;# 
  1574  0F27                     	;# 
  1575  0F38                     	;# 
  1576  0F39                     	;# 
  1577  0F3A                     	;# 
  1578  0F3B                     	;# 
  1579  0F3C                     	;# 
  1580  0F3D                     	;# 
  1581  0F3E                     	;# 
  1582  0F3F                     	;# 
  1583  0F40                     	;# 
  1584  0F41                     	;# 
  1585  0F43                     	;# 
  1586  0F44                     	;# 
  1587  0F45                     	;# 
  1588  0F46                     	;# 
  1589  0F47                     	;# 
  1590  0F48                     	;# 
  1591  0F49                     	;# 
  1592  0F4A                     	;# 
  1593  0F4B                     	;# 
  1594  0F4C                     	;# 
  1595  0F4E                     	;# 
  1596  0F4F                     	;# 
  1597  0F50                     	;# 
  1598  0F51                     	;# 
  1599  0F52                     	;# 
  1600  0F53                     	;# 
  1601  0F54                     	;# 
  1602  0F55                     	;# 
  1603  0F56                     	;# 
  1604  0F57                     	;# 
  1605  0F65                     	;# 
  1606  0F68                     	;# 
  1607  0F69                     	;# 
  1608  0F6A                     	;# 
  1609  0F6B                     	;# 
  1610  0FE4                     	;# 
  1611  0FE5                     	;# 
  1612  0FE6                     	;# 
  1613  0FE7                     	;# 
  1614  0FE8                     	;# 
  1615  0FE9                     	;# 
  1616  0FEA                     	;# 
  1617  0FEB                     	;# 
  1618  0FED                     	;# 
  1619  0FEE                     	;# 
  1620  0FEF                     	;# 
  1621  0000                     	;# 
  1622  0001                     	;# 
  1623  0002                     	;# 
  1624  0003                     	;# 
  1625  0004                     	;# 
  1626  0005                     	;# 
  1627  0006                     	;# 
  1628  0007                     	;# 
  1629  0008                     	;# 
  1630  0009                     	;# 
  1631  000A                     	;# 
  1632  000B                     	;# 
  1633  000C                     	;# 
  1634  000D                     	;# 
  1635  000E                     	;# 
  1636  0010                     	;# 
  1637  0011                     	;# 
  1638  0012                     	;# 
  1639  0013                     	;# 
  1640  0016                     	;# 
  1641  0017                     	;# 
  1642  0018                     	;# 
  1643  001C                     	;# 
  1644  001C                     	;# 
  1645  001D                     	;# 
  1646  001D                     	;# 
  1647  001E                     	;# 
  1648  001F                     	;# 
  1649  008C                     	;# 
  1650  008C                     	;# 
  1651  008D                     	;# 
  1652  008E                     	;# 
  1653  008E                     	;# 
  1654  008F                     	;# 
  1655  0090                     	;# 
  1656  0090                     	;# 
  1657  0091                     	;# 
  1658  0093                     	;# 
  1659  0094                     	;# 
  1660  0095                     	;# 
  1661  0096                     	;# 
  1662  0097                     	;# 
  1663  0098                     	;# 
  1664  0099                     	;# 
  1665  009A                     	;# 
  1666  009B                     	;# 
  1667  009C                     	;# 
  1668  009D                     	;# 
  1669  009E                     	;# 
  1670  010C                     	;# 
  1671  010D                     	;# 
  1672  010E                     	;# 
  1673  010E                     	;# 
  1674  010F                     	;# 
  1675  0110                     	;# 
  1676  0110                     	;# 
  1677  0111                     	;# 
  1678  0112                     	;# 
  1679  0112                     	;# 
  1680  0113                     	;# 
  1681  0114                     	;# 
  1682  0114                     	;# 
  1683  0115                     	;# 
  1684  0116                     	;# 
  1685  0116                     	;# 
  1686  0117                     	;# 
  1687  0119                     	;# 
  1688  0119                     	;# 
  1689  0119                     	;# 
  1690  011A                     	;# 
  1691  011A                     	;# 
  1692  011A                     	;# 
  1693  011B                     	;# 
  1694  011B                     	;# 
  1695  011B                     	;# 
  1696  011B                     	;# 
  1697  011B                     	;# 
  1698  011C                     	;# 
  1699  011C                     	;# 
  1700  011C                     	;# 
  1701  011D                     	;# 
  1702  011D                     	;# 
  1703  011D                     	;# 
  1704  011E                     	;# 
  1705  011E                     	;# 
  1706  011E                     	;# 
  1707  011F                     	;# 
  1708  011F                     	;# 
  1709  011F                     	;# 
  1710  011F                     	;# 
  1711  011F                     	;# 
  1712  018C                     	;# 
  1713  018D                     	;# 
  1714  018E                     	;# 
  1715  018F                     	;# 
  1716  0190                     	;# 
  1717  0191                     	;# 
  1718  0192                     	;# 
  1719  0196                     	;# 
  1720  0197                     	;# 
  1721  0198                     	;# 
  1722  0199                     	;# 
  1723  019A                     	;# 
  1724  019B                     	;# 
  1725  019C                     	;# 
  1726  020C                     	;# 
  1727  020C                     	;# 
  1728  020D                     	;# 
  1729  020E                     	;# 
  1730  020F                     	;# 
  1731  020F                     	;# 
  1732  0210                     	;# 
  1733  0210                     	;# 
  1734  0211                     	;# 
  1735  0211                     	;# 
  1736  0212                     	;# 
  1737  0212                     	;# 
  1738  0213                     	;# 
  1739  0214                     	;# 
  1740  0215                     	;# 
  1741  0215                     	;# 
  1742  0216                     	;# 
  1743  0216                     	;# 
  1744  0217                     	;# 
  1745  0217                     	;# 
  1746  0218                     	;# 
  1747  0218                     	;# 
  1748  0219                     	;# 
  1749  021A                     	;# 
  1750  021B                     	;# 
  1751  021B                     	;# 
  1752  021C                     	;# 
  1753  021C                     	;# 
  1754  021D                     	;# 
  1755  021D                     	;# 
  1756  021E                     	;# 
  1757  021F                     	;# 
  1758  028C                     	;# 
  1759  028C                     	;# 
  1760  028D                     	;# 
  1761  028D                     	;# 
  1762  028E                     	;# 
  1763  028F                     	;# 
  1764  0290                     	;# 
  1765  0290                     	;# 
  1766  0291                     	;# 
  1767  0292                     	;# 
  1768  0292                     	;# 
  1769  0293                     	;# 
  1770  0293                     	;# 
  1771  0294                     	;# 
  1772  0295                     	;# 
  1773  0296                     	;# 
  1774  0296                     	;# 
  1775  0297                     	;# 
  1776  0298                     	;# 
  1777  0298                     	;# 
  1778  0299                     	;# 
  1779  0299                     	;# 
  1780  029A                     	;# 
  1781  029B                     	;# 
  1782  029C                     	;# 
  1783  029C                     	;# 
  1784  029D                     	;# 
  1785  030C                     	;# 
  1786  030C                     	;# 
  1787  030D                     	;# 
  1788  030E                     	;# 
  1789  030F                     	;# 
  1790  0310                     	;# 
  1791  0310                     	;# 
  1792  0311                     	;# 
  1793  0312                     	;# 
  1794  0313                     	;# 
  1795  0314                     	;# 
  1796  0314                     	;# 
  1797  0315                     	;# 
  1798  0316                     	;# 
  1799  0317                     	;# 
  1800  0318                     	;# 
  1801  0318                     	;# 
  1802  0319                     	;# 
  1803  031A                     	;# 
  1804  031B                     	;# 
  1805  031C                     	;# 
  1806  031C                     	;# 
  1807  031D                     	;# 
  1808  031E                     	;# 
  1809  031F                     	;# 
  1810  038C                     	;# 
  1811  038D                     	;# 
  1812  038E                     	;# 
  1813  0390                     	;# 
  1814  0391                     	;# 
  1815  0392                     	;# 
  1816  040C                     	;# 
  1817  040D                     	;# 
  1818  040E                     	;# 
  1819  040F                     	;# 
  1820  0410                     	;# 
  1821  0411                     	;# 
  1822  0416                     	;# 
  1823  0416                     	;# 
  1824  0417                     	;# 
  1825  0418                     	;# 
  1826  0418                     	;# 
  1827  0419                     	;# 
  1828  041A                     	;# 
  1829  041A                     	;# 
  1830  041B                     	;# 
  1831  041C                     	;# 
  1832  041C                     	;# 
  1833  041D                     	;# 
  1834  041E                     	;# 
  1835  041F                     	;# 
  1836  048C                     	;# 
  1837  048C                     	;# 
  1838  048D                     	;# 
  1839  048E                     	;# 
  1840  048F                     	;# 
  1841  048F                     	;# 
  1842  0490                     	;# 
  1843  0491                     	;# 
  1844  0492                     	;# 
  1845  0492                     	;# 
  1846  0493                     	;# 
  1847  0494                     	;# 
  1848  0495                     	;# 
  1849  0495                     	;# 
  1850  0496                     	;# 
  1851  0497                     	;# 
  1852  0498                     	;# 
  1853  0499                     	;# 
  1854  049A                     	;# 
  1855  049B                     	;# 
  1856  049C                     	;# 
  1857  049D                     	;# 
  1858  050C                     	;# 
  1859  050C                     	;# 
  1860  050D                     	;# 
  1861  050E                     	;# 
  1862  050F                     	;# 
  1863  050F                     	;# 
  1864  0510                     	;# 
  1865  0511                     	;# 
  1866  0512                     	;# 
  1867  0512                     	;# 
  1868  0513                     	;# 
  1869  0514                     	;# 
  1870  0515                     	;# 
  1871  0515                     	;# 
  1872  0516                     	;# 
  1873  0517                     	;# 
  1874  0518                     	;# 
  1875  0519                     	;# 
  1876  051A                     	;# 
  1877  051B                     	;# 
  1878  051C                     	;# 
  1879  051D                     	;# 
  1880  058C                     	;# 
  1881  058C                     	;# 
  1882  058D                     	;# 
  1883  058E                     	;# 
  1884  058F                     	;# 
  1885  058F                     	;# 
  1886  0590                     	;# 
  1887  0591                     	;# 
  1888  0592                     	;# 
  1889  0593                     	;# 
  1890  060C                     	;# 
  1891  060D                     	;# 
  1892  060E                     	;# 
  1893  060F                     	;# 
  1894  0610                     	;# 
  1895  0611                     	;# 
  1896  0612                     	;# 
  1897  0613                     	;# 
  1898  0614                     	;# 
  1899  0616                     	;# 
  1900  0617                     	;# 
  1901  0618                     	;# 
  1902  0619                     	;# 
  1903  061A                     	;# 
  1904  061B                     	;# 
  1905  061C                     	;# 
  1906  061D                     	;# 
  1907  061E                     	;# 
  1908  068C                     	;# 
  1909  068D                     	;# 
  1910  068E                     	;# 
  1911  068F                     	;# 
  1912  0690                     	;# 
  1913  0691                     	;# 
  1914  0692                     	;# 
  1915  0693                     	;# 
  1916  0694                     	;# 
  1917  070C                     	;# 
  1918  070D                     	;# 
  1919  070E                     	;# 
  1920  070F                     	;# 
  1921  0710                     	;# 
  1922  0711                     	;# 
  1923  0712                     	;# 
  1924  0713                     	;# 
  1925  0714                     	;# 
  1926  0716                     	;# 
  1927  0717                     	;# 
  1928  0718                     	;# 
  1929  0719                     	;# 
  1930  071A                     	;# 
  1931  071B                     	;# 
  1932  071C                     	;# 
  1933  071D                     	;# 
  1934  071E                     	;# 
  1935  0796                     	;# 
  1936  0797                     	;# 
  1937  0798                     	;# 
  1938  0799                     	;# 
  1939  079A                     	;# 
  1940  079B                     	;# 
  1941  080C                     	;# 
  1942  080D                     	;# 
  1943  080E                     	;# 
  1944  080F                     	;# 
  1945  0810                     	;# 
  1946  0811                     	;# 
  1947  0812                     	;# 
  1948  0813                     	;# 
  1949  0814                     	;# 
  1950  081A                     	;# 
  1951  081B                     	;# 
  1952  081C                     	;# 
  1953  081D                     	;# 
  1954  081E                     	;# 
  1955  081F                     	;# 
  1956  088C                     	;# 
  1957  088D                     	;# 
  1958  088E                     	;# 
  1959  088F                     	;# 
  1960  0890                     	;# 
  1961  0891                     	;# 
  1962  0892                     	;# 
  1963  0893                     	;# 
  1964  0895                     	;# 
  1965  0896                     	;# 
  1966  0897                     	;# 
  1967  0898                     	;# 
  1968  0899                     	;# 
  1969  089A                     	;# 
  1970  089B                     	;# 
  1971  090C                     	;# 
  1972  090E                     	;# 
  1973  090F                     	;# 
  1974  091F                     	;# 
  1975  091F                     	;# 
  1976  098F                     	;# 
  1977  098F                     	;# 
  1978  0990                     	;# 
  1979  0991                     	;# 
  1980  0992                     	;# 
  1981  0993                     	;# 
  1982  0994                     	;# 
  1983  0995                     	;# 
  1984  0996                     	;# 
  1985  0997                     	;# 
  1986  0E0F                     	;# 
  1987  0E10                     	;# 
  1988  0E11                     	;# 
  1989  0E12                     	;# 
  1990  0E13                     	;# 
  1991  0E14                     	;# 
  1992  0E15                     	;# 
  1993  0E16                     	;# 
  1994  0E17                     	;# 
  1995  0E18                     	;# 
  1996  0E19                     	;# 
  1997  0E1A                     	;# 
  1998  0E1B                     	;# 
  1999  0E1C                     	;# 
  2000  0E1D                     	;# 
  2001  0E1E                     	;# 
  2002  0E1F                     	;# 
  2003  0E20                     	;# 
  2004  0E21                     	;# 
  2005  0E22                     	;# 
  2006  0E23                     	;# 
  2007  0E24                     	;# 
  2008  0E25                     	;# 
  2009  0E26                     	;# 
  2010  0E27                     	;# 
  2011  0E28                     	;# 
  2012  0E29                     	;# 
  2013  0E2A                     	;# 
  2014  0E2B                     	;# 
  2015  0E2C                     	;# 
  2016  0E2D                     	;# 
  2017  0E2E                     	;# 
  2018  0E2F                     	;# 
  2019  0E30                     	;# 
  2020  0E31                     	;# 
  2021  0E32                     	;# 
  2022  0E33                     	;# 
  2023  0E34                     	;# 
  2024  0E35                     	;# 
  2025  0E36                     	;# 
  2026  0E37                     	;# 
  2027  0E8F                     	;# 
  2028  0E90                     	;# 
  2029  0E91                     	;# 
  2030  0E92                     	;# 
  2031  0E93                     	;# 
  2032  0E94                     	;# 
  2033  0E95                     	;# 
  2034  0E96                     	;# 
  2035  0E97                     	;# 
  2036  0E9C                     	;# 
  2037  0E9D                     	;# 
  2038  0E9E                     	;# 
  2039  0EA1                     	;# 
  2040  0EA2                     	;# 
  2041  0EA3                     	;# 
  2042  0EA4                     	;# 
  2043  0EA5                     	;# 
  2044  0EA9                     	;# 
  2045  0EAA                     	;# 
  2046  0EAB                     	;# 
  2047  0EAC                     	;# 
  2048  0EB1                     	;# 
  2049  0EB2                     	;# 
  2050  0EB3                     	;# 
  2051  0EB8                     	;# 
  2052  0EB9                     	;# 
  2053  0EBA                     	;# 
  2054  0EBB                     	;# 
  2055  0EBC                     	;# 
  2056  0EBD                     	;# 
  2057  0EBE                     	;# 
  2058  0EC3                     	;# 
  2059  0EC5                     	;# 
  2060  0EC6                     	;# 
  2061  0EC7                     	;# 
  2062  0EC8                     	;# 
  2063  0EC9                     	;# 
  2064  0ECA                     	;# 
  2065  0ECB                     	;# 
  2066  0ECC                     	;# 
  2067  0F10                     	;# 
  2068  0F11                     	;# 
  2069  0F12                     	;# 
  2070  0F13                     	;# 
  2071  0F14                     	;# 
  2072  0F15                     	;# 
  2073  0F16                     	;# 
  2074  0F17                     	;# 
  2075  0F18                     	;# 
  2076  0F19                     	;# 
  2077  0F1A                     	;# 
  2078  0F1B                     	;# 
  2079  0F1C                     	;# 
  2080  0F1D                     	;# 
  2081  0F1E                     	;# 
  2082  0F1F                     	;# 
  2083  0F20                     	;# 
  2084  0F21                     	;# 
  2085  0F22                     	;# 
  2086  0F23                     	;# 
  2087  0F24                     	;# 
  2088  0F25                     	;# 
  2089  0F26                     	;# 
  2090  0F27                     	;# 
  2091  0F38                     	;# 
  2092  0F39                     	;# 
  2093  0F3A                     	;# 
  2094  0F3B                     	;# 
  2095  0F3C                     	;# 
  2096  0F3D                     	;# 
  2097  0F3E                     	;# 
  2098  0F3F                     	;# 
  2099  0F40                     	;# 
  2100  0F41                     	;# 
  2101  0F43                     	;# 
  2102  0F44                     	;# 
  2103  0F45                     	;# 
  2104  0F46                     	;# 
  2105  0F47                     	;# 
  2106  0F48                     	;# 
  2107  0F49                     	;# 
  2108  0F4A                     	;# 
  2109  0F4B                     	;# 
  2110  0F4C                     	;# 
  2111  0F4E                     	;# 
  2112  0F4F                     	;# 
  2113  0F50                     	;# 
  2114  0F51                     	;# 
  2115  0F52                     	;# 
  2116  0F53                     	;# 
  2117  0F54                     	;# 
  2118  0F55                     	;# 
  2119  0F56                     	;# 
  2120  0F57                     	;# 
  2121  0F65                     	;# 
  2122  0F68                     	;# 
  2123  0F69                     	;# 
  2124  0F6A                     	;# 
  2125  0F6B                     	;# 
  2126  0FE4                     	;# 
  2127  0FE5                     	;# 
  2128  0FE6                     	;# 
  2129  0FE7                     	;# 
  2130  0FE8                     	;# 
  2131  0FE9                     	;# 
  2132  0FEA                     	;# 
  2133  0FEB                     	;# 
  2134  0FED                     	;# 
  2135  0FEE                     	;# 
  2136  0FEF                     	;# 
  2137  0000                     	;# 
  2138  0001                     	;# 
  2139  0002                     	;# 
  2140  0003                     	;# 
  2141  0004                     	;# 
  2142  0005                     	;# 
  2143  0006                     	;# 
  2144  0007                     	;# 
  2145  0008                     	;# 
  2146  0009                     	;# 
  2147  000A                     	;# 
  2148  000B                     	;# 
  2149  000C                     	;# 
  2150  000D                     	;# 
  2151  000E                     	;# 
  2152  0010                     	;# 
  2153  0011                     	;# 
  2154  0012                     	;# 
  2155  0013                     	;# 
  2156  0016                     	;# 
  2157  0017                     	;# 
  2158  0018                     	;# 
  2159  001C                     	;# 
  2160  001C                     	;# 
  2161  001D                     	;# 
  2162  001D                     	;# 
  2163  001E                     	;# 
  2164  001F                     	;# 
  2165  008C                     	;# 
  2166  008C                     	;# 
  2167  008D                     	;# 
  2168  008E                     	;# 
  2169  008E                     	;# 
  2170  008F                     	;# 
  2171  0090                     	;# 
  2172  0090                     	;# 
  2173  0091                     	;# 
  2174  0093                     	;# 
  2175  0094                     	;# 
  2176  0095                     	;# 
  2177  0096                     	;# 
  2178  0097                     	;# 
  2179  0098                     	;# 
  2180  0099                     	;# 
  2181  009A                     	;# 
  2182  009B                     	;# 
  2183  009C                     	;# 
  2184  009D                     	;# 
  2185  009E                     	;# 
  2186  010C                     	;# 
  2187  010D                     	;# 
  2188  010E                     	;# 
  2189  010E                     	;# 
  2190  010F                     	;# 
  2191  0110                     	;# 
  2192  0110                     	;# 
  2193  0111                     	;# 
  2194  0112                     	;# 
  2195  0112                     	;# 
  2196  0113                     	;# 
  2197  0114                     	;# 
  2198  0114                     	;# 
  2199  0115                     	;# 
  2200  0116                     	;# 
  2201  0116                     	;# 
  2202  0117                     	;# 
  2203  0119                     	;# 
  2204  0119                     	;# 
  2205  0119                     	;# 
  2206  011A                     	;# 
  2207  011A                     	;# 
  2208  011A                     	;# 
  2209  011B                     	;# 
  2210  011B                     	;# 
  2211  011B                     	;# 
  2212  011B                     	;# 
  2213  011B                     	;# 
  2214  011C                     	;# 
  2215  011C                     	;# 
  2216  011C                     	;# 
  2217  011D                     	;# 
  2218  011D                     	;# 
  2219  011D                     	;# 
  2220  011E                     	;# 
  2221  011E                     	;# 
  2222  011E                     	;# 
  2223  011F                     	;# 
  2224  011F                     	;# 
  2225  011F                     	;# 
  2226  011F                     	;# 
  2227  011F                     	;# 
  2228  018C                     	;# 
  2229  018D                     	;# 
  2230  018E                     	;# 
  2231  018F                     	;# 
  2232  0190                     	;# 
  2233  0191                     	;# 
  2234  0192                     	;# 
  2235  0196                     	;# 
  2236  0197                     	;# 
  2237  0198                     	;# 
  2238  0199                     	;# 
  2239  019A                     	;# 
  2240  019B                     	;# 
  2241  019C                     	;# 
  2242  020C                     	;# 
  2243  020C                     	;# 
  2244  020D                     	;# 
  2245  020E                     	;# 
  2246  020F                     	;# 
  2247  020F                     	;# 
  2248  0210                     	;# 
  2249  0210                     	;# 
  2250  0211                     	;# 
  2251  0211                     	;# 
  2252  0212                     	;# 
  2253  0212                     	;# 
  2254  0213                     	;# 
  2255  0214                     	;# 
  2256  0215                     	;# 
  2257  0215                     	;# 
  2258  0216                     	;# 
  2259  0216                     	;# 
  2260  0217                     	;# 
  2261  0217                     	;# 
  2262  0218                     	;# 
  2263  0218                     	;# 
  2264  0219                     	;# 
  2265  021A                     	;# 
  2266  021B                     	;# 
  2267  021B                     	;# 
  2268  021C                     	;# 
  2269  021C                     	;# 
  2270  021D                     	;# 
  2271  021D                     	;# 
  2272  021E                     	;# 
  2273  021F                     	;# 
  2274  028C                     	;# 
  2275  028C                     	;# 
  2276  028D                     	;# 
  2277  028D                     	;# 
  2278  028E                     	;# 
  2279  028F                     	;# 
  2280  0290                     	;# 
  2281  0290                     	;# 
  2282  0291                     	;# 
  2283  0292                     	;# 
  2284  0292                     	;# 
  2285  0293                     	;# 
  2286  0293                     	;# 
  2287  0294                     	;# 
  2288  0295                     	;# 
  2289  0296                     	;# 
  2290  0296                     	;# 
  2291  0297                     	;# 
  2292  0298                     	;# 
  2293  0298                     	;# 
  2294  0299                     	;# 
  2295  0299                     	;# 
  2296  029A                     	;# 
  2297  029B                     	;# 
  2298  029C                     	;# 
  2299  029C                     	;# 
  2300  029D                     	;# 
  2301  030C                     	;# 
  2302  030C                     	;# 
  2303  030D                     	;# 
  2304  030E                     	;# 
  2305  030F                     	;# 
  2306  0310                     	;# 
  2307  0310                     	;# 
  2308  0311                     	;# 
  2309  0312                     	;# 
  2310  0313                     	;# 
  2311  0314                     	;# 
  2312  0314                     	;# 
  2313  0315                     	;# 
  2314  0316                     	;# 
  2315  0317                     	;# 
  2316  0318                     	;# 
  2317  0318                     	;# 
  2318  0319                     	;# 
  2319  031A                     	;# 
  2320  031B                     	;# 
  2321  031C                     	;# 
  2322  031C                     	;# 
  2323  031D                     	;# 
  2324  031E                     	;# 
  2325  031F                     	;# 
  2326  038C                     	;# 
  2327  038D                     	;# 
  2328  038E                     	;# 
  2329  0390                     	;# 
  2330  0391                     	;# 
  2331  0392                     	;# 
  2332  040C                     	;# 
  2333  040D                     	;# 
  2334  040E                     	;# 
  2335  040F                     	;# 
  2336  0410                     	;# 
  2337  0411                     	;# 
  2338  0416                     	;# 
  2339  0416                     	;# 
  2340  0417                     	;# 
  2341  0418                     	;# 
  2342  0418                     	;# 
  2343  0419                     	;# 
  2344  041A                     	;# 
  2345  041A                     	;# 
  2346  041B                     	;# 
  2347  041C                     	;# 
  2348  041C                     	;# 
  2349  041D                     	;# 
  2350  041E                     	;# 
  2351  041F                     	;# 
  2352  048C                     	;# 
  2353  048C                     	;# 
  2354  048D                     	;# 
  2355  048E                     	;# 
  2356  048F                     	;# 
  2357  048F                     	;# 
  2358  0490                     	;# 
  2359  0491                     	;# 
  2360  0492                     	;# 
  2361  0492                     	;# 
  2362  0493                     	;# 
  2363  0494                     	;# 
  2364  0495                     	;# 
  2365  0495                     	;# 
  2366  0496                     	;# 
  2367  0497                     	;# 
  2368  0498                     	;# 
  2369  0499                     	;# 
  2370  049A                     	;# 
  2371  049B                     	;# 
  2372  049C                     	;# 
  2373  049D                     	;# 
  2374  050C                     	;# 
  2375  050C                     	;# 
  2376  050D                     	;# 
  2377  050E                     	;# 
  2378  050F                     	;# 
  2379  050F                     	;# 
  2380  0510                     	;# 
  2381  0511                     	;# 
  2382  0512                     	;# 
  2383  0512                     	;# 
  2384  0513                     	;# 
  2385  0514                     	;# 
  2386  0515                     	;# 
  2387  0515                     	;# 
  2388  0516                     	;# 
  2389  0517                     	;# 
  2390  0518                     	;# 
  2391  0519                     	;# 
  2392  051A                     	;# 
  2393  051B                     	;# 
  2394  051C                     	;# 
  2395  051D                     	;# 
  2396  058C                     	;# 
  2397  058C                     	;# 
  2398  058D                     	;# 
  2399  058E                     	;# 
  2400  058F                     	;# 
  2401  058F                     	;# 
  2402  0590                     	;# 
  2403  0591                     	;# 
  2404  0592                     	;# 
  2405  0593                     	;# 
  2406  060C                     	;# 
  2407  060D                     	;# 
  2408  060E                     	;# 
  2409  060F                     	;# 
  2410  0610                     	;# 
  2411  0611                     	;# 
  2412  0612                     	;# 
  2413  0613                     	;# 
  2414  0614                     	;# 
  2415  0616                     	;# 
  2416  0617                     	;# 
  2417  0618                     	;# 
  2418  0619                     	;# 
  2419  061A                     	;# 
  2420  061B                     	;# 
  2421  061C                     	;# 
  2422  061D                     	;# 
  2423  061E                     	;# 
  2424  068C                     	;# 
  2425  068D                     	;# 
  2426  068E                     	;# 
  2427  068F                     	;# 
  2428  0690                     	;# 
  2429  0691                     	;# 
  2430  0692                     	;# 
  2431  0693                     	;# 
  2432  0694                     	;# 
  2433  070C                     	;# 
  2434  070D                     	;# 
  2435  070E                     	;# 
  2436  070F                     	;# 
  2437  0710                     	;# 
  2438  0711                     	;# 
  2439  0712                     	;# 
  2440  0713                     	;# 
  2441  0714                     	;# 
  2442  0716                     	;# 
  2443  0717                     	;# 
  2444  0718                     	;# 
  2445  0719                     	;# 
  2446  071A                     	;# 
  2447  071B                     	;# 
  2448  071C                     	;# 
  2449  071D                     	;# 
  2450  071E                     	;# 
  2451  0796                     	;# 
  2452  0797                     	;# 
  2453  0798                     	;# 
  2454  0799                     	;# 
  2455  079A                     	;# 
  2456  079B                     	;# 
  2457  080C                     	;# 
  2458  080D                     	;# 
  2459  080E                     	;# 
  2460  080F                     	;# 
  2461  0810                     	;# 
  2462  0811                     	;# 
  2463  0812                     	;# 
  2464  0813                     	;# 
  2465  0814                     	;# 
  2466  081A                     	;# 
  2467  081B                     	;# 
  2468  081C                     	;# 
  2469  081D                     	;# 
  2470  081E                     	;# 
  2471  081F                     	;# 
  2472  088C                     	;# 
  2473  088D                     	;# 
  2474  088E                     	;# 
  2475  088F                     	;# 
  2476  0890                     	;# 
  2477  0891                     	;# 
  2478  0892                     	;# 
  2479  0893                     	;# 
  2480  0895                     	;# 
  2481  0896                     	;# 
  2482  0897                     	;# 
  2483  0898                     	;# 
  2484  0899                     	;# 
  2485  089A                     	;# 
  2486  089B                     	;# 
  2487  090C                     	;# 
  2488  090E                     	;# 
  2489  090F                     	;# 
  2490  091F                     	;# 
  2491  091F                     	;# 
  2492  098F                     	;# 
  2493  098F                     	;# 
  2494  0990                     	;# 
  2495  0991                     	;# 
  2496  0992                     	;# 
  2497  0993                     	;# 
  2498  0994                     	;# 
  2499  0995                     	;# 
  2500  0996                     	;# 
  2501  0997                     	;# 
  2502  0E0F                     	;# 
  2503  0E10                     	;# 
  2504  0E11                     	;# 
  2505  0E12                     	;# 
  2506  0E13                     	;# 
  2507  0E14                     	;# 
  2508  0E15                     	;# 
  2509  0E16                     	;# 
  2510  0E17                     	;# 
  2511  0E18                     	;# 
  2512  0E19                     	;# 
  2513  0E1A                     	;# 
  2514  0E1B                     	;# 
  2515  0E1C                     	;# 
  2516  0E1D                     	;# 
  2517  0E1E                     	;# 
  2518  0E1F                     	;# 
  2519  0E20                     	;# 
  2520  0E21                     	;# 
  2521  0E22                     	;# 
  2522  0E23                     	;# 
  2523  0E24                     	;# 
  2524  0E25                     	;# 
  2525  0E26                     	;# 
  2526  0E27                     	;# 
  2527  0E28                     	;# 
  2528  0E29                     	;# 
  2529  0E2A                     	;# 
  2530  0E2B                     	;# 
  2531  0E2C                     	;# 
  2532  0E2D                     	;# 
  2533  0E2E                     	;# 
  2534  0E2F                     	;# 
  2535  0E30                     	;# 
  2536  0E31                     	;# 
  2537  0E32                     	;# 
  2538  0E33                     	;# 
  2539  0E34                     	;# 
  2540  0E35                     	;# 
  2541  0E36                     	;# 
  2542  0E37                     	;# 
  2543  0E8F                     	;# 
  2544  0E90                     	;# 
  2545  0E91                     	;# 
  2546  0E92                     	;# 
  2547  0E93                     	;# 
  2548  0E94                     	;# 
  2549  0E95                     	;# 
  2550  0E96                     	;# 
  2551  0E97                     	;# 
  2552  0E9C                     	;# 
  2553  0E9D                     	;# 
  2554  0E9E                     	;# 
  2555  0EA1                     	;# 
  2556  0EA2                     	;# 
  2557  0EA3                     	;# 
  2558  0EA4                     	;# 
  2559  0EA5                     	;# 
  2560  0EA9                     	;# 
  2561  0EAA                     	;# 
  2562  0EAB                     	;# 
  2563  0EAC                     	;# 
  2564  0EB1                     	;# 
  2565  0EB2                     	;# 
  2566  0EB3                     	;# 
  2567  0EB8                     	;# 
  2568  0EB9                     	;# 
  2569  0EBA                     	;# 
  2570  0EBB                     	;# 
  2571  0EBC                     	;# 
  2572  0EBD                     	;# 
  2573  0EBE                     	;# 
  2574  0EC3                     	;# 
  2575  0EC5                     	;# 
  2576  0EC6                     	;# 
  2577  0EC7                     	;# 
  2578  0EC8                     	;# 
  2579  0EC9                     	;# 
  2580  0ECA                     	;# 
  2581  0ECB                     	;# 
  2582  0ECC                     	;# 
  2583  0F10                     	;# 
  2584  0F11                     	;# 
  2585  0F12                     	;# 
  2586  0F13                     	;# 
  2587  0F14                     	;# 
  2588  0F15                     	;# 
  2589  0F16                     	;# 
  2590  0F17                     	;# 
  2591  0F18                     	;# 
  2592  0F19                     	;# 
  2593  0F1A                     	;# 
  2594  0F1B                     	;# 
  2595  0F1C                     	;# 
  2596  0F1D                     	;# 
  2597  0F1E                     	;# 
  2598  0F1F                     	;# 
  2599  0F20                     	;# 
  2600  0F21                     	;# 
  2601  0F22                     	;# 
  2602  0F23                     	;# 
  2603  0F24                     	;# 
  2604  0F25                     	;# 
  2605  0F26                     	;# 
  2606  0F27                     	;# 
  2607  0F38                     	;# 
  2608  0F39                     	;# 
  2609  0F3A                     	;# 
  2610  0F3B                     	;# 
  2611  0F3C                     	;# 
  2612  0F3D                     	;# 
  2613  0F3E                     	;# 
  2614  0F3F                     	;# 
  2615  0F40                     	;# 
  2616  0F41                     	;# 
  2617  0F43                     	;# 
  2618  0F44                     	;# 
  2619  0F45                     	;# 
  2620  0F46                     	;# 
  2621  0F47                     	;# 
  2622  0F48                     	;# 
  2623  0F49                     	;# 
  2624  0F4A                     	;# 
  2625  0F4B                     	;# 
  2626  0F4C                     	;# 
  2627  0F4E                     	;# 
  2628  0F4F                     	;# 
  2629  0F50                     	;# 
  2630  0F51                     	;# 
  2631  0F52                     	;# 
  2632  0F53                     	;# 
  2633  0F54                     	;# 
  2634  0F55                     	;# 
  2635  0F56                     	;# 
  2636  0F57                     	;# 
  2637  0F65                     	;# 
  2638  0F68                     	;# 
  2639  0F69                     	;# 
  2640  0F6A                     	;# 
  2641  0F6B                     	;# 
  2642  0FE4                     	;# 
  2643  0FE5                     	;# 
  2644  0FE6                     	;# 
  2645  0FE7                     	;# 
  2646  0FE8                     	;# 
  2647  0FE9                     	;# 
  2648  0FEA                     	;# 
  2649  0FEB                     	;# 
  2650  0FED                     	;# 
  2651  0FEE                     	;# 
  2652  0FEF                     	;# 
  2653  0000                     	;# 
  2654  0001                     	;# 
  2655  0002                     	;# 
  2656  0003                     	;# 
  2657  0004                     	;# 
  2658  0005                     	;# 
  2659  0006                     	;# 
  2660  0007                     	;# 
  2661  0008                     	;# 
  2662  0009                     	;# 
  2663  000A                     	;# 
  2664  000B                     	;# 
  2665  000C                     	;# 
  2666  000D                     	;# 
  2667  000E                     	;# 
  2668  0010                     	;# 
  2669  0011                     	;# 
  2670  0012                     	;# 
  2671  0013                     	;# 
  2672  0016                     	;# 
  2673  0017                     	;# 
  2674  0018                     	;# 
  2675  001C                     	;# 
  2676  001C                     	;# 
  2677  001D                     	;# 
  2678  001D                     	;# 
  2679  001E                     	;# 
  2680  001F                     	;# 
  2681  008C                     	;# 
  2682  008C                     	;# 
  2683  008D                     	;# 
  2684  008E                     	;# 
  2685  008E                     	;# 
  2686  008F                     	;# 
  2687  0090                     	;# 
  2688  0090                     	;# 
  2689  0091                     	;# 
  2690  0093                     	;# 
  2691  0094                     	;# 
  2692  0095                     	;# 
  2693  0096                     	;# 
  2694  0097                     	;# 
  2695  0098                     	;# 
  2696  0099                     	;# 
  2697  009A                     	;# 
  2698  009B                     	;# 
  2699  009C                     	;# 
  2700  009D                     	;# 
  2701  009E                     	;# 
  2702  010C                     	;# 
  2703  010D                     	;# 
  2704  010E                     	;# 
  2705  010E                     	;# 
  2706  010F                     	;# 
  2707  0110                     	;# 
  2708  0110                     	;# 
  2709  0111                     	;# 
  2710  0112                     	;# 
  2711  0112                     	;# 
  2712  0113                     	;# 
  2713  0114                     	;# 
  2714  0114                     	;# 
  2715  0115                     	;# 
  2716  0116                     	;# 
  2717  0116                     	;# 
  2718  0117                     	;# 
  2719  0119                     	;# 
  2720  0119                     	;# 
  2721  0119                     	;# 
  2722  011A                     	;# 
  2723  011A                     	;# 
  2724  011A                     	;# 
  2725  011B                     	;# 
  2726  011B                     	;# 
  2727  011B                     	;# 
  2728  011B                     	;# 
  2729  011B                     	;# 
  2730  011C                     	;# 
  2731  011C                     	;# 
  2732  011C                     	;# 
  2733  011D                     	;# 
  2734  011D                     	;# 
  2735  011D                     	;# 
  2736  011E                     	;# 
  2737  011E                     	;# 
  2738  011E                     	;# 
  2739  011F                     	;# 
  2740  011F                     	;# 
  2741  011F                     	;# 
  2742  011F                     	;# 
  2743  011F                     	;# 
  2744  018C                     	;# 
  2745  018D                     	;# 
  2746  018E                     	;# 
  2747  018F                     	;# 
  2748  0190                     	;# 
  2749  0191                     	;# 
  2750  0192                     	;# 
  2751  0196                     	;# 
  2752  0197                     	;# 
  2753  0198                     	;# 
  2754  0199                     	;# 
  2755  019A                     	;# 
  2756  019B                     	;# 
  2757  019C                     	;# 
  2758  020C                     	;# 
  2759  020C                     	;# 
  2760  020D                     	;# 
  2761  020E                     	;# 
  2762  020F                     	;# 
  2763  020F                     	;# 
  2764  0210                     	;# 
  2765  0210                     	;# 
  2766  0211                     	;# 
  2767  0211                     	;# 
  2768  0212                     	;# 
  2769  0212                     	;# 
  2770  0213                     	;# 
  2771  0214                     	;# 
  2772  0215                     	;# 
  2773  0215                     	;# 
  2774  0216                     	;# 
  2775  0216                     	;# 
  2776  0217                     	;# 
  2777  0217                     	;# 
  2778  0218                     	;# 
  2779  0218                     	;# 
  2780  0219                     	;# 
  2781  021A                     	;# 
  2782  021B                     	;# 
  2783  021B                     	;# 
  2784  021C                     	;# 
  2785  021C                     	;# 
  2786  021D                     	;# 
  2787  021D                     	;# 
  2788  021E                     	;# 
  2789  021F                     	;# 
  2790  028C                     	;# 
  2791  028C                     	;# 
  2792  028D                     	;# 
  2793  028D                     	;# 
  2794  028E                     	;# 
  2795  028F                     	;# 
  2796  0290                     	;# 
  2797  0290                     	;# 
  2798  0291                     	;# 
  2799  0292                     	;# 
  2800  0292                     	;# 
  2801  0293                     	;# 
  2802  0293                     	;# 
  2803  0294                     	;# 
  2804  0295                     	;# 
  2805  0296                     	;# 
  2806  0296                     	;# 
  2807  0297                     	;# 
  2808  0298                     	;# 
  2809  0298                     	;# 
  2810  0299                     	;# 
  2811  0299                     	;# 
  2812  029A                     	;# 
  2813  029B                     	;# 
  2814  029C                     	;# 
  2815  029C                     	;# 
  2816  029D                     	;# 
  2817  030C                     	;# 
  2818  030C                     	;# 
  2819  030D                     	;# 
  2820  030E                     	;# 
  2821  030F                     	;# 
  2822  0310                     	;# 
  2823  0310                     	;# 
  2824  0311                     	;# 
  2825  0312                     	;# 
  2826  0313                     	;# 
  2827  0314                     	;# 
  2828  0314                     	;# 
  2829  0315                     	;# 
  2830  0316                     	;# 
  2831  0317                     	;# 
  2832  0318                     	;# 
  2833  0318                     	;# 
  2834  0319                     	;# 
  2835  031A                     	;# 
  2836  031B                     	;# 
  2837  031C                     	;# 
  2838  031C                     	;# 
  2839  031D                     	;# 
  2840  031E                     	;# 
  2841  031F                     	;# 
  2842  038C                     	;# 
  2843  038D                     	;# 
  2844  038E                     	;# 
  2845  0390                     	;# 
  2846  0391                     	;# 
  2847  0392                     	;# 
  2848  040C                     	;# 
  2849  040D                     	;# 
  2850  040E                     	;# 
  2851  040F                     	;# 
  2852  0410                     	;# 
  2853  0411                     	;# 
  2854  0416                     	;# 
  2855  0416                     	;# 
  2856  0417                     	;# 
  2857  0418                     	;# 
  2858  0418                     	;# 
  2859  0419                     	;# 
  2860  041A                     	;# 
  2861  041A                     	;# 
  2862  041B                     	;# 
  2863  041C                     	;# 
  2864  041C                     	;# 
  2865  041D                     	;# 
  2866  041E                     	;# 
  2867  041F                     	;# 
  2868  048C                     	;# 
  2869  048C                     	;# 
  2870  048D                     	;# 
  2871  048E                     	;# 
  2872  048F                     	;# 
  2873  048F                     	;# 
  2874  0490                     	;# 
  2875  0491                     	;# 
  2876  0492                     	;# 
  2877  0492                     	;# 
  2878  0493                     	;# 
  2879  0494                     	;# 
  2880  0495                     	;# 
  2881  0495                     	;# 
  2882  0496                     	;# 
  2883  0497                     	;# 
  2884  0498                     	;# 
  2885  0499                     	;# 
  2886  049A                     	;# 
  2887  049B                     	;# 
  2888  049C                     	;# 
  2889  049D                     	;# 
  2890  050C                     	;# 
  2891  050C                     	;# 
  2892  050D                     	;# 
  2893  050E                     	;# 
  2894  050F                     	;# 
  2895  050F                     	;# 
  2896  0510                     	;# 
  2897  0511                     	;# 
  2898  0512                     	;# 
  2899  0512                     	;# 
  2900  0513                     	;# 
  2901  0514                     	;# 
  2902  0515                     	;# 
  2903  0515                     	;# 
  2904  0516                     	;# 
  2905  0517                     	;# 
  2906  0518                     	;# 
  2907  0519                     	;# 
  2908  051A                     	;# 
  2909  051B                     	;# 
  2910  051C                     	;# 
  2911  051D                     	;# 
  2912  058C                     	;# 
  2913  058C                     	;# 
  2914  058D                     	;# 
  2915  058E                     	;# 
  2916  058F                     	;# 
  2917  058F                     	;# 
  2918  0590                     	;# 
  2919  0591                     	;# 
  2920  0592                     	;# 
  2921  0593                     	;# 
  2922  060C                     	;# 
  2923  060D                     	;# 
  2924  060E                     	;# 
  2925  060F                     	;# 
  2926  0610                     	;# 
  2927  0611                     	;# 
  2928  0612                     	;# 
  2929  0613                     	;# 
  2930  0614                     	;# 
  2931  0616                     	;# 
  2932  0617                     	;# 
  2933  0618                     	;# 
  2934  0619                     	;# 
  2935  061A                     	;# 
  2936  061B                     	;# 
  2937  061C                     	;# 
  2938  061D                     	;# 
  2939  061E                     	;# 
  2940  068C                     	;# 
  2941  068D                     	;# 
  2942  068E                     	;# 
  2943  068F                     	;# 
  2944  0690                     	;# 
  2945  0691                     	;# 
  2946  0692                     	;# 
  2947  0693                     	;# 
  2948  0694                     	;# 
  2949  070C                     	;# 
  2950  070D                     	;# 
  2951  070E                     	;# 
  2952  070F                     	;# 
  2953  0710                     	;# 
  2954  0711                     	;# 
  2955  0712                     	;# 
  2956  0713                     	;# 
  2957  0714                     	;# 
  2958  0716                     	;# 
  2959  0717                     	;# 
  2960  0718                     	;# 
  2961  0719                     	;# 
  2962  071A                     	;# 
  2963  071B                     	;# 
  2964  071C                     	;# 
  2965  071D                     	;# 
  2966  071E                     	;# 
  2967  0796                     	;# 
  2968  0797                     	;# 
  2969  0798                     	;# 
  2970  0799                     	;# 
  2971  079A                     	;# 
  2972  079B                     	;# 
  2973  080C                     	;# 
  2974  080D                     	;# 
  2975  080E                     	;# 
  2976  080F                     	;# 
  2977  0810                     	;# 
  2978  0811                     	;# 
  2979  0812                     	;# 
  2980  0813                     	;# 
  2981  0814                     	;# 
  2982  081A                     	;# 
  2983  081B                     	;# 
  2984  081C                     	;# 
  2985  081D                     	;# 
  2986  081E                     	;# 
  2987  081F                     	;# 
  2988  088C                     	;# 
  2989  088D                     	;# 
  2990  088E                     	;# 
  2991  088F                     	;# 
  2992  0890                     	;# 
  2993  0891                     	;# 
  2994  0892                     	;# 
  2995  0893                     	;# 
  2996  0895                     	;# 
  2997  0896                     	;# 
  2998  0897                     	;# 
  2999  0898                     	;# 
  3000  0899                     	;# 
  3001  089A                     	;# 
  3002  089B                     	;# 
  3003  090C                     	;# 
  3004  090E                     	;# 
  3005  090F                     	;# 
  3006  091F                     	;# 
  3007  091F                     	;# 
  3008  098F                     	;# 
  3009  098F                     	;# 
  3010  0990                     	;# 
  3011  0991                     	;# 
  3012  0992                     	;# 
  3013  0993                     	;# 
  3014  0994                     	;# 
  3015  0995                     	;# 
  3016  0996                     	;# 
  3017  0997                     	;# 
  3018  0E0F                     	;# 
  3019  0E10                     	;# 
  3020  0E11                     	;# 
  3021  0E12                     	;# 
  3022  0E13                     	;# 
  3023  0E14                     	;# 
  3024  0E15                     	;# 
  3025  0E16                     	;# 
  3026  0E17                     	;# 
  3027  0E18                     	;# 
  3028  0E19                     	;# 
  3029  0E1A                     	;# 
  3030  0E1B                     	;# 
  3031  0E1C                     	;# 
  3032  0E1D                     	;# 
  3033  0E1E                     	;# 
  3034  0E1F                     	;# 
  3035  0E20                     	;# 
  3036  0E21                     	;# 
  3037  0E22                     	;# 
  3038  0E23                     	;# 
  3039  0E24                     	;# 
  3040  0E25                     	;# 
  3041  0E26                     	;# 
  3042  0E27                     	;# 
  3043  0E28                     	;# 
  3044  0E29                     	;# 
  3045  0E2A                     	;# 
  3046  0E2B                     	;# 
  3047  0E2C                     	;# 
  3048  0E2D                     	;# 
  3049  0E2E                     	;# 
  3050  0E2F                     	;# 
  3051  0E30                     	;# 
  3052  0E31                     	;# 
  3053  0E32                     	;# 
  3054  0E33                     	;# 
  3055  0E34                     	;# 
  3056  0E35                     	;# 
  3057  0E36                     	;# 
  3058  0E37                     	;# 
  3059  0E8F                     	;# 
  3060  0E90                     	;# 
  3061  0E91                     	;# 
  3062  0E92                     	;# 
  3063  0E93                     	;# 
  3064  0E94                     	;# 
  3065  0E95                     	;# 
  3066  0E96                     	;# 
  3067  0E97                     	;# 
  3068  0E9C                     	;# 
  3069  0E9D                     	;# 
  3070  0E9E                     	;# 
  3071  0EA1                     	;# 
  3072  0EA2                     	;# 
  3073  0EA3                     	;# 
  3074  0EA4                     	;# 
  3075  0EA5                     	;# 
  3076  0EA9                     	;# 
  3077  0EAA                     	;# 
  3078  0EAB                     	;# 
  3079  0EAC                     	;# 
  3080  0EB1                     	;# 
  3081  0EB2                     	;# 
  3082  0EB3                     	;# 
  3083  0EB8                     	;# 
  3084  0EB9                     	;# 
  3085  0EBA                     	;# 
  3086  0EBB                     	;# 
  3087  0EBC                     	;# 
  3088  0EBD                     	;# 
  3089  0EBE                     	;# 
  3090  0EC3                     	;# 
  3091  0EC5                     	;# 
  3092  0EC6                     	;# 
  3093  0EC7                     	;# 
  3094  0EC8                     	;# 
  3095  0EC9                     	;# 
  3096  0ECA                     	;# 
  3097  0ECB                     	;# 
  3098  0ECC                     	;# 
  3099  0F10                     	;# 
  3100  0F11                     	;# 
  3101  0F12                     	;# 
  3102  0F13                     	;# 
  3103  0F14                     	;# 
  3104  0F15                     	;# 
  3105  0F16                     	;# 
  3106  0F17                     	;# 
  3107  0F18                     	;# 
  3108  0F19                     	;# 
  3109  0F1A                     	;# 
  3110  0F1B                     	;# 
  3111  0F1C                     	;# 
  3112  0F1D                     	;# 
  3113  0F1E                     	;# 
  3114  0F1F                     	;# 
  3115  0F20                     	;# 
  3116  0F21                     	;# 
  3117  0F22                     	;# 
  3118  0F23                     	;# 
  3119  0F24                     	;# 
  3120  0F25                     	;# 
  3121  0F26                     	;# 
  3122  0F27                     	;# 
  3123  0F38                     	;# 
  3124  0F39                     	;# 
  3125  0F3A                     	;# 
  3126  0F3B                     	;# 
  3127  0F3C                     	;# 
  3128  0F3D                     	;# 
  3129  0F3E                     	;# 
  3130  0F3F                     	;# 
  3131  0F40                     	;# 
  3132  0F41                     	;# 
  3133  0F43                     	;# 
  3134  0F44                     	;# 
  3135  0F45                     	;# 
  3136  0F46                     	;# 
  3137  0F47                     	;# 
  3138  0F48                     	;# 
  3139  0F49                     	;# 
  3140  0F4A                     	;# 
  3141  0F4B                     	;# 
  3142  0F4C                     	;# 
  3143  0F4E                     	;# 
  3144  0F4F                     	;# 
  3145  0F50                     	;# 
  3146  0F51                     	;# 
  3147  0F52                     	;# 
  3148  0F53                     	;# 
  3149  0F54                     	;# 
  3150  0F55                     	;# 
  3151  0F56                     	;# 
  3152  0F57                     	;# 
  3153  0F65                     	;# 
  3154  0F68                     	;# 
  3155  0F69                     	;# 
  3156  0F6A                     	;# 
  3157  0F6B                     	;# 
  3158  0FE4                     	;# 
  3159  0FE5                     	;# 
  3160  0FE6                     	;# 
  3161  0FE7                     	;# 
  3162  0FE8                     	;# 
  3163  0FE9                     	;# 
  3164  0FEA                     	;# 
  3165  0FEB                     	;# 
  3166  0FED                     	;# 
  3167  0FEE                     	;# 
  3168  0FEF                     	;# 
  3169                           
  3170                           	psect	stringtext
  3171  02DF                     __pstringtext:	
  3172  02DF                     _dpowers:	
  3173  02DF  3401               	retlw	1
  3174  02E0  3400               	retlw	0
  3175  02E1  340A               	retlw	10
  3176  02E2  3400               	retlw	0
  3177  02E3  3464               	retlw	100
  3178  02E4  3400               	retlw	0
  3179  02E5  34E8               	retlw	232
  3180  02E6  3403               	retlw	3
  3181  02E7  3410               	retlw	16
  3182  02E8  3427               	retlw	39
  3183  02E9                     __end_of_dpowers:	
  3184  02E9                     _hexpowers:	
  3185  02E9  3401               	retlw	1
  3186  02EA  3400               	retlw	0
  3187  02EB  3410               	retlw	16
  3188  02EC  3400               	retlw	0
  3189  02ED  3400               	retlw	0
  3190  02EE  3401               	retlw	1
  3191  02EF  3400               	retlw	0
  3192  02F0  3410               	retlw	16
  3193  02F1                     __end_of_hexpowers:	
  3194  000B                     _INTCONbits	set	11
  3195  0011                     _TRISA	set	17
  3196  0013                     _TRISC	set	19
  3197  0012                     _TRISB	set	18
  3198  0018                     _LATC	set	24
  3199  0016                     _LATA	set	22
  3200  0017                     _LATB	set	23
  3201  005F                     _GIE	set	95
  3202  011A                     _TX1REG	set	282
  3203  0119                     _RC1REG	set	281
  3204  011D                     _RC1STAbits	set	285
  3205  011C                     _SP1BRGH	set	284
  3206  011B                     _SP1BRGL	set	283
  3207  011E                     _TX1STA	set	286
  3208  011D                     _RC1STA	set	285
  3209  011F                     _BAUD1CON	set	287
  3210  0196                     _SSP2BUF	set	406
  3211  019B                     _SSP2CON2bits	set	411
  3212  019A                     _SSP2CON1bits	set	410
  3213  0197                     _SSP2ADD	set	407
  3214  019C                     _SSP2CON3	set	412
  3215  019A                     _SSP2CON1	set	410
  3216  0199                     _SSP2STAT	set	409
  3217  0719                     _PIE3bits	set	1817
  3218  070F                     _PIR3bits	set	1807
  3219  0892                     _OSCTUNE	set	2194
  3220  0893                     _OSCFRQ	set	2195
  3221  0891                     _OSCEN	set	2193
  3222  088F                     _OSCCON3	set	2191
  3223  088D                     _OSCCON1	set	2189
  3224  0EC8                     _SSP2CLKPPSbits	set	3784
  3225  0EC9                     _SSP2DATPPSbits	set	3785
  3226  0E8F                     _PPSLOCKbits	set	3727
  3227  0E8F                     _PPSLOCK	set	3727
  3228  0F24                     _RC4PPS	set	3876
  3229  0F23                     _RC3PPS	set	3875
  3230  0F20                     _RC0PPS	set	3872
  3231  0F4E                     _ANSELC	set	3918
  3232  0F43                     _ANSELB	set	3907
  3233  0F38                     _ANSELA	set	3896
  3234  0F4F                     _WPUC	set	3919
  3235  0F44                     _WPUB	set	3908
  3236  0F39                     _WPUA	set	3897
  3237  0F65                     _WPUE	set	3941
  3238  02F1                     STR_1:	
  3239  02F1  344D               	retlw	77	;'M'
  3240  02F2  3469               	retlw	105	;'i'
  3241  02F3  3463               	retlw	99	;'c'
  3242  02F4  3472               	retlw	114	;'r'
  3243  02F5  346F               	retlw	111	;'o'
  3244  02F6  3463               	retlw	99	;'c'
  3245  02F7  3468               	retlw	104	;'h'
  3246  02F8  3469               	retlw	105	;'i'
  3247  02F9  3470               	retlw	112	;'p'
  3248  02FA  3420               	retlw	32	;' '
  3249  02FB  3445               	retlw	69	;'E'
  3250  02FC  344D               	retlw	77	;'M'
  3251  02FD  3443               	retlw	67	;'C'
  3252  02FE  3431               	retlw	49	;'1'
  3253  02FF  3430               	retlw	48	;'0'
  3254  0300  3430               	retlw	48	;'0'
  3255  0301  3431               	retlw	49	;'1'
  3256  0302  3420               	retlw	32	;' '
  3257  0303  3454               	retlw	84	;'T'
  3258  0304  3465               	retlw	101	;'e'
  3259  0305  346D               	retlw	109	;'m'
  3260  0306  3470               	retlw	112	;'p'
  3261  0307  3465               	retlw	101	;'e'
  3262  0308  3472               	retlw	114	;'r'
  3263  0309  3461               	retlw	97	;'a'
  3264  030A  3474               	retlw	116	;'t'
  3265  030B  3475               	retlw	117	;'u'
  3266  030C  3472               	retlw	114	;'r'
  3267  030D  3465               	retlw	101	;'e'
  3268  030E  3420               	retlw	32	;' '
  3269  030F  3453               	retlw	83	;'S'
  3270  0310  3465               	retlw	101	;'e'
  3271  0311  346E               	retlw	110	;'n'
  3272  0312  3473               	retlw	115	;'s'
  3273  0313  346F               	retlw	111	;'o'
  3274  0314  3472               	retlw	114	;'r'
  3275  0315  3420               	retlw	32	;' '
  3276  0316  3444               	retlw	68	;'D'
  3277  0317  3465               	retlw	101	;'e'
  3278  0318  346D               	retlw	109	;'m'
  3279  0319  346F               	retlw	111	;'o'
  3280  031A  340A               	retlw	10
  3281  031B  3400               	retlw	0
  3282  031C                     STR_9:	
  3283  031C  3454               	retlw	84	;'T'
  3284  031D  3465               	retlw	101	;'e'
  3285  031E  346D               	retlw	109	;'m'
  3286  031F  3470               	retlw	112	;'p'
  3287  0320  3465               	retlw	101	;'e'
  3288  0321  3472               	retlw	114	;'r'
  3289  0322  3461               	retlw	97	;'a'
  3290  0323  3474               	retlw	116	;'t'
  3291  0324  3475               	retlw	117	;'u'
  3292  0325  3472               	retlw	114	;'r'
  3293  0326  3465               	retlw	101	;'e'
  3294  0327  3420               	retlw	32	;' '
  3295  0328  3468               	retlw	104	;'h'
  3296  0329  3469               	retlw	105	;'i'
  3297  032A  3467               	retlw	103	;'g'
  3298  032B  3468               	retlw	104	;'h'
  3299  032C  3420               	retlw	32	;' '
  3300  032D  346C               	retlw	108	;'l'
  3301  032E  3469               	retlw	105	;'i'
  3302  032F  346D               	retlw	109	;'m'
  3303  0330  3469               	retlw	105	;'i'
  3304  0331  3474               	retlw	116	;'t'
  3305  0332  343A               	retlw	58	;':'
  3306  0333  3409               	retlw	9
  3307  0334  3425               	retlw	37	;'%'
  3308  0335  3464               	retlw	100	;'d'
  3309  0336  342E               	retlw	46	;'.'
  3310  0337  3425               	retlw	37	;'%'
  3311  0338  3464               	retlw	100	;'d'
  3312  0339  3420               	retlw	32	;' '
  3313  033A  3443               	retlw	67	;'C'
  3314  033B  340A               	retlw	10
  3315  033C  3400               	retlw	0
  3316  033D                     STR_10:	
  3317  033D  3454               	retlw	84	;'T'
  3318  033E  3465               	retlw	101	;'e'
  3319  033F  346D               	retlw	109	;'m'
  3320  0340  3470               	retlw	112	;'p'
  3321  0341  3465               	retlw	101	;'e'
  3322  0342  3472               	retlw	114	;'r'
  3323  0343  3461               	retlw	97	;'a'
  3324  0344  3474               	retlw	116	;'t'
  3325  0345  3475               	retlw	117	;'u'
  3326  0346  3472               	retlw	114	;'r'
  3327  0347  3465               	retlw	101	;'e'
  3328  0348  3420               	retlw	32	;' '
  3329  0349  346C               	retlw	108	;'l'
  3330  034A  346F               	retlw	111	;'o'
  3331  034B  3477               	retlw	119	;'w'
  3332  034C  3420               	retlw	32	;' '
  3333  034D  346C               	retlw	108	;'l'
  3334  034E  3469               	retlw	105	;'i'
  3335  034F  346D               	retlw	109	;'m'
  3336  0350  3469               	retlw	105	;'i'
  3337  0351  3474               	retlw	116	;'t'
  3338  0352  343A               	retlw	58	;':'
  3339  0353  3409               	retlw	9
  3340  0354  3425               	retlw	37	;'%'
  3341  0355  3464               	retlw	100	;'d'
  3342  0356  342E               	retlw	46	;'.'
  3343  0357  3425               	retlw	37	;'%'
  3344  0358  3464               	retlw	100	;'d'
  3345  0359  3420               	retlw	32	;' '
  3346  035A  3443               	retlw	67	;'C'
  3347  035B  340A               	retlw	10
  3348  035C  3400               	retlw	0
  3349  035D                     STR_14:	
  3350  035D  3443               	retlw	67	;'C'
  3351  035E  3475               	retlw	117	;'u'
  3352  035F  3472               	retlw	114	;'r'
  3353  0360  3472               	retlw	114	;'r'
  3354  0361  3465               	retlw	101	;'e'
  3355  0362  346E               	retlw	110	;'n'
  3356  0363  3474               	retlw	116	;'t'
  3357  0364  3420               	retlw	32	;' '
  3358  0365  3454               	retlw	84	;'T'
  3359  0366  3465               	retlw	101	;'e'
  3360  0367  346D               	retlw	109	;'m'
  3361  0368  3470               	retlw	112	;'p'
  3362  0369  3465               	retlw	101	;'e'
  3363  036A  3472               	retlw	114	;'r'
  3364  036B  3461               	retlw	97	;'a'
  3365  036C  3474               	retlw	116	;'t'
  3366  036D  3475               	retlw	117	;'u'
  3367  036E  3472               	retlw	114	;'r'
  3368  036F  3465               	retlw	101	;'e'
  3369  0370  343A               	retlw	58	;':'
  3370  0371  3409               	retlw	9
  3371  0372  3425               	retlw	37	;'%'
  3372  0373  3464               	retlw	100	;'d'
  3373  0374  342E               	retlw	46	;'.'
  3374  0375  3425               	retlw	37	;'%'
  3375  0376  3464               	retlw	100	;'d'
  3376  0377  3420               	retlw	32	;' '
  3377  0378  3443               	retlw	67	;'C'
  3378  0379  340A               	retlw	10
  3379  037A  3400               	retlw	0
  3380  037B                     STR_12:	
  3381  037B  3454               	retlw	84	;'T'
  3382  037C  3468               	retlw	104	;'h'
  3383  037D  3465               	retlw	101	;'e'
  3384  037E  3472               	retlw	114	;'r'
  3385  037F  346D               	retlw	109	;'m'
  3386  0380  3461               	retlw	97	;'a'
  3387  0381  346C               	retlw	108	;'l'
  3388  0382  3420               	retlw	32	;' '
  3389  0383  3468               	retlw	104	;'h'
  3390  0384  3479               	retlw	121	;'y'
  3391  0385  3473               	retlw	115	;'s'
  3392  0386  3474               	retlw	116	;'t'
  3393  0387  3465               	retlw	101	;'e'
  3394  0388  3472               	retlw	114	;'r'
  3395  0389  3465               	retlw	101	;'e'
  3396  038A  3473               	retlw	115	;'s'
  3397  038B  3469               	retlw	105	;'i'
  3398  038C  3473               	retlw	115	;'s'
  3399  038D  343A               	retlw	58	;':'
  3400  038E  3409               	retlw	9
  3401  038F  3425               	retlw	37	;'%'
  3402  0390  3464               	retlw	100	;'d'
  3403  0391  3420               	retlw	32	;' '
  3404  0392  3443               	retlw	67	;'C'
  3405  0393  340A               	retlw	10
  3406  0394  3400               	retlw	0
  3407  0395                     STR_2:	
  3408  0395  3450               	retlw	80	;'P'
  3409  0396  3472               	retlw	114	;'r'
  3410  0397  346F               	retlw	111	;'o'
  3411  0398  3464               	retlw	100	;'d'
  3412  0399  3475               	retlw	117	;'u'
  3413  039A  3463               	retlw	99	;'c'
  3414  039B  3474               	retlw	116	;'t'
  3415  039C  3420               	retlw	32	;' '
  3416  039D  3449               	retlw	73	;'I'
  3417  039E  3444               	retlw	68	;'D'
  3418  039F  343A               	retlw	58	;':'
  3419  03A0  3409               	retlw	9
  3420  03A1  3409               	retlw	9
  3421  03A2  3445               	retlw	69	;'E'
  3422  03A3  344D               	retlw	77	;'M'
  3423  03A4  3443               	retlw	67	;'C'
  3424  03A5  3431               	retlw	49	;'1'
  3425  03A6  3430               	retlw	48	;'0'
  3426  03A7  3430               	retlw	48	;'0'
  3427  03A8  3431               	retlw	49	;'1'
  3428  03A9  3425               	retlw	37	;'%'
  3429  03AA  3473               	retlw	115	;'s'
  3430  03AB  340A               	retlw	10
  3431  03AC  3400               	retlw	0
  3432  03AD                     STR_5:	
  3433  03AD  344D               	retlw	77	;'M'
  3434  03AE  3461               	retlw	97	;'a'
  3435  03AF  346E               	retlw	110	;'n'
  3436  03B0  3475               	retlw	117	;'u'
  3437  03B1  3466               	retlw	102	;'f'
  3438  03B2  3461               	retlw	97	;'a'
  3439  03B3  3463               	retlw	99	;'c'
  3440  03B4  3474               	retlw	116	;'t'
  3441  03B5  3475               	retlw	117	;'u'
  3442  03B6  3472               	retlw	114	;'r'
  3443  03B7  3465               	retlw	101	;'e'
  3444  03B8  3472               	retlw	114	;'r'
  3445  03B9  3420               	retlw	32	;' '
  3446  03BA  3449               	retlw	73	;'I'
  3447  03BB  3444               	retlw	68	;'D'
  3448  03BC  343A               	retlw	58	;':'
  3449  03BD  3409               	retlw	9
  3450  03BE  3430               	retlw	48	;'0'
  3451  03BF  3478               	retlw	120	;'x'
  3452  03C0  3425               	retlw	37	;'%'
  3453  03C1  3458               	retlw	88	;'X'
  3454  03C2  340A               	retlw	10
  3455  03C3  3400               	retlw	0
  3456  03C4                     STR_11:	
  3457  03C4  3454               	retlw	84	;'T'
  3458  03C5  3468               	retlw	104	;'h'
  3459  03C6  3465               	retlw	101	;'e'
  3460  03C7  3472               	retlw	114	;'r'
  3461  03C8  346D               	retlw	109	;'m'
  3462  03C9  3461               	retlw	97	;'a'
  3463  03CA  346C               	retlw	108	;'l'
  3464  03CB  3420               	retlw	32	;' '
  3465  03CC  346C               	retlw	108	;'l'
  3466  03CD  3469               	retlw	105	;'i'
  3467  03CE  346D               	retlw	109	;'m'
  3468  03CF  3469               	retlw	105	;'i'
  3469  03D0  3474               	retlw	116	;'t'
  3470  03D1  343A               	retlw	58	;':'
  3471  03D2  3409               	retlw	9
  3472  03D3  3409               	retlw	9
  3473  03D4  3425               	retlw	37	;'%'
  3474  03D5  3464               	retlw	100	;'d'
  3475  03D6  3420               	retlw	32	;' '
  3476  03D7  3443               	retlw	67	;'C'
  3477  03D8  340A               	retlw	10
  3478  03D9  3400               	retlw	0
  3479  03DA                     STR_8:	
  3480  03DA  3443               	retlw	67	;'C'
  3481  03DB  346F               	retlw	111	;'o'
  3482  03DC  346E               	retlw	110	;'n'
  3483  03DD  3476               	retlw	118	;'v'
  3484  03DE  3465               	retlw	101	;'e'
  3485  03DF  3472               	retlw	114	;'r'
  3486  03E0  3473               	retlw	115	;'s'
  3487  03E1  3469               	retlw	105	;'i'
  3488  03E2  346F               	retlw	111	;'o'
  3489  03E3  346E               	retlw	110	;'n'
  3490  03E4  3420               	retlw	32	;' '
  3491  03E5  3472               	retlw	114	;'r'
  3492  03E6  3461               	retlw	97	;'a'
  3493  03E7  3474               	retlw	116	;'t'
  3494  03E8  3465               	retlw	101	;'e'
  3495  03E9  343A               	retlw	58	;':'
  3496  03EA  3409               	retlw	9
  3497  03EB  3425               	retlw	37	;'%'
  3498  03EC  3478               	retlw	120	;'x'
  3499  03ED  340A               	retlw	10
  3500  03EE  3400               	retlw	0
  3501  03EF                     STR_17:	
  3502  03EF  3430               	retlw	48	;'0'
  3503  03F0  3431               	retlw	49	;'1'
  3504  03F1  3432               	retlw	50	;'2'
  3505  03F2  3433               	retlw	51	;'3'
  3506  03F3  3434               	retlw	52	;'4'
  3507  03F4  3435               	retlw	53	;'5'
  3508  03F5  3436               	retlw	54	;'6'
  3509  03F6  3437               	retlw	55	;'7'
  3510  03F7  3438               	retlw	56	;'8'
  3511  03F8  3439               	retlw	57	;'9'
  3512  03F9  3441               	retlw	65	;'A'
  3513  03FA  3442               	retlw	66	;'B'
  3514  03FB  3443               	retlw	67	;'C'
  3515  03FC  3444               	retlw	68	;'D'
  3516  03FD  3445               	retlw	69	;'E'
  3517  03FE  3446               	retlw	70	;'F'
  3518  03FF  3400               	retlw	0
  3519  0400                     STR_18:	
  3520  0400  3430               	retlw	48	;'0'
  3521  0401  3431               	retlw	49	;'1'
  3522  0402  3432               	retlw	50	;'2'
  3523  0403  3433               	retlw	51	;'3'
  3524  0404  3434               	retlw	52	;'4'
  3525  0405  3435               	retlw	53	;'5'
  3526  0406  3436               	retlw	54	;'6'
  3527  0407  3437               	retlw	55	;'7'
  3528  0408  3438               	retlw	56	;'8'
  3529  0409  3439               	retlw	57	;'9'
  3530  040A  3461               	retlw	97	;'a'
  3531  040B  3462               	retlw	98	;'b'
  3532  040C  3463               	retlw	99	;'c'
  3533  040D  3464               	retlw	100	;'d'
  3534  040E  3465               	retlw	101	;'e'
  3535  040F  3466               	retlw	102	;'f'
  3536  0410  3400               	retlw	0
  3537  0411                     STR_6:	
  3538  0411  3452               	retlw	82	;'R'
  3539  0412  3465               	retlw	101	;'e'
  3540  0413  3476               	retlw	118	;'v'
  3541  0414  3469               	retlw	105	;'i'
  3542  0415  3473               	retlw	115	;'s'
  3543  0416  3469               	retlw	105	;'i'
  3544  0417  346F               	retlw	111	;'o'
  3545  0418  346E               	retlw	110	;'n'
  3546  0419  3420               	retlw	32	;' '
  3547  041A  343A               	retlw	58	;':'
  3548  041B  3409               	retlw	9
  3549  041C  3409               	retlw	9
  3550  041D  3425               	retlw	37	;'%'
  3551  041E  3464               	retlw	100	;'d'
  3552  041F  340A               	retlw	10
  3553  0420  3400               	retlw	0
  3554  0421                     STR_16:	
  3555  0421  3428               	retlw	40	;'('
  3556  0422  346E               	retlw	110	;'n'
  3557  0423  3475               	retlw	117	;'u'
  3558  0424  346C               	retlw	108	;'l'
  3559  0425  346C               	retlw	108	;'l'
  3560  0426  3429               	retlw	41	;')'
  3561  0427  3400               	retlw	0
  3562  0428                     STR_3:	
  3563  0428  342D               	retlw	45	;'-'
  3564  0429  3431               	retlw	49	;'1'
  3565  042A  3400               	retlw	0
  3566  042B                     STR_15:	
  3567  042B  340C               	retlw	12
  3568  042C  3400               	retlw	0
  3569  03D9                     
  3570                           ; #config settings
  3571  0000                     
  3572                           	psect	cinit
  3573  001D                     start_initialization:	
  3574  001D                     __initialization:	
  3575                           
  3576                           ; Clear objects allocated to COMMON
  3577  001D  01F7               	clrf	__pbssCOMMON& (0+127)
  3578  001E  01F8               	clrf	(__pbssCOMMON+1)& (0+127)
  3579  001F  01F9               	clrf	(__pbssCOMMON+2)& (0+127)
  3580  0020  01FA               	clrf	(__pbssCOMMON+3)& (0+127)
  3581  0021  01FB               	clrf	(__pbssCOMMON+4)& (0+127)
  3582  0022  01FC               	clrf	(__pbssCOMMON+5)& (0+127)
  3583                           
  3584                           ; Clear objects allocated to BANK0
  3585  0023  304C               	movlw	low __pbssBANK0
  3586  0024  0084               	movwf	4
  3587  0025  3000               	movlw	high __pbssBANK0
  3588  0026  0085               	movwf	5
  3589  0027  301B               	movlw	27
  3590  0028  318F  27F1         	fcall	clear_ram0
  3591  002A                     end_of_initialization:	
  3592                           ;End of C runtime variable initialization code
  3593                           
  3594  002A                     __end_of__initialization:	
  3595  002A  107E               	bcf	int$flags,0	;clear compiler interrupt flag (level 1)
  3596  002B  0020               	movlb	0
  3597  002C  3187  2F00         	ljmp	_main	;jump to C main() function
  3598                           
  3599                           	psect	bssCOMMON
  3600  0077                     __pbssCOMMON:	
  3601  0077                     I2C2_ISR@i2c_10bit_address_restart:	
  3602  0077                     	ds	1
  3603  0078                     I2C2_ISR@i2c_bytes_left:	
  3604  0078                     	ds	1
  3605  0079                     I2C2_ISR@pi2c_buf_ptr:	
  3606  0079                     	ds	1
  3607  007A                     _p_i2c2_current:	
  3608  007A                     	ds	1
  3609  007B                     _p_i2c2_trb_current:	
  3610  007B                     	ds	1
  3611  007C                     _i2c2_trb_count:	
  3612  007C                     	ds	1
  3613                           
  3614                           	psect	bssBANK0
  3615  004C                     __pbssBANK0:	
  3616  004C                     _i2c2_object:	
  3617  004C                     	ds	5
  3618  0051                     _i2c2_state:	
  3619  0051                     	ds	1
  3620  0052                     EMC1001_Read@trb:	
  3621  0052                     	ds	8
  3622  005A                     I2C2_MasterRead@trBlock:	
  3623  005A                     	ds	4
  3624  005E                     I2C2_MasterWrite@trBlock:	
  3625  005E                     	ds	4
  3626  0062                     _i2c2_tr_queue:	
  3627  0062                     	ds	3
  3628  0065                     I2C2_ISR@i2c_address:	
  3629  0065                     	ds	2
  3630                           
  3631                           	psect	clrtext
  3632  0FF1                     clear_ram0:	
  3633                           ;	Called with FSR0 containing the base address, and
  3634                           ;	WREG with the size to clear
  3635                           
  3636  0FF1  0064               	clrwdt	;clear the watchdog before getting into this loop
  3637  0FF2                     clrloop0:	
  3638  0FF2  0180               	clrf	0	;clear RAM location pointed to by FSR
  3639  0FF3  3101               	addfsr 0,1
  3640  0FF4  0B89               	decfsz	9,f	;Have we reached the end of clearing yet?
  3641  0FF5  2FF2               	goto	clrloop0	;have we reached the end yet?
  3642  0FF6  3400               	retlw	0	;all done for this memory range, return
  3643                           
  3644                           	psect	cstackCOMMON
  3645  0070                     __pcstackCOMMON:	
  3646  0070                     ?_I2C2_Stop:	
  3647  0070                     ??_I2C2_Stop:	
  3648                           ; 1 bytes @ 0x0
  3649                           
  3650  0070                     ?_I2C2_FunctionComplete:	
  3651                           ; 1 bytes @ 0x0
  3652                           
  3653  0070                     ??_I2C2_FunctionComplete:	
  3654                           ; 1 bytes @ 0x0
  3655                           
  3656  0070                     ?_PIN_MANAGER_Initialize:	
  3657                           ; 1 bytes @ 0x0
  3658                           
  3659  0070                     ?_OSCILLATOR_Initialize:	
  3660                           ; 1 bytes @ 0x0
  3661                           
  3662  0070                     ?_EUSART_Initialize:	
  3663                           ; 1 bytes @ 0x0
  3664                           
  3665  0070                     ?_EUSART_Write:	
  3666                           ; 1 bytes @ 0x0
  3667                           
  3668  0070                     ?_putch:	
  3669                           ; 1 bytes @ 0x0
  3670                           
  3671  0070                     ?_I2C2_Initialize:	
  3672                           ; 1 bytes @ 0x0
  3673                           
  3674  0070                     ?_I2C2_ISR:	
  3675                           ; 1 bytes @ 0x0
  3676                           
  3677  0070                     ?_I2C2_BusCollisionISR:	
  3678                           ; 1 bytes @ 0x0
  3679                           
  3680  0070                     ??_I2C2_BusCollisionISR:	
  3681                           ; 1 bytes @ 0x0
  3682                           
  3683  0070                     ?_INTERRUPT_InterruptManager:	
  3684                           ; 1 bytes @ 0x0
  3685                           
  3686  0070                     ?_SYSTEM_Initialize:	
  3687                           ; 1 bytes @ 0x0
  3688                           
  3689  0070                     ?_EMC1001_PrintInfo:	
  3690                           ; 1 bytes @ 0x0
  3691                           
  3692  0070                     ?_EMC1001_PrintTemp:	
  3693                           ; 1 bytes @ 0x0
  3694                           
  3695  0070                     ?_main:	
  3696                           ; 1 bytes @ 0x0
  3697                           
  3698                           
  3699                           ; 1 bytes @ 0x0
  3700  0070                     	ds	1
  3701  0071                     I2C2_Stop@completion_code:	
  3702                           
  3703                           ; 1 bytes @ 0x1
  3704  0071                     	ds	1
  3705  0072                     ??_I2C2_ISR:	
  3706                           
  3707                           ; 1 bytes @ 0x2
  3708  0072                     	ds	4
  3709  0076                     ??_INTERRUPT_InterruptManager:	
  3710                           
  3711                           ; 1 bytes @ 0x6
  3712  0076                     	ds	1
  3713                           
  3714                           	psect	cstackBANK0
  3715  0020                     __pcstackBANK0:	
  3716  0020                     ?_I2C2_MasterWriteTRBBuild:	
  3717  0020                     ?_I2C2_MasterTRBInsert:	
  3718                           ; 1 bytes @ 0x0
  3719                           
  3720  0020                     ?_I2C2_MasterReadTRBBuild:	
  3721                           ; 1 bytes @ 0x0
  3722                           
  3723  0020                     ??_PIN_MANAGER_Initialize:	
  3724                           ; 1 bytes @ 0x0
  3725                           
  3726  0020                     ??_OSCILLATOR_Initialize:	
  3727                           ; 1 bytes @ 0x0
  3728                           
  3729  0020                     ??_EUSART_Initialize:	
  3730                           ; 1 bytes @ 0x0
  3731                           
  3732  0020                     ??_EUSART_Write:	
  3733                           ; 1 bytes @ 0x0
  3734                           
  3735  0020                     ??_I2C2_Initialize:	
  3736                           ; 1 bytes @ 0x0
  3737                           
  3738  0020                     ?___wmul:	
  3739                           ; 1 bytes @ 0x0
  3740                           
  3741  0020                     ?___lwdiv:	
  3742                           ; 2 bytes @ 0x0
  3743                           
  3744  0020                     EUSART_Write@txData:	
  3745                           ; 2 bytes @ 0x0
  3746                           
  3747  0020                     I2C2_MasterTRBInsert@ptrb_list:	
  3748                           ; 1 bytes @ 0x0
  3749                           
  3750  0020                     I2C2_MasterReadTRBBuild@pdata:	
  3751                           ; 1 bytes @ 0x0
  3752                           
  3753  0020                     I2C2_MasterWriteTRBBuild@pdata:	
  3754                           ; 1 bytes @ 0x0
  3755                           
  3756  0020                     PIN_MANAGER_Initialize@state:	
  3757                           ; 1 bytes @ 0x0
  3758                           
  3759  0020                     ___wmul@multiplier:	
  3760                           ; 1 bytes @ 0x0
  3761                           
  3762  0020                     ___lwdiv@divisor:	
  3763                           ; 2 bytes @ 0x0
  3764                           
  3765                           
  3766                           ; 2 bytes @ 0x0
  3767  0020                     	ds	1
  3768  0021                     ??_putch:	
  3769  0021                     ??_SYSTEM_Initialize:	
  3770                           ; 1 bytes @ 0x1
  3771                           
  3772  0021                     putch@txData:	
  3773                           ; 1 bytes @ 0x1
  3774                           
  3775  0021                     I2C2_MasterTRBInsert@pflag:	
  3776                           ; 1 bytes @ 0x1
  3777                           
  3778  0021                     I2C2_MasterReadTRBBuild@length:	
  3779                           ; 1 bytes @ 0x1
  3780                           
  3781  0021                     I2C2_MasterWriteTRBBuild@length:	
  3782                           ; 1 bytes @ 0x1
  3783                           
  3784                           
  3785                           ; 1 bytes @ 0x1
  3786  0021                     	ds	1
  3787  0022                     ??_I2C2_MasterTRBInsert:	
  3788  0022                     ?_cputs:	
  3789                           ; 1 bytes @ 0x2
  3790                           
  3791  0022                     I2C2_MasterReadTRBBuild@address:	
  3792                           ; 1 bytes @ 0x2
  3793                           
  3794  0022                     I2C2_MasterWriteTRBBuild@address:	
  3795                           ; 2 bytes @ 0x2
  3796                           
  3797  0022                     ___wmul@multiplicand:	
  3798                           ; 2 bytes @ 0x2
  3799                           
  3800  0022                     ___lwdiv@dividend:	
  3801                           ; 2 bytes @ 0x2
  3802                           
  3803  0022                     cputs@s:	
  3804                           ; 2 bytes @ 0x2
  3805                           
  3806                           
  3807                           ; 2 bytes @ 0x2
  3808  0022                     	ds	1
  3809  0023                     I2C2_MasterTRBInsert@count:	
  3810                           
  3811                           ; 1 bytes @ 0x3
  3812  0023                     	ds	1
  3813  0024                     ??_I2C2_MasterWriteTRBBuild:	
  3814  0024                     ??_I2C2_MasterReadTRBBuild:	
  3815                           ; 1 bytes @ 0x4
  3816                           
  3817  0024                     ??_cputs:	
  3818                           ; 1 bytes @ 0x4
  3819                           
  3820  0024                     ??___wmul:	
  3821                           ; 1 bytes @ 0x4
  3822                           
  3823  0024                     ??___lwdiv:	
  3824                           ; 1 bytes @ 0x4
  3825                           
  3826  0024                     ___wmul@product:	
  3827                           ; 1 bytes @ 0x4
  3828                           
  3829                           
  3830                           ; 2 bytes @ 0x4
  3831  0024                     	ds	1
  3832  0025                     ?_puts:	
  3833  0025                     ___lwdiv@quotient:	
  3834                           ; 2 bytes @ 0x5
  3835                           
  3836  0025                     puts@s:	
  3837                           ; 2 bytes @ 0x5
  3838                           
  3839                           
  3840                           ; 2 bytes @ 0x5
  3841  0025                     	ds	1
  3842  0026                     I2C2_MasterReadTRBBuild@ptrb:	
  3843  0026                     I2C2_MasterWriteTRBBuild@ptrb:	
  3844                           ; 1 bytes @ 0x6
  3845                           
  3846                           
  3847                           ; 1 bytes @ 0x6
  3848  0026                     	ds	1
  3849  0027                     ??_puts:	
  3850  0027                     ?_EMC1001_Read:	
  3851                           ; 1 bytes @ 0x7
  3852                           
  3853  0027                     EMC1001_Read@pData:	
  3854                           ; 1 bytes @ 0x7
  3855                           
  3856  0027                     ___lwdiv@counter:	
  3857                           ; 1 bytes @ 0x7
  3858                           
  3859                           
  3860                           ; 1 bytes @ 0x7
  3861  0027                     	ds	1
  3862  0028                     ??_EMC1001_Read:	
  3863  0028                     ?___lwmod:	
  3864                           ; 1 bytes @ 0x8
  3865                           
  3866  0028                     ___lwmod@divisor:	
  3867                           ; 2 bytes @ 0x8
  3868                           
  3869                           
  3870                           ; 2 bytes @ 0x8
  3871  0028                     	ds	2
  3872  002A                     EMC1001_Read@reg:	
  3873  002A                     ___lwmod@dividend:	
  3874                           ; 1 bytes @ 0xA
  3875                           
  3876                           
  3877                           ; 2 bytes @ 0xA
  3878  002A                     	ds	1
  3879  002B                     EMC1001_Read@status:	
  3880                           
  3881                           ; 1 bytes @ 0xB
  3882  002B                     	ds	1
  3883  002C                     ??___lwmod:	
  3884                           
  3885                           ; 1 bytes @ 0xC
  3886  002C                     	ds	1
  3887  002D                     ___lwmod@counter:	
  3888                           
  3889                           ; 1 bytes @ 0xD
  3890  002D                     	ds	1
  3891  002E                     ?_printf:	
  3892  002E                     printf@f:	
  3893                           ; 2 bytes @ 0xE
  3894                           
  3895                           
  3896                           ; 2 bytes @ 0xE
  3897  002E                     	ds	6
  3898  0034                     ??_printf:	
  3899                           
  3900                           ; 1 bytes @ 0x14
  3901  0034                     	ds	4
  3902  0038                     printf@idx:	
  3903                           
  3904                           ; 1 bytes @ 0x18
  3905  0038                     	ds	1
  3906  0039                     _printf$655:	
  3907                           
  3908                           ; 2 bytes @ 0x19
  3909  0039                     	ds	2
  3910  003B                     printf@prec:	
  3911                           
  3912                           ; 1 bytes @ 0x1B
  3913  003B                     	ds	1
  3914  003C                     printf@cp:	
  3915                           
  3916                           ; 2 bytes @ 0x1C
  3917  003C                     	ds	2
  3918  003E                     printf@ap:	
  3919                           
  3920                           ; 1 bytes @ 0x1E
  3921  003E                     	ds	1
  3922  003F                     printf@flag:	
  3923                           
  3924                           ; 1 bytes @ 0x1F
  3925  003F                     	ds	1
  3926  0040                     printf@val:	
  3927                           
  3928                           ; 2 bytes @ 0x20
  3929  0040                     	ds	2
  3930  0042                     printf@c:	
  3931                           
  3932                           ; 1 bytes @ 0x22
  3933  0042                     	ds	1
  3934  0043                     ??_EMC1001_PrintInfo:	
  3935  0043                     ??_EMC1001_PrintTemp:	
  3936                           ; 1 bytes @ 0x23
  3937                           
  3938                           
  3939                           ; 1 bytes @ 0x23
  3940  0043                     	ds	2
  3941  0045                     EMC1001_PrintTemp@temp:	
  3942  0045                     _EMC1001_PrintInfo$597:	
  3943                           ; 1 bytes @ 0x25
  3944                           
  3945                           
  3946                           ; 2 bytes @ 0x25
  3947  0045                     	ds	1
  3948  0046                     EMC1001_PrintTemp@templo:	
  3949                           
  3950                           ; 1 bytes @ 0x26
  3951  0046                     	ds	1
  3952  0047                     EMC1001_PrintInfo@temp:	
  3953                           
  3954                           ; 1 bytes @ 0x27
  3955  0047                     	ds	1
  3956  0048                     EMC1001_PrintInfo@templo:	
  3957                           
  3958                           ; 1 bytes @ 0x28
  3959  0048                     	ds	1
  3960  0049                     EMC1001_PrintInfo@data:	
  3961                           
  3962                           ; 1 bytes @ 0x29
  3963  0049                     	ds	1
  3964  004A                     ??_main:	
  3965                           
  3966                           ; 1 bytes @ 0x2A
  3967  004A                     	ds	2
  3968                           
  3969                           	psect	maintext
  3970  0700                     __pmaintext:	
  3971 ;;
  3972 ;;Main: autosize = 0, tempsize = 2, incstack = 0, save=0
  3973 ;;
  3974 ;; *************** function _main *****************
  3975 ;; Defined at:
  3976 ;;		line 94 in file "main.c"
  3977 ;; Parameters:    Size  Location     Type
  3978 ;;		None
  3979 ;; Auto vars:     Size  Location     Type
  3980 ;;		None
  3981 ;; Return value:  Size  Location     Type
  3982 ;;                  1    wreg      void 
  3983 ;; Registers used:
  3984 ;;		wreg, fsr0l, fsr0h, fsr1l, fsr1h, status,2, status,0, pclath, cstack
  3985 ;; Tracked objects:
  3986 ;;		On entry : B1F/0
  3987 ;;		On exit  : 0/0
  3988 ;;		Unchanged: 0/0
  3989 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
  3990 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  3991 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  3992 ;;      Temps:          0       2       0       0       0       0       0       0       0       0       0       0       
      +0       0
  3993 ;;      Totals:         0       2       0       0       0       0       0       0       0       0       0       0       
      +0       0
  3994 ;;Total ram usage:        2 bytes
  3995 ;; Hardware stack levels required when called:    8
  3996 ;; This function calls:
  3997 ;;		_EMC1001_PrintInfo
  3998 ;;		_EMC1001_PrintTemp
  3999 ;;		_SYSTEM_Initialize
  4000 ;;		_printf
  4001 ;; This function is called by:
  4002 ;;		Startup code after reset
  4003 ;; This function uses a non-reentrant model
  4004 ;;
  4005                           
  4006                           
  4007                           ;psect for function _main
  4008  0700                     _main:	
  4009                           
  4010                           ;main.c: 97: SYSTEM_Initialize();
  4011                           
  4012                           ;incstack = 0
  4013                           ; Regs used in _main: [wreg-fsr1h+status,2+status,0+pclath+cstack]
  4014  0700  3187  27CE  3187   	fcall	_SYSTEM_Initialize
  4015                           
  4016                           ;main.c: 98: (INTCONbits.GIE = 1);
  4017  0703  178B               	bsf	11,7	;volatile
  4018                           
  4019                           ;main.c: 99: (INTCONbits.PEIE = 1);
  4020  0704  170B               	bsf	11,6	;volatile
  4021  0705                     l2253:	
  4022                           ;main.c: 101: while (1)
  4023                           
  4024                           
  4025                           ;main.c: 102: {
  4026                           ;main.c: 103: printf("\x0C");
  4027  0705  302B               	movlw	low (STR_15| (0+32768))
  4028  0706  0020               	movlb	0	; select bank0
  4029  0707  00AE               	movwf	printf@f
  4030  0708  3084               	movlw	high (STR_15| (0+32768))
  4031  0709  00AF               	movwf	printf@f+1
  4032  070A  3180  202E  3187   	fcall	_printf
  4033                           
  4034                           ;main.c: 104: EMC1001_PrintInfo();
  4035  070D  3181  218F  3187   	fcall	_EMC1001_PrintInfo
  4036                           
  4037                           ;main.c: 105: EMC1001_PrintTemp();
  4038  0710  3185  2567  3187   	fcall	_EMC1001_PrintTemp
  4039                           
  4040                           ;main.c: 106: _delay((unsigned long)((1000)*(1000000/4000.0)));
  4041  0713  3002               	movlw	2
  4042  0714  0020               	movlb	0	; select bank0
  4043  0715  00CB               	movwf	??_main+1
  4044  0716  3045               	movlw	69
  4045  0717  00CA               	movwf	??_main
  4046  0718  30A9               	movlw	169
  4047  0719                     u2107:	
  4048  0719  0B89               	decfsz	9,f
  4049  071A  2F19               	goto	u2107
  4050  071B  0BCA               	decfsz	??_main,f
  4051  071C  2F19               	goto	u2107
  4052  071D  0BCB               	decfsz	??_main+1,f
  4053  071E  2F19               	goto	u2107
  4054  071F  3200               	nop2
  4055  0720  2F05               	goto	l2253
  4056  0721                     __end_of_main:	
  4057                           
  4058                           	psect	text1
  4059  07CE                     __ptext1:	
  4060 ;; *************** function _SYSTEM_Initialize *****************
  4061 ;; Defined at:
  4062 ;;		line 82 in file "mcc_generated_files/mcc.c"
  4063 ;; Parameters:    Size  Location     Type
  4064 ;;		None
  4065 ;; Auto vars:     Size  Location     Type
  4066 ;;		None
  4067 ;; Return value:  Size  Location     Type
  4068 ;;                  1    wreg      void 
  4069 ;; Registers used:
  4070 ;;		wreg, status,2, status,0, pclath, cstack
  4071 ;; Tracked objects:
  4072 ;;		On entry : 0/0
  4073 ;;		On exit  : 0/0
  4074 ;;		Unchanged: 0/0
  4075 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
  4076 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  4077 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  4078 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  4079 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  4080 ;;Total ram usage:        0 bytes
  4081 ;; Hardware stack levels used:    1
  4082 ;; Hardware stack levels required when called:    4
  4083 ;; This function calls:
  4084 ;;		_EUSART_Initialize
  4085 ;;		_I2C2_Initialize
  4086 ;;		_OSCILLATOR_Initialize
  4087 ;;		_PIN_MANAGER_Initialize
  4088 ;; This function is called by:
  4089 ;;		_main
  4090 ;; This function uses a non-reentrant model
  4091 ;;
  4092                           
  4093                           
  4094                           ;psect for function _SYSTEM_Initialize
  4095  07CE                     _SYSTEM_Initialize:	
  4096                           
  4097                           ;mcc.c: 85: PIN_MANAGER_Initialize();
  4098                           
  4099                           ;incstack = 0
  4100                           ; Regs used in _SYSTEM_Initialize: [wreg+status,2+status,0+pclath+cstack]
  4101  07CE  3185  25AE  3187   	fcall	_PIN_MANAGER_Initialize
  4102                           
  4103                           ;mcc.c: 86: OSCILLATOR_Initialize();
  4104  07D1  318F  27F7  3187   	fcall	_OSCILLATOR_Initialize
  4105                           
  4106                           ;mcc.c: 87: I2C2_Initialize();
  4107  07D4  3187  275D  3187   	fcall	_I2C2_Initialize
  4108                           
  4109                           ;mcc.c: 88: EUSART_Initialize();
  4110  07D7  3187  27E6         	fcall	_EUSART_Initialize
  4111  07D9  0008               	return
  4112  07DA                     __end_of_SYSTEM_Initialize:	
  4113                           
  4114                           	psect	text2
  4115  05AE                     __ptext2:	
  4116 ;; *************** function _PIN_MANAGER_Initialize *****************
  4117 ;; Defined at:
  4118 ;;		line 50 in file "mcc_generated_files/pin_manager.c"
  4119 ;; Parameters:    Size  Location     Type
  4120 ;;		None
  4121 ;; Auto vars:     Size  Location     Type
  4122 ;;  state           1    0[BANK0 ] unsigned char 
  4123 ;; Return value:  Size  Location     Type
  4124 ;;                  1    wreg      void 
  4125 ;; Registers used:
  4126 ;;		wreg, status,2, status,0
  4127 ;; Tracked objects:
  4128 ;;		On entry : 0/0
  4129 ;;		On exit  : 0/0
  4130 ;;		Unchanged: 0/0
  4131 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
  4132 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  4133 ;;      Locals:         0       1       0       0       0       0       0       0       0       0       0       0       
      +0       0
  4134 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  4135 ;;      Totals:         0       1       0       0       0       0       0       0       0       0       0       0       
      +0       0
  4136 ;;Total ram usage:        1 bytes
  4137 ;; Hardware stack levels used:    1
  4138 ;; Hardware stack levels required when called:    3
  4139 ;; This function calls:
  4140 ;;		Nothing
  4141 ;; This function is called by:
  4142 ;;		_SYSTEM_Initialize
  4143 ;; This function uses a non-reentrant model
  4144 ;;
  4145                           
  4146                           
  4147                           ;psect for function _PIN_MANAGER_Initialize
  4148  05AE                     _PIN_MANAGER_Initialize:	
  4149                           
  4150                           ;pin_manager.c: 52: LATB = 0x0;
  4151                           
  4152                           ;incstack = 0
  4153                           ; Regs used in _PIN_MANAGER_Initialize: [wreg+status,2+status,0]
  4154  05AE  0020               	movlb	0	; select bank0
  4155  05AF  0197               	clrf	23	;volatile
  4156                           
  4157                           ;pin_manager.c: 53: WPUE = 0x8;
  4158  05B0  3008               	movlw	8
  4159  05B1  003E               	movlb	30	; select bank30
  4160  05B2  00E5               	movwf	101	;volatile
  4161                           
  4162                           ;pin_manager.c: 54: LATA = 0x0;
  4163  05B3  0020               	movlb	0	; select bank0
  4164  05B4  0196               	clrf	22	;volatile
  4165                           
  4166                           ;pin_manager.c: 55: LATC = 0x1;
  4167  05B5  3001               	movlw	1
  4168  05B6  0098               	movwf	24	;volatile
  4169                           
  4170                           ;pin_manager.c: 56: WPUA = 0xF0;
  4171  05B7  30F0               	movlw	240
  4172  05B8  003E               	movlb	30	; select bank30
  4173  05B9  00B9               	movwf	57	;volatile
  4174                           
  4175                           ;pin_manager.c: 57: WPUB = 0xFF;
  4176  05BA  30FF               	movlw	255
  4177  05BB  00C4               	movwf	68	;volatile
  4178                           
  4179                           ;pin_manager.c: 58: WPUC = 0xE7;
  4180  05BC  30E7               	movlw	231
  4181  05BD  00CF               	movwf	79	;volatile
  4182                           
  4183                           ;pin_manager.c: 59: ANSELA = 0xFF;
  4184  05BE  30FF               	movlw	255
  4185  05BF  00B8               	movwf	56	;volatile
  4186                           
  4187                           ;pin_manager.c: 60: ANSELB = 0xFF;
  4188  05C0  30FF               	movlw	255
  4189  05C1  00C3               	movwf	67	;volatile
  4190                           
  4191                           ;pin_manager.c: 61: ANSELC = 0xE7;
  4192  05C2  30E7               	movlw	231
  4193  05C3  00CE               	movwf	78	;volatile
  4194                           
  4195                           ;pin_manager.c: 62: TRISB = 0xFF;
  4196  05C4  30FF               	movlw	255
  4197  05C5  0020               	movlb	0	; select bank0
  4198  05C6  0092               	movwf	18	;volatile
  4199                           
  4200                           ;pin_manager.c: 63: TRISC = 0xFE;
  4201  05C7  30FE               	movlw	254
  4202  05C8  0093               	movwf	19	;volatile
  4203                           
  4204                           ;pin_manager.c: 64: TRISA = 0xF0;
  4205  05C9  30F0               	movlw	240
  4206  05CA  0091               	movwf	17	;volatile
  4207                           
  4208                           ;pin_manager.c: 69: bool state = GIE;
  4209  05CB  3000               	movlw	0
  4210  05CC  1B8B               	btfsc	11,7	;volatile
  4211  05CD  3001               	movlw	1
  4212  05CE  00A0               	movwf	PIN_MANAGER_Initialize@state
  4213                           
  4214                           ;pin_manager.c: 70: GIE = 0;
  4215  05CF  138B               	bcf	11,7	;volatile
  4216                           
  4217                           ;pin_manager.c: 71: PPSLOCK = 0x55;
  4218  05D0  3055               	movlw	85
  4219  05D1  003D               	movlb	29	; select bank29
  4220  05D2  008F               	movwf	15	;volatile
  4221                           
  4222                           ;pin_manager.c: 72: PPSLOCK = 0xAA;
  4223  05D3  30AA               	movlw	170
  4224  05D4  008F               	movwf	15	;volatile
  4225                           
  4226                           ;pin_manager.c: 73: PPSLOCKbits.PPSLOCKED = 0x00;
  4227  05D5  100F               	bcf	15,0	;volatile
  4228                           
  4229                           ;pin_manager.c: 75: RC0PPS = 0x10;
  4230  05D6  3010               	movlw	16
  4231  05D7  003E               	movlb	30	; select bank30
  4232  05D8  00A0               	movwf	32	;volatile
  4233                           
  4234                           ;pin_manager.c: 76: RC3PPS = 0x17;
  4235  05D9  3017               	movlw	23
  4236  05DA  00A3               	movwf	35	;volatile
  4237                           
  4238                           ;pin_manager.c: 77: SSP2DATPPSbits.SSP2DATPPS = 0x13;
  4239  05DB  003D               	movlb	29	; select bank29
  4240  05DC  0849               	movf	73,w	;volatile
  4241  05DD  39E0               	andlw	-32
  4242  05DE  3813               	iorlw	19
  4243  05DF  00C9               	movwf	73	;volatile
  4244                           
  4245                           ;pin_manager.c: 78: SSP2CLKPPSbits.SSP2CLKPPS = 0x14;
  4246  05E0  0848               	movf	72,w	;volatile
  4247  05E1  39E0               	andlw	-32
  4248  05E2  3814               	iorlw	20
  4249  05E3  00C8               	movwf	72	;volatile
  4250                           
  4251                           ;pin_manager.c: 79: RC4PPS = 0x16;
  4252  05E4  3016               	movlw	22
  4253  05E5  003E               	movlb	30	; select bank30
  4254  05E6  00A4               	movwf	36	;volatile
  4255                           
  4256                           ;pin_manager.c: 81: PPSLOCK = 0x55;
  4257  05E7  3055               	movlw	85
  4258  05E8  003D               	movlb	29	; select bank29
  4259  05E9  008F               	movwf	15	;volatile
  4260                           
  4261                           ;pin_manager.c: 82: PPSLOCK = 0xAA;
  4262  05EA  30AA               	movlw	170
  4263  05EB  008F               	movwf	15	;volatile
  4264                           
  4265                           ;pin_manager.c: 83: PPSLOCKbits.PPSLOCKED = 0x01;
  4266  05EC  140F               	bsf	15,0	;volatile
  4267                           
  4268                           ;pin_manager.c: 85: GIE = state;
  4269  05ED  0020               	movlb	0	; select bank0
  4270  05EE  1C20               	btfss	PIN_MANAGER_Initialize@state,0
  4271  05EF  2DF2               	goto	u1730
  4272  05F0  178B               	bsf	11,7	;volatile
  4273  05F1  0008               	return
  4274  05F2                     u1730:	
  4275  05F2  138B               	bcf	11,7	;volatile
  4276  05F3  0008               	return
  4277  05F4                     __end_of_PIN_MANAGER_Initialize:	
  4278                           
  4279                           	psect	text3
  4280  0FF7                     __ptext3:	
  4281 ;; *************** function _OSCILLATOR_Initialize *****************
  4282 ;; Defined at:
  4283 ;;		line 91 in file "mcc_generated_files/mcc.c"
  4284 ;; Parameters:    Size  Location     Type
  4285 ;;		None
  4286 ;; Auto vars:     Size  Location     Type
  4287 ;;		None
  4288 ;; Return value:  Size  Location     Type
  4289 ;;                  1    wreg      void 
  4290 ;; Registers used:
  4291 ;;		wreg, status,2
  4292 ;; Tracked objects:
  4293 ;;		On entry : 0/0
  4294 ;;		On exit  : 0/0
  4295 ;;		Unchanged: 0/0
  4296 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
  4297 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  4298 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  4299 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  4300 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  4301 ;;Total ram usage:        0 bytes
  4302 ;; Hardware stack levels used:    1
  4303 ;; Hardware stack levels required when called:    3
  4304 ;; This function calls:
  4305 ;;		Nothing
  4306 ;; This function is called by:
  4307 ;;		_SYSTEM_Initialize
  4308 ;; This function uses a non-reentrant model
  4309 ;;
  4310                           
  4311                           
  4312                           ;psect for function _OSCILLATOR_Initialize
  4313  0FF7                     _OSCILLATOR_Initialize:	
  4314                           
  4315                           ;mcc.c: 94: OSCCON1 = 0x62;
  4316                           
  4317                           ;incstack = 0
  4318                           ; Regs used in _OSCILLATOR_Initialize: [wreg+status,2]
  4319  0FF7  3062               	movlw	98
  4320  0FF8  0031               	movlb	17	; select bank17
  4321  0FF9  008D               	movwf	13	;volatile
  4322                           
  4323                           ;mcc.c: 96: OSCCON3 = 0x00;
  4324  0FFA  018F               	clrf	15	;volatile
  4325                           
  4326                           ;mcc.c: 98: OSCEN = 0x00;
  4327  0FFB  0191               	clrf	17	;volatile
  4328                           
  4329                           ;mcc.c: 100: OSCFRQ = 0x02;
  4330  0FFC  3002               	movlw	2
  4331  0FFD  0093               	movwf	19	;volatile
  4332                           
  4333                           ;mcc.c: 102: OSCTUNE = 0x00;
  4334  0FFE  0192               	clrf	18	;volatile
  4335  0FFF  0008               	return
  4336  1000                     __end_of_OSCILLATOR_Initialize:	
  4337                           
  4338                           	psect	text4
  4339  075D                     __ptext4:	
  4340 ;; *************** function _I2C2_Initialize *****************
  4341 ;; Defined at:
  4342 ;;		line 198 in file "mcc_generated_files/i2c2.c"
  4343 ;; Parameters:    Size  Location     Type
  4344 ;;		None
  4345 ;; Auto vars:     Size  Location     Type
  4346 ;;		None
  4347 ;; Return value:  Size  Location     Type
  4348 ;;                  1    wreg      void 
  4349 ;; Registers used:
  4350 ;;		wreg, status,2
  4351 ;; Tracked objects:
  4352 ;;		On entry : 0/0
  4353 ;;		On exit  : 0/0
  4354 ;;		Unchanged: 0/0
  4355 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
  4356 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  4357 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  4358 ;;      Temps:          0       1       0       0       0       0       0       0       0       0       0       0       
      +0       0
  4359 ;;      Totals:         0       1       0       0       0       0       0       0       0       0       0       0       
      +0       0
  4360 ;;Total ram usage:        1 bytes
  4361 ;; Hardware stack levels used:    1
  4362 ;; Hardware stack levels required when called:    3
  4363 ;; This function calls:
  4364 ;;		Nothing
  4365 ;; This function is called by:
  4366 ;;		_SYSTEM_Initialize
  4367 ;; This function uses a non-reentrant model
  4368 ;;
  4369                           
  4370                           
  4371                           ;psect for function _I2C2_Initialize
  4372  075D                     _I2C2_Initialize:	
  4373                           
  4374                           ;i2c2.c: 200: i2c2_object.pTrHead = i2c2_tr_queue;
  4375                           
  4376                           ;incstack = 0
  4377                           ; Regs used in _I2C2_Initialize: [wreg+status,2]
  4378  075D  3062               	movlw	(low (_i2c2_tr_queue| 0))& (0+255)
  4379  075E  0020               	movlb	0	; select bank0
  4380  075F  00A0               	movwf	??_I2C2_Initialize
  4381  0760  0820               	movf	??_I2C2_Initialize,w
  4382  0761  00CD               	movwf	low ((_i2c2_object| 0+1))
  4383                           
  4384                           ;i2c2.c: 201: i2c2_object.pTrTail = i2c2_tr_queue;
  4385  0762  3062               	movlw	(low (_i2c2_tr_queue| 0))& (0+255)
  4386  0763  00A0               	movwf	??_I2C2_Initialize
  4387  0764  0820               	movf	??_I2C2_Initialize,w
  4388  0765  00CC               	movwf	_i2c2_object
  4389                           
  4390                           ;i2c2.c: 202: i2c2_object.trStatus.s.empty = 1;
  4391  0766  14CE               	bsf	_i2c2_object+2,1
  4392                           
  4393                           ;i2c2.c: 203: i2c2_object.trStatus.s.full = 0;
  4394  0767  104E               	bcf	_i2c2_object+2,0
  4395                           
  4396                           ;i2c2.c: 205: i2c2_object.i2cErrors = 0;
  4397  0768  01D0               	clrf	_i2c2_object+4
  4398                           
  4399                           ;i2c2.c: 208: SSP2STAT = 0x80;
  4400  0769  3080               	movlw	128
  4401  076A  0023               	movlb	3	; select bank3
  4402  076B  0099               	movwf	25	;volatile
  4403                           
  4404                           ;i2c2.c: 210: SSP2CON1 = 0x28;
  4405  076C  3028               	movlw	40
  4406  076D  009A               	movwf	26	;volatile
  4407                           
  4408                           ;i2c2.c: 212: SSP2CON3 = 0x00;
  4409  076E  019C               	clrf	28	;volatile
  4410                           
  4411                           ;i2c2.c: 214: SSP2ADD = 0x04;
  4412  076F  3004               	movlw	4
  4413  0770  0097               	movwf	23	;volatile
  4414                           
  4415                           ;i2c2.c: 218: PIR3bits.SSP2IF = 0;
  4416  0771  002E               	movlb	14	; select bank14
  4417  0772  110F               	bcf	15,2	;volatile
  4418                           
  4419                           ;i2c2.c: 220: PIE3bits.SSP2IE = 1;
  4420  0773  1519               	bsf	25,2	;volatile
  4421  0774  0008               	return
  4422  0775                     __end_of_I2C2_Initialize:	
  4423                           
  4424                           	psect	text5
  4425  07E6                     __ptext5:	
  4426 ;; *************** function _EUSART_Initialize *****************
  4427 ;; Defined at:
  4428 ;;		line 55 in file "mcc_generated_files/eusart.c"
  4429 ;; Parameters:    Size  Location     Type
  4430 ;;		None
  4431 ;; Auto vars:     Size  Location     Type
  4432 ;;		None
  4433 ;; Return value:  Size  Location     Type
  4434 ;;                  1    wreg      void 
  4435 ;; Registers used:
  4436 ;;		wreg, status,2
  4437 ;; Tracked objects:
  4438 ;;		On entry : 0/0
  4439 ;;		On exit  : 0/0
  4440 ;;		Unchanged: 0/0
  4441 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
  4442 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  4443 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  4444 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  4445 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  4446 ;;Total ram usage:        0 bytes
  4447 ;; Hardware stack levels used:    1
  4448 ;; Hardware stack levels required when called:    3
  4449 ;; This function calls:
  4450 ;;		Nothing
  4451 ;; This function is called by:
  4452 ;;		_SYSTEM_Initialize
  4453 ;; This function uses a non-reentrant model
  4454 ;;
  4455                           
  4456                           
  4457                           ;psect for function _EUSART_Initialize
  4458  07E6                     _EUSART_Initialize:	
  4459                           
  4460                           ;eusart.c: 60: BAUD1CON = 0x08;
  4461                           
  4462                           ;incstack = 0
  4463                           ; Regs used in _EUSART_Initialize: [wreg+status,2]
  4464  07E6  3008               	movlw	8
  4465  07E7  0022               	movlb	2	; select bank2
  4466  07E8  009F               	movwf	31	;volatile
  4467                           
  4468                           ;eusart.c: 63: RC1STA = 0x80;
  4469  07E9  3080               	movlw	128
  4470  07EA  009D               	movwf	29	;volatile
  4471                           
  4472                           ;eusart.c: 66: TX1STA = 0x24;
  4473  07EB  3024               	movlw	36
  4474  07EC  009E               	movwf	30	;volatile
  4475                           
  4476                           ;eusart.c: 69: SP1BRGL = 0x19;
  4477  07ED  3019               	movlw	25
  4478  07EE  009B               	movwf	27	;volatile
  4479                           
  4480                           ;eusart.c: 72: SP1BRGH = 0x00;
  4481  07EF  019C               	clrf	28	;volatile
  4482  07F0  0008               	return
  4483  07F1                     __end_of_EUSART_Initialize:	
  4484                           
  4485                           	psect	text6
  4486  0567                     __ptext6:	
  4487 ;; *************** function _EMC1001_PrintTemp *****************
  4488 ;; Defined at:
  4489 ;;		line 79 in file "main.c"
  4490 ;; Parameters:    Size  Location     Type
  4491 ;;		None
  4492 ;; Auto vars:     Size  Location     Type
  4493 ;;  templo          1   38[BANK0 ] unsigned char 
  4494 ;;  temp            1   37[BANK0 ] char 
  4495 ;; Return value:  Size  Location     Type
  4496 ;;                  1    wreg      void 
  4497 ;; Registers used:
  4498 ;;		wreg, fsr0l, fsr0h, fsr1l, fsr1h, status,2, status,0, pclath, cstack
  4499 ;; Tracked objects:
  4500 ;;		On entry : 0/0
  4501 ;;		On exit  : 0/0
  4502 ;;		Unchanged: 0/0
  4503 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
  4504 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  4505 ;;      Locals:         0       2       0       0       0       0       0       0       0       0       0       0       
      +0       0
  4506 ;;      Temps:          0       2       0       0       0       0       0       0       0       0       0       0       
      +0       0
  4507 ;;      Totals:         0       4       0       0       0       0       0       0       0       0       0       0       
      +0       0
  4508 ;;Total ram usage:        4 bytes
  4509 ;; Hardware stack levels used:    1
  4510 ;; Hardware stack levels required when called:    6
  4511 ;; This function calls:
  4512 ;;		_EMC1001_Read
  4513 ;;		___wmul
  4514 ;;		_printf
  4515 ;; This function is called by:
  4516 ;;		_main
  4517 ;; This function uses a non-reentrant model
  4518 ;;
  4519                           
  4520                           
  4521                           ;psect for function _EMC1001_PrintTemp
  4522  0567                     _EMC1001_PrintTemp:	
  4523                           
  4524                           ;main.c: 81: int8_t temp;
  4525                           ;main.c: 82: uint8_t templo;
  4526                           ;main.c: 84: if (EMC1001_Read(0x00, (uint8_t*)&temp)) {
  4527                           
  4528                           ;incstack = 0
  4529                           ; Regs used in _EMC1001_PrintTemp: [wreg-fsr1h+status,2+status,0+pclath+cstack]
  4530  0567  3045               	movlw	(low (EMC1001_PrintTemp@temp| 0))& (0+255)
  4531  0568  0020               	movlb	0	; select bank0
  4532  0569  00C3               	movwf	??_EMC1001_PrintTemp
  4533  056A  0843               	movf	??_EMC1001_PrintTemp,w
  4534  056B  00A7               	movwf	EMC1001_Read@pData
  4535  056C  3000               	movlw	0
  4536  056D  3186  263A  3185   	fcall	_EMC1001_Read
  4537  0570  3A00               	xorlw	0
  4538  0571  1903               	skipnz
  4539  0572  0008               	return
  4540                           
  4541                           ;main.c: 85: EMC1001_Read(0x02, &templo);
  4542  0573  3046               	movlw	(low (EMC1001_PrintTemp@templo| 0))& (0+255)
  4543  0574  0020               	movlb	0	; select bank0
  4544  0575  00C3               	movwf	??_EMC1001_PrintTemp
  4545  0576  0843               	movf	??_EMC1001_PrintTemp,w
  4546  0577  00A7               	movwf	EMC1001_Read@pData
  4547  0578  3002               	movlw	2
  4548  0579  3186  263A  3185   	fcall	_EMC1001_Read
  4549                           
  4550                           ;main.c: 86: templo = templo >> 6;
  4551  057C  0020               	movlb	0	; select bank0
  4552  057D  0846               	movf	EMC1001_PrintTemp@templo,w
  4553  057E  00C3               	movwf	??_EMC1001_PrintTemp
  4554  057F  3006               	movlw	6
  4555  0580                     u2085:	
  4556  0580  36C3               	lsrf	??_EMC1001_PrintTemp,f
  4557  0581  0B89               	decfsz	9,f
  4558  0582  2D80               	goto	u2085
  4559  0583  0843               	movf	??_EMC1001_PrintTemp,w
  4560  0584  00C4               	movwf	??_EMC1001_PrintTemp+1
  4561  0585  0844               	movf	??_EMC1001_PrintTemp+1,w
  4562  0586  00C6               	movwf	EMC1001_PrintTemp@templo
  4563                           
  4564                           ;main.c: 87: if (temp < 0) templo = 3-templo;
  4565  0587  1FC5               	btfss	EMC1001_PrintTemp@temp,7
  4566  0588  2D8F               	goto	l2245
  4567  0589  0346               	decf	EMC1001_PrintTemp@templo,w
  4568  058A  3AFF               	xorlw	255
  4569  058B  3E03               	addlw	3
  4570  058C  00C3               	movwf	??_EMC1001_PrintTemp
  4571  058D  0843               	movf	??_EMC1001_PrintTemp,w
  4572  058E  00C6               	movwf	EMC1001_PrintTemp@templo
  4573  058F                     l2245:	
  4574                           
  4575                           ;main.c: 88: printf("Current Temperature:\t%d.%d C\n", temp, templo*25);
  4576  058F  305D               	movlw	low (STR_14| (0+32768))
  4577  0590  00AE               	movwf	printf@f
  4578  0591  3083               	movlw	high (STR_14| (0+32768))
  4579  0592  00AF               	movwf	printf@f+1
  4580  0593  0845               	movf	EMC1001_PrintTemp@temp,w
  4581  0594  00B0               	movwf	?_printf+2
  4582  0595  01B1               	clrf	?_printf+3
  4583  0596  1BB0               	btfsc	?_printf+2,7
  4584  0597  03B1               	decf	?_printf+3,f
  4585  0598  0846               	movf	EMC1001_PrintTemp@templo,w
  4586  0599  00C3               	movwf	??_EMC1001_PrintTemp
  4587  059A  01C4               	clrf	??_EMC1001_PrintTemp+1
  4588  059B  0843               	movf	??_EMC1001_PrintTemp,w
  4589  059C  00A0               	movwf	___wmul@multiplier
  4590  059D  0844               	movf	??_EMC1001_PrintTemp+1,w
  4591  059E  00A1               	movwf	___wmul@multiplier+1
  4592  059F  3019               	movlw	25
  4593  05A0  00A2               	movwf	___wmul@multiplicand
  4594  05A1  3000               	movlw	0
  4595  05A2  00A3               	movwf	___wmul@multiplicand+1
  4596  05A3  3187  2741  3185   	fcall	___wmul
  4597  05A6  0020               	movlb	0	; select bank0
  4598  05A7  0821               	movf	?___wmul+1,w
  4599  05A8  00B3               	movwf	?_printf+5
  4600  05A9  0820               	movf	?___wmul,w
  4601  05AA  00B2               	movwf	?_printf+4
  4602  05AB  3180  202E         	fcall	_printf
  4603  05AD  0008               	return
  4604  05AE                     __end_of_EMC1001_PrintTemp:	
  4605                           
  4606                           	psect	text7
  4607  018F                     __ptext7:	
  4608 ;; *************** function _EMC1001_PrintInfo *****************
  4609 ;; Defined at:
  4610 ;;		line 41 in file "main.c"
  4611 ;; Parameters:    Size  Location     Type
  4612 ;;		None
  4613 ;; Auto vars:     Size  Location     Type
  4614 ;;  data            1   41[BANK0 ] unsigned char 
  4615 ;;  templo          1   40[BANK0 ] unsigned char 
  4616 ;;  temp            1   39[BANK0 ] char 
  4617 ;; Return value:  Size  Location     Type
  4618 ;;                  1    wreg      void 
  4619 ;; Registers used:
  4620 ;;		wreg, fsr0l, fsr0h, fsr1l, fsr1h, status,2, status,0, pclath, cstack
  4621 ;; Tracked objects:
  4622 ;;		On entry : 0/0
  4623 ;;		On exit  : 0/0
  4624 ;;		Unchanged: 0/0
  4625 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
  4626 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  4627 ;;      Locals:         0       5       0       0       0       0       0       0       0       0       0       0       
      +0       0
  4628 ;;      Temps:          0       2       0       0       0       0       0       0       0       0       0       0       
      +0       0
  4629 ;;      Totals:         0       7       0       0       0       0       0       0       0       0       0       0       
      +0       0
  4630 ;;Total ram usage:        7 bytes
  4631 ;; Hardware stack levels used:    1
  4632 ;; Hardware stack levels required when called:    7
  4633 ;; This function calls:
  4634 ;;		_EMC1001_Read
  4635 ;;		___wmul
  4636 ;;		_printf
  4637 ;;		_puts
  4638 ;; This function is called by:
  4639 ;;		_main
  4640 ;; This function uses a non-reentrant model
  4641 ;;
  4642                           
  4643                           
  4644                           ;psect for function _EMC1001_PrintInfo
  4645  018F                     _EMC1001_PrintInfo:	
  4646                           
  4647                           ;main.c: 43: uint8_t data;
  4648                           ;main.c: 44: int8_t temp;
  4649                           ;main.c: 45: uint8_t templo;
  4650                           ;main.c: 47: puts("Microchip EMC1001 Temperature Sensor Demo\n");
  4651                           
  4652                           ;incstack = 0
  4653                           ; Regs used in _EMC1001_PrintInfo: [wreg-fsr1h+status,2+status,0+pclath+cstack]
  4654  018F  30F1               	movlw	low (STR_1| (0+32768))
  4655  0190  0020               	movlb	0	; select bank0
  4656  0191  00A5               	movwf	puts@s
  4657  0192  3082               	movlw	high (STR_1| (0+32768))
  4658  0193  00A6               	movwf	puts@s+1
  4659  0194  3187  27DA  3181   	fcall	_puts
  4660                           
  4661                           ;main.c: 49: if (EMC1001_Read(0xfd,&data)) printf("Product ID:\t\tEMC1001%s\n", data ? "
      +                          -1" : "");
  4662  0197  3049               	movlw	(low (EMC1001_PrintInfo@data| 0))& (0+255)
  4663  0198  0020               	movlb	0	; select bank0
  4664  0199  00C3               	movwf	??_EMC1001_PrintInfo
  4665  019A  0843               	movf	??_EMC1001_PrintInfo,w
  4666  019B  00A7               	movwf	EMC1001_Read@pData
  4667  019C  30FD               	movlw	253
  4668  019D  3186  263A  3181   	fcall	_EMC1001_Read
  4669  01A0  3A00               	xorlw	0
  4670  01A1  1903               	skipnz
  4671  01A2  29BA               	goto	l2187
  4672  01A3  0020               	movlb	0	; select bank0
  4673  01A4  0849               	movf	EMC1001_PrintInfo@data,w
  4674  01A5  1D03               	btfss	3,2
  4675  01A6  29AB               	goto	l2183
  4676  01A7  30D9               	movlw	low ((STR_11+21)| (0+32768))
  4677  01A8  00C5               	movwf	_EMC1001_PrintInfo$597
  4678  01A9  3083               	movlw	high ((STR_11+21)| (0+32768))
  4679  01AA  29AE               	goto	L1
  4680  01AB                     l2183:	
  4681  01AB  3028               	movlw	low (STR_3| (0+32768))
  4682  01AC  00C5               	movwf	_EMC1001_PrintInfo$597
  4683  01AD  3084               	movlw	high (STR_3| (0+32768))
  4684  01AE                     L1:	
  4685  01AE  00C6               	movwf	_EMC1001_PrintInfo$597+1
  4686  01AF  3095               	movlw	low (STR_2| (0+32768))
  4687  01B0  00AE               	movwf	printf@f
  4688  01B1  3083               	movlw	high (STR_2| (0+32768))
  4689  01B2  00AF               	movwf	printf@f+1
  4690  01B3  0846               	movf	_EMC1001_PrintInfo$597+1,w
  4691  01B4  00B1               	movwf	(low ((?_printf| 0+2))+1)
  4692  01B5  0845               	movf	_EMC1001_PrintInfo$597,w
  4693  01B6  00B0               	movwf	low ((?_printf| 0+2))
  4694  01B7  3180  202E  3181   	fcall	_printf
  4695  01BA                     l2187:	
  4696                           
  4697                           ;main.c: 50: if (EMC1001_Read(0xfe,&data)) printf("Manufacturer ID:\t0x%X\n", data);
  4698  01BA  3049               	movlw	(low (EMC1001_PrintInfo@data| 0))& (0+255)
  4699  01BB  0020               	movlb	0	; select bank0
  4700  01BC  00C3               	movwf	??_EMC1001_PrintInfo
  4701  01BD  0843               	movf	??_EMC1001_PrintInfo,w
  4702  01BE  00A7               	movwf	EMC1001_Read@pData
  4703  01BF  30FE               	movlw	254
  4704  01C0  3186  263A  3181   	fcall	_EMC1001_Read
  4705  01C3  3A00               	xorlw	0
  4706  01C4  1903               	skipnz
  4707  01C5  29D5               	goto	l2191
  4708  01C6  30AD               	movlw	low (STR_5| (0+32768))
  4709  01C7  0020               	movlb	0	; select bank0
  4710  01C8  00AE               	movwf	printf@f
  4711  01C9  3083               	movlw	high (STR_5| (0+32768))
  4712  01CA  00AF               	movwf	printf@f+1
  4713  01CB  0849               	movf	EMC1001_PrintInfo@data,w
  4714  01CC  00C3               	movwf	??_EMC1001_PrintInfo
  4715  01CD  01C4               	clrf	??_EMC1001_PrintInfo+1
  4716  01CE  0843               	movf	??_EMC1001_PrintInfo,w
  4717  01CF  00B0               	movwf	?_printf+2
  4718  01D0  0844               	movf	??_EMC1001_PrintInfo+1,w
  4719  01D1  00B1               	movwf	?_printf+3
  4720  01D2  3180  202E  3181   	fcall	_printf
  4721  01D5                     l2191:	
  4722                           
  4723                           ;main.c: 51: if (EMC1001_Read(0xff,&data)) printf("Revision :\t\t%d\n", data);
  4724  01D5  3049               	movlw	(low (EMC1001_PrintInfo@data| 0))& (0+255)
  4725  01D6  0020               	movlb	0	; select bank0
  4726  01D7  00C3               	movwf	??_EMC1001_PrintInfo
  4727  01D8  0843               	movf	??_EMC1001_PrintInfo,w
  4728  01D9  00A7               	movwf	EMC1001_Read@pData
  4729  01DA  30FF               	movlw	255
  4730  01DB  3186  263A  3181   	fcall	_EMC1001_Read
  4731  01DE  3A00               	xorlw	0
  4732  01DF  1903               	skipnz
  4733  01E0  29F0               	goto	l2195
  4734  01E1  3011               	movlw	low (STR_6| (0+32768))
  4735  01E2  0020               	movlb	0	; select bank0
  4736  01E3  00AE               	movwf	printf@f
  4737  01E4  3084               	movlw	high (STR_6| (0+32768))
  4738  01E5  00AF               	movwf	printf@f+1
  4739  01E6  0849               	movf	EMC1001_PrintInfo@data,w
  4740  01E7  00C3               	movwf	??_EMC1001_PrintInfo
  4741  01E8  01C4               	clrf	??_EMC1001_PrintInfo+1
  4742  01E9  0843               	movf	??_EMC1001_PrintInfo,w
  4743  01EA  00B0               	movwf	?_printf+2
  4744  01EB  0844               	movf	??_EMC1001_PrintInfo+1,w
  4745  01EC  00B1               	movwf	?_printf+3
  4746  01ED  3180  202E  3181   	fcall	_printf
  4747  01F0                     l2195:	
  4748                           
  4749                           ;main.c: 53: puts("\n");
  4750  01F0  30D8               	movlw	low ((STR_11+20)| (0+32768))
  4751  01F1  0020               	movlb	0	; select bank0
  4752  01F2  00A5               	movwf	puts@s
  4753  01F3  3083               	movlw	high ((STR_11+20)| (0+32768))
  4754  01F4  00A6               	movwf	puts@s+1
  4755  01F5  3187  27DA  3181   	fcall	_puts
  4756                           
  4757                           ;main.c: 55: if (EMC1001_Read(0x04, &data)) printf("Conversion rate:\t%x\n", data);
  4758  01F8  3049               	movlw	(low (EMC1001_PrintInfo@data| 0))& (0+255)
  4759  01F9  0020               	movlb	0	; select bank0
  4760  01FA  00C3               	movwf	??_EMC1001_PrintInfo
  4761  01FB  0843               	movf	??_EMC1001_PrintInfo,w
  4762  01FC  00A7               	movwf	EMC1001_Read@pData
  4763  01FD  3004               	movlw	4
  4764  01FE  3186  263A  3181   	fcall	_EMC1001_Read
  4765  0201  3A00               	xorlw	0
  4766  0202  1903               	skipnz
  4767  0203  2A13               	goto	l2201
  4768  0204  30DA               	movlw	low (STR_8| (0+32768))
  4769  0205  0020               	movlb	0	; select bank0
  4770  0206  00AE               	movwf	printf@f
  4771  0207  3083               	movlw	high (STR_8| (0+32768))
  4772  0208  00AF               	movwf	printf@f+1
  4773  0209  0849               	movf	EMC1001_PrintInfo@data,w
  4774  020A  00C3               	movwf	??_EMC1001_PrintInfo
  4775  020B  01C4               	clrf	??_EMC1001_PrintInfo+1
  4776  020C  0843               	movf	??_EMC1001_PrintInfo,w
  4777  020D  00B0               	movwf	?_printf+2
  4778  020E  0844               	movf	??_EMC1001_PrintInfo+1,w
  4779  020F  00B1               	movwf	?_printf+3
  4780  0210  3180  202E  3181   	fcall	_printf
  4781  0213                     l2201:	
  4782                           
  4783                           ;main.c: 57: if (EMC1001_Read(0x05, (uint8_t*)&temp)) {
  4784  0213  3047               	movlw	(low (EMC1001_PrintInfo@temp| 0))& (0+255)
  4785  0214  0020               	movlb	0	; select bank0
  4786  0215  00C3               	movwf	??_EMC1001_PrintInfo
  4787  0216  0843               	movf	??_EMC1001_PrintInfo,w
  4788  0217  00A7               	movwf	EMC1001_Read@pData
  4789  0218  3005               	movlw	5
  4790  0219  3186  263A  3181   	fcall	_EMC1001_Read
  4791  021C  3A00               	xorlw	0
  4792  021D  1903               	skipnz
  4793  021E  2A5A               	goto	l2213
  4794                           
  4795                           ;main.c: 58: EMC1001_Read(0x06, &templo);
  4796  021F  3048               	movlw	(low (EMC1001_PrintInfo@templo| 0))& (0+255)
  4797  0220  0020               	movlb	0	; select bank0
  4798  0221  00C3               	movwf	??_EMC1001_PrintInfo
  4799  0222  0843               	movf	??_EMC1001_PrintInfo,w
  4800  0223  00A7               	movwf	EMC1001_Read@pData
  4801  0224  3006               	movlw	6
  4802  0225  3186  263A  3181   	fcall	_EMC1001_Read
  4803                           
  4804                           ;main.c: 59: templo = templo >> 6;
  4805  0228  0020               	movlb	0	; select bank0
  4806  0229  0848               	movf	EMC1001_PrintInfo@templo,w
  4807  022A  00C3               	movwf	??_EMC1001_PrintInfo
  4808  022B  3006               	movlw	6
  4809  022C                     u2005:	
  4810  022C  36C3               	lsrf	??_EMC1001_PrintInfo,f
  4811  022D  0B89               	decfsz	9,f
  4812  022E  2A2C               	goto	u2005
  4813  022F  0843               	movf	??_EMC1001_PrintInfo,w
  4814  0230  00C4               	movwf	??_EMC1001_PrintInfo+1
  4815  0231  0844               	movf	??_EMC1001_PrintInfo+1,w
  4816  0232  00C8               	movwf	EMC1001_PrintInfo@templo
  4817                           
  4818                           ;main.c: 60: if (temp < 0) templo = 3-templo;
  4819  0233  1FC7               	btfss	EMC1001_PrintInfo@temp,7
  4820  0234  2A3B               	goto	l2211
  4821  0235  0348               	decf	EMC1001_PrintInfo@templo,w
  4822  0236  3AFF               	xorlw	255
  4823  0237  3E03               	addlw	3
  4824  0238  00C3               	movwf	??_EMC1001_PrintInfo
  4825  0239  0843               	movf	??_EMC1001_PrintInfo,w
  4826  023A  00C8               	movwf	EMC1001_PrintInfo@templo
  4827  023B                     l2211:	
  4828                           
  4829                           ;main.c: 61: printf("Temperature high limit:\t%d.%d C\n", temp, templo*25);
  4830  023B  301C               	movlw	low (STR_9| (0+32768))
  4831  023C  00AE               	movwf	printf@f
  4832  023D  3083               	movlw	high (STR_9| (0+32768))
  4833  023E  00AF               	movwf	printf@f+1
  4834  023F  0847               	movf	EMC1001_PrintInfo@temp,w
  4835  0240  00B0               	movwf	?_printf+2
  4836  0241  01B1               	clrf	?_printf+3
  4837  0242  1BB0               	btfsc	?_printf+2,7
  4838  0243  03B1               	decf	?_printf+3,f
  4839  0244  0848               	movf	EMC1001_PrintInfo@templo,w
  4840  0245  00C3               	movwf	??_EMC1001_PrintInfo
  4841  0246  01C4               	clrf	??_EMC1001_PrintInfo+1
  4842  0247  0843               	movf	??_EMC1001_PrintInfo,w
  4843  0248  00A0               	movwf	___wmul@multiplier
  4844  0249  0844               	movf	??_EMC1001_PrintInfo+1,w
  4845  024A  00A1               	movwf	___wmul@multiplier+1
  4846  024B  3019               	movlw	25
  4847  024C  00A2               	movwf	___wmul@multiplicand
  4848  024D  3000               	movlw	0
  4849  024E  00A3               	movwf	___wmul@multiplicand+1
  4850  024F  3187  2741  3181   	fcall	___wmul
  4851  0252  0020               	movlb	0	; select bank0
  4852  0253  0821               	movf	?___wmul+1,w
  4853  0254  00B3               	movwf	?_printf+5
  4854  0255  0820               	movf	?___wmul,w
  4855  0256  00B2               	movwf	?_printf+4
  4856  0257  3180  202E  3181   	fcall	_printf
  4857  025A                     l2213:	
  4858                           
  4859                           ;main.c: 62: }
  4860                           ;main.c: 64: if (EMC1001_Read(0x07, (uint8_t*)&temp)) {
  4861  025A  3047               	movlw	(low (EMC1001_PrintInfo@temp| 0))& (0+255)
  4862  025B  0020               	movlb	0	; select bank0
  4863  025C  00C3               	movwf	??_EMC1001_PrintInfo
  4864  025D  0843               	movf	??_EMC1001_PrintInfo,w
  4865  025E  00A7               	movwf	EMC1001_Read@pData
  4866  025F  3007               	movlw	7
  4867  0260  3186  263A  3181   	fcall	_EMC1001_Read
  4868  0263  3A00               	xorlw	0
  4869  0264  1903               	skipnz
  4870  0265  2AA1               	goto	l2225
  4871                           
  4872                           ;main.c: 65: EMC1001_Read(0x08, &templo);
  4873  0266  3048               	movlw	(low (EMC1001_PrintInfo@templo| 0))& (0+255)
  4874  0267  0020               	movlb	0	; select bank0
  4875  0268  00C3               	movwf	??_EMC1001_PrintInfo
  4876  0269  0843               	movf	??_EMC1001_PrintInfo,w
  4877  026A  00A7               	movwf	EMC1001_Read@pData
  4878  026B  3008               	movlw	8
  4879  026C  3186  263A  3181   	fcall	_EMC1001_Read
  4880                           
  4881                           ;main.c: 66: templo = templo >> 6;
  4882  026F  0020               	movlb	0	; select bank0
  4883  0270  0848               	movf	EMC1001_PrintInfo@templo,w
  4884  0271  00C3               	movwf	??_EMC1001_PrintInfo
  4885  0272  3006               	movlw	6
  4886  0273                     u2035:	
  4887  0273  36C3               	lsrf	??_EMC1001_PrintInfo,f
  4888  0274  0B89               	decfsz	9,f
  4889  0275  2A73               	goto	u2035
  4890  0276  0843               	movf	??_EMC1001_PrintInfo,w
  4891  0277  00C4               	movwf	??_EMC1001_PrintInfo+1
  4892  0278  0844               	movf	??_EMC1001_PrintInfo+1,w
  4893  0279  00C8               	movwf	EMC1001_PrintInfo@templo
  4894                           
  4895                           ;main.c: 67: if (temp < 0) templo = 3-templo;
  4896  027A  1FC7               	btfss	EMC1001_PrintInfo@temp,7
  4897  027B  2A82               	goto	l2223
  4898  027C  0348               	decf	EMC1001_PrintInfo@templo,w
  4899  027D  3AFF               	xorlw	255
  4900  027E  3E03               	addlw	3
  4901  027F  00C3               	movwf	??_EMC1001_PrintInfo
  4902  0280  0843               	movf	??_EMC1001_PrintInfo,w
  4903  0281  00C8               	movwf	EMC1001_PrintInfo@templo
  4904  0282                     l2223:	
  4905                           
  4906                           ;main.c: 68: printf("Temperature low limit:\t%d.%d C\n", temp, templo*25);
  4907  0282  303D               	movlw	low (STR_10| (0+32768))
  4908  0283  00AE               	movwf	printf@f
  4909  0284  3083               	movlw	high (STR_10| (0+32768))
  4910  0285  00AF               	movwf	printf@f+1
  4911  0286  0847               	movf	EMC1001_PrintInfo@temp,w
  4912  0287  00B0               	movwf	?_printf+2
  4913  0288  01B1               	clrf	?_printf+3
  4914  0289  1BB0               	btfsc	?_printf+2,7
  4915  028A  03B1               	decf	?_printf+3,f
  4916  028B  0848               	movf	EMC1001_PrintInfo@templo,w
  4917  028C  00C3               	movwf	??_EMC1001_PrintInfo
  4918  028D  01C4               	clrf	??_EMC1001_PrintInfo+1
  4919  028E  0843               	movf	??_EMC1001_PrintInfo,w
  4920  028F  00A0               	movwf	___wmul@multiplier
  4921  0290  0844               	movf	??_EMC1001_PrintInfo+1,w
  4922  0291  00A1               	movwf	___wmul@multiplier+1
  4923  0292  3019               	movlw	25
  4924  0293  00A2               	movwf	___wmul@multiplicand
  4925  0294  3000               	movlw	0
  4926  0295  00A3               	movwf	___wmul@multiplicand+1
  4927  0296  3187  2741  3181   	fcall	___wmul
  4928  0299  0020               	movlb	0	; select bank0
  4929  029A  0821               	movf	?___wmul+1,w
  4930  029B  00B3               	movwf	?_printf+5
  4931  029C  0820               	movf	?___wmul,w
  4932  029D  00B2               	movwf	?_printf+4
  4933  029E  3180  202E  3181   	fcall	_printf
  4934  02A1                     l2225:	
  4935                           
  4936                           ;main.c: 69: }
  4937                           ;main.c: 72: if (EMC1001_Read(0x20, &data)) printf("Thermal limit:\t\t%d C\n", data);
  4938  02A1  3049               	movlw	(low (EMC1001_PrintInfo@data| 0))& (0+255)
  4939  02A2  0020               	movlb	0	; select bank0
  4940  02A3  00C3               	movwf	??_EMC1001_PrintInfo
  4941  02A4  0843               	movf	??_EMC1001_PrintInfo,w
  4942  02A5  00A7               	movwf	EMC1001_Read@pData
  4943  02A6  3020               	movlw	32
  4944  02A7  3186  263A  3181   	fcall	_EMC1001_Read
  4945  02AA  3A00               	xorlw	0
  4946  02AB  1903               	skipnz
  4947  02AC  2ABC               	goto	l2229
  4948  02AD  30C4               	movlw	low (STR_11| (0+32768))
  4949  02AE  0020               	movlb	0	; select bank0
  4950  02AF  00AE               	movwf	printf@f
  4951  02B0  3083               	movlw	high (STR_11| (0+32768))
  4952  02B1  00AF               	movwf	printf@f+1
  4953  02B2  0849               	movf	EMC1001_PrintInfo@data,w
  4954  02B3  00C3               	movwf	??_EMC1001_PrintInfo
  4955  02B4  01C4               	clrf	??_EMC1001_PrintInfo+1
  4956  02B5  0843               	movf	??_EMC1001_PrintInfo,w
  4957  02B6  00B0               	movwf	?_printf+2
  4958  02B7  0844               	movf	??_EMC1001_PrintInfo+1,w
  4959  02B8  00B1               	movwf	?_printf+3
  4960  02B9  3180  202E  3181   	fcall	_printf
  4961  02BC                     l2229:	
  4962                           
  4963                           ;main.c: 73: if (EMC1001_Read(0x21, &data)) printf("Thermal hysteresis:\t%d C\n", data);
  4964  02BC  3049               	movlw	(low (EMC1001_PrintInfo@data| 0))& (0+255)
  4965  02BD  0020               	movlb	0	; select bank0
  4966  02BE  00C3               	movwf	??_EMC1001_PrintInfo
  4967  02BF  0843               	movf	??_EMC1001_PrintInfo,w
  4968  02C0  00A7               	movwf	EMC1001_Read@pData
  4969  02C1  3021               	movlw	33
  4970  02C2  3186  263A  3181   	fcall	_EMC1001_Read
  4971  02C5  3A00               	xorlw	0
  4972  02C6  1903               	skipnz
  4973  02C7  2AD7               	goto	l2233
  4974  02C8  307B               	movlw	low (STR_12| (0+32768))
  4975  02C9  0020               	movlb	0	; select bank0
  4976  02CA  00AE               	movwf	printf@f
  4977  02CB  3083               	movlw	high (STR_12| (0+32768))
  4978  02CC  00AF               	movwf	printf@f+1
  4979  02CD  0849               	movf	EMC1001_PrintInfo@data,w
  4980  02CE  00C3               	movwf	??_EMC1001_PrintInfo
  4981  02CF  01C4               	clrf	??_EMC1001_PrintInfo+1
  4982  02D0  0843               	movf	??_EMC1001_PrintInfo,w
  4983  02D1  00B0               	movwf	?_printf+2
  4984  02D2  0844               	movf	??_EMC1001_PrintInfo+1,w
  4985  02D3  00B1               	movwf	?_printf+3
  4986  02D4  3180  202E  3181   	fcall	_printf
  4987  02D7                     l2233:	
  4988                           
  4989                           ;main.c: 75: puts("\n");
  4990  02D7  30D8               	movlw	low ((STR_11+20)| (0+32768))
  4991  02D8  0020               	movlb	0	; select bank0
  4992  02D9  00A5               	movwf	puts@s
  4993  02DA  3083               	movlw	high ((STR_11+20)| (0+32768))
  4994  02DB  00A6               	movwf	puts@s+1
  4995  02DC  3187  27DA         	fcall	_puts
  4996  02DE  0008               	return
  4997  02DF                     __end_of_EMC1001_PrintInfo:	
  4998                           
  4999                           	psect	text8
  5000  07DA                     __ptext8:	
  5001 ;; *************** function _puts *****************
  5002 ;; Defined at:
  5003 ;;		line 8 in file "/opt/microchip/xc8/v1.41/sources/common/puts.c"
  5004 ;; Parameters:    Size  Location     Type
  5005 ;;  s               2    5[BANK0 ] PTR const unsigned char 
  5006 ;;		 -> STR_13(2), STR_7(2), STR_1(43), 
  5007 ;; Auto vars:     Size  Location     Type
  5008 ;;		None
  5009 ;; Return value:  Size  Location     Type
  5010 ;;                  2    5[BANK0 ] int 
  5011 ;; Registers used:
  5012 ;;		wreg, fsr0l, fsr0h, status,2, status,0, pclath, cstack
  5013 ;; Tracked objects:
  5014 ;;		On entry : 0/0
  5015 ;;		On exit  : 0/0
  5016 ;;		Unchanged: 0/0
  5017 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
  5018 ;;      Params:         0       2       0       0       0       0       0       0       0       0       0       0       
      +0       0
  5019 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  5020 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  5021 ;;      Totals:         0       2       0       0       0       0       0       0       0       0       0       0       
      +0       0
  5022 ;;Total ram usage:        2 bytes
  5023 ;; Hardware stack levels used:    1
  5024 ;; Hardware stack levels required when called:    6
  5025 ;; This function calls:
  5026 ;;		_cputs
  5027 ;;		_putch
  5028 ;; This function is called by:
  5029 ;;		_EMC1001_PrintInfo
  5030 ;; This function uses a non-reentrant model
  5031 ;;
  5032                           
  5033                           
  5034                           ;psect for function _puts
  5035  07DA                     _puts:	
  5036                           
  5037                           ;incstack = 0
  5038                           ; Regs used in _puts: [wreg-fsr0h+status,2+status,0+pclath+cstack]
  5039  07DA  0020               	movlb	0	; select bank0
  5040  07DB  0826               	movf	puts@s+1,w
  5041  07DC  00A3               	movwf	cputs@s+1
  5042  07DD  0825               	movf	puts@s,w
  5043  07DE  00A2               	movwf	cputs@s
  5044  07DF  3187  27A5  3187   	fcall	_cputs
  5045  07E2  300A               	movlw	10
  5046  07E3  318F  27EB         	fcall	_putch
  5047  07E5  0008               	return
  5048  07E6                     __end_of_puts:	
  5049                           
  5050                           	psect	text9
  5051  07A5                     __ptext9:	
  5052 ;; *************** function _cputs *****************
  5053 ;; Defined at:
  5054 ;;		line 4 in file "/opt/microchip/xc8/v1.41/sources/common/cputs.c"
  5055 ;; Parameters:    Size  Location     Type
  5056 ;;  s               2    2[BANK0 ] PTR const unsigned char 
  5057 ;;		 -> STR_13(2), STR_7(2), STR_1(43), 
  5058 ;; Auto vars:     Size  Location     Type
  5059 ;;		None
  5060 ;; Return value:  Size  Location     Type
  5061 ;;                  1    wreg      void 
  5062 ;; Registers used:
  5063 ;;		wreg, fsr0l, fsr0h, status,2, status,0, pclath, cstack
  5064 ;; Tracked objects:
  5065 ;;		On entry : 0/0
  5066 ;;		On exit  : 0/0
  5067 ;;		Unchanged: 0/0
  5068 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
  5069 ;;      Params:         0       2       0       0       0       0       0       0       0       0       0       0       
      +0       0
  5070 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  5071 ;;      Temps:          0       1       0       0       0       0       0       0       0       0       0       0       
      +0       0
  5072 ;;      Totals:         0       3       0       0       0       0       0       0       0       0       0       0       
      +0       0
  5073 ;;Total ram usage:        3 bytes
  5074 ;; Hardware stack levels used:    1
  5075 ;; Hardware stack levels required when called:    5
  5076 ;; This function calls:
  5077 ;;		_putch
  5078 ;; This function is called by:
  5079 ;;		_puts
  5080 ;; This function uses a non-reentrant model
  5081 ;;
  5082                           
  5083                           
  5084                           ;psect for function _cputs
  5085  07A5                     _cputs:	
  5086  07A5                     l2015:	
  5087                           ;incstack = 0
  5088                           ; Regs used in _cputs: [wreg-fsr0h+status,2+status,0+pclath+cstack]
  5089                           
  5090  07A5  0020               	movlb	0	; select bank0
  5091  07A6  0822               	movf	cputs@s,w
  5092  07A7  0084               	movwf	4
  5093  07A8  0823               	movf	cputs@s+1,w
  5094  07A9  0085               	movwf	5
  5095  07AA  0012               	moviw fsr0++
  5096  07AB  1903               	btfsc	3,2
  5097  07AC  0008               	return
  5098  07AD  0020               	movlb	0	; select bank0
  5099  07AE  0822               	movf	cputs@s,w
  5100  07AF  0084               	movwf	4
  5101  07B0  0823               	movf	cputs@s+1,w
  5102  07B1  0085               	movwf	5
  5103  07B2  0800               	movf	0,w	;code access
  5104  07B3  318F  27EB  3187   	fcall	_putch
  5105  07B6  3001               	movlw	1
  5106  07B7  0020               	movlb	0	; select bank0
  5107  07B8  07A2               	addwf	cputs@s,f
  5108  07B9  3000               	movlw	0
  5109  07BA  3DA3               	addwfc	cputs@s+1,f
  5110  07BB  2FA5               	goto	l2015
  5111  07BC                     __end_of_cputs:	
  5112                           
  5113                           	psect	text10
  5114  002E                     __ptext10:	
  5115 ;; *************** function _printf *****************
  5116 ;; Defined at:
  5117 ;;		line 464 in file "/opt/microchip/xc8/v1.41/sources/common/doprnt.c"
  5118 ;; Parameters:    Size  Location     Type
  5119 ;;  f               2   14[BANK0 ] PTR const unsigned char 
  5120 ;;		 -> STR_15(2), STR_14(30), STR_12(26), STR_11(22), 
  5121 ;;		 -> STR_10(32), STR_9(33), STR_8(21), STR_6(16), 
  5122 ;;		 -> STR_5(23), STR_2(24), 
  5123 ;; Auto vars:     Size  Location     Type
  5124 ;;  idx             1   24[BANK0 ] unsigned char 
  5125 ;;  tmpval          4    0        struct .
  5126 ;;  val             2   32[BANK0 ] unsigned int 
  5127 ;;  cp              2   28[BANK0 ] PTR const unsigned char 
  5128 ;;		 -> STR_16(7), STR_4(1), STR_3(3), I2C2_ISR@i2c_address(2), 
  5129 ;;  len             2    0        unsigned int 
  5130 ;;  c               1   34[BANK0 ] char 
  5131 ;;  flag            1   31[BANK0 ] unsigned char 
  5132 ;;  ap              1   30[BANK0 ] PTR void [1]
  5133 ;;		 -> ?_printf(2), 
  5134 ;;  prec            1   27[BANK0 ] char 
  5135 ;; Return value:  Size  Location     Type
  5136 ;;                  2   14[BANK0 ] int 
  5137 ;; Registers used:
  5138 ;;		wreg, fsr0l, fsr0h, fsr1l, fsr1h, status,2, status,0, pclath, cstack
  5139 ;; Tracked objects:
  5140 ;;		On entry : 0/0
  5141 ;;		On exit  : 0/0
  5142 ;;		Unchanged: 0/0
  5143 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
  5144 ;;      Params:         0       6       0       0       0       0       0       0       0       0       0       0       
      +0       0
  5145 ;;      Locals:         0      11       0       0       0       0       0       0       0       0       0       0       
      +0       0
  5146 ;;      Temps:          0       4       0       0       0       0       0       0       0       0       0       0       
      +0       0
  5147 ;;      Totals:         0      21       0       0       0       0       0       0       0       0       0       0       
      +0       0
  5148 ;;Total ram usage:       21 bytes
  5149 ;; Hardware stack levels used:    1
  5150 ;; Hardware stack levels required when called:    5
  5151 ;; This function calls:
  5152 ;;		___lwdiv
  5153 ;;		___lwmod
  5154 ;;		_putch
  5155 ;; This function is called by:
  5156 ;;		_EMC1001_PrintInfo
  5157 ;;		_EMC1001_PrintTemp
  5158 ;;		_main
  5159 ;; This function uses a non-reentrant model
  5160 ;;
  5161                           
  5162                           
  5163                           ;psect for function _printf
  5164  002E                     _printf:	
  5165                           
  5166                           ;doprnt.c: 466: va_list ap;
  5167                           ;doprnt.c: 499: signed char c;
  5168                           ;doprnt.c: 506: signed char prec;
  5169                           ;doprnt.c: 508: unsigned char flag;
  5170                           ;doprnt.c: 523: union {
  5171                           ;doprnt.c: 524: unsigned long vd;
  5172                           ;doprnt.c: 525: double integ;
  5173                           ;doprnt.c: 526: } tmpval;
  5174                           ;doprnt.c: 528: unsigned int val;
  5175                           ;doprnt.c: 529: unsigned len;
  5176                           ;doprnt.c: 530: const char * cp;
  5177                           ;doprnt.c: 533: *ap = __va_start();
  5178                           
  5179                           ;incstack = 0
  5180                           ; Regs used in _printf: [wreg-fsr1h+status,2+status,0+pclath+cstack]
  5181  002E  3030               	movlw	(low ((?_printf| 0+2)))& (0+255)
  5182  002F  0020               	movlb	0	; select bank0
  5183  0030  00B4               	movwf	??_printf
  5184  0031  0834               	movf	??_printf,w
  5185  0032  00BE               	movwf	printf@ap
  5186  0033                     l2157:	
  5187                           ;doprnt.c: 536: while(c = *f++) {
  5188                           
  5189  0033  0020               	movlb	0	; select bank0
  5190  0034  082F               	movf	printf@f+1,w
  5191  0035  00B5               	movwf	??_printf+1
  5192  0036  082E               	movf	printf@f,w
  5193  0037  00B4               	movwf	??_printf
  5194  0038  0AAE               	incf	printf@f,f
  5195  0039  1903               	skipnz
  5196  003A  0AAF               	incf	printf@f+1,f
  5197  003B  0834               	movf	??_printf,w
  5198  003C  0084               	movwf	4
  5199  003D  0835               	movf	??_printf+1,w
  5200  003E  0085               	movwf	5
  5201  003F  0800               	movf	0,w	;code access
  5202  0040  00B6               	movwf	??_printf+2
  5203  0041  0836               	movf	??_printf+2,w
  5204  0042  00C2               	movwf	printf@c
  5205  0043  0842               	movf	printf@c,w
  5206  0044  1903               	btfsc	3,2
  5207  0045  0008               	return
  5208                           
  5209                           ;doprnt.c: 538: if(c != '%')
  5210  0046  3025               	movlw	37
  5211  0047  0642               	xorwf	printf@c,w
  5212  0048  1903               	btfsc	3,2
  5213  0049  284F               	goto	l2073
  5214                           
  5215                           ;doprnt.c: 540: {
  5216                           ;doprnt.c: 541: (putch(c) );
  5217  004A  0842               	movf	printf@c,w
  5218  004B  318F  27EB  3180   	fcall	_putch
  5219                           
  5220                           ;doprnt.c: 542: continue;
  5221  004E  2833               	goto	l2157
  5222  004F                     l2073:	
  5223                           
  5224                           ;doprnt.c: 543: }
  5225                           ;doprnt.c: 548: flag = 0;
  5226  004F  0020               	movlb	0	; select bank0
  5227  0050  01BF               	clrf	printf@flag
  5228                           
  5229                           ;doprnt.c: 635: switch(c = *f++) {
  5230  0051  287D               	goto	l2091
  5231  0052                     l348:	
  5232                           ;doprnt.c: 712: case 'X':
  5233                           
  5234                           ;doprnt.c: 698: case 'i':
  5235                           ;doprnt.c: 699: break;
  5236                           
  5237                           ;doprnt.c: 697: case 'd':
  5238                           
  5239                           ;doprnt.c: 638: goto alldone;
  5240                           
  5241                           ;doprnt.c: 637: case 0:
  5242                           
  5243                           
  5244                           ;doprnt.c: 714: flag |= 0x20;
  5245  0052  16BF               	bsf	printf@flag,5
  5246  0053                     l349:	
  5247                           ;doprnt.c: 718: case 'x':
  5248                           
  5249                           
  5250                           ;doprnt.c: 721: flag |= 0x80;
  5251  0053  17BF               	bsf	printf@flag,7
  5252                           
  5253                           ;doprnt.c: 723: break;
  5254  0054  289D               	goto	l347
  5255  0055                     l2075:	
  5256                           ;doprnt.c: 728: case 's':
  5257                           
  5258                           
  5259                           ;doprnt.c: 734: cp = (*(const char * *)__va_arg((*(const char * **)ap), (const char *)0)
      +                          );
  5260  0055  083E               	movf	printf@ap,w
  5261  0056  0086               	movwf	6
  5262  0057  0187               	clrf	7
  5263  0058  3F40               	moviw [0]fsr1
  5264  0059  00BC               	movwf	printf@cp
  5265  005A  3F41               	moviw [1]fsr1
  5266  005B  00BD               	movwf	printf@cp+1
  5267  005C  3002               	movlw	2
  5268  005D  00B4               	movwf	??_printf
  5269  005E  0834               	movf	??_printf,w
  5270  005F  07BE               	addwf	printf@ap,f
  5271                           
  5272                           ;doprnt.c: 740: if(!cp)
  5273  0060  083C               	movf	printf@cp,w
  5274  0061  043D               	iorwf	printf@cp+1,w
  5275  0062  1D03               	btfss	3,2
  5276  0063  2868               	goto	l2087
  5277                           
  5278                           ;doprnt.c: 741: cp = "(null)";
  5279  0064  3021               	movlw	low (STR_16| (0+32768))
  5280  0065  00BC               	movwf	printf@cp
  5281  0066  3084               	movlw	high (STR_16| (0+32768))
  5282  0067  00BD               	movwf	printf@cp+1
  5283  0068                     l2087:	
  5284                           ;doprnt.c: 777: while(*cp)
  5285                           
  5286  0068  083C               	movf	printf@cp,w
  5287  0069  0084               	movwf	4
  5288  006A  083D               	movf	printf@cp+1,w
  5289  006B  0085               	movwf	5
  5290  006C  0012               	moviw fsr0++
  5291  006D  1903               	btfsc	3,2
  5292  006E  2833               	goto	l2157
  5293                           
  5294                           ;doprnt.c: 778: (putch(*cp++) );
  5295  006F  083C               	movf	printf@cp,w
  5296  0070  0084               	movwf	4
  5297  0071  083D               	movf	printf@cp+1,w
  5298  0072  0085               	movwf	5
  5299  0073  0800               	movf	0,w	;code access
  5300  0074  318F  27EB  3180   	fcall	_putch
  5301  0077  3001               	movlw	1
  5302  0078  0020               	movlb	0	; select bank0
  5303  0079  07BC               	addwf	printf@cp,f
  5304  007A  3000               	movlw	0
  5305  007B  3DBD               	addwfc	printf@cp+1,f
  5306  007C  2868               	goto	l2087
  5307  007D                     l2091:	
  5308                           ;doprnt.c: 822: }
  5309                           
  5310                           ;doprnt.c: 813: continue;
  5311                           
  5312                           ;doprnt.c: 802: default:
  5313                           
  5314                           ;doprnt.c: 779: continue;
  5315                           
  5316  007D  082F               	movf	printf@f+1,w
  5317  007E  00B5               	movwf	??_printf+1
  5318  007F  082E               	movf	printf@f,w
  5319  0080  00B4               	movwf	??_printf
  5320  0081  0AAE               	incf	printf@f,f
  5321  0082  1903               	skipnz
  5322  0083  0AAF               	incf	printf@f+1,f
  5323  0084  0834               	movf	??_printf,w
  5324  0085  0084               	movwf	4
  5325  0086  0835               	movf	??_printf+1,w
  5326  0087  0085               	movwf	5
  5327  0088  0800               	movf	0,w	;code access
  5328  0089  00C2               	movwf	printf@c
  5329                           
  5330                           ; Switch size 1, requested type "space"
  5331                           ; Number of cases is 6, Range of values is 0 to 120
  5332                           ; switch strategies available:
  5333                           ; Name         Instructions Cycles
  5334                           ; simple_byte           19    10 (average)
  5335                           ; direct_byte          248     6 (fixed)
  5336                           ; jumptable            260     6 (fixed)
  5337                           ;	Chosen strategy is simple_byte
  5338  008A  3A00               	xorlw	0	; case 0
  5339  008B  1903               	skipnz
  5340  008C  298E               	goto	l382
  5341  008D  3A58               	xorlw	88	; case 88
  5342  008E  1903               	skipnz
  5343  008F  2852               	goto	l348
  5344  0090  3A3C               	xorlw	60	; case 100
  5345  0091  1903               	skipnz
  5346  0092  289D               	goto	l347
  5347  0093  3A0D               	xorlw	13	; case 105
  5348  0094  1903               	skipnz
  5349  0095  289D               	goto	l347
  5350  0096  3A1A               	xorlw	26	; case 115
  5351  0097  1903               	skipnz
  5352  0098  2855               	goto	l2075
  5353  0099  3A0B               	xorlw	11	; case 120
  5354  009A  1903               	skipnz
  5355  009B  2853               	goto	l349
  5356  009C  2833               	goto	l2157
  5357  009D                     l347:	
  5358                           
  5359                           ;doprnt.c: 1251: if((flag & 0x80) == 0x00)
  5360  009D  1BBF               	btfsc	printf@flag,7
  5361  009E  28B6               	goto	l2103
  5362                           
  5363                           ;doprnt.c: 1253: {
  5364                           ;doprnt.c: 1259: val = (int)(*(int *)__va_arg((*(int **)ap), (int)0));
  5365  009F  083E               	movf	printf@ap,w
  5366  00A0  0086               	movwf	6
  5367  00A1  0187               	clrf	7
  5368  00A2  3F40               	moviw [0]fsr1
  5369  00A3  00C0               	movwf	printf@val
  5370  00A4  3F41               	moviw [1]fsr1
  5371  00A5  00C1               	movwf	printf@val+1
  5372  00A6  3002               	movlw	2
  5373  00A7  00B4               	movwf	??_printf
  5374  00A8  0834               	movf	??_printf,w
  5375  00A9  07BE               	addwf	printf@ap,f
  5376                           
  5377                           ;doprnt.c: 1261: if((int)val < 0) {
  5378  00AA  1FC1               	btfss	printf@val+1,7
  5379  00AB  2906               	goto	l2129
  5380                           
  5381                           ;doprnt.c: 1262: flag |= 0x03;
  5382  00AC  3003               	movlw	3
  5383  00AD  00B4               	movwf	??_printf
  5384  00AE  0834               	movf	??_printf,w
  5385  00AF  04BF               	iorwf	printf@flag,f
  5386                           
  5387                           ;doprnt.c: 1263: val = -val;
  5388  00B0  09C0               	comf	printf@val,f
  5389  00B1  09C1               	comf	printf@val+1,f
  5390  00B2  0AC0               	incf	printf@val,f
  5391  00B3  1903               	skipnz
  5392  00B4  0AC1               	incf	printf@val+1,f
  5393                           
  5394                           ;doprnt.c: 1264: }
  5395                           ;doprnt.c: 1266: }
  5396  00B5  2906               	goto	l2129
  5397  00B6                     l2103:	
  5398                           
  5399                           ;doprnt.c: 1268: else
  5400                           ;doprnt.c: 1273: {
  5401                           ;doprnt.c: 1286: val = (*(unsigned *)__va_arg((*(unsigned **)ap), (unsigned)0));
  5402  00B6  083E               	movf	printf@ap,w
  5403  00B7  0086               	movwf	6
  5404  00B8  0187               	clrf	7
  5405  00B9  3F40               	moviw [0]fsr1
  5406  00BA  00C0               	movwf	printf@val
  5407  00BB  3F41               	moviw [1]fsr1
  5408  00BC  00C1               	movwf	printf@val+1
  5409  00BD  3002               	movlw	2
  5410  00BE  00B4               	movwf	??_printf
  5411  00BF  0834               	movf	??_printf,w
  5412  00C0  07BE               	addwf	printf@ap,f
  5413                           
  5414                           ;doprnt.c: 1287: }
  5415                           ;doprnt.c: 1294: switch((unsigned char)(flag & 0x80)) {
  5416  00C1  2906               	goto	l2129
  5417  00C2                     l360:	
  5418                           ;doprnt.c: 1299: case 0x00:
  5419                           
  5420                           
  5421                           ;doprnt.c: 1305: for(c = 1 ; c != sizeof dpowers/sizeof dpowers[0] ; c++)
  5422  00C2  01C2               	clrf	printf@c
  5423  00C3  0AC2               	incf	printf@c,f
  5424  00C4                     L4:	
  5425  00C4  3005               	movlw	5
  5426  00C5  0642               	xorwf	printf@c,w
  5427  00C6  1903               	btfsc	3,2
  5428  00C7  290F               	goto	l2131
  5429                           
  5430                           ;doprnt.c: 1306: if(val < dpowers[c])
  5431  00C8  0842               	movf	printf@c,w
  5432  00C9  00B4               	movwf	??_printf
  5433  00CA  01B5               	clrf	??_printf+1
  5434  00CB  35B4               	lslf	??_printf,f
  5435  00CC  0DB5               	rlf	??_printf+1,f
  5436  00CD  30DF               	movlw	low (_dpowers| (0+32768))
  5437  00CE  0734               	addwf	??_printf,w
  5438  00CF  0084               	movwf	4
  5439  00D0  3082               	movlw	high (_dpowers| (0+32768))
  5440  00D1  3D35               	addwfc	??_printf+1,w
  5441  00D2  0085               	movwf	5
  5442  00D3  3F00               	moviw [0]fsr0
  5443  00D4  00B6               	movwf	??_printf+2
  5444  00D5  3F01               	moviw [1]fsr0
  5445  00D6  00B7               	movwf	??_printf+3
  5446  00D7  0837               	movf	??_printf+3,w
  5447  00D8  0241               	subwf	printf@val+1,w
  5448  00D9  1D03               	skipz
  5449  00DA  28DD               	goto	u1815
  5450  00DB  0836               	movf	??_printf+2,w
  5451  00DC  0240               	subwf	printf@val,w
  5452  00DD                     u1815:	
  5453  00DD  1C03               	btfss	3,0
  5454  00DE  290F               	goto	l2131
  5455                           
  5456                           ;doprnt.c: 1307: break;
  5457  00DF  3001               	movlw	1
  5458  00E0  00B4               	movwf	??_printf
  5459  00E1  0834               	movf	??_printf,w
  5460  00E2  07C2               	addwf	printf@c,f
  5461  00E3  28C4               	goto	L4
  5462  00E4                     l365:	
  5463                           ;doprnt.c: 1314: case 0x80:
  5464                           
  5465                           ;doprnt.c: 1309: break;
  5466                           
  5467                           
  5468                           ;doprnt.c: 1316: for(c = 1 ; c != sizeof hexpowers/sizeof hexpowers[0] ; c++)
  5469  00E4  01C2               	clrf	printf@c
  5470  00E5  0AC2               	incf	printf@c,f
  5471  00E6                     L5:	
  5472  00E6  3004               	movlw	4
  5473  00E7  0642               	xorwf	printf@c,w
  5474  00E8  1903               	btfsc	3,2
  5475  00E9  290F               	goto	l2131
  5476                           
  5477                           ;doprnt.c: 1317: if(val < hexpowers[c])
  5478  00EA  0842               	movf	printf@c,w
  5479  00EB  00B4               	movwf	??_printf
  5480  00EC  01B5               	clrf	??_printf+1
  5481  00ED  35B4               	lslf	??_printf,f
  5482  00EE  0DB5               	rlf	??_printf+1,f
  5483  00EF  30E9               	movlw	low (_hexpowers| (0+32768))
  5484  00F0  0734               	addwf	??_printf,w
  5485  00F1  0084               	movwf	4
  5486  00F2  3082               	movlw	high (_hexpowers| (0+32768))
  5487  00F3  3D35               	addwfc	??_printf+1,w
  5488  00F4  0085               	movwf	5
  5489  00F5  3F00               	moviw [0]fsr0
  5490  00F6  00B6               	movwf	??_printf+2
  5491  00F7  3F01               	moviw [1]fsr0
  5492  00F8  00B7               	movwf	??_printf+3
  5493  00F9  0837               	movf	??_printf+3,w
  5494  00FA  0241               	subwf	printf@val+1,w
  5495  00FB  1D03               	skipz
  5496  00FC  28FF               	goto	u1845
  5497  00FD  0836               	movf	??_printf+2,w
  5498  00FE  0240               	subwf	printf@val,w
  5499  00FF                     u1845:	
  5500  00FF  1C03               	btfss	3,0
  5501  0100  290F               	goto	l2131
  5502                           
  5503                           ;doprnt.c: 1318: break;
  5504  0101  3001               	movlw	1
  5505  0102  00B4               	movwf	??_printf
  5506  0103  0834               	movf	??_printf,w
  5507  0104  07C2               	addwf	printf@c,f
  5508  0105  28E6               	goto	L5
  5509  0106                     l2129:	
  5510                           ;doprnt.c: 1336: }
  5511                           
  5512                           ;doprnt.c: 1320: break;
  5513                           
  5514  0106  083F               	movf	printf@flag,w
  5515  0107  3980               	andlw	128
  5516                           
  5517                           ; Switch size 1, requested type "space"
  5518                           ; Number of cases is 2, Range of values is 0 to 128
  5519                           ; switch strategies available:
  5520                           ; Name         Instructions Cycles
  5521                           ; simple_byte            7     4 (average)
  5522                           ; jumptable            260     6 (fixed)
  5523                           ;	Chosen strategy is simple_byte
  5524  0108  3A00               	xorlw	0	; case 0
  5525  0109  1903               	skipnz
  5526  010A  28C2               	goto	l360
  5527  010B  3A80               	xorlw	128	; case 128
  5528  010C  1903               	skipnz
  5529  010D  28E4               	goto	l365
  5530  010E  290F               	goto	l2131
  5531  010F                     l2131:	
  5532                           
  5533                           ;doprnt.c: 1422: {
  5534                           ;doprnt.c: 1438: if(flag & 0x03)
  5535  010F  083F               	movf	printf@flag,w
  5536  0110  3903               	andlw	3
  5537  0111  1903               	btfsc	3,2
  5538  0112  2917               	goto	l2135
  5539                           
  5540                           ;doprnt.c: 1439: (putch('-') );
  5541  0113  302D               	movlw	45
  5542  0114  318F  27EB  3180   	fcall	_putch
  5543  0117                     l2135:	
  5544                           
  5545                           ;doprnt.c: 1469: }
  5546                           ;doprnt.c: 1472: prec = c;
  5547  0117  0020               	movlb	0	; select bank0
  5548  0118  0842               	movf	printf@c,w
  5549  0119  00B4               	movwf	??_printf
  5550  011A  0834               	movf	??_printf,w
  5551  011B  00BB               	movwf	printf@prec
  5552                           
  5553                           ;doprnt.c: 1474: while(prec--) {
  5554  011C  297C               	goto	l2155
  5555  011D                     l2137:	
  5556                           ;doprnt.c: 1478: {
  5557                           ;doprnt.c: 1483: case 0x00:
  5558                           
  5559                           ;doprnt.c: 1476: switch((unsigned char)(flag & 0x80))
  5560                           
  5561                           
  5562                           ;doprnt.c: 1489: c = (val / dpowers[prec]) % 10 + '0';
  5563  011D  300A               	movlw	10
  5564  011E  00A8               	movwf	___lwmod@divisor
  5565  011F  3000               	movlw	0
  5566  0120  00A9               	movwf	___lwmod@divisor+1
  5567  0121  083B               	movf	printf@prec,w
  5568  0122  00B4               	movwf	??_printf
  5569  0123  01B5               	clrf	??_printf+1
  5570  0124  35B4               	lslf	??_printf,f
  5571  0125  0DB5               	rlf	??_printf+1,f
  5572  0126  30DF               	movlw	low (_dpowers| (0+32768))
  5573  0127  0734               	addwf	??_printf,w
  5574  0128  0084               	movwf	4
  5575  0129  3082               	movlw	high (_dpowers| (0+32768))
  5576  012A  3D35               	addwfc	??_printf+1,w
  5577  012B  0085               	movwf	5
  5578  012C  3F00               	moviw [0]fsr0
  5579  012D  00A0               	movwf	___lwdiv@divisor
  5580  012E  3F01               	moviw [1]fsr0
  5581  012F  00A1               	movwf	___lwdiv@divisor+1
  5582  0130  0841               	movf	printf@val+1,w
  5583  0131  00A3               	movwf	___lwdiv@dividend+1
  5584  0132  0840               	movf	printf@val,w
  5585  0133  00A2               	movwf	___lwdiv@dividend
  5586  0134  3186  2676  3180   	fcall	___lwdiv
  5587  0137  0020               	movlb	0	; select bank0
  5588  0138  0821               	movf	?___lwdiv+1,w
  5589  0139  00AB               	movwf	___lwmod@dividend+1
  5590  013A  0820               	movf	?___lwdiv,w
  5591  013B  00AA               	movwf	___lwmod@dividend
  5592  013C  3186  26AB  3180   	fcall	___lwmod
  5593  013F  0020               	movlb	0	; select bank0
  5594  0140  0828               	movf	?___lwmod,w
  5595  0141  3E30               	addlw	48
  5596  0142  2975               	goto	L2
  5597  0143                     l2139:	
  5598                           ;doprnt.c: 1497: case 0x80:
  5599                           
  5600                           ;doprnt.c: 1491: break;
  5601                           
  5602                           
  5603                           ;doprnt.c: 1499: {
  5604                           ;doprnt.c: 1500: unsigned char idx = (val / hexpowers[prec]) & 0xF;
  5605  0143  083B               	movf	printf@prec,w
  5606  0144  00B4               	movwf	??_printf
  5607  0145  01B5               	clrf	??_printf+1
  5608  0146  35B4               	lslf	??_printf,f
  5609  0147  0DB5               	rlf	??_printf+1,f
  5610  0148  30E9               	movlw	low (_hexpowers| (0+32768))
  5611  0149  0734               	addwf	??_printf,w
  5612  014A  0084               	movwf	4
  5613  014B  3082               	movlw	high (_hexpowers| (0+32768))
  5614  014C  3D35               	addwfc	??_printf+1,w
  5615  014D  0085               	movwf	5
  5616  014E  3F00               	moviw [0]fsr0
  5617  014F  00A0               	movwf	___lwdiv@divisor
  5618  0150  3F01               	moviw [1]fsr0
  5619  0151  00A1               	movwf	___lwdiv@divisor+1
  5620  0152  0841               	movf	printf@val+1,w
  5621  0153  00A3               	movwf	___lwdiv@dividend+1
  5622  0154  0840               	movf	printf@val,w
  5623  0155  00A2               	movwf	___lwdiv@dividend
  5624  0156  3186  2676  3180   	fcall	___lwdiv
  5625  0159  0020               	movlb	0	; select bank0
  5626  015A  0820               	movf	?___lwdiv,w
  5627  015B  390F               	andlw	15
  5628  015C  00B6               	movwf	??_printf+2
  5629  015D  0836               	movf	??_printf+2,w
  5630  015E  00B8               	movwf	printf@idx
  5631                           
  5632                           ;doprnt.c: 1502: c = (flag & 0x20 ? "0123456789ABCDEF" : "0123456789abcdef")[idx];
  5633  015F  1ABF               	btfsc	printf@flag,5
  5634  0160  2965               	goto	l2145
  5635  0161  3000               	movlw	low (STR_18| (0+32768))
  5636  0162  00B9               	movwf	_printf$655
  5637  0163  3084               	movlw	high (STR_18| (0+32768))
  5638  0164  2968               	goto	L3
  5639  0165                     l2145:	
  5640  0165  30EF               	movlw	low (STR_17| (0+32768))
  5641  0166  00B9               	movwf	_printf$655
  5642  0167  3083               	movlw	high (STR_17| (0+32768))
  5643  0168                     L3:	
  5644  0168  00BA               	movwf	_printf$655+1
  5645  0169  083A               	movf	_printf$655+1,w
  5646  016A  00B5               	movwf	??_printf+1
  5647  016B  0839               	movf	_printf$655,w
  5648  016C  00B4               	movwf	??_printf
  5649  016D  0838               	movf	printf@idx,w
  5650  016E  0734               	addwf	??_printf,w
  5651  016F  0084               	movwf	4
  5652  0170  0835               	movf	??_printf+1,w
  5653  0171  1803               	skipnc
  5654  0172  0A35               	incf	??_printf+1,w
  5655  0173  0085               	movwf	5
  5656  0174  0800               	movf	0,w	;code access
  5657  0175                     L2:	
  5658  0175  00B6               	movwf	??_printf+2
  5659  0176  0836               	movf	??_printf+2,w
  5660  0177  00C2               	movwf	printf@c
  5661  0178                     l2153:	
  5662                           ;doprnt.c: 1523: }
  5663                           
  5664                           ;doprnt.c: 1508: }
  5665                           ;doprnt.c: 1510: break;
  5666                           
  5667                           
  5668                           ;doprnt.c: 1524: (putch(c) );
  5669  0178  0842               	movf	printf@c,w
  5670  0179  318F  27EB  3180   	fcall	_putch
  5671  017C                     l2155:	
  5672  017C  30FF               	movlw	255
  5673  017D  0020               	movlb	0	; select bank0
  5674  017E  00B4               	movwf	??_printf
  5675  017F  0834               	movf	??_printf,w
  5676  0180  07BB               	addwf	printf@prec,f
  5677  0181  0A3B               	incf	printf@prec,w
  5678  0182  1903               	btfsc	3,2
  5679  0183  2833               	goto	l2157
  5680  0184  083F               	movf	printf@flag,w
  5681  0185  3980               	andlw	128
  5682                           
  5683                           ; Switch size 1, requested type "space"
  5684                           ; Number of cases is 2, Range of values is 0 to 128
  5685                           ; switch strategies available:
  5686                           ; Name         Instructions Cycles
  5687                           ; simple_byte            7     4 (average)
  5688                           ; jumptable            260     6 (fixed)
  5689                           ;	Chosen strategy is simple_byte
  5690  0186  3A00               	xorlw	0	; case 0
  5691  0187  1903               	skipnz
  5692  0188  291D               	goto	l2137
  5693  0189  3A80               	xorlw	128	; case 128
  5694  018A  1903               	skipnz
  5695  018B  2943               	goto	l2139
  5696  018C  2978               	goto	l2153
  5697  018D  2978               	goto	l2153
  5698  018E                     l382:	
  5699                           ;doprnt.c: 1540: return 0;
  5700                           ;	Return value of _printf is never used
  5701                           
  5702                           ;doprnt.c: 1525: }
  5703                           ;doprnt.c: 1533: }
  5704                           ;doprnt.c: 1535: alldone:
  5705                           
  5706  018E  0008               	return
  5707  018F                     __end_of_printf:	
  5708                           
  5709                           	psect	text11
  5710  0FEB                     __ptext11:	
  5711 ;; *************** function _putch *****************
  5712 ;; Defined at:
  5713 ;;		line 111 in file "mcc_generated_files/eusart.c"
  5714 ;; Parameters:    Size  Location     Type
  5715 ;;  txData          1    wreg     unsigned char 
  5716 ;; Auto vars:     Size  Location     Type
  5717 ;;  txData          1    1[BANK0 ] unsigned char 
  5718 ;; Return value:  Size  Location     Type
  5719 ;;                  1    wreg      void 
  5720 ;; Registers used:
  5721 ;;		wreg, status,2, status,0, pclath, cstack
  5722 ;; Tracked objects:
  5723 ;;		On entry : 0/0
  5724 ;;		On exit  : 0/0
  5725 ;;		Unchanged: 0/0
  5726 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
  5727 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  5728 ;;      Locals:         0       1       0       0       0       0       0       0       0       0       0       0       
      +0       0
  5729 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  5730 ;;      Totals:         0       1       0       0       0       0       0       0       0       0       0       0       
      +0       0
  5731 ;;Total ram usage:        1 bytes
  5732 ;; Hardware stack levels used:    1
  5733 ;; Hardware stack levels required when called:    4
  5734 ;; This function calls:
  5735 ;;		_EUSART_Write
  5736 ;; This function is called by:
  5737 ;;		_printf
  5738 ;;		_puts
  5739 ;;		_cputs
  5740 ;; This function uses a non-reentrant model
  5741 ;;
  5742                           
  5743                           
  5744                           ;psect for function _putch
  5745  0FEB                     _putch:	
  5746                           
  5747                           ;incstack = 0
  5748                           ; Regs used in _putch: [wreg+status,2+status,0+pclath+cstack]
  5749                           ;putch@txData stored from wreg
  5750  0FEB  0020               	movlb	0	; select bank0
  5751  0FEC  00A1               	movwf	putch@txData
  5752                           
  5753                           ;eusart.c: 113: EUSART_Write(txData);
  5754  0FED  0821               	movf	putch@txData,w
  5755  0FEE  3187  27F1         	fcall	_EUSART_Write
  5756  0FF0  0008               	return
  5757  0FF1                     __end_of_putch:	
  5758                           
  5759                           	psect	text12
  5760  07F1                     __ptext12:	
  5761 ;; *************** function _EUSART_Write *****************
  5762 ;; Defined at:
  5763 ;;		line 97 in file "mcc_generated_files/eusart.c"
  5764 ;; Parameters:    Size  Location     Type
  5765 ;;  txData          1    wreg     unsigned char 
  5766 ;; Auto vars:     Size  Location     Type
  5767 ;;  txData          1    0[BANK0 ] unsigned char 
  5768 ;; Return value:  Size  Location     Type
  5769 ;;                  1    wreg      void 
  5770 ;; Registers used:
  5771 ;;		wreg
  5772 ;; Tracked objects:
  5773 ;;		On entry : 0/0
  5774 ;;		On exit  : 0/0
  5775 ;;		Unchanged: 0/0
  5776 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
  5777 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  5778 ;;      Locals:         0       1       0       0       0       0       0       0       0       0       0       0       
      +0       0
  5779 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  5780 ;;      Totals:         0       1       0       0       0       0       0       0       0       0       0       0       
      +0       0
  5781 ;;Total ram usage:        1 bytes
  5782 ;; Hardware stack levels used:    1
  5783 ;; Hardware stack levels required when called:    3
  5784 ;; This function calls:
  5785 ;;		Nothing
  5786 ;; This function is called by:
  5787 ;;		_putch
  5788 ;; This function uses a non-reentrant model
  5789 ;;
  5790                           
  5791                           
  5792                           ;psect for function _EUSART_Write
  5793  07F1                     _EUSART_Write:	
  5794                           
  5795                           ;incstack = 0
  5796                           ; Regs used in _EUSART_Write: [wreg]
  5797                           ;EUSART_Write@txData stored from wreg
  5798  07F1  0020               	movlb	0	; select bank0
  5799  07F2  00A0               	movwf	EUSART_Write@txData
  5800  07F3                     l31:	
  5801                           ;eusart.c: 100: {
  5802                           
  5803                           ;eusart.c: 99: while(0 == PIR3bits.TXIF)
  5804                           
  5805  07F3  002E               	movlb	14	; select bank14
  5806  07F4  1E0F               	btfss	15,4	;volatile
  5807  07F5  2FF3               	goto	l31
  5808                           
  5809                           ;eusart.c: 101: }
  5810                           ;eusart.c: 103: TX1REG = txData;
  5811  07F6  0020               	movlb	0	; select bank0
  5812  07F7  0820               	movf	EUSART_Write@txData,w
  5813  07F8  0022               	movlb	2	; select bank2
  5814  07F9  009A               	movwf	26	;volatile
  5815  07FA  0008               	return
  5816  07FB                     __end_of_EUSART_Write:	
  5817                           
  5818                           	psect	text13
  5819  06AB                     __ptext13:	
  5820 ;; *************** function ___lwmod *****************
  5821 ;; Defined at:
  5822 ;;		line 6 in file "/opt/microchip/xc8/v1.41/sources/common/lwmod.c"
  5823 ;; Parameters:    Size  Location     Type
  5824 ;;  divisor         2    8[BANK0 ] unsigned int 
  5825 ;;  dividend        2   10[BANK0 ] unsigned int 
  5826 ;; Auto vars:     Size  Location     Type
  5827 ;;  counter         1   13[BANK0 ] unsigned char 
  5828 ;; Return value:  Size  Location     Type
  5829 ;;                  2    8[BANK0 ] unsigned int 
  5830 ;; Registers used:
  5831 ;;		wreg, status,2, status,0
  5832 ;; Tracked objects:
  5833 ;;		On entry : 0/0
  5834 ;;		On exit  : 0/0
  5835 ;;		Unchanged: 0/0
  5836 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
  5837 ;;      Params:         0       4       0       0       0       0       0       0       0       0       0       0       
      +0       0
  5838 ;;      Locals:         0       1       0       0       0       0       0       0       0       0       0       0       
      +0       0
  5839 ;;      Temps:          0       1       0       0       0       0       0       0       0       0       0       0       
      +0       0
  5840 ;;      Totals:         0       6       0       0       0       0       0       0       0       0       0       0       
      +0       0
  5841 ;;Total ram usage:        6 bytes
  5842 ;; Hardware stack levels used:    1
  5843 ;; Hardware stack levels required when called:    3
  5844 ;; This function calls:
  5845 ;;		Nothing
  5846 ;; This function is called by:
  5847 ;;		_printf
  5848 ;; This function uses a non-reentrant model
  5849 ;;
  5850                           
  5851                           
  5852                           ;psect for function ___lwmod
  5853  06AB                     ___lwmod:	
  5854                           
  5855                           ;incstack = 0
  5856                           ; Regs used in ___lwmod: [wreg+status,2+status,0]
  5857  06AB  0020               	movlb	0	; select bank0
  5858  06AC  0828               	movf	___lwmod@divisor,w
  5859  06AD  0429               	iorwf	___lwmod@divisor+1,w
  5860  06AE  1903               	btfsc	3,2
  5861  06AF  2ED3               	goto	l1519
  5862  06B0  01AD               	clrf	___lwmod@counter
  5863  06B1  0AAD               	incf	___lwmod@counter,f
  5864  06B2                     l1509:	
  5865  06B2  1BA9               	btfsc	___lwmod@divisor+1,7
  5866  06B3  2EBE               	goto	l1511
  5867  06B4  3001               	movlw	1
  5868  06B5                     u1015:	
  5869  06B5  35A8               	lslf	___lwmod@divisor,f
  5870  06B6  0DA9               	rlf	___lwmod@divisor+1,f
  5871  06B7  0B89               	decfsz	9,f
  5872  06B8  2EB5               	goto	u1015
  5873  06B9  3001               	movlw	1
  5874  06BA  00AC               	movwf	??___lwmod
  5875  06BB  082C               	movf	??___lwmod,w
  5876  06BC  07AD               	addwf	___lwmod@counter,f
  5877  06BD  2EB2               	goto	l1509
  5878  06BE                     l1511:	
  5879  06BE  0829               	movf	___lwmod@divisor+1,w
  5880  06BF  022B               	subwf	___lwmod@dividend+1,w
  5881  06C0  1D03               	skipz
  5882  06C1  2EC4               	goto	u1035
  5883  06C2  0828               	movf	___lwmod@divisor,w
  5884  06C3  022A               	subwf	___lwmod@dividend,w
  5885  06C4                     u1035:	
  5886  06C4  1C03               	skipc
  5887  06C5  2ECA               	goto	l1515
  5888  06C6  0828               	movf	___lwmod@divisor,w
  5889  06C7  02AA               	subwf	___lwmod@dividend,f
  5890  06C8  0829               	movf	___lwmod@divisor+1,w
  5891  06C9  3BAB               	subwfb	___lwmod@dividend+1,f
  5892  06CA                     l1515:	
  5893  06CA  3001               	movlw	1
  5894  06CB                     u1045:	
  5895  06CB  36A9               	lsrf	___lwmod@divisor+1,f
  5896  06CC  0CA8               	rrf	___lwmod@divisor,f
  5897  06CD  0B89               	decfsz	9,f
  5898  06CE  2ECB               	goto	u1045
  5899  06CF  3001               	movlw	1
  5900  06D0  02AD               	subwf	___lwmod@counter,f
  5901  06D1  1D03               	btfss	3,2
  5902  06D2  2EBE               	goto	l1511
  5903  06D3                     l1519:	
  5904  06D3  082B               	movf	___lwmod@dividend+1,w
  5905  06D4  00A9               	movwf	?___lwmod+1
  5906  06D5  082A               	movf	___lwmod@dividend,w
  5907  06D6  00A8               	movwf	?___lwmod
  5908  06D7  0008               	return
  5909  06D8                     __end_of___lwmod:	
  5910                           
  5911                           	psect	text14
  5912  0676                     __ptext14:	
  5913 ;; *************** function ___lwdiv *****************
  5914 ;; Defined at:
  5915 ;;		line 6 in file "/opt/microchip/xc8/v1.41/sources/common/lwdiv.c"
  5916 ;; Parameters:    Size  Location     Type
  5917 ;;  divisor         2    0[BANK0 ] unsigned int 
  5918 ;;  dividend        2    2[BANK0 ] unsigned int 
  5919 ;; Auto vars:     Size  Location     Type
  5920 ;;  quotient        2    5[BANK0 ] unsigned int 
  5921 ;;  counter         1    7[BANK0 ] unsigned char 
  5922 ;; Return value:  Size  Location     Type
  5923 ;;                  2    0[BANK0 ] unsigned int 
  5924 ;; Registers used:
  5925 ;;		wreg, status,2, status,0
  5926 ;; Tracked objects:
  5927 ;;		On entry : 0/0
  5928 ;;		On exit  : 0/0
  5929 ;;		Unchanged: 0/0
  5930 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
  5931 ;;      Params:         0       4       0       0       0       0       0       0       0       0       0       0       
      +0       0
  5932 ;;      Locals:         0       3       0       0       0       0       0       0       0       0       0       0       
      +0       0
  5933 ;;      Temps:          0       1       0       0       0       0       0       0       0       0       0       0       
      +0       0
  5934 ;;      Totals:         0       8       0       0       0       0       0       0       0       0       0       0       
      +0       0
  5935 ;;Total ram usage:        8 bytes
  5936 ;; Hardware stack levels used:    1
  5937 ;; Hardware stack levels required when called:    3
  5938 ;; This function calls:
  5939 ;;		Nothing
  5940 ;; This function is called by:
  5941 ;;		_printf
  5942 ;; This function uses a non-reentrant model
  5943 ;;
  5944                           
  5945                           
  5946                           ;psect for function ___lwdiv
  5947  0676                     ___lwdiv:	
  5948                           
  5949                           ;incstack = 0
  5950                           ; Regs used in ___lwdiv: [wreg+status,2+status,0]
  5951  0676  0020               	movlb	0	; select bank0
  5952  0677  01A5               	clrf	___lwdiv@quotient
  5953  0678  01A6               	clrf	___lwdiv@quotient+1
  5954  0679  0820               	movf	___lwdiv@divisor,w
  5955  067A  0421               	iorwf	___lwdiv@divisor+1,w
  5956  067B  1903               	btfsc	3,2
  5957  067C  2EA6               	goto	l1497
  5958  067D  01A7               	clrf	___lwdiv@counter
  5959  067E  0AA7               	incf	___lwdiv@counter,f
  5960  067F                     l1485:	
  5961  067F  1BA1               	btfsc	___lwdiv@divisor+1,7
  5962  0680  2E8B               	goto	l1487
  5963  0681  3001               	movlw	1
  5964  0682                     u945:	
  5965  0682  35A0               	lslf	___lwdiv@divisor,f
  5966  0683  0DA1               	rlf	___lwdiv@divisor+1,f
  5967  0684  0B89               	decfsz	9,f
  5968  0685  2E82               	goto	u945
  5969  0686  3001               	movlw	1
  5970  0687  00A4               	movwf	??___lwdiv
  5971  0688  0824               	movf	??___lwdiv,w
  5972  0689  07A7               	addwf	___lwdiv@counter,f
  5973  068A  2E7F               	goto	l1485
  5974  068B                     l1487:	
  5975  068B  3001               	movlw	1
  5976  068C                     u965:	
  5977  068C  35A5               	lslf	___lwdiv@quotient,f
  5978  068D  0DA6               	rlf	___lwdiv@quotient+1,f
  5979  068E  0B89               	decfsz	9,f
  5980  068F  2E8C               	goto	u965
  5981  0690  0821               	movf	___lwdiv@divisor+1,w
  5982  0691  0223               	subwf	___lwdiv@dividend+1,w
  5983  0692  1D03               	skipz
  5984  0693  2E96               	goto	u975
  5985  0694  0820               	movf	___lwdiv@divisor,w
  5986  0695  0222               	subwf	___lwdiv@dividend,w
  5987  0696                     u975:	
  5988  0696  1C03               	skipc
  5989  0697  2E9D               	goto	l1493
  5990  0698  0820               	movf	___lwdiv@divisor,w
  5991  0699  02A2               	subwf	___lwdiv@dividend,f
  5992  069A  0821               	movf	___lwdiv@divisor+1,w
  5993  069B  3BA3               	subwfb	___lwdiv@dividend+1,f
  5994  069C  1425               	bsf	___lwdiv@quotient,0
  5995  069D                     l1493:	
  5996  069D  3001               	movlw	1
  5997  069E                     u985:	
  5998  069E  36A1               	lsrf	___lwdiv@divisor+1,f
  5999  069F  0CA0               	rrf	___lwdiv@divisor,f
  6000  06A0  0B89               	decfsz	9,f
  6001  06A1  2E9E               	goto	u985
  6002  06A2  3001               	movlw	1
  6003  06A3  02A7               	subwf	___lwdiv@counter,f
  6004  06A4  1D03               	btfss	3,2
  6005  06A5  2E8B               	goto	l1487
  6006  06A6                     l1497:	
  6007  06A6  0826               	movf	___lwdiv@quotient+1,w
  6008  06A7  00A1               	movwf	?___lwdiv+1
  6009  06A8  0825               	movf	___lwdiv@quotient,w
  6010  06A9  00A0               	movwf	?___lwdiv
  6011  06AA  0008               	return
  6012  06AB                     __end_of___lwdiv:	
  6013                           
  6014                           	psect	text15
  6015  0741                     __ptext15:	
  6016 ;; *************** function ___wmul *****************
  6017 ;; Defined at:
  6018 ;;		line 15 in file "/opt/microchip/xc8/v1.41/sources/common/Umul16.c"
  6019 ;; Parameters:    Size  Location     Type
  6020 ;;  multiplier      2    0[BANK0 ] unsigned int 
  6021 ;;  multiplicand    2    2[BANK0 ] unsigned int 
  6022 ;; Auto vars:     Size  Location     Type
  6023 ;;  product         2    4[BANK0 ] unsigned int 
  6024 ;; Return value:  Size  Location     Type
  6025 ;;                  2    0[BANK0 ] unsigned int 
  6026 ;; Registers used:
  6027 ;;		wreg, status,2, status,0
  6028 ;; Tracked objects:
  6029 ;;		On entry : 0/0
  6030 ;;		On exit  : 0/0
  6031 ;;		Unchanged: 0/0
  6032 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
  6033 ;;      Params:         0       4       0       0       0       0       0       0       0       0       0       0       
      +0       0
  6034 ;;      Locals:         0       2       0       0       0       0       0       0       0       0       0       0       
      +0       0
  6035 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  6036 ;;      Totals:         0       6       0       0       0       0       0       0       0       0       0       0       
      +0       0
  6037 ;;Total ram usage:        6 bytes
  6038 ;; Hardware stack levels used:    1
  6039 ;; Hardware stack levels required when called:    3
  6040 ;; This function calls:
  6041 ;;		Nothing
  6042 ;; This function is called by:
  6043 ;;		_EMC1001_PrintInfo
  6044 ;;		_EMC1001_PrintTemp
  6045 ;; This function uses a non-reentrant model
  6046 ;;
  6047                           
  6048                           
  6049                           ;psect for function ___wmul
  6050  0741                     ___wmul:	
  6051                           
  6052                           ;incstack = 0
  6053                           ; Regs used in ___wmul: [wreg+status,2+status,0]
  6054  0741  0020               	movlb	0	; select bank0
  6055  0742  01A4               	clrf	___wmul@product
  6056  0743  01A5               	clrf	___wmul@product+1
  6057  0744                     l2161:	
  6058  0744  1C20               	btfss	___wmul@multiplier,0
  6059  0745  2F4A               	goto	l464
  6060  0746  0822               	movf	___wmul@multiplicand,w
  6061  0747  07A4               	addwf	___wmul@product,f
  6062  0748  0823               	movf	___wmul@multiplicand+1,w
  6063  0749  3DA5               	addwfc	___wmul@product+1,f
  6064  074A                     l464:	
  6065  074A  3001               	movlw	1
  6066  074B                     u1915:	
  6067  074B  35A2               	lslf	___wmul@multiplicand,f
  6068  074C  0DA3               	rlf	___wmul@multiplicand+1,f
  6069  074D  0B89               	decfsz	9,f
  6070  074E  2F4B               	goto	u1915
  6071  074F  3001               	movlw	1
  6072  0750                     u1925:	
  6073  0750  36A1               	lsrf	___wmul@multiplier+1,f
  6074  0751  0CA0               	rrf	___wmul@multiplier,f
  6075  0752  0B89               	decfsz	9,f
  6076  0753  2F50               	goto	u1925
  6077  0754  0820               	movf	___wmul@multiplier,w
  6078  0755  0421               	iorwf	___wmul@multiplier+1,w
  6079  0756  1D03               	btfss	3,2
  6080  0757  2F44               	goto	l2161
  6081  0758  0825               	movf	___wmul@product+1,w
  6082  0759  00A1               	movwf	?___wmul+1
  6083  075A  0824               	movf	___wmul@product,w
  6084  075B  00A0               	movwf	?___wmul
  6085  075C  0008               	return
  6086  075D                     __end_of___wmul:	
  6087                           
  6088                           	psect	text16
  6089  063A                     __ptext16:	
  6090 ;; *************** function _EMC1001_Read *****************
  6091 ;; Defined at:
  6092 ;;		line 26 in file "main.c"
  6093 ;; Parameters:    Size  Location     Type
  6094 ;;  reg             1    wreg     unsigned char 
  6095 ;;  pData           1    7[BANK0 ] PTR unsigned char 
  6096 ;;		 -> EMC1001_PrintTemp@templo(1), EMC1001_PrintTemp@temp(1), EMC1001_PrintInfo@templo(1), EMC1001_PrintInfo@temp(1), 
  6097 ;;		 -> EMC1001_PrintInfo@data(1), 
  6098 ;; Auto vars:     Size  Location     Type
  6099 ;;  reg             1   10[BANK0 ] unsigned char 
  6100 ;;  status          1   11[BANK0 ] enum E14334
  6101 ;; Return value:  Size  Location     Type
  6102 ;;                  1    wreg      unsigned char 
  6103 ;; Registers used:
  6104 ;;		wreg, fsr1l, fsr1h, status,2, status,0, pclath, cstack
  6105 ;; Tracked objects:
  6106 ;;		On entry : 0/0
  6107 ;;		On exit  : 0/0
  6108 ;;		Unchanged: 0/0
  6109 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
  6110 ;;      Params:         0       1       0       0       0       0       0       0       0       0       0       0       
      +0       0
  6111 ;;      Locals:         0       2       0       0       0       0       0       0       0       0       0       0       
      +0       0
  6112 ;;      Temps:          0       2       0       0       0       0       0       0       0       0       0       0       
      +0       0
  6113 ;;      Totals:         0       5       0       0       0       0       0       0       0       0       0       0       
      +0       0
  6114 ;;Total ram usage:        5 bytes
  6115 ;; Hardware stack levels used:    1
  6116 ;; Hardware stack levels required when called:    4
  6117 ;; This function calls:
  6118 ;;		_I2C2_MasterReadTRBBuild
  6119 ;;		_I2C2_MasterTRBInsert
  6120 ;;		_I2C2_MasterWriteTRBBuild
  6121 ;; This function is called by:
  6122 ;;		_EMC1001_PrintInfo
  6123 ;;		_EMC1001_PrintTemp
  6124 ;; This function uses a non-reentrant model
  6125 ;;
  6126                           
  6127                           
  6128                           ;psect for function _EMC1001_Read
  6129  063A                     _EMC1001_Read:	
  6130                           
  6131                           ;incstack = 0
  6132                           ; Regs used in _EMC1001_Read: [wreg+fsr1l+fsr1h+status,2+status,0+pclath+cstack]
  6133                           ;EMC1001_Read@reg stored from wreg
  6134  063A  0020               	movlb	0	; select bank0
  6135  063B  00AA               	movwf	EMC1001_Read@reg
  6136                           
  6137                           ;main.c: 28: I2C2_MESSAGE_STATUS status = I2C2_MESSAGE_PENDING;
  6138  063C  3002               	movlw	2
  6139  063D  00A8               	movwf	??_EMC1001_Read
  6140  063E  0828               	movf	??_EMC1001_Read,w
  6141  063F  00AB               	movwf	EMC1001_Read@status
  6142                           
  6143                           ;main.c: 29: static I2C2_TRANSACTION_REQUEST_BLOCK trb[2];
  6144                           ;main.c: 31: I2C2_MasterWriteTRBBuild(&trb[0], &reg, 1, 0x38);
  6145  0640  302A               	movlw	(low (EMC1001_Read@reg| 0))& (0+255)
  6146  0641  00A8               	movwf	??_EMC1001_Read
  6147  0642  0828               	movf	??_EMC1001_Read,w
  6148  0643  00A0               	movwf	I2C2_MasterWriteTRBBuild@pdata
  6149  0644  01A1               	clrf	I2C2_MasterWriteTRBBuild@length
  6150  0645  0AA1               	incf	I2C2_MasterWriteTRBBuild@length,f
  6151  0646  3038               	movlw	56
  6152  0647  00A2               	movwf	I2C2_MasterWriteTRBBuild@address
  6153  0648  3000               	movlw	0
  6154  0649  00A3               	movwf	I2C2_MasterWriteTRBBuild@address+1
  6155  064A  3052               	movlw	(low (EMC1001_Read@trb| 0))& (0+255)
  6156  064B  3187  2721  3186   	fcall	_I2C2_MasterWriteTRBBuild
  6157                           
  6158                           ;main.c: 32: I2C2_MasterReadTRBBuild(&trb[1], pData, 1, 0x38);
  6159  064E  0020               	movlb	0	; select bank0
  6160  064F  0827               	movf	EMC1001_Read@pData,w
  6161  0650  00A8               	movwf	??_EMC1001_Read
  6162  0651  0828               	movf	??_EMC1001_Read,w
  6163  0652  00A0               	movwf	I2C2_MasterReadTRBBuild@pdata
  6164  0653  01A1               	clrf	I2C2_MasterReadTRBBuild@length
  6165  0654  0AA1               	incf	I2C2_MasterReadTRBBuild@length,f
  6166  0655  3038               	movlw	56
  6167  0656  00A2               	movwf	I2C2_MasterReadTRBBuild@address
  6168  0657  3000               	movlw	0
  6169  0658  00A3               	movwf	I2C2_MasterReadTRBBuild@address+1
  6170  0659  3056               	movlw	(low ((EMC1001_Read@trb| 0+4)))& (0+255)
  6171  065A  3186  26D8  3186   	fcall	_I2C2_MasterReadTRBBuild
  6172                           
  6173                           ;main.c: 33: I2C2_MasterTRBInsert(2, &trb[0], &status);
  6174  065D  3052               	movlw	(low (EMC1001_Read@trb| 0))& (0+255)
  6175  065E  0020               	movlb	0	; select bank0
  6176  065F  00A8               	movwf	??_EMC1001_Read
  6177  0660  0828               	movf	??_EMC1001_Read,w
  6178  0661  00A0               	movwf	I2C2_MasterTRBInsert@ptrb_list
  6179  0662  302B               	movlw	(low (EMC1001_Read@status| 0))& (0+255)
  6180  0663  00A9               	movwf	??_EMC1001_Read+1
  6181  0664  0829               	movf	??_EMC1001_Read+1,w
  6182  0665  00A1               	movwf	I2C2_MasterTRBInsert@pflag
  6183  0666  3002               	movlw	2
  6184  0667  3185  25F4  3186   	fcall	_I2C2_MasterTRBInsert
  6185  066A                     l1603:	
  6186                           ;main.c: 35: while(status == I2C2_MESSAGE_PENDING);
  6187                           
  6188  066A  3002               	movlw	2
  6189  066B  0020               	movlb	0	; select bank0
  6190  066C  062B               	xorwf	EMC1001_Read@status,w
  6191  066D  1903               	btfsc	3,2
  6192  066E  2E6A               	goto	l1603
  6193                           
  6194                           ;main.c: 37: return (status == I2C2_MESSAGE_COMPLETE);
  6195  066F  082B               	movf	EMC1001_Read@status,w
  6196  0670  1D03               	btfss	3,2
  6197  0671  2E74               	goto	u1120
  6198  0672  3001               	movlw	1
  6199  0673  0008               	return
  6200  0674                     u1120:	
  6201  0674  3000               	movlw	0
  6202  0675  0008               	return
  6203  0676                     __end_of_EMC1001_Read:	
  6204                           
  6205                           	psect	text17
  6206  0721                     __ptext17:	
  6207 ;; *************** function _I2C2_MasterWriteTRBBuild *****************
  6208 ;; Defined at:
  6209 ;;		line 707 in file "mcc_generated_files/i2c2.c"
  6210 ;; Parameters:    Size  Location     Type
  6211 ;;  ptrb            1    wreg     PTR struct .
  6212 ;;		 -> EMC1001_Read@trb(8), I2C2_MasterWrite@trBlock(4), 
  6213 ;;  pdata           1    0[BANK0 ] PTR unsigned char 
  6214 ;;		 -> EMC1001_Read@reg(1), 
  6215 ;;  length          1    1[BANK0 ] unsigned char 
  6216 ;;  address         2    2[BANK0 ] unsigned int 
  6217 ;; Auto vars:     Size  Location     Type
  6218 ;;  ptrb            1    6[BANK0 ] PTR struct .
  6219 ;;		 -> EMC1001_Read@trb(8), I2C2_MasterWrite@trBlock(4), 
  6220 ;; Return value:  Size  Location     Type
  6221 ;;                  1    wreg      void 
  6222 ;; Registers used:
  6223 ;;		wreg, fsr1l, fsr1h, status,2, status,0
  6224 ;; Tracked objects:
  6225 ;;		On entry : 0/0
  6226 ;;		On exit  : 0/0
  6227 ;;		Unchanged: 0/0
  6228 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
  6229 ;;      Params:         0       4       0       0       0       0       0       0       0       0       0       0       
      +0       0
  6230 ;;      Locals:         0       1       0       0       0       0       0       0       0       0       0       0       
      +0       0
  6231 ;;      Temps:          0       2       0       0       0       0       0       0       0       0       0       0       
      +0       0
  6232 ;;      Totals:         0       7       0       0       0       0       0       0       0       0       0       0       
      +0       0
  6233 ;;Total ram usage:        7 bytes
  6234 ;; Hardware stack levels used:    1
  6235 ;; Hardware stack levels required when called:    3
  6236 ;; This function calls:
  6237 ;;		Nothing
  6238 ;; This function is called by:
  6239 ;;		_EMC1001_Read
  6240 ;;		_I2C2_MasterWrite
  6241 ;; This function uses a non-reentrant model
  6242 ;;
  6243                           
  6244                           
  6245                           ;psect for function _I2C2_MasterWriteTRBBuild
  6246  0721                     _I2C2_MasterWriteTRBBuild:	
  6247                           
  6248                           ;incstack = 0
  6249                           ; Regs used in _I2C2_MasterWriteTRBBuild: [wreg+fsr1l+fsr1h+status,2+status,0]
  6250                           ;I2C2_MasterWriteTRBBuild@ptrb stored from wreg
  6251  0721  0020               	movlb	0	; select bank0
  6252  0722  00A6               	movwf	I2C2_MasterWriteTRBBuild@ptrb
  6253                           
  6254                           ;i2c2.c: 713: ptrb->address = address << 1;
  6255  0723  0823               	movf	I2C2_MasterWriteTRBBuild@address+1,w
  6256  0724  00A5               	movwf	??_I2C2_MasterWriteTRBBuild+1
  6257  0725  0822               	movf	I2C2_MasterWriteTRBBuild@address,w
  6258  0726  00A4               	movwf	??_I2C2_MasterWriteTRBBuild
  6259  0727  35A4               	lslf	??_I2C2_MasterWriteTRBBuild,f
  6260  0728  0DA5               	rlf	??_I2C2_MasterWriteTRBBuild+1,f
  6261  0729  0826               	movf	I2C2_MasterWriteTRBBuild@ptrb,w
  6262  072A  0086               	movwf	6
  6263  072B  0187               	clrf	7
  6264  072C  0824               	movf	??_I2C2_MasterWriteTRBBuild,w
  6265  072D  3FC0               	movwi [0]fsr1
  6266  072E  0825               	movf	??_I2C2_MasterWriteTRBBuild+1,w
  6267  072F  3FC1               	movwi [1]fsr1
  6268                           
  6269                           ;i2c2.c: 714: ptrb->length = length;
  6270  0730  0821               	movf	I2C2_MasterWriteTRBBuild@length,w
  6271  0731  00A4               	movwf	??_I2C2_MasterWriteTRBBuild
  6272  0732  0826               	movf	I2C2_MasterWriteTRBBuild@ptrb,w
  6273  0733  3E02               	addlw	2
  6274  0734  0086               	movwf	6
  6275  0735  0187               	clrf	7
  6276  0736  0824               	movf	??_I2C2_MasterWriteTRBBuild,w
  6277  0737  0081               	movwf	1
  6278                           
  6279                           ;i2c2.c: 715: ptrb->pbuffer = pdata;
  6280  0738  0820               	movf	I2C2_MasterWriteTRBBuild@pdata,w
  6281  0739  00A4               	movwf	??_I2C2_MasterWriteTRBBuild
  6282  073A  0826               	movf	I2C2_MasterWriteTRBBuild@ptrb,w
  6283  073B  3E03               	addlw	3
  6284  073C  0086               	movwf	6
  6285  073D  0187               	clrf	7
  6286  073E  0824               	movf	??_I2C2_MasterWriteTRBBuild,w
  6287  073F  0081               	movwf	1
  6288  0740  0008               	return
  6289  0741                     __end_of_I2C2_MasterWriteTRBBuild:	
  6290                           
  6291                           	psect	text18
  6292  05F4                     __ptext18:	
  6293 ;; *************** function _I2C2_MasterTRBInsert *****************
  6294 ;; Defined at:
  6295 ;;		line 641 in file "mcc_generated_files/i2c2.c"
  6296 ;; Parameters:    Size  Location     Type
  6297 ;;  count           1    wreg     unsigned char 
  6298 ;;  ptrb_list       1    0[BANK0 ] PTR struct .
  6299 ;;		 -> EMC1001_Read@trb(8), I2C2_MasterRead@trBlock(4), I2C2_MasterWrite@trBlock(4), 
  6300 ;;  pflag           1    1[BANK0 ] PTR enum E14260
  6301 ;;		 -> EMC1001_Read@status(1), 
  6302 ;; Auto vars:     Size  Location     Type
  6303 ;;  count           1    3[BANK0 ] unsigned char 
  6304 ;; Return value:  Size  Location     Type
  6305 ;;                  1    wreg      void 
  6306 ;; Registers used:
  6307 ;;		wreg, fsr1l, fsr1h, status,2, status,0
  6308 ;; Tracked objects:
  6309 ;;		On entry : 0/0
  6310 ;;		On exit  : 0/0
  6311 ;;		Unchanged: 0/0
  6312 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
  6313 ;;      Params:         0       2       0       0       0       0       0       0       0       0       0       0       
      +0       0
  6314 ;;      Locals:         0       1       0       0       0       0       0       0       0       0       0       0       
      +0       0
  6315 ;;      Temps:          0       1       0       0       0       0       0       0       0       0       0       0       
      +0       0
  6316 ;;      Totals:         0       4       0       0       0       0       0       0       0       0       0       0       
      +0       0
  6317 ;;Total ram usage:        4 bytes
  6318 ;; Hardware stack levels used:    1
  6319 ;; Hardware stack levels required when called:    3
  6320 ;; This function calls:
  6321 ;;		Nothing
  6322 ;; This function is called by:
  6323 ;;		_EMC1001_Read
  6324 ;;		_I2C2_MasterWrite
  6325 ;;		_I2C2_MasterRead
  6326 ;; This function uses a non-reentrant model
  6327 ;;
  6328                           
  6329                           
  6330                           ;psect for function _I2C2_MasterTRBInsert
  6331  05F4                     _I2C2_MasterTRBInsert:	
  6332                           
  6333                           ;incstack = 0
  6334                           ; Regs used in _I2C2_MasterTRBInsert: [wreg+fsr1l+fsr1h+status,2+status,0]
  6335                           ;I2C2_MasterTRBInsert@count stored from wreg
  6336  05F4  0020               	movlb	0	; select bank0
  6337  05F5  00A3               	movwf	I2C2_MasterTRBInsert@count
  6338                           
  6339                           ;i2c2.c: 648: if (i2c2_object.trStatus.s.full != 1)
  6340  05F6  184E               	btfsc	_i2c2_object+2,0
  6341  05F7  2E28               	goto	l1465
  6342                           
  6343                           ;i2c2.c: 649: {
  6344                           ;i2c2.c: 650: *pflag = I2C2_MESSAGE_PENDING;
  6345  05F8  3002               	movlw	2
  6346  05F9  00A2               	movwf	??_I2C2_MasterTRBInsert
  6347  05FA  0821               	movf	I2C2_MasterTRBInsert@pflag,w
  6348  05FB  0086               	movwf	6
  6349  05FC  0187               	clrf	7
  6350  05FD  0822               	movf	??_I2C2_MasterTRBInsert,w
  6351  05FE  0081               	movwf	1
  6352                           
  6353                           ;i2c2.c: 652: i2c2_object.pTrTail->ptrb_list = ptrb_list;
  6354  05FF  0820               	movf	I2C2_MasterTRBInsert@ptrb_list,w
  6355  0600  00A2               	movwf	??_I2C2_MasterTRBInsert
  6356  0601  0A4C               	incf	_i2c2_object,w
  6357  0602  0086               	movwf	6
  6358  0603  0187               	clrf	7
  6359  0604  0822               	movf	??_I2C2_MasterTRBInsert,w
  6360  0605  0081               	movwf	1
  6361                           
  6362                           ;i2c2.c: 653: i2c2_object.pTrTail->count = count;
  6363  0606  0823               	movf	I2C2_MasterTRBInsert@count,w
  6364  0607  00A2               	movwf	??_I2C2_MasterTRBInsert
  6365  0608  084C               	movf	_i2c2_object,w
  6366  0609  0086               	movwf	6
  6367  060A  0187               	clrf	7
  6368  060B  0822               	movf	??_I2C2_MasterTRBInsert,w
  6369  060C  0081               	movwf	1
  6370                           
  6371                           ;i2c2.c: 654: i2c2_object.pTrTail->pTrFlag = pflag;
  6372  060D  0821               	movf	I2C2_MasterTRBInsert@pflag,w
  6373  060E  00A2               	movwf	??_I2C2_MasterTRBInsert
  6374  060F  084C               	movf	_i2c2_object,w
  6375  0610  3E02               	addlw	2
  6376  0611  0086               	movwf	6
  6377  0612  0187               	clrf	7
  6378  0613  0822               	movf	??_I2C2_MasterTRBInsert,w
  6379  0614  0081               	movwf	1
  6380                           
  6381                           ;i2c2.c: 655: i2c2_object.pTrTail++;
  6382  0615  3003               	movlw	3
  6383  0616  00A2               	movwf	??_I2C2_MasterTRBInsert
  6384  0617  0822               	movf	??_I2C2_MasterTRBInsert,w
  6385  0618  07CC               	addwf	_i2c2_object,f
  6386                           
  6387                           ;i2c2.c: 658: if (i2c2_object.pTrTail == (i2c2_tr_queue + 1))
  6388  0619  084C               	movf	_i2c2_object,w
  6389  061A  3A65               	xorlw	(low ((_i2c2_tr_queue| 0+3)))& (0+255)
  6390  061B  1D03               	skipz
  6391  061C  2E21               	goto	l1461
  6392                           
  6393                           ;i2c2.c: 659: {
  6394                           ;i2c2.c: 661: i2c2_object.pTrTail = i2c2_tr_queue;
  6395  061D  3062               	movlw	(low (_i2c2_tr_queue| 0))& (0+255)
  6396  061E  00A2               	movwf	??_I2C2_MasterTRBInsert
  6397  061F  0822               	movf	??_I2C2_MasterTRBInsert,w
  6398  0620  00CC               	movwf	_i2c2_object
  6399  0621                     l1461:	
  6400                           
  6401                           ;i2c2.c: 662: }
  6402                           ;i2c2.c: 666: i2c2_object.trStatus.s.empty = 0;
  6403  0621  10CE               	bcf	_i2c2_object+2,1
  6404                           
  6405                           ;i2c2.c: 669: if (i2c2_object.pTrHead == i2c2_object.pTrTail)
  6406  0622  084D               	movf	low ((_i2c2_object| 0+1)),w
  6407  0623  064C               	xorwf	_i2c2_object,w
  6408  0624  1D03               	skipz
  6409  0625  2E2D               	goto	l1467
  6410                           
  6411                           ;i2c2.c: 670: {
  6412                           ;i2c2.c: 672: i2c2_object.trStatus.s.full = 1;
  6413  0626  144E               	bsf	_i2c2_object+2,0
  6414                           
  6415                           ;i2c2.c: 673: }
  6416                           ;i2c2.c: 675: }
  6417  0627  2E2D               	goto	l1467
  6418  0628                     l1465:	
  6419                           
  6420                           ;i2c2.c: 676: else
  6421                           ;i2c2.c: 677: {
  6422                           ;i2c2.c: 678: *pflag = I2C2_MESSAGE_FAIL;
  6423  0628  0821               	movf	I2C2_MasterTRBInsert@pflag,w
  6424  0629  0086               	movwf	6
  6425  062A  0187               	clrf	7
  6426  062B  0181               	clrf	1
  6427  062C  0A81               	incf	1,f
  6428  062D                     l1467:	
  6429                           
  6430                           ;i2c2.c: 679: }
  6431                           ;i2c2.c: 682: if (*pflag == I2C2_MESSAGE_PENDING)
  6432  062D  0821               	movf	I2C2_MasterTRBInsert@pflag,w
  6433  062E  0086               	movwf	6
  6434  062F  0187               	clrf	7
  6435  0630  3002               	movlw	2
  6436  0631  0601               	xorwf	1,w
  6437  0632  1D03               	btfss	3,2
  6438  0633  0008               	return
  6439  0634                     l1471:	
  6440                           ;i2c2.c: 683: {
  6441                           ;i2c2.c: 684: while(i2c2_state != S_MASTER_IDLE);
  6442                           
  6443  0634  0851               	movf	_i2c2_state,w
  6444  0635  1D03               	btfss	3,2
  6445  0636  2E34               	goto	l1471
  6446                           
  6447                           ;i2c2.c: 685: {
  6448                           ;i2c2.c: 688: PIR3bits.SSP2IF = 1;
  6449  0637  002E               	movlb	14	; select bank14
  6450  0638  150F               	bsf	15,2	;volatile
  6451  0639  0008               	return
  6452  063A                     __end_of_I2C2_MasterTRBInsert:	
  6453                           
  6454                           	psect	text19
  6455  06D8                     __ptext19:	
  6456 ;; *************** function _I2C2_MasterReadTRBBuild *****************
  6457 ;; Defined at:
  6458 ;;		line 694 in file "mcc_generated_files/i2c2.c"
  6459 ;; Parameters:    Size  Location     Type
  6460 ;;  ptrb            1    wreg     PTR struct .
  6461 ;;		 -> EMC1001_Read@trb(8), I2C2_MasterRead@trBlock(4), 
  6462 ;;  pdata           1    0[BANK0 ] PTR unsigned char 
  6463 ;;		 -> EMC1001_PrintTemp@templo(1), EMC1001_PrintTemp@temp(1), EMC1001_PrintInfo@templo(1), EMC1001_PrintInfo@temp(1), 
  6464 ;;		 -> EMC1001_PrintInfo@data(1), 
  6465 ;;  length          1    1[BANK0 ] unsigned char 
  6466 ;;  address         2    2[BANK0 ] unsigned int 
  6467 ;; Auto vars:     Size  Location     Type
  6468 ;;  ptrb            1    6[BANK0 ] PTR struct .
  6469 ;;		 -> EMC1001_Read@trb(8), I2C2_MasterRead@trBlock(4), 
  6470 ;; Return value:  Size  Location     Type
  6471 ;;                  1    wreg      void 
  6472 ;; Registers used:
  6473 ;;		wreg, fsr1l, fsr1h, status,2, status,0
  6474 ;; Tracked objects:
  6475 ;;		On entry : 0/0
  6476 ;;		On exit  : 0/0
  6477 ;;		Unchanged: 0/0
  6478 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
  6479 ;;      Params:         0       4       0       0       0       0       0       0       0       0       0       0       
      +0       0
  6480 ;;      Locals:         0       1       0       0       0       0       0       0       0       0       0       0       
      +0       0
  6481 ;;      Temps:          0       2       0       0       0       0       0       0       0       0       0       0       
      +0       0
  6482 ;;      Totals:         0       7       0       0       0       0       0       0       0       0       0       0       
      +0       0
  6483 ;;Total ram usage:        7 bytes
  6484 ;; Hardware stack levels used:    1
  6485 ;; Hardware stack levels required when called:    3
  6486 ;; This function calls:
  6487 ;;		Nothing
  6488 ;; This function is called by:
  6489 ;;		_EMC1001_Read
  6490 ;;		_I2C2_MasterRead
  6491 ;; This function uses a non-reentrant model
  6492 ;;
  6493                           
  6494                           
  6495                           ;psect for function _I2C2_MasterReadTRBBuild
  6496  06D8                     _I2C2_MasterReadTRBBuild:	
  6497                           
  6498                           ;incstack = 0
  6499                           ; Regs used in _I2C2_MasterReadTRBBuild: [wreg+fsr1l+fsr1h+status,2+status,0]
  6500                           ;I2C2_MasterReadTRBBuild@ptrb stored from wreg
  6501  06D8  0020               	movlb	0	; select bank0
  6502  06D9  00A6               	movwf	I2C2_MasterReadTRBBuild@ptrb
  6503                           
  6504                           ;i2c2.c: 700: ptrb->address = address << 1;
  6505  06DA  0823               	movf	I2C2_MasterReadTRBBuild@address+1,w
  6506  06DB  00A5               	movwf	??_I2C2_MasterReadTRBBuild+1
  6507  06DC  0822               	movf	I2C2_MasterReadTRBBuild@address,w
  6508  06DD  00A4               	movwf	??_I2C2_MasterReadTRBBuild
  6509  06DE  35A4               	lslf	??_I2C2_MasterReadTRBBuild,f
  6510  06DF  0DA5               	rlf	??_I2C2_MasterReadTRBBuild+1,f
  6511  06E0  0826               	movf	I2C2_MasterReadTRBBuild@ptrb,w
  6512  06E1  0086               	movwf	6
  6513  06E2  0187               	clrf	7
  6514  06E3  0824               	movf	??_I2C2_MasterReadTRBBuild,w
  6515  06E4  3FC0               	movwi [0]fsr1
  6516  06E5  0825               	movf	??_I2C2_MasterReadTRBBuild+1,w
  6517  06E6  3FC1               	movwi [1]fsr1
  6518                           
  6519                           ;i2c2.c: 702: ptrb->address |= 0x01;
  6520  06E7  0826               	movf	I2C2_MasterReadTRBBuild@ptrb,w
  6521  06E8  0086               	movwf	6
  6522  06E9  0187               	clrf	7
  6523  06EA  3001               	movlw	1
  6524  06EB  0481               	iorwf	1,f
  6525  06EC  3141               	addfsr 1,1
  6526  06ED  3000               	movlw	0
  6527  06EE  0481               	iorwf	1,f
  6528                           
  6529                           ;i2c2.c: 703: ptrb->length = length;
  6530  06EF  0821               	movf	I2C2_MasterReadTRBBuild@length,w
  6531  06F0  00A4               	movwf	??_I2C2_MasterReadTRBBuild
  6532  06F1  0826               	movf	I2C2_MasterReadTRBBuild@ptrb,w
  6533  06F2  3E02               	addlw	2
  6534  06F3  0086               	movwf	6
  6535  06F4  0187               	clrf	7
  6536  06F5  0824               	movf	??_I2C2_MasterReadTRBBuild,w
  6537  06F6  0081               	movwf	1
  6538                           
  6539                           ;i2c2.c: 704: ptrb->pbuffer = pdata;
  6540  06F7  0820               	movf	I2C2_MasterReadTRBBuild@pdata,w
  6541  06F8  00A4               	movwf	??_I2C2_MasterReadTRBBuild
  6542  06F9  0826               	movf	I2C2_MasterReadTRBBuild@ptrb,w
  6543  06FA  3E03               	addlw	3
  6544  06FB  0086               	movwf	6
  6545  06FC  0187               	clrf	7
  6546  06FD  0824               	movf	??_I2C2_MasterReadTRBBuild,w
  6547  06FE  0081               	movwf	1
  6548  06FF  0008               	return
  6549  0700                     __end_of_I2C2_MasterReadTRBBuild:	
  6550                           
  6551                           	psect	intentry
  6552  0004                     __pintentry:	
  6553 ;; *************** function _INTERRUPT_InterruptManager *****************
  6554 ;; Defined at:
  6555 ;;		line 51 in file "mcc_generated_files/interrupt_manager.c"
  6556 ;; Parameters:    Size  Location     Type
  6557 ;;		None
  6558 ;; Auto vars:     Size  Location     Type
  6559 ;;		None
  6560 ;; Return value:  Size  Location     Type
  6561 ;;                  1    wreg      void 
  6562 ;; Registers used:
  6563 ;;		wreg, fsr0l, fsr0h, fsr1l, fsr1h, status,2, status,0, pclath, cstack
  6564 ;; Tracked objects:
  6565 ;;		On entry : 0/0
  6566 ;;		On exit  : 0/0
  6567 ;;		Unchanged: 0/0
  6568 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
  6569 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  6570 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  6571 ;;      Temps:          1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  6572 ;;      Totals:         1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  6573 ;;Total ram usage:        1 bytes
  6574 ;; Hardware stack levels used:    1
  6575 ;; Hardware stack levels required when called:    2
  6576 ;; This function calls:
  6577 ;;		_I2C2_BusCollisionISR
  6578 ;;		_I2C2_ISR
  6579 ;; This function is called by:
  6580 ;;		Interrupt level 1
  6581 ;; This function uses a non-reentrant model
  6582 ;;
  6583                           
  6584  0004                     _INTERRUPT_InterruptManager:	
  6585                           
  6586                           ;incstack = 0
  6587  0004  147E               	bsf	126,0	;set compiler interrupt flag (level 1)
  6588                           
  6589                           ; Regs used in _INTERRUPT_InterruptManager: [wreg-fsr1h+status,2+status,0+pclath+cstack]
  6590  0005  3180               	pagesel	$
  6591  0006  0020               	movlb	0	; select bank0
  6592  0007  087F               	movf	127,w
  6593  0008  00F6               	movwf	??_INTERRUPT_InterruptManager
  6594                           
  6595                           ;interrupt_manager.c: 54: if(PIE3bits.BCL2IE == 1 && PIR3bits.BCL2IF == 1)
  6596  0009  002E               	movlb	14	; select bank14
  6597  000A  1999               	btfsc	25,3	;volatile
  6598  000B  1D8F               	btfss	15,3	;volatile
  6599  000C  2811               	goto	i1l198
  6600                           
  6601                           ;interrupt_manager.c: 55: {
  6602                           ;interrupt_manager.c: 56: I2C2_BusCollisionISR();
  6603  000D  3187  27FB  3180   	fcall	_I2C2_BusCollisionISR
  6604                           
  6605                           ;interrupt_manager.c: 57: }
  6606  0010  2816               	goto	i1l202
  6607  0011                     i1l198:	
  6608                           
  6609                           ;interrupt_manager.c: 58: else if(PIE3bits.SSP2IE == 1 && PIR3bits.SSP2IF == 1)
  6610  0011  1919               	btfsc	25,2	;volatile
  6611  0012  1D0F               	btfss	15,2	;volatile
  6612  0013  2816               	goto	i1l202
  6613                           
  6614                           ;interrupt_manager.c: 59: {
  6615                           ;interrupt_manager.c: 60: I2C2_ISR();
  6616  0014  3184  242D         	fcall	_I2C2_ISR
  6617  0016                     i1l202:	
  6618                           ;interrupt_manager.c: 62: else
  6619                           ;interrupt_manager.c: 63: {
  6620                           
  6621                           ;interrupt_manager.c: 61: }
  6622                           
  6623  0016  0876               	movf	??_INTERRUPT_InterruptManager,w
  6624  0017  0020               	movlb	0	; select bank0
  6625  0018  00FF               	movwf	127
  6626  0019  107E               	bcf	126,0	;clear compiler interrupt flag (level 1)
  6627  001A  0009               	retfie
  6628  001B                     __end_of_INTERRUPT_InterruptManager:	
  6629                           
  6630                           	psect	text21
  6631  042D                     __ptext21:	
  6632 ;; *************** function _I2C2_ISR *****************
  6633 ;; Defined at:
  6634 ;;		line 233 in file "mcc_generated_files/i2c2.c"
  6635 ;; Parameters:    Size  Location     Type
  6636 ;;		None
  6637 ;; Auto vars:     Size  Location     Type
  6638 ;;		None
  6639 ;; Return value:  Size  Location     Type
  6640 ;;                  1    wreg      void 
  6641 ;; Registers used:
  6642 ;;		wreg, fsr0l, fsr0h, fsr1l, fsr1h, status,2, status,0, pclath, cstack
  6643 ;; Tracked objects:
  6644 ;;		On entry : 0/0
  6645 ;;		On exit  : 0/0
  6646 ;;		Unchanged: 0/0
  6647 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
  6648 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  6649 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  6650 ;;      Temps:          4       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  6651 ;;      Totals:         4       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  6652 ;;Total ram usage:        4 bytes
  6653 ;; Hardware stack levels used:    1
  6654 ;; Hardware stack levels required when called:    1
  6655 ;; This function calls:
  6656 ;;		_I2C2_FunctionComplete
  6657 ;;		_I2C2_Stop
  6658 ;; This function is called by:
  6659 ;;		_INTERRUPT_InterruptManager
  6660 ;; This function uses a non-reentrant model
  6661 ;;
  6662                           
  6663                           
  6664                           ;psect for function _I2C2_ISR
  6665  042D                     _I2C2_ISR:	
  6666                           
  6667                           ;i2c2.c: 236: static uint8_t *pi2c_buf_ptr;
  6668                           ;i2c2.c: 237: static uint16_t i2c_address = 0;
  6669                           ;i2c2.c: 238: static uint8_t i2c_bytes_left = 0;
  6670                           ;i2c2.c: 239: static uint8_t i2c_10bit_address_restart = 0;
  6671                           ;i2c2.c: 241: PIR3bits.SSP2IF = 0;
  6672                           
  6673                           ;incstack = 0
  6674                           ; Regs used in _I2C2_ISR: [wreg-fsr1h+status,2+status,0+pclath+cstack]
  6675  042D  002E               	movlb	14	; select bank14
  6676  042E  110F               	bcf	15,2	;volatile
  6677                           
  6678                           ;i2c2.c: 245: if(SSP2CON1bits.WCOL)
  6679  042F  0023               	movlb	3	; select bank3
  6680  0430  1F9A               	btfss	26,7	;volatile
  6681  0431  2D5B               	goto	i1l1855
  6682                           
  6683                           ;i2c2.c: 246: {
  6684                           ;i2c2.c: 248: SSP2CON1bits.WCOL = 0;
  6685  0432  139A               	bcf	26,7	;volatile
  6686                           
  6687                           ;i2c2.c: 249: i2c2_state = S_MASTER_IDLE;
  6688  0433  0020               	movlb	0	; select bank0
  6689  0434  01D1               	clrf	_i2c2_state
  6690                           
  6691                           ;i2c2.c: 250: *(p_i2c2_current->pTrFlag) = I2C2_MESSAGE_FAIL;
  6692  0435  087A               	movf	_p_i2c2_current,w
  6693  0436  3E02               	addlw	2
  6694  0437  0086               	movwf	6
  6695  0438  0187               	clrf	7
  6696  0439  0801               	movf	1,w
  6697  043A  0086               	movwf	6
  6698  043B  0187               	clrf	7
  6699  043C  0181               	clrf	1
  6700  043D  0A81               	incf	1,f
  6701                           
  6702                           ;i2c2.c: 253: p_i2c2_current = (0);
  6703  043E  01FA               	clrf	_p_i2c2_current
  6704                           
  6705                           ;i2c2.c: 255: return;
  6706  043F  0008               	return
  6707  0440                     i1l100:	
  6708                           ;i2c2.c: 260: {
  6709                           ;i2c2.c: 261: case S_MASTER_IDLE:
  6710                           
  6711                           ;i2c2.c: 256: }
  6712                           ;i2c2.c: 259: switch(i2c2_state)
  6713                           
  6714                           
  6715                           ;i2c2.c: 263: if(i2c2_object.trStatus.s.empty != 1)
  6716  0440  18CE               	btfsc	_i2c2_object+2,1
  6717  0441  0008               	return
  6718                           
  6719                           ;i2c2.c: 264: {
  6720                           ;i2c2.c: 266: p_i2c2_current = i2c2_object.pTrHead;
  6721  0442  084D               	movf	low ((_i2c2_object| 0+1)),w
  6722  0443  00F2               	movwf	??_I2C2_ISR
  6723  0444  0872               	movf	??_I2C2_ISR,w
  6724  0445  00FA               	movwf	_p_i2c2_current
  6725                           
  6726                           ;i2c2.c: 267: i2c2_trb_count = i2c2_object.pTrHead->count;
  6727  0446  084D               	movf	low ((_i2c2_object| 0+1)),w
  6728  0447  0086               	movwf	6
  6729  0448  0187               	clrf	7
  6730  0449  0801               	movf	1,w
  6731  044A  00F2               	movwf	??_I2C2_ISR
  6732  044B  0872               	movf	??_I2C2_ISR,w
  6733  044C  00FC               	movwf	_i2c2_trb_count
  6734                           
  6735                           ;i2c2.c: 268: p_i2c2_trb_current = i2c2_object.pTrHead->ptrb_list;
  6736  044D  084D               	movf	low ((_i2c2_object| 0+1)),w
  6737  044E  0086               	movwf	6
  6738  044F  0187               	clrf	7
  6739  0450  3F41               	moviw [1]fsr1
  6740  0451  00FB               	movwf	_p_i2c2_trb_current
  6741                           
  6742                           ;i2c2.c: 270: i2c2_object.pTrHead++;
  6743  0452  3003               	movlw	3
  6744  0453  00F2               	movwf	??_I2C2_ISR
  6745  0454  0872               	movf	??_I2C2_ISR,w
  6746  0455  07CD               	addwf	low ((_i2c2_object| 0+1)),f
  6747                           
  6748                           ;i2c2.c: 273: if(i2c2_object.pTrHead == (i2c2_tr_queue + 1))
  6749  0456  084D               	movf	low ((_i2c2_object| 0+1)),w
  6750  0457  3A65               	xorlw	(low ((_i2c2_tr_queue| 0+3)))& (0+255)
  6751  0458  1D03               	skipz
  6752  0459  2C5E               	goto	i1l1743
  6753                           
  6754                           ;i2c2.c: 274: {
  6755                           ;i2c2.c: 276: i2c2_object.pTrHead = i2c2_tr_queue;
  6756  045A  3062               	movlw	(low (_i2c2_tr_queue| 0))& (0+255)
  6757  045B  00F2               	movwf	??_I2C2_ISR
  6758  045C  0872               	movf	??_I2C2_ISR,w
  6759  045D  00CD               	movwf	low ((_i2c2_object| 0+1))
  6760  045E                     i1l1743:	
  6761                           
  6762                           ;i2c2.c: 277: }
  6763                           ;i2c2.c: 281: i2c2_object.trStatus.s.full = 0;
  6764  045E  104E               	bcf	_i2c2_object+2,0
  6765                           
  6766                           ;i2c2.c: 284: if(i2c2_object.pTrHead == i2c2_object.pTrTail)
  6767  045F  084D               	movf	low ((_i2c2_object| 0+1)),w
  6768  0460  064C               	xorwf	_i2c2_object,w
  6769  0461  1903               	btfsc	3,2
  6770                           
  6771                           ;i2c2.c: 285: {
  6772                           ;i2c2.c: 287: i2c2_object.trStatus.s.empty = 1;
  6773  0462  14CE               	bsf	_i2c2_object+2,1
  6774                           
  6775                           ;i2c2.c: 288: }
  6776                           ;i2c2.c: 291: SSP2CON2bits.SEN = 1;
  6777  0463  0023               	movlb	3	; select bank3
  6778  0464  141B               	bsf	27,0	;volatile
  6779                           
  6780                           ;i2c2.c: 294: i2c2_state = S_MASTER_SEND_ADDR;
  6781  0465  3002               	movlw	2
  6782  0466  00F2               	movwf	??_I2C2_ISR
  6783  0467  0872               	movf	??_I2C2_ISR,w
  6784  0468  0020               	movlb	0	; select bank0
  6785  0469  00D1               	movwf	_i2c2_state
  6786                           
  6787                           ;i2c2.c: 295: }
  6788                           ;i2c2.c: 297: break;
  6789  046A  0008               	return
  6790  046B                     i1l105:	
  6791                           ;i2c2.c: 299: case S_MASTER_RESTART:
  6792                           
  6793                           
  6794                           ;i2c2.c: 304: SSP2CON2bits.RSEN = 1;
  6795  046B  0023               	movlb	3	; select bank3
  6796  046C  149B               	bsf	27,1	;volatile
  6797                           
  6798                           ;i2c2.c: 307: i2c2_state = S_MASTER_SEND_ADDR;
  6799  046D  3002               	movlw	2
  6800  046E  00F2               	movwf	??_I2C2_ISR
  6801  046F  0872               	movf	??_I2C2_ISR,w
  6802  0470  0020               	movlb	0	; select bank0
  6803  0471  00D1               	movwf	_i2c2_state
  6804                           
  6805                           ;i2c2.c: 309: break;
  6806  0472  0008               	return
  6807  0473                     i1l106:	
  6808                           ;i2c2.c: 311: case S_MASTER_SEND_ADDR_10BIT_LSB:
  6809                           
  6810                           
  6811                           ;i2c2.c: 313: if(SSP2CON2bits.ACKSTAT)
  6812  0473  0023               	movlb	3	; select bank3
  6813  0474  1F1B               	btfss	27,6	;volatile
  6814  0475  2C7F               	goto	i1l1755
  6815                           
  6816                           ;i2c2.c: 314: {
  6817                           ;i2c2.c: 315: i2c2_object.i2cErrors++;
  6818  0476  3001               	movlw	1
  6819  0477  00F2               	movwf	??_I2C2_ISR
  6820  0478  0872               	movf	??_I2C2_ISR,w
  6821  0479  0020               	movlb	0	; select bank0
  6822  047A  07D0               	addwf	_i2c2_object+4,f
  6823                           
  6824                           ;i2c2.c: 316: I2C2_Stop(I2C2_MESSAGE_ADDRESS_NO_ACK);
  6825  047B  3004               	movlw	4
  6826  047C  3187  278D         	fcall	_I2C2_Stop
  6827                           
  6828                           ;i2c2.c: 317: }
  6829  047E  0008               	return
  6830  047F                     i1l1755:	
  6831                           
  6832                           ;i2c2.c: 318: else
  6833                           ;i2c2.c: 319: {
  6834                           ;i2c2.c: 321: SSP2BUF = (i2c_address >> 1) & 0x00FF;
  6835  047F  0020               	movlb	0	; select bank0
  6836  0480  0866               	movf	I2C2_ISR@i2c_address+1,w
  6837  0481  00F3               	movwf	??_I2C2_ISR+1
  6838  0482  0865               	movf	I2C2_ISR@i2c_address,w
  6839  0483  00F2               	movwf	??_I2C2_ISR
  6840  0484  36F3               	lsrf	??_I2C2_ISR+1,f
  6841  0485  0CF2               	rrf	??_I2C2_ISR,f
  6842  0486  0872               	movf	??_I2C2_ISR,w
  6843  0487  0023               	movlb	3	; select bank3
  6844  0488  0096               	movwf	22	;volatile
  6845                           
  6846                           ;i2c2.c: 324: if(i2c_address & 0x01)
  6847  0489  0020               	movlb	0	; select bank0
  6848  048A  1C65               	btfss	I2C2_ISR@i2c_address,0
  6849  048B  2C91               	goto	i1l1761
  6850                           
  6851                           ;i2c2.c: 325: {
  6852                           ;i2c2.c: 328: i2c2_state = S_MASTER_10BIT_RESTART;
  6853  048C  300B               	movlw	11
  6854  048D  00F2               	movwf	??_I2C2_ISR
  6855  048E  0872               	movf	??_I2C2_ISR,w
  6856  048F  00D1               	movwf	_i2c2_state
  6857                           
  6858                           ;i2c2.c: 329: }
  6859  0490  0008               	return
  6860  0491                     i1l1761:	
  6861                           
  6862                           ;i2c2.c: 330: else
  6863                           ;i2c2.c: 331: {
  6864                           ;i2c2.c: 333: i2c2_state = S_MASTER_SEND_DATA;
  6865  0491  3003               	movlw	3
  6866  0492  00F2               	movwf	??_I2C2_ISR
  6867  0493  0872               	movf	??_I2C2_ISR,w
  6868  0494  00D1               	movwf	_i2c2_state
  6869                           
  6870                           ;i2c2.c: 334: }
  6871                           ;i2c2.c: 335: }
  6872                           ;i2c2.c: 337: break;
  6873  0495  0008               	return
  6874  0496                     i1l111:	
  6875                           ;i2c2.c: 339: case S_MASTER_10BIT_RESTART:
  6876                           
  6877                           
  6878                           ;i2c2.c: 341: if(SSP2CON2bits.ACKSTAT)
  6879  0496  0023               	movlb	3	; select bank3
  6880  0497  1F1B               	btfss	27,6	;volatile
  6881  0498  2CA2               	goto	i1l112
  6882                           
  6883                           ;i2c2.c: 342: {
  6884                           ;i2c2.c: 343: i2c2_object.i2cErrors++;
  6885  0499  3001               	movlw	1
  6886  049A  00F2               	movwf	??_I2C2_ISR
  6887  049B  0872               	movf	??_I2C2_ISR,w
  6888  049C  0020               	movlb	0	; select bank0
  6889  049D  07D0               	addwf	_i2c2_object+4,f
  6890                           
  6891                           ;i2c2.c: 344: I2C2_Stop(I2C2_MESSAGE_ADDRESS_NO_ACK);
  6892  049E  3004               	movlw	4
  6893  049F  3187  278D         	fcall	_I2C2_Stop
  6894                           
  6895                           ;i2c2.c: 345: }
  6896  04A1  0008               	return
  6897  04A2                     i1l112:	
  6898                           
  6899                           ;i2c2.c: 346: else
  6900                           ;i2c2.c: 347: {
  6901                           ;i2c2.c: 350: SSP2CON2bits.RSEN = 1;
  6902  04A2  149B               	bsf	27,1	;volatile
  6903                           
  6904                           ;i2c2.c: 354: i2c_address = 0x00F0 | ((i2c_address >> 8) & 0x0006);
  6905  04A3  0020               	movlb	0	; select bank0
  6906  04A4  0866               	movf	I2C2_ISR@i2c_address+1,w
  6907  04A5  00F3               	movwf	??_I2C2_ISR+1
  6908  04A6  0865               	movf	I2C2_ISR@i2c_address,w
  6909  04A7  00F2               	movwf	??_I2C2_ISR
  6910  04A8  0873               	movf	??_I2C2_ISR+1,w
  6911  04A9  00F2               	movwf	??_I2C2_ISR
  6912  04AA  01F3               	clrf	??_I2C2_ISR+1
  6913  04AB  3006               	movlw	6
  6914  04AC  0572               	andwf	??_I2C2_ISR,w
  6915  04AD  00F4               	movwf	??_I2C2_ISR+2
  6916  04AE  3000               	movlw	0
  6917  04AF  0573               	andwf	??_I2C2_ISR+1,w
  6918  04B0  00F5               	movwf	??_I2C2_ISR+3
  6919  04B1  30F0               	movlw	240
  6920  04B2  0474               	iorwf	??_I2C2_ISR+2,w
  6921  04B3  00E5               	movwf	I2C2_ISR@i2c_address
  6922  04B4  3000               	movlw	0
  6923  04B5  0475               	iorwf	??_I2C2_ISR+3,w
  6924  04B6  00E6               	movwf	I2C2_ISR@i2c_address+1
  6925                           
  6926                           ;i2c2.c: 357: i2c_address |= 0x0001;
  6927  04B7  1465               	bsf	I2C2_ISR@i2c_address,0
  6928                           
  6929                           ;i2c2.c: 360: i2c_10bit_address_restart = 1;
  6930  04B8  01F7               	clrf	I2C2_ISR@i2c_10bit_address_restart
  6931  04B9  0AF7               	incf	I2C2_ISR@i2c_10bit_address_restart,f
  6932                           
  6933                           ;i2c2.c: 363: i2c2_state = S_MASTER_SEND_ADDR;
  6934  04BA  3002               	movlw	2
  6935  04BB  00F2               	movwf	??_I2C2_ISR
  6936  04BC  0872               	movf	??_I2C2_ISR,w
  6937  04BD  00D1               	movwf	_i2c2_state
  6938                           
  6939                           ;i2c2.c: 364: }
  6940                           ;i2c2.c: 366: break;
  6941  04BE  0008               	return
  6942  04BF                     i1l1775:	
  6943                           ;i2c2.c: 368: case S_MASTER_SEND_ADDR:
  6944                           
  6945                           
  6946                           ;i2c2.c: 381: if(i2c_10bit_address_restart != 1)
  6947  04BF  0377               	decf	I2C2_ISR@i2c_10bit_address_restart,w
  6948  04C0  1903               	btfsc	3,2
  6949  04C1  2CD3               	goto	i1l1795
  6950                           
  6951                           ;i2c2.c: 382: {
  6952                           ;i2c2.c: 384: i2c_address = p_i2c2_trb_current->address;
  6953  04C2  087B               	movf	_p_i2c2_trb_current,w
  6954  04C3  0086               	movwf	6
  6955  04C4  0187               	clrf	7
  6956  04C5  3F40               	moviw [0]fsr1
  6957  04C6  00E5               	movwf	I2C2_ISR@i2c_address
  6958  04C7  3F41               	moviw [1]fsr1
  6959  04C8  00E6               	movwf	I2C2_ISR@i2c_address+1
  6960                           
  6961                           ;i2c2.c: 385: pi2c_buf_ptr = p_i2c2_trb_current->pbuffer;
  6962  04C9  087B               	movf	_p_i2c2_trb_current,w
  6963  04CA  0086               	movwf	6
  6964  04CB  0187               	clrf	7
  6965  04CC  3F43               	moviw [3]fsr1
  6966  04CD  00F9               	movwf	I2C2_ISR@pi2c_buf_ptr
  6967                           
  6968                           ;i2c2.c: 386: i2c_bytes_left = p_i2c2_trb_current->length;
  6969  04CE  087B               	movf	_p_i2c2_trb_current,w
  6970  04CF  0086               	movwf	6
  6971  04D0  0187               	clrf	7
  6972  04D1  3F42               	moviw [2]fsr1
  6973  04D2  00F8               	movwf	I2C2_ISR@i2c_bytes_left
  6974  04D3                     i1l1795:	
  6975                           ;i2c2.c: 407: }
  6976                           ;i2c2.c: 408: }
  6977                           
  6978                           ;i2c2.c: 406: i2c_10bit_address_restart = 0;
  6979                           
  6980                           ;i2c2.c: 404: i2c2_state = S_MASTER_ACK_ADDR;
  6981                           
  6982                           ;i2c2.c: 400: else
  6983                           ;i2c2.c: 401: {
  6984                           ;i2c2.c: 403: SSP2BUF = i2c_address;
  6985                           
  6986                           ;i2c2.c: 399: }
  6987                           
  6988                           ;i2c2.c: 398: i2c2_state = S_MASTER_SEND_ADDR_10BIT_LSB;
  6989                           
  6990                           ;i2c2.c: 393: {
  6991                           ;i2c2.c: 397: SSP2BUF = 0xF0 | ((i2c_address >> 8) & 0x0006);
  6992                           
  6993                           ;i2c2.c: 391: {
  6994                           ;i2c2.c: 392: if (0 == i2c_10bit_address_restart)
  6995                           
  6996                           ;i2c2.c: 387: }
  6997                           ;i2c2.c: 390: if(!1 && (0x0 != i2c_address))
  6998                           
  6999                           
  7000                           ;i2c2.c: 409: else
  7001                           ;i2c2.c: 410: {
  7002                           ;i2c2.c: 412: SSP2BUF = i2c_address;
  7003  04D3  0865               	movf	I2C2_ISR@i2c_address,w
  7004  04D4  0023               	movlb	3	; select bank3
  7005  04D5  0096               	movwf	22	;volatile
  7006                           
  7007                           ;i2c2.c: 413: if(i2c_address & 0x01)
  7008  04D6  0020               	movlb	0	; select bank0
  7009  04D7  1C65               	btfss	I2C2_ISR@i2c_address,0
  7010  04D8  2CDE               	goto	i1l1801
  7011                           
  7012                           ;i2c2.c: 414: {
  7013                           ;i2c2.c: 416: i2c2_state = S_MASTER_ACK_ADDR;
  7014  04D9  3005               	movlw	5
  7015  04DA  00F2               	movwf	??_I2C2_ISR
  7016  04DB  0872               	movf	??_I2C2_ISR,w
  7017  04DC  00D1               	movwf	_i2c2_state
  7018                           
  7019                           ;i2c2.c: 417: }
  7020  04DD  0008               	return
  7021  04DE                     i1l1801:	
  7022                           
  7023                           ;i2c2.c: 418: else
  7024                           ;i2c2.c: 419: {
  7025                           ;i2c2.c: 421: i2c2_state = S_MASTER_SEND_DATA;
  7026  04DE  3003               	movlw	3
  7027  04DF  00F2               	movwf	??_I2C2_ISR
  7028  04E0  0872               	movf	??_I2C2_ISR,w
  7029  04E1  00D1               	movwf	_i2c2_state
  7030                           
  7031                           ;i2c2.c: 422: }
  7032                           ;i2c2.c: 423: }
  7033                           ;i2c2.c: 424: break;
  7034  04E2  0008               	return
  7035  04E3                     i1l122:	
  7036                           ;i2c2.c: 426: case S_MASTER_SEND_DATA:
  7037                           
  7038                           
  7039                           ;i2c2.c: 429: if(SSP2CON2bits.ACKSTAT)
  7040  04E3  0023               	movlb	3	; select bank3
  7041  04E4  1F1B               	btfss	27,6	;volatile
  7042  04E5  2CF1               	goto	i1l1809
  7043                           
  7044                           ;i2c2.c: 430: {
  7045                           ;i2c2.c: 432: i2c2_object.i2cErrors++;
  7046  04E6  3001               	movlw	1
  7047  04E7  00F2               	movwf	??_I2C2_ISR
  7048  04E8  0872               	movf	??_I2C2_ISR,w
  7049  04E9  0020               	movlb	0	; select bank0
  7050  04EA  07D0               	addwf	_i2c2_object+4,f
  7051                           
  7052                           ;i2c2.c: 435: SSP2CON2bits.ACKSTAT = 0;
  7053  04EB  0023               	movlb	3	; select bank3
  7054  04EC  131B               	bcf	27,6	;volatile
  7055                           
  7056                           ;i2c2.c: 438: I2C2_Stop(I2C2_DATA_NO_ACK);
  7057  04ED  3005               	movlw	5
  7058  04EE  3187  278D         	fcall	_I2C2_Stop
  7059                           
  7060                           ;i2c2.c: 440: }
  7061  04F0  0008               	return
  7062  04F1                     i1l1809:	
  7063                           
  7064                           ;i2c2.c: 441: else
  7065                           ;i2c2.c: 442: {
  7066                           ;i2c2.c: 444: if(i2c_bytes_left-- == 0U)
  7067  04F1  3001               	movlw	1
  7068  04F2  02F8               	subwf	I2C2_ISR@i2c_bytes_left,f
  7069  04F3  0A78               	incf	I2C2_ISR@i2c_bytes_left,w
  7070  04F4  1D03               	btfss	3,2
  7071  04F5  2D0A               	goto	i1l1817
  7072                           
  7073                           ;i2c2.c: 445: {
  7074                           ;i2c2.c: 449: p_i2c2_trb_current++;
  7075  04F6  3004               	movlw	4
  7076  04F7  00F2               	movwf	??_I2C2_ISR
  7077  04F8  0872               	movf	??_I2C2_ISR,w
  7078  04F9  07FB               	addwf	_p_i2c2_trb_current,f
  7079                           
  7080                           ;i2c2.c: 452: if(--i2c2_trb_count == 0)
  7081  04FA  3001               	movlw	1
  7082  04FB  02FC               	subwf	_i2c2_trb_count,f
  7083  04FC  1D03               	btfss	3,2
  7084  04FD  2D02               	goto	i1l126
  7085                           
  7086                           ;i2c2.c: 453: {
  7087                           ;i2c2.c: 454: I2C2_Stop(I2C2_MESSAGE_COMPLETE);
  7088  04FE  3000               	movlw	0
  7089  04FF  3187  278D         	fcall	_I2C2_Stop
  7090                           
  7091                           ;i2c2.c: 455: }
  7092  0501  0008               	return
  7093  0502                     i1l126:	
  7094                           
  7095                           ;i2c2.c: 456: else
  7096                           ;i2c2.c: 457: {
  7097                           ;i2c2.c: 464: SSP2CON2bits.RSEN = 1;
  7098  0502  0023               	movlb	3	; select bank3
  7099  0503  149B               	bsf	27,1	;volatile
  7100                           
  7101                           ;i2c2.c: 467: i2c2_state = S_MASTER_SEND_ADDR;
  7102  0504  3002               	movlw	2
  7103  0505  00F2               	movwf	??_I2C2_ISR
  7104  0506  0872               	movf	??_I2C2_ISR,w
  7105  0507  0020               	movlb	0	; select bank0
  7106  0508  00D1               	movwf	_i2c2_state
  7107                           
  7108                           ;i2c2.c: 469: }
  7109                           ;i2c2.c: 470: }
  7110  0509  0008               	return
  7111  050A                     i1l1817:	
  7112                           
  7113                           ;i2c2.c: 471: else
  7114                           ;i2c2.c: 472: {
  7115                           ;i2c2.c: 474: SSP2BUF = *pi2c_buf_ptr++;
  7116  050A  0879               	movf	I2C2_ISR@pi2c_buf_ptr,w
  7117  050B  0086               	movwf	6
  7118  050C  0187               	clrf	7
  7119  050D  0801               	movf	1,w
  7120  050E  0023               	movlb	3	; select bank3
  7121  050F  0096               	movwf	22	;volatile
  7122  0510  3001               	movlw	1
  7123  0511  00F2               	movwf	??_I2C2_ISR
  7124  0512  0872               	movf	??_I2C2_ISR,w
  7125  0513  07F9               	addwf	I2C2_ISR@pi2c_buf_ptr,f
  7126                           
  7127                           ;i2c2.c: 475: }
  7128                           ;i2c2.c: 476: }
  7129                           ;i2c2.c: 477: break;
  7130  0514  0008               	return
  7131  0515                     i1l129:	
  7132                           ;i2c2.c: 479: case S_MASTER_ACK_ADDR:
  7133                           
  7134                           
  7135                           ;i2c2.c: 482: if(SSP2CON2bits.ACKSTAT)
  7136  0515  0023               	movlb	3	; select bank3
  7137  0516  1F1B               	btfss	27,6	;volatile
  7138  0517  2D23               	goto	i1l130
  7139                           
  7140                           ;i2c2.c: 483: {
  7141                           ;i2c2.c: 486: i2c2_object.i2cErrors++;
  7142  0518  3001               	movlw	1
  7143  0519  00F2               	movwf	??_I2C2_ISR
  7144  051A  0872               	movf	??_I2C2_ISR,w
  7145  051B  0020               	movlb	0	; select bank0
  7146  051C  07D0               	addwf	_i2c2_object+4,f
  7147                           
  7148                           ;i2c2.c: 489: I2C2_Stop(I2C2_MESSAGE_ADDRESS_NO_ACK);
  7149  051D  3004               	movlw	4
  7150  051E  3187  278D         	fcall	_I2C2_Stop
  7151                           
  7152                           ;i2c2.c: 492: SSP2CON2bits.ACKSTAT = 0;
  7153  0520  0023               	movlb	3	; select bank3
  7154  0521  131B               	bcf	27,6	;volatile
  7155                           
  7156                           ;i2c2.c: 493: }
  7157  0522  0008               	return
  7158  0523                     i1l130:	
  7159                           
  7160                           ;i2c2.c: 494: else
  7161                           ;i2c2.c: 495: {
  7162                           ;i2c2.c: 496: SSP2CON2bits.RCEN = 1;
  7163  0523  159B               	bsf	27,3	;volatile
  7164                           
  7165                           ;i2c2.c: 497: i2c2_state = S_MASTER_ACK_RCV_DATA;
  7166  0524  3008               	movlw	8
  7167  0525  00F2               	movwf	??_I2C2_ISR
  7168  0526  0872               	movf	??_I2C2_ISR,w
  7169  0527  0020               	movlb	0	; select bank0
  7170  0528  00D1               	movwf	_i2c2_state
  7171                           
  7172                           ;i2c2.c: 498: }
  7173                           ;i2c2.c: 499: break;
  7174  0529  0008               	return
  7175  052A                     i1l1829:	
  7176                           ;i2c2.c: 501: case S_MASTER_RCV_DATA:
  7177                           
  7178                           
  7179                           ;i2c2.c: 506: i2c2_state = S_MASTER_ACK_RCV_DATA;
  7180  052A  3008               	movlw	8
  7181  052B  00F2               	movwf	??_I2C2_ISR
  7182  052C  0872               	movf	??_I2C2_ISR,w
  7183  052D  00D1               	movwf	_i2c2_state
  7184                           
  7185                           ;i2c2.c: 509: SSP2CON2bits.RCEN = 1;
  7186  052E  0023               	movlb	3	; select bank3
  7187  052F  159B               	bsf	27,3	;volatile
  7188                           
  7189                           ;i2c2.c: 511: break;
  7190  0530  0008               	return
  7191  0531                     i1l1833:	
  7192                           ;i2c2.c: 513: case S_MASTER_ACK_RCV_DATA:
  7193                           
  7194                           
  7195                           ;i2c2.c: 516: *pi2c_buf_ptr++ = SSP2BUF;
  7196  0531  0023               	movlb	3	; select bank3
  7197  0532  0816               	movf	22,w	;volatile
  7198  0533  00F2               	movwf	??_I2C2_ISR
  7199  0534  0879               	movf	I2C2_ISR@pi2c_buf_ptr,w
  7200  0535  0086               	movwf	6
  7201  0536  0187               	clrf	7
  7202  0537  0872               	movf	??_I2C2_ISR,w
  7203  0538  0081               	movwf	1
  7204  0539  3001               	movlw	1
  7205  053A  00F2               	movwf	??_I2C2_ISR
  7206  053B  0872               	movf	??_I2C2_ISR,w
  7207  053C  07F9               	addwf	I2C2_ISR@pi2c_buf_ptr,f
  7208                           
  7209                           ;i2c2.c: 519: if(--i2c_bytes_left)
  7210  053D  3001               	movlw	1
  7211  053E  02F8               	subwf	I2C2_ISR@i2c_bytes_left,f
  7212  053F  1903               	btfsc	3,2
  7213  0540  2D48               	goto	i1l134
  7214                           
  7215                           ;i2c2.c: 520: {
  7216                           ;i2c2.c: 526: SSP2CON2bits.ACKDT = 0;
  7217  0541  129B               	bcf	27,5	;volatile
  7218                           
  7219                           ;i2c2.c: 529: i2c2_state = S_MASTER_RCV_DATA;
  7220  0542  3006               	movlw	6
  7221  0543  00F2               	movwf	??_I2C2_ISR
  7222  0544  0872               	movf	??_I2C2_ISR,w
  7223  0545  0020               	movlb	0	; select bank0
  7224  0546  00D1               	movwf	_i2c2_state
  7225                           
  7226                           ;i2c2.c: 530: }
  7227  0547  2D4B               	goto	i1l1845
  7228  0548                     i1l134:	
  7229                           
  7230                           ;i2c2.c: 531: else
  7231                           ;i2c2.c: 532: {
  7232                           ;i2c2.c: 536: SSP2CON2bits.ACKDT = 1;
  7233  0548  169B               	bsf	27,5	;volatile
  7234                           
  7235                           ;i2c2.c: 538: I2C2_FunctionComplete();
  7236  0549  3187  27BC         	fcall	_I2C2_FunctionComplete
  7237  054B                     i1l1845:	
  7238                           
  7239                           ;i2c2.c: 539: }
  7240                           ;i2c2.c: 542: SSP2CON2bits.ACKEN = 1;
  7241  054B  0023               	movlb	3	; select bank3
  7242  054C  161B               	bsf	27,4	;volatile
  7243                           
  7244                           ;i2c2.c: 543: break;
  7245  054D  0008               	return
  7246  054E                     i1l1847:	
  7247                           ;i2c2.c: 545: case S_MASTER_RCV_STOP:
  7248                           
  7249                           
  7250                           ;i2c2.c: 546: case S_MASTER_SEND_STOP:
  7251                           ;i2c2.c: 549: I2C2_Stop(I2C2_MESSAGE_COMPLETE);
  7252  054E  3000               	movlw	0
  7253  054F  3187  278D         	fcall	_I2C2_Stop
  7254                           
  7255                           ;i2c2.c: 550: break;
  7256  0551  0008               	return
  7257  0552                     i1l1849:	
  7258                           ;i2c2.c: 552: default:
  7259                           
  7260                           
  7261                           ;i2c2.c: 556: i2c2_object.i2cErrors++;
  7262  0552  3001               	movlw	1
  7263  0553  00F2               	movwf	??_I2C2_ISR
  7264  0554  0872               	movf	??_I2C2_ISR,w
  7265  0555  0020               	movlb	0	; select bank0
  7266  0556  07D0               	addwf	_i2c2_object+4,f
  7267                           
  7268                           ;i2c2.c: 557: I2C2_Stop(I2C2_LOST_STATE);
  7269  0557  3006               	movlw	6
  7270  0558  3187  278D         	fcall	_I2C2_Stop
  7271                           
  7272                           ;i2c2.c: 560: }
  7273                           
  7274                           ;i2c2.c: 558: break;
  7275  055A  0008               	return
  7276  055B                     i1l1855:	
  7277  055B  0020               	movlb	0	; select bank0
  7278  055C  0851               	movf	_i2c2_state,w
  7279                           
  7280                           ; Switch size 1, requested type "space"
  7281                           ; Number of cases is 11, Range of values is 0 to 11
  7282                           ; switch strategies available:
  7283                           ; Name         Instructions Cycles
  7284                           ; direct_byte           30     6 (fixed)
  7285                           ; simple_byte           34    18 (average)
  7286                           ; jumptable            260     6 (fixed)
  7287                           ;	Chosen strategy is direct_byte
  7288  055D  0084               	movwf	4
  7289  055E  300C               	movlw	12
  7290  055F  0204               	subwf	4,w
  7291  0560  1803               	skipnc
  7292  0561  2D52               	goto	i1l1849
  7293  0562  3187               	movlp	high i1S2291
  7294  0563  3504               	lslf	4,w
  7295  0564  3E75               	addlw	low i1S2291
  7296  0565  0082               	movwf	2
  7297  0566  0008               	return
  7298  0567                     __end_of_I2C2_ISR:	
  7299                           
  7300                           	psect	swtext1
  7301  0775                     __pswtext1:	
  7302  0775                     i1S2291:	
  7303  0775  3184  2C40         	ljmp	i1l100
  7304  0777  3184  2C6B         	ljmp	i1l105
  7305  0779  3184  2CBF         	ljmp	i1l1775
  7306  077B  3184  2CE3         	ljmp	i1l122
  7307  077D  3185  2D4E         	ljmp	i1l1847
  7308  077F  3185  2D15         	ljmp	i1l129
  7309  0781  3185  2D2A         	ljmp	i1l1829
  7310  0783  3185  2D4E         	ljmp	i1l1847
  7311  0785  3185  2D31         	ljmp	i1l1833
  7312  0787  3185  2D52         	ljmp	i1l1849
  7313  0789  3184  2C73         	ljmp	i1l106
  7314  078B  3184  2C96         	ljmp	i1l111
  7315                           
  7316                           	psect	text22
  7317  078D                     __ptext22:	
  7318 ;; *************** function _I2C2_Stop *****************
  7319 ;; Defined at:
  7320 ;;		line 581 in file "mcc_generated_files/i2c2.c"
  7321 ;; Parameters:    Size  Location     Type
  7322 ;;  completion_c    1    wreg     enum E14260
  7323 ;; Auto vars:     Size  Location     Type
  7324 ;;  completion_c    1    1[COMMON] enum E14260
  7325 ;; Return value:  Size  Location     Type
  7326 ;;                  1    wreg      void 
  7327 ;; Registers used:
  7328 ;;		wreg, fsr1l, fsr1h, status,2, status,0
  7329 ;; Tracked objects:
  7330 ;;		On entry : 0/0
  7331 ;;		On exit  : 0/0
  7332 ;;		Unchanged: 0/0
  7333 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
  7334 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  7335 ;;      Locals:         1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  7336 ;;      Temps:          1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  7337 ;;      Totals:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  7338 ;;Total ram usage:        2 bytes
  7339 ;; Hardware stack levels used:    1
  7340 ;; This function calls:
  7341 ;;		Nothing
  7342 ;; This function is called by:
  7343 ;;		_I2C2_ISR
  7344 ;; This function uses a non-reentrant model
  7345 ;;
  7346                           
  7347                           
  7348                           ;psect for function _I2C2_Stop
  7349  078D                     _I2C2_Stop:	
  7350                           
  7351                           ;incstack = 0
  7352                           ; Regs used in _I2C2_Stop: [wreg+fsr1l+fsr1h+status,2+status,0]
  7353                           ;I2C2_Stop@completion_code stored from wreg
  7354  078D  00F1               	movwf	I2C2_Stop@completion_code
  7355                           
  7356                           ;i2c2.c: 584: SSP2CON2bits.PEN = 1;
  7357  078E  0023               	movlb	3	; select bank3
  7358  078F  151B               	bsf	27,2	;volatile
  7359                           
  7360                           ;i2c2.c: 587: if (p_i2c2_current->pTrFlag != (0))
  7361  0790  087A               	movf	_p_i2c2_current,w
  7362  0791  3E02               	addlw	2
  7363  0792  0086               	movwf	6
  7364  0793  0187               	clrf	7
  7365  0794  0801               	movf	1,w
  7366  0795  1903               	btfsc	3,2
  7367  0796  2FA2               	goto	i1l1555
  7368                           
  7369                           ;i2c2.c: 588: {
  7370                           ;i2c2.c: 590: *(p_i2c2_current->pTrFlag) = completion_code;
  7371  0797  0871               	movf	I2C2_Stop@completion_code,w
  7372  0798  00F0               	movwf	??_I2C2_Stop
  7373  0799  087A               	movf	_p_i2c2_current,w
  7374  079A  3E02               	addlw	2
  7375  079B  0086               	movwf	6
  7376  079C  0187               	clrf	7
  7377  079D  0801               	movf	1,w
  7378  079E  0086               	movwf	6
  7379  079F  0187               	clrf	7
  7380  07A0  0870               	movf	??_I2C2_Stop,w
  7381  07A1  0081               	movwf	1
  7382  07A2                     i1l1555:	
  7383                           
  7384                           ;i2c2.c: 591: }
  7385                           ;i2c2.c: 594: i2c2_state = S_MASTER_IDLE;
  7386  07A2  0020               	movlb	0	; select bank0
  7387  07A3  01D1               	clrf	_i2c2_state
  7388  07A4  0008               	return
  7389  07A5                     __end_of_I2C2_Stop:	
  7390                           
  7391                           	psect	text23
  7392  07BC                     __ptext23:	
  7393 ;; *************** function _I2C2_FunctionComplete *****************
  7394 ;; Defined at:
  7395 ;;		line 563 in file "mcc_generated_files/i2c2.c"
  7396 ;; Parameters:    Size  Location     Type
  7397 ;;		None
  7398 ;; Auto vars:     Size  Location     Type
  7399 ;;		None
  7400 ;; Return value:  Size  Location     Type
  7401 ;;                  1    wreg      void 
  7402 ;; Registers used:
  7403 ;;		wreg, status,2, status,0
  7404 ;; Tracked objects:
  7405 ;;		On entry : 0/0
  7406 ;;		On exit  : 0/0
  7407 ;;		Unchanged: 0/0
  7408 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
  7409 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  7410 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  7411 ;;      Temps:          1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  7412 ;;      Totals:         1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  7413 ;;Total ram usage:        1 bytes
  7414 ;; Hardware stack levels used:    1
  7415 ;; This function calls:
  7416 ;;		Nothing
  7417 ;; This function is called by:
  7418 ;;		_I2C2_ISR
  7419 ;; This function uses a non-reentrant model
  7420 ;;
  7421                           
  7422                           
  7423                           ;psect for function _I2C2_FunctionComplete
  7424  07BC                     _I2C2_FunctionComplete:	
  7425                           
  7426                           ;i2c2.c: 567: p_i2c2_trb_current++;
  7427                           
  7428                           ;incstack = 0
  7429                           ; Regs used in _I2C2_FunctionComplete: [wreg+status,2+status,0]
  7430  07BC  3004               	movlw	4
  7431  07BD  00F0               	movwf	??_I2C2_FunctionComplete
  7432  07BE  0870               	movf	??_I2C2_FunctionComplete,w
  7433  07BF  07FB               	addwf	_p_i2c2_trb_current,f
  7434                           
  7435                           ;i2c2.c: 570: if(--i2c2_trb_count == 0)
  7436  07C0  3001               	movlw	1
  7437  07C1  02FC               	subwf	_i2c2_trb_count,f
  7438  07C2  1D03               	btfss	3,2
  7439  07C3  2FCA               	goto	i1l141
  7440                           
  7441                           ;i2c2.c: 571: {
  7442                           ;i2c2.c: 572: i2c2_state = S_MASTER_SEND_STOP;
  7443  07C4  3004               	movlw	4
  7444  07C5  00F0               	movwf	??_I2C2_FunctionComplete
  7445  07C6  0870               	movf	??_I2C2_FunctionComplete,w
  7446  07C7  0020               	movlb	0	; select bank0
  7447  07C8  00D1               	movwf	_i2c2_state
  7448                           
  7449                           ;i2c2.c: 573: }
  7450  07C9  0008               	return
  7451  07CA                     i1l141:	
  7452                           
  7453                           ;i2c2.c: 574: else
  7454                           ;i2c2.c: 575: {
  7455                           ;i2c2.c: 576: i2c2_state = S_MASTER_RESTART;
  7456  07CA  0020               	movlb	0	; select bank0
  7457  07CB  01D1               	clrf	_i2c2_state
  7458  07CC  0AD1               	incf	_i2c2_state,f
  7459  07CD  0008               	return
  7460  07CE                     __end_of_I2C2_FunctionComplete:	
  7461                           
  7462                           	psect	text24
  7463  07FB                     __ptext24:	
  7464 ;; *************** function _I2C2_BusCollisionISR *****************
  7465 ;; Defined at:
  7466 ;;		line 728 in file "mcc_generated_files/i2c2.c"
  7467 ;; Parameters:    Size  Location     Type
  7468 ;;		None
  7469 ;; Auto vars:     Size  Location     Type
  7470 ;;		None
  7471 ;; Return value:  Size  Location     Type
  7472 ;;                  1    wreg      void 
  7473 ;; Registers used:
  7474 ;;		None
  7475 ;; Tracked objects:
  7476 ;;		On entry : 0/0
  7477 ;;		On exit  : 0/0
  7478 ;;		Unchanged: 0/0
  7479 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
  7480 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  7481 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  7482 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  7483 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  7484 ;;Total ram usage:        0 bytes
  7485 ;; Hardware stack levels used:    1
  7486 ;; This function calls:
  7487 ;;		Nothing
  7488 ;; This function is called by:
  7489 ;;		_INTERRUPT_InterruptManager
  7490 ;; This function uses a non-reentrant model
  7491 ;;
  7492                           
  7493                           
  7494                           ;psect for function _I2C2_BusCollisionISR
  7495  07FB                     _I2C2_BusCollisionISR:	
  7496                           
  7497                           ;incstack = 0
  7498                           ; Regs used in _I2C2_BusCollisionISR: []
  7499  07FB  0008               	return
  7500  07FC                     __end_of_I2C2_BusCollisionISR:	
  7501  007E                     btemp	set	126	;btemp
  7502  007E                     int$flags	set	126
  7503  007E                     wtemp0	set	126


Data Sizes:
    Strings     316
    Constant    18
    Data        0
    BSS         33
    Persistent  0
    Stack       0

Auto Spaces:
    Space          Size  Autos    Used
    COMMON           14      7      13
    BANK0            80     44      71
    BANK1            80      0       0
    BANK2            80      0       0
    BANK3            80      0       0
    BANK4            80      0       0
    BANK5            80      0       0
    BANK6            80      0       0
    BANK7            80      0       0
    BANK8            80      0       0
    BANK9            80      0       0
    BANK10           80      0       0
    BANK11           80      0       0
    BANK12           48      0       0

Pointer List with Targets:

    i2c2_tr_queue.ptrb_list.pbuffer	PTR unsigned char  size(1) Largest target is 1
		 -> EMC1001_PrintTemp@templo(BANK0[1]), EMC1001_PrintTemp@temp(BANK0[1]), EMC1001_PrintInfo@templo(BANK0[1]), EMC1001_PrintInfo@temp(BANK0[1]), 
		 -> EMC1001_PrintInfo@data(BANK0[1]), EMC1001_Read@reg(BANK0[1]), 

    EMC1001_Read@trb.pbuffer	PTR unsigned char  size(1) Largest target is 1
		 -> EMC1001_PrintTemp@templo(BANK0[1]), EMC1001_PrintTemp@temp(BANK0[1]), EMC1001_PrintInfo@templo(BANK0[1]), EMC1001_PrintInfo@temp(BANK0[1]), 
		 -> EMC1001_PrintInfo@data(BANK0[1]), EMC1001_Read@reg(BANK0[1]), 

    i2c2_tr_queue.pTrFlag	PTR enum E14260 size(1) Largest target is 1
		 -> EMC1001_Read@status(BANK0[1]), 

    i2c2_tr_queue.ptrb_list	PTR struct . size(1) Largest target is 10
		 -> EMC1001_Read@trb(BANK0[8]), I2C2_MasterRead@trBlock(BANK0[4]), I2C2_MasterWrite@trBlock(BANK0[4]), 

    cputs@s	PTR const unsigned char  size(2) Largest target is 43
		 -> STR_13(CODE[2]), STR_7(CODE[2]), STR_1(CODE[43]), 

    puts@s	PTR const unsigned char  size(2) Largest target is 43
		 -> STR_13(CODE[2]), STR_7(CODE[2]), STR_1(CODE[43]), 

    printf$655	PTR const unsigned char  size(2) Largest target is 17
		 -> STR_18(CODE[17]), STR_17(CODE[17]), 

    printf@f	PTR const unsigned char  size(2) Largest target is 33
		 -> STR_15(CODE[2]), STR_14(CODE[30]), STR_12(CODE[26]), STR_11(CODE[22]), 
		 -> STR_10(CODE[32]), STR_9(CODE[33]), STR_8(CODE[21]), STR_6(CODE[16]), 
		 -> STR_5(CODE[23]), STR_2(CODE[24]), 

    printf@cp	PTR const unsigned char  size(2) Largest target is 7
		 -> STR_16(CODE[7]), STR_4(CODE[1]), STR_3(CODE[3]), I2C2_ISR@i2c_address(BANK0[2]), 

    printf@ap	PTR void [1] size(1) Largest target is 2
		 -> ?_printf(BANK0[2]), 

    EMC1001_PrintInfo$597	PTR const unsigned char  size(2) Largest target is 3
		 -> STR_4(CODE[1]), STR_3(CODE[3]), 

    EMC1001_Read@pData	PTR unsigned char  size(1) Largest target is 1
		 -> EMC1001_PrintTemp@templo(BANK0[1]), EMC1001_PrintTemp@temp(BANK0[1]), EMC1001_PrintInfo@templo(BANK0[1]), EMC1001_PrintInfo@temp(BANK0[1]), 
		 -> EMC1001_PrintInfo@data(BANK0[1]), 

    I2C2_MasterWriteTRBBuild@pdata	PTR unsigned char  size(1) Largest target is 1
		 -> EMC1001_Read@reg(BANK0[1]), 

    I2C2_MasterWriteTRBBuild@ptrb.pbuffer	PTR unsigned char  size(1) Largest target is 1
		 -> EMC1001_PrintTemp@templo(BANK0[1]), EMC1001_PrintTemp@temp(BANK0[1]), EMC1001_PrintInfo@templo(BANK0[1]), EMC1001_PrintInfo@temp(BANK0[1]), 
		 -> EMC1001_PrintInfo@data(BANK0[1]), EMC1001_Read@reg(BANK0[1]), 

    I2C2_MasterWriteTRBBuild@ptrb	PTR struct . size(1) Largest target is 10
		 -> EMC1001_Read@trb(BANK0[8]), I2C2_MasterWrite@trBlock(BANK0[4]), 

    I2C2_MasterReadTRBBuild@pdata	PTR unsigned char  size(1) Largest target is 1
		 -> EMC1001_PrintTemp@templo(BANK0[1]), EMC1001_PrintTemp@temp(BANK0[1]), EMC1001_PrintInfo@templo(BANK0[1]), EMC1001_PrintInfo@temp(BANK0[1]), 
		 -> EMC1001_PrintInfo@data(BANK0[1]), 

    I2C2_MasterReadTRBBuild@ptrb.pbuffer	PTR unsigned char  size(1) Largest target is 1
		 -> EMC1001_PrintTemp@templo(BANK0[1]), EMC1001_PrintTemp@temp(BANK0[1]), EMC1001_PrintInfo@templo(BANK0[1]), EMC1001_PrintInfo@temp(BANK0[1]), 
		 -> EMC1001_PrintInfo@data(BANK0[1]), EMC1001_Read@reg(BANK0[1]), 

    I2C2_MasterReadTRBBuild@ptrb	PTR struct . size(1) Largest target is 10
		 -> EMC1001_Read@trb(BANK0[8]), I2C2_MasterRead@trBlock(BANK0[4]), 

    i2c2_object.pTrTail.ptrb_list.pbuffer	PTR unsigned char  size(1) Largest target is 1
		 -> EMC1001_PrintTemp@templo(BANK0[1]), EMC1001_PrintTemp@temp(BANK0[1]), EMC1001_PrintInfo@templo(BANK0[1]), EMC1001_PrintInfo@temp(BANK0[1]), 
		 -> EMC1001_PrintInfo@data(BANK0[1]), EMC1001_Read@reg(BANK0[1]), 

    i2c2_object.pTrTail.pTrFlag	PTR enum E14260 size(1) Largest target is 1
		 -> EMC1001_Read@status(BANK0[1]), 

    i2c2_object.pTrTail.ptrb_list	PTR struct . size(1) Largest target is 10
		 -> EMC1001_Read@trb(BANK0[8]), I2C2_MasterRead@trBlock(BANK0[4]), I2C2_MasterWrite@trBlock(BANK0[4]), 

    I2C2_MasterTRBInsert@ptrb_list	PTR struct . size(1) Largest target is 10
		 -> EMC1001_Read@trb(BANK0[8]), I2C2_MasterRead@trBlock(BANK0[4]), I2C2_MasterWrite@trBlock(BANK0[4]), 

    I2C2_MasterTRBInsert@pflag	PTR enum E14260 size(1) Largest target is 1
		 -> EMC1001_Read@status(BANK0[1]), 

    F14372.pbuffer	PTR unsigned char  size(1) Largest target is 1
		 -> EMC1001_PrintTemp@templo(BANK0[1]), EMC1001_PrintTemp@temp(BANK0[1]), EMC1001_PrintInfo@templo(BANK0[1]), EMC1001_PrintInfo@temp(BANK0[1]), 
		 -> EMC1001_PrintInfo@data(BANK0[1]), EMC1001_Read@reg(BANK0[1]), 

    F14367.pbuffer	PTR unsigned char  size(1) Largest target is 1
		 -> EMC1001_PrintTemp@templo(BANK0[1]), EMC1001_PrintTemp@temp(BANK0[1]), EMC1001_PrintInfo@templo(BANK0[1]), EMC1001_PrintInfo@temp(BANK0[1]), 
		 -> EMC1001_PrintInfo@data(BANK0[1]), EMC1001_Read@reg(BANK0[1]), 

    I2C2_ISR@pi2c_buf_ptr	PTR unsigned char  size(1) Largest target is 2
		 -> EMC1001_PrintTemp@templo(BANK0[1]), EMC1001_PrintTemp@temp(BANK0[1]), EMC1001_PrintInfo@templo(BANK0[1]), EMC1001_PrintInfo@temp(BANK0[1]), 
		 -> EMC1001_PrintInfo@data(BANK0[1]), EMC1001_Read@reg(BANK0[1]), I2C2_ISR@i2c_address(BANK0[2]), NULL(NULL[0]), 

    S87$pbuffer	PTR unsigned char  size(1) Largest target is 1
		 -> EMC1001_PrintTemp@templo(BANK0[1]), EMC1001_PrintTemp@temp(BANK0[1]), EMC1001_PrintInfo@templo(BANK0[1]), EMC1001_PrintInfo@temp(BANK0[1]), 
		 -> EMC1001_PrintInfo@data(BANK0[1]), EMC1001_Read@reg(BANK0[1]), 

    p_i2c2_trb_current.pbuffer	PTR unsigned char  size(1) Largest target is 1
		 -> EMC1001_PrintTemp@templo(BANK0[1]), EMC1001_PrintTemp@temp(BANK0[1]), EMC1001_PrintInfo@templo(BANK0[1]), EMC1001_PrintInfo@temp(BANK0[1]), 
		 -> EMC1001_PrintInfo@data(BANK0[1]), EMC1001_Read@reg(BANK0[1]), 

    p_i2c2_trb_current	PTR struct . size(1) Largest target is 10
		 -> EMC1001_Read@trb(BANK0[8]), I2C2_MasterRead@trBlock(BANK0[4]), I2C2_MasterWrite@trBlock(BANK0[4]), NULL(NULL[0]), 

    i2c2_object.pTrHead.pTrFlag	PTR enum E14260 size(1) Largest target is 1
		 -> EMC1001_Read@status(BANK0[1]), 

    i2c2_object.pTrHead.ptrb_list	PTR struct . size(1) Largest target is 10
		 -> EMC1001_Read@trb(BANK0[8]), I2C2_MasterRead@trBlock(BANK0[4]), I2C2_MasterWrite@trBlock(BANK0[4]), 

    S99$pTrFlag	PTR enum E14260 size(1) Largest target is 1
		 -> EMC1001_Read@status(BANK0[1]), 

    p_i2c2_current.pTrFlag	PTR enum E14260 size(1) Largest target is 1
		 -> EMC1001_Read@status(BANK0[1]), 

    S99$ptrb_list	PTR struct . size(1) Largest target is 10
		 -> EMC1001_Read@trb(BANK0[8]), I2C2_MasterRead@trBlock(BANK0[4]), I2C2_MasterWrite@trBlock(BANK0[4]), 

    p_i2c2_current.ptrb_list	PTR struct . size(1) Largest target is 10
		 -> EMC1001_Read@trb(BANK0[8]), I2C2_MasterRead@trBlock(BANK0[4]), I2C2_MasterWrite@trBlock(BANK0[4]), 

    p_i2c2_current	PTR struct . size(1) Largest target is 5
		 -> i2c2_tr_queue(BANK0[3]), NULL(NULL[0]), 

    S110$pTrHead	PTR struct . size(1) Largest target is 5
		 -> i2c2_tr_queue(BANK0[3]), 

    i2c2_object.pTrHead	PTR struct . size(1) Largest target is 5
		 -> i2c2_tr_queue(BANK0[3]), 

    S110$pTrTail	PTR struct . size(1) Largest target is 5
		 -> i2c2_tr_queue(BANK0[3]), 

    i2c2_object.pTrTail	PTR struct . size(1) Largest target is 5
		 -> i2c2_tr_queue(BANK0[3]), 


Critical Paths under _main in COMMON

    None.

Critical Paths under _INTERRUPT_InterruptManager in COMMON

    _INTERRUPT_InterruptManager->_I2C2_ISR
    _I2C2_ISR->_I2C2_Stop

Critical Paths under _main in BANK0

    _main->_EMC1001_PrintInfo
    _SYSTEM_Initialize->_I2C2_Initialize
    _SYSTEM_Initialize->_PIN_MANAGER_Initialize
    _EMC1001_PrintTemp->_printf
    _EMC1001_PrintInfo->_printf
    _puts->_cputs
    _cputs->_putch
    _printf->___lwmod
    _putch->_EUSART_Write
    ___lwmod->___lwdiv
    _EMC1001_Read->_I2C2_MasterReadTRBBuild
    _EMC1001_Read->_I2C2_MasterWriteTRBBuild

Critical Paths under _INTERRUPT_InterruptManager in BANK0

    None.

Critical Paths under _main in BANK1

    None.

Critical Paths under _INTERRUPT_InterruptManager in BANK1

    None.

Critical Paths under _main in BANK2

    None.

Critical Paths under _INTERRUPT_InterruptManager in BANK2

    None.

Critical Paths under _main in BANK3

    None.

Critical Paths under _INTERRUPT_InterruptManager in BANK3

    None.

Critical Paths under _main in BANK4

    None.

Critical Paths under _INTERRUPT_InterruptManager in BANK4

    None.

Critical Paths under _main in BANK5

    None.

Critical Paths under _INTERRUPT_InterruptManager in BANK5

    None.

Critical Paths under _main in BANK6

    None.

Critical Paths under _INTERRUPT_InterruptManager in BANK6

    None.

Critical Paths under _main in BANK7

    None.

Critical Paths under _INTERRUPT_InterruptManager in BANK7

    None.

Critical Paths under _main in BANK8

    None.

Critical Paths under _INTERRUPT_InterruptManager in BANK8

    None.

Critical Paths under _main in BANK9

    None.

Critical Paths under _INTERRUPT_InterruptManager in BANK9

    None.

Critical Paths under _main in BANK10

    None.

Critical Paths under _INTERRUPT_InterruptManager in BANK10

    None.

Critical Paths under _main in BANK11

    None.

Critical Paths under _INTERRUPT_InterruptManager in BANK11

    None.

Critical Paths under _main in BANK12

    None.

Critical Paths under _INTERRUPT_InterruptManager in BANK12

    None.

Call Graph Tables:

 ---------------------------------------------------------------------------------
 (Depth) Function   	        Calls       Base Space   Used Autos Params    Refs
 ---------------------------------------------------------------------------------
 (0) _main                                                 2     2      0   14616
                                             42 BANK0      2     2      0
                  _EMC1001_PrintInfo
                  _EMC1001_PrintTemp
                  _SYSTEM_Initialize
                             _printf
 ---------------------------------------------------------------------------------
 (1) _SYSTEM_Initialize                                    0     0      0      34
                  _EUSART_Initialize
                    _I2C2_Initialize
              _OSCILLATOR_Initialize
             _PIN_MANAGER_Initialize
 ---------------------------------------------------------------------------------
 (2) _PIN_MANAGER_Initialize                               1     1      0      34
                                              0 BANK0      1     1      0
 ---------------------------------------------------------------------------------
 (2) _OSCILLATOR_Initialize                                0     0      0       0
 ---------------------------------------------------------------------------------
 (2) _I2C2_Initialize                                      1     1      0       0
                                              0 BANK0      1     1      0
 ---------------------------------------------------------------------------------
 (2) _EUSART_Initialize                                    0     0      0       0
 ---------------------------------------------------------------------------------
 (1) _EMC1001_PrintTemp                                    4     4      0    5489
                                             35 BANK0      4     4      0
                       _EMC1001_Read
                             ___wmul
                             _printf
 ---------------------------------------------------------------------------------
 (1) _EMC1001_PrintInfo                                    7     7      0    6610
                                             35 BANK0      7     7      0
                       _EMC1001_Read
                             ___wmul
                             _printf
                               _puts
 ---------------------------------------------------------------------------------
 (2) _puts                                                 2     0      2     480
                                              5 BANK0      2     0      2
                              _cputs
                              _putch
 ---------------------------------------------------------------------------------
 (3) _cputs                                                3     1      2     192
                                              2 BANK0      3     1      2
                              _putch
 ---------------------------------------------------------------------------------
 (1) _printf                                              27    21      6    2483
                                             14 BANK0     21    15      6
                            ___lwdiv
                            ___lwmod
                             ___wmul (ARG)
                              _putch
 ---------------------------------------------------------------------------------
 (2) _putch                                                1     1      0      62
                                              1 BANK0      1     1      0
                       _EUSART_Write
 ---------------------------------------------------------------------------------
 (3) _EUSART_Write                                         1     1      0      31
                                              0 BANK0      1     1      0
 ---------------------------------------------------------------------------------
 (2) ___lwmod                                              6     2      4     265
                                              8 BANK0      6     2      4
                            ___lwdiv (ARG)
 ---------------------------------------------------------------------------------
 (2) ___lwdiv                                              8     4      4     374
                                              0 BANK0      8     4      4
 ---------------------------------------------------------------------------------
 (2) ___wmul                                               6     2      4     526
                                              0 BANK0      6     2      4
 ---------------------------------------------------------------------------------
 (2) _EMC1001_Read                                         5     4      1    2239
                                              7 BANK0      5     4      1
            _I2C2_MasterReadTRBBuild
               _I2C2_MasterTRBInsert
           _I2C2_MasterWriteTRBBuild
 ---------------------------------------------------------------------------------
 (3) _I2C2_MasterWriteTRBBuild                             7     3      4     504
                                              0 BANK0      7     3      4
 ---------------------------------------------------------------------------------
 (3) _I2C2_MasterTRBInsert                                 4     2      2     450
                                              0 BANK0      4     2      2
 ---------------------------------------------------------------------------------
 (3) _I2C2_MasterReadTRBBuild                              7     3      4     526
                                              0 BANK0      7     3      4
 ---------------------------------------------------------------------------------
 Estimated maximum stack depth 3
 ---------------------------------------------------------------------------------
 (Depth) Function   	        Calls       Base Space   Used Autos Params    Refs
 ---------------------------------------------------------------------------------
 (6) _INTERRUPT_InterruptManager                           1     1      0      22
                                              6 COMMON     1     1      0
               _I2C2_BusCollisionISR
                           _I2C2_ISR
 ---------------------------------------------------------------------------------
 (7) _I2C2_ISR                                             4     4      0      22
                                              2 COMMON     4     4      0
              _I2C2_FunctionComplete
                          _I2C2_Stop
 ---------------------------------------------------------------------------------
 (8) _I2C2_Stop                                            2     2      0      22
                                              0 COMMON     2     2      0
 ---------------------------------------------------------------------------------
 (8) _I2C2_FunctionComplete                                1     1      0       0
                                              0 COMMON     1     1      0
 ---------------------------------------------------------------------------------
 (7) _I2C2_BusCollisionISR                                 0     0      0       0
 ---------------------------------------------------------------------------------
 Estimated maximum stack depth 8
 ---------------------------------------------------------------------------------

 Call Graph Graphs:

 _main (ROOT)
   _EMC1001_PrintInfo
     _EMC1001_Read
       _I2C2_MasterReadTRBBuild
       _I2C2_MasterTRBInsert
       _I2C2_MasterWriteTRBBuild
     ___wmul
     _printf
       ___lwdiv
       ___lwmod
         ___lwdiv (ARG)
       ___wmul (ARG)
       _putch (ARG)
         _EUSART_Write
     _puts
       _cputs
         _putch
           _EUSART_Write
       _putch
         _EUSART_Write
   _EMC1001_PrintTemp
     _EMC1001_Read
       _I2C2_MasterReadTRBBuild
       _I2C2_MasterTRBInsert
       _I2C2_MasterWriteTRBBuild
     ___wmul
     _printf
       ___lwdiv
       ___lwmod
         ___lwdiv (ARG)
       ___wmul (ARG)
       _putch (ARG)
         _EUSART_Write
   _SYSTEM_Initialize
     _EUSART_Initialize
     _I2C2_Initialize
     _OSCILLATOR_Initialize
     _PIN_MANAGER_Initialize
   _printf
     ___lwdiv
     ___lwmod
       ___lwdiv (ARG)
     ___wmul (ARG)
     _putch (ARG)
       _EUSART_Write

 _INTERRUPT_InterruptManager (ROOT)
   _I2C2_BusCollisionISR
   _I2C2_ISR
     _I2C2_FunctionComplete
     _I2C2_Stop

 Address spaces:
Name               Size   Autos  Total    Cost      Usage
BIGRAM             3F0      0       0       0        0.0%
EEDATA             100      0       0       0        0.0%
NULL                 0      0       0       0        0.0%
CODE                 0      0       0       0        0.0%
BITCOMMON            E      0       0       1        0.0%
BITSFR0              0      0       0       1        0.0%
SFR0                 0      0       0       1        0.0%
COMMON               E      7       D       2       92.9%
BITSFR1              0      0       0       2        0.0%
SFR1                 0      0       0       2        0.0%
BITSFR2              0      0       0       3        0.0%
SFR2                 0      0       0       3        0.0%
STACK                0      0       0       3        0.0%
BITBANK0            50      0       0       4        0.0%
BITSFR3              0      0       0       4        0.0%
SFR3                 0      0       0       4        0.0%
BANK0               50     2C      47       5       88.8%
BITSFR4              0      0       0       5        0.0%
SFR4                 0      0       0       5        0.0%
BITBANK1            50      0       0       6        0.0%
BITSFR5              0      0       0       6        0.0%
SFR5                 0      0       0       6        0.0%
BANK1               50      0       0       7        0.0%
BITSFR6              0      0       0       7        0.0%
SFR6                 0      0       0       7        0.0%
BITBANK2            50      0       0       8        0.0%
BITSFR7              0      0       0       8        0.0%
SFR7                 0      0       0       8        0.0%
BANK2               50      0       0       9        0.0%
BITSFR8              0      0       0       9        0.0%
SFR8                 0      0       0       9        0.0%
BITBANK3            50      0       0      10        0.0%
BITSFR9              0      0       0      10        0.0%
SFR9                 0      0       0      10        0.0%
BANK3               50      0       0      11        0.0%
BITSFR10             0      0       0      11        0.0%
SFR10                0      0       0      11        0.0%
BITBANK4            50      0       0      12        0.0%
BITSFR11             0      0       0      12        0.0%
SFR11                0      0       0      12        0.0%
BANK4               50      0       0      13        0.0%
BITSFR12             0      0       0      13        0.0%
SFR12                0      0       0      13        0.0%
BITBANK5            50      0       0      14        0.0%
BITSFR13             0      0       0      14        0.0%
SFR13                0      0       0      14        0.0%
BANK5               50      0       0      15        0.0%
BITSFR14             0      0       0      15        0.0%
SFR14                0      0       0      15        0.0%
BITBANK6            50      0       0      16        0.0%
BITSFR15             0      0       0      16        0.0%
SFR15                0      0       0      16        0.0%
BANK6               50      0       0      17        0.0%
BITSFR16             0      0       0      17        0.0%
SFR16                0      0       0      17        0.0%
BITBANK7            50      0       0      18        0.0%
BITSFR17             0      0       0      18        0.0%
SFR17                0      0       0      18        0.0%
BANK7               50      0       0      19        0.0%
BITSFR18             0      0       0      19        0.0%
SFR18                0      0       0      19        0.0%
BITSFR19             0      0       0      20        0.0%
SFR19                0      0       0      20        0.0%
ABS                  0      0      54      20        0.0%
BITBANK8            50      0       0      21        0.0%
BITSFR20             0      0       0      21        0.0%
SFR20                0      0       0      21        0.0%
BANK8               50      0       0      22        0.0%
BITSFR21             0      0       0      22        0.0%
SFR21                0      0       0      22        0.0%
BITBANK9            50      0       0      23        0.0%
BITSFR22             0      0       0      23        0.0%
SFR22                0      0       0      23        0.0%
BANK9               50      0       0      24        0.0%
BITSFR23             0      0       0      24        0.0%
SFR23                0      0       0      24        0.0%
BITBANK10           50      0       0      25        0.0%
BITSFR24             0      0       0      25        0.0%
SFR24                0      0       0      25        0.0%
BANK10              50      0       0      26        0.0%
BITSFR25             0      0       0      26        0.0%
SFR25                0      0       0      26        0.0%
BITBANK11           50      0       0      27        0.0%
BITSFR26             0      0       0      27        0.0%
SFR26                0      0       0      27        0.0%
BANK11              50      0       0      28        0.0%
BITSFR27             0      0       0      28        0.0%
SFR27                0      0       0      28        0.0%
BITBANK12           30      0       0      29        0.0%
BITSFR28             0      0       0      29        0.0%
SFR28                0      0       0      29        0.0%
BANK12              30      0       0      30        0.0%
BITSFR29             0      0       0      30        0.0%
SFR29                0      0       0      30        0.0%
BITSFR30             0      0       0      31        0.0%
SFR30                0      0       0      31        0.0%
DATA                 0      0      54      31        0.0%
BITSFR31             0      0       0      32        0.0%
SFR31                0      0       0      32        0.0%


Microchip Technology PIC Macro Assembler V1.41 build -162212810 
Symbol Table                                                                                   Thu Mar 23 18:51:03 2017

                                  pc 0002                          __CFG_CP$OFF 0000  
              ?_I2C2_MasterTRBInsert 0020                                   l31 07F3  
                ___wmul@multiplicand 0022       I2C2_MasterReadTRBBuild@address 0022  
                        __CFG_LVP$ON 0000                          __CFG_ZCD$ON 0000  
                                l360 00C2                                  l347 009D  
                                l348 0052                                  l365 00E4  
                                l349 0053                                  l382 018E  
                                l464 074A                                  _GIE 005F  
                       __CFG_CPD$OFF 0000                    EMC1001_Read@pData 0027  
                                u945 0682                                  u965 068C  
                                u975 0696                                  u985 069E  
              __size_of_EMC1001_Read 003C                         __CFG_BORV$LO 0000  
                                wreg 0009                     __end_of_I2C2_ISR 0567  
                               l2103 00B6                                 l2015 07A5  
                               l2201 0213                                 l2131 010F  
                               l2211 023B                                 l2213 025A  
                               l1511 06BE                                 l2135 0117  
                               l2223 0282                                 l2161 0744  
                               l2145 0165                                 l2153 0178  
                               l2137 011D                                 l2129 0106  
                               l2073 004F                                 l2233 02D7  
                               l2225 02A1                                 l1603 066A  
                               l1515 06CA                                 l2139 0143  
                               l2155 017C                                 l2075 0055  
                               l2091 007D                                 l1461 0621  
                               l1509 06B2                                 l2157 0033  
                               l2229 02BC                                 l2245 058F  
                               l2253 0705                                 l1471 0634  
                               l1519 06D3                                 l2087 0068  
                               l2191 01D5                                 l2183 01AB  
                               l1465 0628                                 l1467 062D  
                               l2195 01F0                                 l2187 01BA  
                               l1493 069D                                 l1485 067F  
                               l1487 068B                                 l1497 06A6  
                               STR_1 02F1                                 STR_2 0395  
                               STR_3 0428                                 STR_4 03D9  
                               STR_5 03AD                                 STR_6 0411  
                               STR_7 03D8                                 STR_8 03DA  
                               STR_9 031C                                 u1015 06B5  
                               u1120 0674                                 u1035 06C4  
                               u1045 06CB                                 u2005 022C  
                               u2035 0273                                 u2107 0719  
                               _LATA 0016                                 _LATB 0017  
                               _LATC 0018                                 u2085 0580  
                               u1730 05F2                                 u1815 00DD  
                               u1915 074B                                 u1925 0750  
                               u1845 00FF                                 _WPUA 0F39  
                               _WPUB 0F44                                 _WPUC 0F4F  
                               _WPUE 0F65                         __CFG_WRT$OFF 0000  
                      __CFG_FCMEN$ON 0000                                 _main 0700  
                               fsr0h 0005                                 fsr1h 0007  
                               indf0 0000                                 fsr0l 0004  
                               indf1 0001                                 fsr1l 0006  
                               btemp 007E                                 _puts 07DA  
        I2C2_MasterReadTRBBuild@ptrb 0026                        __CFG_BOREN$ON 0000  
                               start 001B                   EMC1001_Read@status 002B  
                      __CFG_CSWEN$ON 0000                        __CFG_MCLRE$ON 0000  
                       _EMC1001_Read 063A                           _i2c2_state 0051  
                      ?_EUSART_Write 0070       __size_of_OSCILLATOR_Initialize 0009  
      __end_of_OSCILLATOR_Initialize 1000              _I2C2_MasterReadTRBBuild 06D8  
                              ?_main 0070                                STR_10 033D  
                              STR_11 03C4                                STR_12 037B  
                              STR_13 03D8                                STR_14 035D  
                              STR_15 042B                                STR_16 0421  
                              STR_17 03EF                        __CFG_WDTE$OFF 0000  
                              STR_18 0400                    __end_of_I2C2_Stop 07A5  
                              ?_puts 0025                      __end_of___lwdiv 06AB  
                              i1l100 0440                                i1l111 0496  
                              i1l112 04A2                                i1l105 046B  
                              i1l130 0523                                i1l122 04E3  
                              i1l106 0473                                i1l202 0016  
                              i1l141 07CA       __size_of_I2C2_FunctionComplete 0012  
                              i1l134 0548                                i1l126 0502  
                              i1l129 0515                      __end_of___lwmod 06D8  
                              i1l198 0011        __end_of_I2C2_FunctionComplete 07CE  
                              _OSCEN 0891                                _TRISA 0011  
                              _TRISB 0012                                _TRISC 0013  
                    __end_of_dpowers 02E9                                _cputs 07A5  
                              _putch 0FEB         I2C2_MasterReadTRBBuild@pdata 0020  
                              puts@s 0025                                status 0003  
                              wtemp0 007E              EMC1001_PrintInfo@templo 0048  
                  ??_I2C2_Initialize 0020                      __initialization 001D  
                       __end_of_main 0721               ??_I2C2_MasterTRBInsert 0022  
                       __end_of_puts 07E6                       ??_EUSART_Write 0020  
        ?_INTERRUPT_InterruptManager 0070     __end_of_I2C2_MasterWriteTRBBuild 0741  
                             ??_main 004A                          _i2c2_object 004C  
                             ??_puts 0027                               ?_cputs 0022  
                             i1S2291 0775                               _ANSELA 0F38  
                             ?_putch 0070                               _ANSELB 0F43  
                             _ANSELC 0F4E                   __CFG_RSTOSC$HFINT1 0000  
                             _RC1REG 0119                               _RC0PPS 0F20  
                             _RC1STA 011D                               _RC3PPS 0F23  
                             _RC4PPS 0F24         __end_of_I2C2_BusCollisionISR 07FC  
                             i1l1801 04DE                               i1l1555 07A2  
                             i1l1743 045E                               i1l1833 0531  
                             i1l1817 050A                               i1l1809 04F1  
                             i1l1761 0491                               i1l1755 047F  
                             i1l1845 054B                               i1l1829 052A  
                             i1l1847 054E                               i1l1775 04BF  
                             i1l1855 055B                               i1l1849 0552  
                             i1l1795 04D3                       __CFG_WDTCCS$SC 0000  
                             _OSCFRQ 0893                               _TX1REG 011A  
                             _TX1STA 011E                       __CFG_PWRTE$OFF 0000  
                             ___wmul 0741                       _p_i2c2_current 007A  
                     __CFG_STVREN$ON 0000            ??_I2C2_MasterReadTRBBuild 0024  
                          ??___lwdiv 0024                            ??___lwmod 002C  
                          ?_I2C2_ISR 0070             I2C2_Stop@completion_code 0071  
                             _printf 002E        I2C2_MasterReadTRBBuild@length 0021  
                             cputs@s 0022                    _SYSTEM_Initialize 07CE  
            __end_of__initialization 002A                   ?_SYSTEM_Initialize 0070  
                    EMC1001_Read@reg 002A                      EMC1001_Read@trb 0052  
            EMC1001_PrintTemp@templo 0046                       __pcstackCOMMON 0070  
                ??_SYSTEM_Initialize 0021                        __end_of_cputs 07BC  
                     _i2c2_trb_count 007C                        __end_of_putch 0FF1  
                         ??_I2C2_ISR 0072             _I2C2_MasterWriteTRBBuild 0721  
       I2C2_MasterWriteTRBBuild@ptrb 0026                              ??_cputs 0024  
          __end_of_SYSTEM_Initialize 07DA                              ??_putch 0021  
              _EMC1001_PrintInfo$597 0045                           __pbssBANK0 004C  
               __end_of_EUSART_Write 07FB                           __pmaintext 0700  
                            ?___wmul 0020                      __CFG_PPS1WAY$ON 0000  
                         __pintentry 0004                       _SSP2DATPPSbits 0EC9  
               _I2C2_BusCollisionISR 07FB                              ?_printf 002E  
                            _SP1BRGH 011C                              _SP1BRGL 011B  
  I2C2_ISR@i2c_10bit_address_restart 0077                              _OSCCON1 088D  
                            _OSCCON3 088F                            _I2C2_Stop 078D  
                     _SSP2CLKPPSbits 0EC8                              _OSCTUNE 0892  
                            _SSP2ADD 0197                              _PPSLOCK 0E8F  
                            _SSP2BUF 0196                      _I2C2_Initialize 075D  
             I2C2_MasterRead@trBlock 005A                    _EMC1001_PrintInfo 018F  
                  _EMC1001_PrintTemp 0567                   ?_EMC1001_PrintInfo 0070  
                 ?_EMC1001_PrintTemp 0070                 __CFG_SCANE$available 0000  
                    __size_of___wmul 001C                              ___lwdiv 0676  
                            ___lwmod 06AB                ?_I2C2_BusCollisionISR 0070  
          I2C2_MasterTRBInsert@count 0023                              __ptext1 07CE  
                            __ptext2 05AE                              __ptext3 0FF7  
                            __ptext4 075D                              __ptext5 07E6  
                            __ptext6 0567                              __ptext7 018F  
                            __ptext8 07DA                              __ptext9 07A5  
                ??_EMC1001_PrintInfo 0043            I2C2_MasterTRBInsert@pflag 0021  
                ??_EMC1001_PrintTemp 0043                      __size_of_printf 0161  
                  __end_of_hexpowers 02F1                              _dpowers 02DF  
              _OSCILLATOR_Initialize 0FF7             ??_PIN_MANAGER_Initialize 0020  
                         ?_I2C2_Stop 0070                _I2C2_FunctionComplete 07BC  
         __size_of_SYSTEM_Initialize 000C                              clrloop0 0FF2  
               end_of_initialization 002A            __end_of_EMC1001_PrintInfo 02DF  
          __end_of_EMC1001_PrintTemp 05AE                    _EUSART_Initialize 07E6  
                 ?_EUSART_Initialize 0070                   _p_i2c2_trb_current 007B  
                            printf@c 0042                              printf@f 002E  
             I2C2_ISR@i2c_bytes_left 0078                         __pstringtext 02DF  
                         _printf$655 0039        __size_of_I2C2_MasterTRBInsert 0046  
              __CFG_WDTCPS$WDTCPS_31 0000                  ??_EUSART_Initialize 0020  
                  __size_of_I2C2_ISR 013A              __end_of_I2C2_Initialize 0775  
              __size_of_EUSART_Write 000A                     __CFG_FEXTOSC$OFF 0000  
          __end_of_EUSART_Initialize 07F1               ??_I2C2_BusCollisionISR 0070  
         ??_I2C2_MasterWriteTRBBuild 0024                       __end_of___wmul 075D  
                       _EUSART_Write 07F1               ?_OSCILLATOR_Initialize 0070  
                     __end_of_printf 018F               ?_I2C2_FunctionComplete 0070  
                start_initialization 001D                          ??_I2C2_Stop 0070  
    __size_of_PIN_MANAGER_Initialize 0046                          putch@txData 0021  
         __size_of_EMC1001_PrintInfo 0150           __size_of_EMC1001_PrintTemp 0047  
    I2C2_MasterWriteTRBBuild@address 0022             ?_I2C2_MasterReadTRBBuild 0020  
                   __CFG_LPBOREN$OFF 0000                        ?_EMC1001_Read 0027  
                           ??___wmul 0024        I2C2_MasterWriteTRBBuild@pdata 0020  
               I2C2_ISR@pi2c_buf_ptr 0079                             ??_printf 0034  
                        __pbssCOMMON 0077                     ?_I2C2_Initialize 0070  
                          ___latbits 0002                        __pcstackBANK0 0020  
                      _i2c2_tr_queue 0062           __size_of_EUSART_Initialize 000B  
                   ___lwdiv@dividend 0022               _PIN_MANAGER_Initialize 05AE  
                     ??_EMC1001_Read 0028                             ?___lwdiv 0020  
                           ?___lwmod 0028                             _I2C2_ISR 042D  
       ??_INTERRUPT_InterruptManager 0076                            __pswtext1 0775  
                           _BAUD1CON 011F                            _hexpowers 02E9  
                   ___lwdiv@quotient 0025                       __size_of_cputs 0017  
                     __size_of_putch 0006      __end_of_I2C2_MasterReadTRBBuild 0700  
                     ___wmul@product 0024                            clear_ram0 0FF1  
                           _PIE3bits 0719  __size_of_INTERRUPT_InterruptManager 0017  
                           _PIR3bits 070F                             _SSP2CON1 019A  
                           _SSP2CON3 019C                             _SSP2STAT 0199  
      I2C2_MasterTRBInsert@ptrb_list 0020                    ___wmul@multiplier 0020  
                         printf@flag 003F                           printf@prec 003B  
       __end_of_I2C2_MasterTRBInsert 063A                EMC1001_PrintInfo@data 0049  
              EMC1001_PrintInfo@temp 0047       I2C2_MasterWriteTRBBuild@length 0021  
            ??_OSCILLATOR_Initialize 0020                     __size_of___lwdiv 0035  
                   __size_of___lwmod 002D                EMC1001_PrintTemp@temp 0045  
            ??_I2C2_FunctionComplete 0070                      ___lwdiv@divisor 0020  
                    ___lwdiv@counter 0027                             __ptext10 002E  
                           __ptext11 0FEB                             __ptext12 07F1  
                           __ptext21 042D                             __ptext13 06AB  
                           __ptext22 078D                             __ptext14 0676  
                           __ptext23 07BC                             __ptext15 0741  
                           __ptext24 07FB                             __ptext16 063A  
                           __ptext17 0721                             __ptext18 05F4  
                           __ptext19 06D8                 __end_of_EMC1001_Read 0676  
                       _SSP2CON1bits 019A                         _SSP2CON2bits 019B  
                      __size_of_main 0021                        __size_of_puts 000C  
               __CFG_WDTCWS$WDTCWS_7 0000                           _RC1STAbits 011D  
                           int$flags 007E   __end_of_INTERRUPT_InterruptManager 001B  
         _INTERRUPT_InterruptManager 0004                            printf@idx 0038  
                          printf@val 0040              I2C2_MasterWrite@trBlock 005E  
      __size_of_I2C2_BusCollisionISR 0001          PIN_MANAGER_Initialize@state 0020  
   __size_of_I2C2_MasterReadTRBBuild 0028                           _INTCONbits 000B  
  __size_of_I2C2_MasterWriteTRBBuild 0020            ?_I2C2_MasterWriteTRBBuild 0020  
                           intlevel1 0000                     ___lwmod@dividend 002A  
                I2C2_ISR@i2c_address 0065              ?_PIN_MANAGER_Initialize 0070  
                  __CFG_CLKOUTEN$OFF 0000                          _PPSLOCKbits 0E8F  
                           printf@ap 003E                             printf@cp 003C  
               _I2C2_MasterTRBInsert 05F4                      ___lwmod@divisor 0028  
                    ___lwmod@counter 002D                   EUSART_Write@txData 0020  
     __end_of_PIN_MANAGER_Initialize 05F4             __size_of_I2C2_Initialize 0018  
                 __size_of_I2C2_Stop 0018  
