

Microchip Technology PIC LITE Macro Assembler V1.41 build -162212810 
                                                                                               Wed Mar 22 05:22:02 2017

Microchip Technology Omniscient Code Generator v1.41 (Free mode) build 201701250102
     1                           	processor	16F18855
     2                           	opt	pw 120
     3                           	opt	lm
     4                           	psect	stringtext,global,class=STRCODE,delta=2
     5                           	psect	cinit,global,class=CODE,merge=1,delta=2
     6                           	psect	bssCOMMON,global,class=COMMON,space=1,delta=1
     7                           	psect	bssBANK0,global,class=BANK0,space=1,delta=1
     8                           	psect	clrtext,global,class=CODE,delta=2
     9                           	psect	cstackCOMMON,global,class=COMMON,space=1,delta=1
    10                           	psect	cstackBANK0,global,class=BANK0,space=1,delta=1
    11                           	psect	maintext,global,class=CODE,merge=1,split=1,delta=2
    12                           	psect	text1,local,class=CODE,merge=1,delta=2,group=2
    13                           	psect	text2,local,class=CODE,merge=1,delta=2,group=2
    14                           	psect	text3,local,class=CODE,merge=1,delta=2
    15                           	psect	text4,local,class=CODE,merge=1,delta=2
    16                           	psect	text5,local,class=CODE,merge=1,delta=2
    17                           	psect	text6,local,class=CODE,merge=1,delta=2,group=2
    18                           	psect	text7,local,class=CODE,merge=1,delta=2,group=2
    19                           	psect	text8,local,class=CODE,merge=1,delta=2,group=2
    20                           	psect	text9,local,class=CODE,merge=1,delta=2
    21                           	psect	text10,local,class=CODE,merge=1,delta=2
    22                           	psect	text11,local,class=CODE,merge=1,delta=2
    23                           	psect	text12,local,class=CODE,merge=1,delta=2
    24                           	psect	text13,local,class=CODE,merge=1,delta=2
    25                           	psect	text14,local,class=CODE,merge=1,delta=2
    26                           	psect	text15,local,class=CODE,merge=1,delta=2
    27                           	psect	text16,local,class=CODE,merge=1,delta=2
    28                           	psect	text17,local,class=CODE,merge=1,delta=2
    29                           	psect	intentry,global,class=CODE,delta=2
    30                           	psect	text19,local,class=CODE,merge=1,delta=2
    31                           	psect	swtext1,local,class=CONST,delta=2
    32                           	psect	text20,local,class=CODE,merge=1,delta=2
    33                           	psect	text21,local,class=CODE,merge=1,delta=2
    34                           	psect	text22,local,class=CODE,merge=1,delta=2
    35                           	dabs	1,0x7E,2
    36  0000                     
    37                           ; Version 1.41
    38                           ; Generated 25/01/2017 GMT
    39                           ; 
    40                           ; Copyright Â© 2017, Microchip Technology Inc. and its subsidiaries ("Microchip")
    41                           ; All rights reserved.
    42                           ; 
    43                           ; This software is developed by Microchip Technology Inc. and its subsidiaries ("Microch
      +                          ip").
    44                           ; 
    45                           ; Redistribution and use in source and binary forms, with or without modification, are
    46                           ; permitted provided that the following conditions are met:
    47                           ; 
    48                           ;     1. Redistributions of source code must retain the above copyright notice, this lis
      +                          t of
    49                           ;        conditions and the following disclaimer.
    50                           ; 
    51                           ;     2. Redistributions in binary form must reproduce the above copyright notice, this 
      +                          list
    52                           ;        of conditions and the following disclaimer in the documentation and/or other
    53                           ;        materials provided with the distribution.
    54                           ; 
    55                           ;     3. Microchip's name may not be used to endorse or promote products derived from th
      +                          is
    56                           ;        software without specific prior written permission.
    57                           ; 
    58                           ; THIS SOFTWARE IS PROVIDED BY MICROCHIP "AS IS" AND ANY EXPRESS OR IMPLIED WARRANTIES,
    59                           ; INCLUDING, BUT NOT LIMITED TO, THE IMPLIED WARRANTIES OF MERCHANTABILITY AND FITNESS F
      +                          OR
    60                           ; PURPOSE ARE DISCLAIMED.  IN NO EVENT SHALL MICROCHIP BE LIABLE FOR ANY DIRECT, INDIREC
      +                          T,
    61                           ; INCIDENTAL, SPECIAL, EXEMPLARY, OR CONSEQUENTIAL DAMAGES (INCLUDING BUT NOT LIMITED TO
    62                           ; PROCUREMENT OF SUBSTITUTE GOODS OR SERVICES; LOSS OF USE, DATA OR PROFITS; OR BUSINESS
    63                           ; INTERRUPTION) HOWSOEVER CAUSED AND ON ANY THEORY OF LIABILITY, WHETHER IN CONTRACT, ST
      +                          RICT
    64                           ; LIABILITY, OR TORT (INCLUDING NEGLIGENCE OR OTHERWISE) ARISING IN ANY WAY OUT OF THE U
      +                          SE OF
    65                           ; THIS SOFTWARE, EVEN IF ADVISED OF THE POSSIBILITY OF SUCH DAMAGE.
    66                           ; 
    67                           ; 
    68                           ; Code-generator required, PIC16F18855 Definitions
    69                           ; 
    70                           ; SFR Addresses
    71  0000                     	;# 
    72  0001                     	;# 
    73  0002                     	;# 
    74  0003                     	;# 
    75  0004                     	;# 
    76  0005                     	;# 
    77  0006                     	;# 
    78  0007                     	;# 
    79  0008                     	;# 
    80  0009                     	;# 
    81  000A                     	;# 
    82  000B                     	;# 
    83  000C                     	;# 
    84  000D                     	;# 
    85  000E                     	;# 
    86  0010                     	;# 
    87  0011                     	;# 
    88  0012                     	;# 
    89  0013                     	;# 
    90  0016                     	;# 
    91  0017                     	;# 
    92  0018                     	;# 
    93  001C                     	;# 
    94  001C                     	;# 
    95  001D                     	;# 
    96  001D                     	;# 
    97  001E                     	;# 
    98  001F                     	;# 
    99  008C                     	;# 
   100  008C                     	;# 
   101  008D                     	;# 
   102  008E                     	;# 
   103  008E                     	;# 
   104  008F                     	;# 
   105  0090                     	;# 
   106  0090                     	;# 
   107  0091                     	;# 
   108  0093                     	;# 
   109  0094                     	;# 
   110  0095                     	;# 
   111  0096                     	;# 
   112  0097                     	;# 
   113  0098                     	;# 
   114  0099                     	;# 
   115  009A                     	;# 
   116  009B                     	;# 
   117  009C                     	;# 
   118  009D                     	;# 
   119  009E                     	;# 
   120  010C                     	;# 
   121  010D                     	;# 
   122  010E                     	;# 
   123  010E                     	;# 
   124  010F                     	;# 
   125  0110                     	;# 
   126  0110                     	;# 
   127  0111                     	;# 
   128  0112                     	;# 
   129  0112                     	;# 
   130  0113                     	;# 
   131  0114                     	;# 
   132  0114                     	;# 
   133  0115                     	;# 
   134  0116                     	;# 
   135  0116                     	;# 
   136  0117                     	;# 
   137  0119                     	;# 
   138  0119                     	;# 
   139  0119                     	;# 
   140  011A                     	;# 
   141  011A                     	;# 
   142  011A                     	;# 
   143  011B                     	;# 
   144  011B                     	;# 
   145  011B                     	;# 
   146  011B                     	;# 
   147  011B                     	;# 
   148  011C                     	;# 
   149  011C                     	;# 
   150  011C                     	;# 
   151  011D                     	;# 
   152  011D                     	;# 
   153  011D                     	;# 
   154  011E                     	;# 
   155  011E                     	;# 
   156  011E                     	;# 
   157  011F                     	;# 
   158  011F                     	;# 
   159  011F                     	;# 
   160  011F                     	;# 
   161  011F                     	;# 
   162  018C                     	;# 
   163  018D                     	;# 
   164  018E                     	;# 
   165  018F                     	;# 
   166  0190                     	;# 
   167  0191                     	;# 
   168  0192                     	;# 
   169  0196                     	;# 
   170  0197                     	;# 
   171  0198                     	;# 
   172  0199                     	;# 
   173  019A                     	;# 
   174  019B                     	;# 
   175  019C                     	;# 
   176  020C                     	;# 
   177  020C                     	;# 
   178  020D                     	;# 
   179  020E                     	;# 
   180  020F                     	;# 
   181  020F                     	;# 
   182  0210                     	;# 
   183  0210                     	;# 
   184  0211                     	;# 
   185  0211                     	;# 
   186  0212                     	;# 
   187  0212                     	;# 
   188  0213                     	;# 
   189  0214                     	;# 
   190  0215                     	;# 
   191  0215                     	;# 
   192  0216                     	;# 
   193  0216                     	;# 
   194  0217                     	;# 
   195  0217                     	;# 
   196  0218                     	;# 
   197  0218                     	;# 
   198  0219                     	;# 
   199  021A                     	;# 
   200  021B                     	;# 
   201  021B                     	;# 
   202  021C                     	;# 
   203  021C                     	;# 
   204  021D                     	;# 
   205  021D                     	;# 
   206  021E                     	;# 
   207  021F                     	;# 
   208  028C                     	;# 
   209  028C                     	;# 
   210  028D                     	;# 
   211  028D                     	;# 
   212  028E                     	;# 
   213  028F                     	;# 
   214  0290                     	;# 
   215  0290                     	;# 
   216  0291                     	;# 
   217  0292                     	;# 
   218  0292                     	;# 
   219  0293                     	;# 
   220  0293                     	;# 
   221  0294                     	;# 
   222  0295                     	;# 
   223  0296                     	;# 
   224  0296                     	;# 
   225  0297                     	;# 
   226  0298                     	;# 
   227  0298                     	;# 
   228  0299                     	;# 
   229  0299                     	;# 
   230  029A                     	;# 
   231  029B                     	;# 
   232  029C                     	;# 
   233  029C                     	;# 
   234  029D                     	;# 
   235  030C                     	;# 
   236  030C                     	;# 
   237  030D                     	;# 
   238  030E                     	;# 
   239  030F                     	;# 
   240  0310                     	;# 
   241  0310                     	;# 
   242  0311                     	;# 
   243  0312                     	;# 
   244  0313                     	;# 
   245  0314                     	;# 
   246  0314                     	;# 
   247  0315                     	;# 
   248  0316                     	;# 
   249  0317                     	;# 
   250  0318                     	;# 
   251  0318                     	;# 
   252  0319                     	;# 
   253  031A                     	;# 
   254  031B                     	;# 
   255  031C                     	;# 
   256  031C                     	;# 
   257  031D                     	;# 
   258  031E                     	;# 
   259  031F                     	;# 
   260  038C                     	;# 
   261  038D                     	;# 
   262  038E                     	;# 
   263  0390                     	;# 
   264  0391                     	;# 
   265  0392                     	;# 
   266  040C                     	;# 
   267  040D                     	;# 
   268  040E                     	;# 
   269  040F                     	;# 
   270  0410                     	;# 
   271  0411                     	;# 
   272  0416                     	;# 
   273  0416                     	;# 
   274  0417                     	;# 
   275  0418                     	;# 
   276  0418                     	;# 
   277  0419                     	;# 
   278  041A                     	;# 
   279  041A                     	;# 
   280  041B                     	;# 
   281  041C                     	;# 
   282  041C                     	;# 
   283  041D                     	;# 
   284  041E                     	;# 
   285  041F                     	;# 
   286  048C                     	;# 
   287  048C                     	;# 
   288  048D                     	;# 
   289  048E                     	;# 
   290  048F                     	;# 
   291  048F                     	;# 
   292  0490                     	;# 
   293  0491                     	;# 
   294  0492                     	;# 
   295  0492                     	;# 
   296  0493                     	;# 
   297  0494                     	;# 
   298  0495                     	;# 
   299  0495                     	;# 
   300  0496                     	;# 
   301  0497                     	;# 
   302  0498                     	;# 
   303  0499                     	;# 
   304  049A                     	;# 
   305  049B                     	;# 
   306  049C                     	;# 
   307  049D                     	;# 
   308  050C                     	;# 
   309  050C                     	;# 
   310  050D                     	;# 
   311  050E                     	;# 
   312  050F                     	;# 
   313  050F                     	;# 
   314  0510                     	;# 
   315  0511                     	;# 
   316  0512                     	;# 
   317  0512                     	;# 
   318  0513                     	;# 
   319  0514                     	;# 
   320  0515                     	;# 
   321  0515                     	;# 
   322  0516                     	;# 
   323  0517                     	;# 
   324  0518                     	;# 
   325  0519                     	;# 
   326  051A                     	;# 
   327  051B                     	;# 
   328  051C                     	;# 
   329  051D                     	;# 
   330  058C                     	;# 
   331  058C                     	;# 
   332  058D                     	;# 
   333  058E                     	;# 
   334  058F                     	;# 
   335  058F                     	;# 
   336  0590                     	;# 
   337  0591                     	;# 
   338  0592                     	;# 
   339  0593                     	;# 
   340  060C                     	;# 
   341  060D                     	;# 
   342  060E                     	;# 
   343  060F                     	;# 
   344  0610                     	;# 
   345  0611                     	;# 
   346  0612                     	;# 
   347  0613                     	;# 
   348  0614                     	;# 
   349  0616                     	;# 
   350  0617                     	;# 
   351  0618                     	;# 
   352  0619                     	;# 
   353  061A                     	;# 
   354  061B                     	;# 
   355  061C                     	;# 
   356  061D                     	;# 
   357  061E                     	;# 
   358  068C                     	;# 
   359  068D                     	;# 
   360  068E                     	;# 
   361  068F                     	;# 
   362  0690                     	;# 
   363  0691                     	;# 
   364  0692                     	;# 
   365  0693                     	;# 
   366  0694                     	;# 
   367  070C                     	;# 
   368  070D                     	;# 
   369  070E                     	;# 
   370  070F                     	;# 
   371  0710                     	;# 
   372  0711                     	;# 
   373  0712                     	;# 
   374  0713                     	;# 
   375  0714                     	;# 
   376  0716                     	;# 
   377  0717                     	;# 
   378  0718                     	;# 
   379  0719                     	;# 
   380  071A                     	;# 
   381  071B                     	;# 
   382  071C                     	;# 
   383  071D                     	;# 
   384  071E                     	;# 
   385  0796                     	;# 
   386  0797                     	;# 
   387  0798                     	;# 
   388  0799                     	;# 
   389  079A                     	;# 
   390  079B                     	;# 
   391  080C                     	;# 
   392  080D                     	;# 
   393  080E                     	;# 
   394  080F                     	;# 
   395  0810                     	;# 
   396  0811                     	;# 
   397  0812                     	;# 
   398  0813                     	;# 
   399  0814                     	;# 
   400  081A                     	;# 
   401  081B                     	;# 
   402  081C                     	;# 
   403  081D                     	;# 
   404  081E                     	;# 
   405  081F                     	;# 
   406  088C                     	;# 
   407  088D                     	;# 
   408  088E                     	;# 
   409  088F                     	;# 
   410  0890                     	;# 
   411  0891                     	;# 
   412  0892                     	;# 
   413  0893                     	;# 
   414  0895                     	;# 
   415  0896                     	;# 
   416  0897                     	;# 
   417  0898                     	;# 
   418  0899                     	;# 
   419  089A                     	;# 
   420  089B                     	;# 
   421  090C                     	;# 
   422  090E                     	;# 
   423  090F                     	;# 
   424  091F                     	;# 
   425  091F                     	;# 
   426  098F                     	;# 
   427  098F                     	;# 
   428  0990                     	;# 
   429  0991                     	;# 
   430  0992                     	;# 
   431  0993                     	;# 
   432  0994                     	;# 
   433  0995                     	;# 
   434  0996                     	;# 
   435  0997                     	;# 
   436  0E0F                     	;# 
   437  0E10                     	;# 
   438  0E11                     	;# 
   439  0E12                     	;# 
   440  0E13                     	;# 
   441  0E14                     	;# 
   442  0E15                     	;# 
   443  0E16                     	;# 
   444  0E17                     	;# 
   445  0E18                     	;# 
   446  0E19                     	;# 
   447  0E1A                     	;# 
   448  0E1B                     	;# 
   449  0E1C                     	;# 
   450  0E1D                     	;# 
   451  0E1E                     	;# 
   452  0E1F                     	;# 
   453  0E20                     	;# 
   454  0E21                     	;# 
   455  0E22                     	;# 
   456  0E23                     	;# 
   457  0E24                     	;# 
   458  0E25                     	;# 
   459  0E26                     	;# 
   460  0E27                     	;# 
   461  0E28                     	;# 
   462  0E29                     	;# 
   463  0E2A                     	;# 
   464  0E2B                     	;# 
   465  0E2C                     	;# 
   466  0E2D                     	;# 
   467  0E2E                     	;# 
   468  0E2F                     	;# 
   469  0E30                     	;# 
   470  0E31                     	;# 
   471  0E32                     	;# 
   472  0E33                     	;# 
   473  0E34                     	;# 
   474  0E35                     	;# 
   475  0E36                     	;# 
   476  0E37                     	;# 
   477  0E8F                     	;# 
   478  0E90                     	;# 
   479  0E91                     	;# 
   480  0E92                     	;# 
   481  0E93                     	;# 
   482  0E94                     	;# 
   483  0E95                     	;# 
   484  0E96                     	;# 
   485  0E97                     	;# 
   486  0E9C                     	;# 
   487  0E9D                     	;# 
   488  0E9E                     	;# 
   489  0EA1                     	;# 
   490  0EA2                     	;# 
   491  0EA3                     	;# 
   492  0EA4                     	;# 
   493  0EA5                     	;# 
   494  0EA9                     	;# 
   495  0EAA                     	;# 
   496  0EAB                     	;# 
   497  0EAC                     	;# 
   498  0EB1                     	;# 
   499  0EB2                     	;# 
   500  0EB3                     	;# 
   501  0EB8                     	;# 
   502  0EB9                     	;# 
   503  0EBA                     	;# 
   504  0EBB                     	;# 
   505  0EBC                     	;# 
   506  0EBD                     	;# 
   507  0EBE                     	;# 
   508  0EC3                     	;# 
   509  0EC5                     	;# 
   510  0EC6                     	;# 
   511  0EC7                     	;# 
   512  0EC8                     	;# 
   513  0EC9                     	;# 
   514  0ECA                     	;# 
   515  0ECB                     	;# 
   516  0ECC                     	;# 
   517  0F10                     	;# 
   518  0F11                     	;# 
   519  0F12                     	;# 
   520  0F13                     	;# 
   521  0F14                     	;# 
   522  0F15                     	;# 
   523  0F16                     	;# 
   524  0F17                     	;# 
   525  0F18                     	;# 
   526  0F19                     	;# 
   527  0F1A                     	;# 
   528  0F1B                     	;# 
   529  0F1C                     	;# 
   530  0F1D                     	;# 
   531  0F1E                     	;# 
   532  0F1F                     	;# 
   533  0F20                     	;# 
   534  0F21                     	;# 
   535  0F22                     	;# 
   536  0F23                     	;# 
   537  0F24                     	;# 
   538  0F25                     	;# 
   539  0F26                     	;# 
   540  0F27                     	;# 
   541  0F38                     	;# 
   542  0F39                     	;# 
   543  0F3A                     	;# 
   544  0F3B                     	;# 
   545  0F3C                     	;# 
   546  0F3D                     	;# 
   547  0F3E                     	;# 
   548  0F3F                     	;# 
   549  0F40                     	;# 
   550  0F41                     	;# 
   551  0F43                     	;# 
   552  0F44                     	;# 
   553  0F45                     	;# 
   554  0F46                     	;# 
   555  0F47                     	;# 
   556  0F48                     	;# 
   557  0F49                     	;# 
   558  0F4A                     	;# 
   559  0F4B                     	;# 
   560  0F4C                     	;# 
   561  0F4E                     	;# 
   562  0F4F                     	;# 
   563  0F50                     	;# 
   564  0F51                     	;# 
   565  0F52                     	;# 
   566  0F53                     	;# 
   567  0F54                     	;# 
   568  0F55                     	;# 
   569  0F56                     	;# 
   570  0F57                     	;# 
   571  0F65                     	;# 
   572  0F68                     	;# 
   573  0F69                     	;# 
   574  0F6A                     	;# 
   575  0F6B                     	;# 
   576  0FE4                     	;# 
   577  0FE5                     	;# 
   578  0FE6                     	;# 
   579  0FE7                     	;# 
   580  0FE8                     	;# 
   581  0FE9                     	;# 
   582  0FEA                     	;# 
   583  0FEB                     	;# 
   584  0FED                     	;# 
   585  0FEE                     	;# 
   586  0FEF                     	;# 
   587  0000                     	;# 
   588  0001                     	;# 
   589  0002                     	;# 
   590  0003                     	;# 
   591  0004                     	;# 
   592  0005                     	;# 
   593  0006                     	;# 
   594  0007                     	;# 
   595  0008                     	;# 
   596  0009                     	;# 
   597  000A                     	;# 
   598  000B                     	;# 
   599  000C                     	;# 
   600  000D                     	;# 
   601  000E                     	;# 
   602  0010                     	;# 
   603  0011                     	;# 
   604  0012                     	;# 
   605  0013                     	;# 
   606  0016                     	;# 
   607  0017                     	;# 
   608  0018                     	;# 
   609  001C                     	;# 
   610  001C                     	;# 
   611  001D                     	;# 
   612  001D                     	;# 
   613  001E                     	;# 
   614  001F                     	;# 
   615  008C                     	;# 
   616  008C                     	;# 
   617  008D                     	;# 
   618  008E                     	;# 
   619  008E                     	;# 
   620  008F                     	;# 
   621  0090                     	;# 
   622  0090                     	;# 
   623  0091                     	;# 
   624  0093                     	;# 
   625  0094                     	;# 
   626  0095                     	;# 
   627  0096                     	;# 
   628  0097                     	;# 
   629  0098                     	;# 
   630  0099                     	;# 
   631  009A                     	;# 
   632  009B                     	;# 
   633  009C                     	;# 
   634  009D                     	;# 
   635  009E                     	;# 
   636  010C                     	;# 
   637  010D                     	;# 
   638  010E                     	;# 
   639  010E                     	;# 
   640  010F                     	;# 
   641  0110                     	;# 
   642  0110                     	;# 
   643  0111                     	;# 
   644  0112                     	;# 
   645  0112                     	;# 
   646  0113                     	;# 
   647  0114                     	;# 
   648  0114                     	;# 
   649  0115                     	;# 
   650  0116                     	;# 
   651  0116                     	;# 
   652  0117                     	;# 
   653  0119                     	;# 
   654  0119                     	;# 
   655  0119                     	;# 
   656  011A                     	;# 
   657  011A                     	;# 
   658  011A                     	;# 
   659  011B                     	;# 
   660  011B                     	;# 
   661  011B                     	;# 
   662  011B                     	;# 
   663  011B                     	;# 
   664  011C                     	;# 
   665  011C                     	;# 
   666  011C                     	;# 
   667  011D                     	;# 
   668  011D                     	;# 
   669  011D                     	;# 
   670  011E                     	;# 
   671  011E                     	;# 
   672  011E                     	;# 
   673  011F                     	;# 
   674  011F                     	;# 
   675  011F                     	;# 
   676  011F                     	;# 
   677  011F                     	;# 
   678  018C                     	;# 
   679  018D                     	;# 
   680  018E                     	;# 
   681  018F                     	;# 
   682  0190                     	;# 
   683  0191                     	;# 
   684  0192                     	;# 
   685  0196                     	;# 
   686  0197                     	;# 
   687  0198                     	;# 
   688  0199                     	;# 
   689  019A                     	;# 
   690  019B                     	;# 
   691  019C                     	;# 
   692  020C                     	;# 
   693  020C                     	;# 
   694  020D                     	;# 
   695  020E                     	;# 
   696  020F                     	;# 
   697  020F                     	;# 
   698  0210                     	;# 
   699  0210                     	;# 
   700  0211                     	;# 
   701  0211                     	;# 
   702  0212                     	;# 
   703  0212                     	;# 
   704  0213                     	;# 
   705  0214                     	;# 
   706  0215                     	;# 
   707  0215                     	;# 
   708  0216                     	;# 
   709  0216                     	;# 
   710  0217                     	;# 
   711  0217                     	;# 
   712  0218                     	;# 
   713  0218                     	;# 
   714  0219                     	;# 
   715  021A                     	;# 
   716  021B                     	;# 
   717  021B                     	;# 
   718  021C                     	;# 
   719  021C                     	;# 
   720  021D                     	;# 
   721  021D                     	;# 
   722  021E                     	;# 
   723  021F                     	;# 
   724  028C                     	;# 
   725  028C                     	;# 
   726  028D                     	;# 
   727  028D                     	;# 
   728  028E                     	;# 
   729  028F                     	;# 
   730  0290                     	;# 
   731  0290                     	;# 
   732  0291                     	;# 
   733  0292                     	;# 
   734  0292                     	;# 
   735  0293                     	;# 
   736  0293                     	;# 
   737  0294                     	;# 
   738  0295                     	;# 
   739  0296                     	;# 
   740  0296                     	;# 
   741  0297                     	;# 
   742  0298                     	;# 
   743  0298                     	;# 
   744  0299                     	;# 
   745  0299                     	;# 
   746  029A                     	;# 
   747  029B                     	;# 
   748  029C                     	;# 
   749  029C                     	;# 
   750  029D                     	;# 
   751  030C                     	;# 
   752  030C                     	;# 
   753  030D                     	;# 
   754  030E                     	;# 
   755  030F                     	;# 
   756  0310                     	;# 
   757  0310                     	;# 
   758  0311                     	;# 
   759  0312                     	;# 
   760  0313                     	;# 
   761  0314                     	;# 
   762  0314                     	;# 
   763  0315                     	;# 
   764  0316                     	;# 
   765  0317                     	;# 
   766  0318                     	;# 
   767  0318                     	;# 
   768  0319                     	;# 
   769  031A                     	;# 
   770  031B                     	;# 
   771  031C                     	;# 
   772  031C                     	;# 
   773  031D                     	;# 
   774  031E                     	;# 
   775  031F                     	;# 
   776  038C                     	;# 
   777  038D                     	;# 
   778  038E                     	;# 
   779  0390                     	;# 
   780  0391                     	;# 
   781  0392                     	;# 
   782  040C                     	;# 
   783  040D                     	;# 
   784  040E                     	;# 
   785  040F                     	;# 
   786  0410                     	;# 
   787  0411                     	;# 
   788  0416                     	;# 
   789  0416                     	;# 
   790  0417                     	;# 
   791  0418                     	;# 
   792  0418                     	;# 
   793  0419                     	;# 
   794  041A                     	;# 
   795  041A                     	;# 
   796  041B                     	;# 
   797  041C                     	;# 
   798  041C                     	;# 
   799  041D                     	;# 
   800  041E                     	;# 
   801  041F                     	;# 
   802  048C                     	;# 
   803  048C                     	;# 
   804  048D                     	;# 
   805  048E                     	;# 
   806  048F                     	;# 
   807  048F                     	;# 
   808  0490                     	;# 
   809  0491                     	;# 
   810  0492                     	;# 
   811  0492                     	;# 
   812  0493                     	;# 
   813  0494                     	;# 
   814  0495                     	;# 
   815  0495                     	;# 
   816  0496                     	;# 
   817  0497                     	;# 
   818  0498                     	;# 
   819  0499                     	;# 
   820  049A                     	;# 
   821  049B                     	;# 
   822  049C                     	;# 
   823  049D                     	;# 
   824  050C                     	;# 
   825  050C                     	;# 
   826  050D                     	;# 
   827  050E                     	;# 
   828  050F                     	;# 
   829  050F                     	;# 
   830  0510                     	;# 
   831  0511                     	;# 
   832  0512                     	;# 
   833  0512                     	;# 
   834  0513                     	;# 
   835  0514                     	;# 
   836  0515                     	;# 
   837  0515                     	;# 
   838  0516                     	;# 
   839  0517                     	;# 
   840  0518                     	;# 
   841  0519                     	;# 
   842  051A                     	;# 
   843  051B                     	;# 
   844  051C                     	;# 
   845  051D                     	;# 
   846  058C                     	;# 
   847  058C                     	;# 
   848  058D                     	;# 
   849  058E                     	;# 
   850  058F                     	;# 
   851  058F                     	;# 
   852  0590                     	;# 
   853  0591                     	;# 
   854  0592                     	;# 
   855  0593                     	;# 
   856  060C                     	;# 
   857  060D                     	;# 
   858  060E                     	;# 
   859  060F                     	;# 
   860  0610                     	;# 
   861  0611                     	;# 
   862  0612                     	;# 
   863  0613                     	;# 
   864  0614                     	;# 
   865  0616                     	;# 
   866  0617                     	;# 
   867  0618                     	;# 
   868  0619                     	;# 
   869  061A                     	;# 
   870  061B                     	;# 
   871  061C                     	;# 
   872  061D                     	;# 
   873  061E                     	;# 
   874  068C                     	;# 
   875  068D                     	;# 
   876  068E                     	;# 
   877  068F                     	;# 
   878  0690                     	;# 
   879  0691                     	;# 
   880  0692                     	;# 
   881  0693                     	;# 
   882  0694                     	;# 
   883  070C                     	;# 
   884  070D                     	;# 
   885  070E                     	;# 
   886  070F                     	;# 
   887  0710                     	;# 
   888  0711                     	;# 
   889  0712                     	;# 
   890  0713                     	;# 
   891  0714                     	;# 
   892  0716                     	;# 
   893  0717                     	;# 
   894  0718                     	;# 
   895  0719                     	;# 
   896  071A                     	;# 
   897  071B                     	;# 
   898  071C                     	;# 
   899  071D                     	;# 
   900  071E                     	;# 
   901  0796                     	;# 
   902  0797                     	;# 
   903  0798                     	;# 
   904  0799                     	;# 
   905  079A                     	;# 
   906  079B                     	;# 
   907  080C                     	;# 
   908  080D                     	;# 
   909  080E                     	;# 
   910  080F                     	;# 
   911  0810                     	;# 
   912  0811                     	;# 
   913  0812                     	;# 
   914  0813                     	;# 
   915  0814                     	;# 
   916  081A                     	;# 
   917  081B                     	;# 
   918  081C                     	;# 
   919  081D                     	;# 
   920  081E                     	;# 
   921  081F                     	;# 
   922  088C                     	;# 
   923  088D                     	;# 
   924  088E                     	;# 
   925  088F                     	;# 
   926  0890                     	;# 
   927  0891                     	;# 
   928  0892                     	;# 
   929  0893                     	;# 
   930  0895                     	;# 
   931  0896                     	;# 
   932  0897                     	;# 
   933  0898                     	;# 
   934  0899                     	;# 
   935  089A                     	;# 
   936  089B                     	;# 
   937  090C                     	;# 
   938  090E                     	;# 
   939  090F                     	;# 
   940  091F                     	;# 
   941  091F                     	;# 
   942  098F                     	;# 
   943  098F                     	;# 
   944  0990                     	;# 
   945  0991                     	;# 
   946  0992                     	;# 
   947  0993                     	;# 
   948  0994                     	;# 
   949  0995                     	;# 
   950  0996                     	;# 
   951  0997                     	;# 
   952  0E0F                     	;# 
   953  0E10                     	;# 
   954  0E11                     	;# 
   955  0E12                     	;# 
   956  0E13                     	;# 
   957  0E14                     	;# 
   958  0E15                     	;# 
   959  0E16                     	;# 
   960  0E17                     	;# 
   961  0E18                     	;# 
   962  0E19                     	;# 
   963  0E1A                     	;# 
   964  0E1B                     	;# 
   965  0E1C                     	;# 
   966  0E1D                     	;# 
   967  0E1E                     	;# 
   968  0E1F                     	;# 
   969  0E20                     	;# 
   970  0E21                     	;# 
   971  0E22                     	;# 
   972  0E23                     	;# 
   973  0E24                     	;# 
   974  0E25                     	;# 
   975  0E26                     	;# 
   976  0E27                     	;# 
   977  0E28                     	;# 
   978  0E29                     	;# 
   979  0E2A                     	;# 
   980  0E2B                     	;# 
   981  0E2C                     	;# 
   982  0E2D                     	;# 
   983  0E2E                     	;# 
   984  0E2F                     	;# 
   985  0E30                     	;# 
   986  0E31                     	;# 
   987  0E32                     	;# 
   988  0E33                     	;# 
   989  0E34                     	;# 
   990  0E35                     	;# 
   991  0E36                     	;# 
   992  0E37                     	;# 
   993  0E8F                     	;# 
   994  0E90                     	;# 
   995  0E91                     	;# 
   996  0E92                     	;# 
   997  0E93                     	;# 
   998  0E94                     	;# 
   999  0E95                     	;# 
  1000  0E96                     	;# 
  1001  0E97                     	;# 
  1002  0E9C                     	;# 
  1003  0E9D                     	;# 
  1004  0E9E                     	;# 
  1005  0EA1                     	;# 
  1006  0EA2                     	;# 
  1007  0EA3                     	;# 
  1008  0EA4                     	;# 
  1009  0EA5                     	;# 
  1010  0EA9                     	;# 
  1011  0EAA                     	;# 
  1012  0EAB                     	;# 
  1013  0EAC                     	;# 
  1014  0EB1                     	;# 
  1015  0EB2                     	;# 
  1016  0EB3                     	;# 
  1017  0EB8                     	;# 
  1018  0EB9                     	;# 
  1019  0EBA                     	;# 
  1020  0EBB                     	;# 
  1021  0EBC                     	;# 
  1022  0EBD                     	;# 
  1023  0EBE                     	;# 
  1024  0EC3                     	;# 
  1025  0EC5                     	;# 
  1026  0EC6                     	;# 
  1027  0EC7                     	;# 
  1028  0EC8                     	;# 
  1029  0EC9                     	;# 
  1030  0ECA                     	;# 
  1031  0ECB                     	;# 
  1032  0ECC                     	;# 
  1033  0F10                     	;# 
  1034  0F11                     	;# 
  1035  0F12                     	;# 
  1036  0F13                     	;# 
  1037  0F14                     	;# 
  1038  0F15                     	;# 
  1039  0F16                     	;# 
  1040  0F17                     	;# 
  1041  0F18                     	;# 
  1042  0F19                     	;# 
  1043  0F1A                     	;# 
  1044  0F1B                     	;# 
  1045  0F1C                     	;# 
  1046  0F1D                     	;# 
  1047  0F1E                     	;# 
  1048  0F1F                     	;# 
  1049  0F20                     	;# 
  1050  0F21                     	;# 
  1051  0F22                     	;# 
  1052  0F23                     	;# 
  1053  0F24                     	;# 
  1054  0F25                     	;# 
  1055  0F26                     	;# 
  1056  0F27                     	;# 
  1057  0F38                     	;# 
  1058  0F39                     	;# 
  1059  0F3A                     	;# 
  1060  0F3B                     	;# 
  1061  0F3C                     	;# 
  1062  0F3D                     	;# 
  1063  0F3E                     	;# 
  1064  0F3F                     	;# 
  1065  0F40                     	;# 
  1066  0F41                     	;# 
  1067  0F43                     	;# 
  1068  0F44                     	;# 
  1069  0F45                     	;# 
  1070  0F46                     	;# 
  1071  0F47                     	;# 
  1072  0F48                     	;# 
  1073  0F49                     	;# 
  1074  0F4A                     	;# 
  1075  0F4B                     	;# 
  1076  0F4C                     	;# 
  1077  0F4E                     	;# 
  1078  0F4F                     	;# 
  1079  0F50                     	;# 
  1080  0F51                     	;# 
  1081  0F52                     	;# 
  1082  0F53                     	;# 
  1083  0F54                     	;# 
  1084  0F55                     	;# 
  1085  0F56                     	;# 
  1086  0F57                     	;# 
  1087  0F65                     	;# 
  1088  0F68                     	;# 
  1089  0F69                     	;# 
  1090  0F6A                     	;# 
  1091  0F6B                     	;# 
  1092  0FE4                     	;# 
  1093  0FE5                     	;# 
  1094  0FE6                     	;# 
  1095  0FE7                     	;# 
  1096  0FE8                     	;# 
  1097  0FE9                     	;# 
  1098  0FEA                     	;# 
  1099  0FEB                     	;# 
  1100  0FED                     	;# 
  1101  0FEE                     	;# 
  1102  0FEF                     	;# 
  1103  0000                     	;# 
  1104  0001                     	;# 
  1105  0002                     	;# 
  1106  0003                     	;# 
  1107  0004                     	;# 
  1108  0005                     	;# 
  1109  0006                     	;# 
  1110  0007                     	;# 
  1111  0008                     	;# 
  1112  0009                     	;# 
  1113  000A                     	;# 
  1114  000B                     	;# 
  1115  000C                     	;# 
  1116  000D                     	;# 
  1117  000E                     	;# 
  1118  0010                     	;# 
  1119  0011                     	;# 
  1120  0012                     	;# 
  1121  0013                     	;# 
  1122  0016                     	;# 
  1123  0017                     	;# 
  1124  0018                     	;# 
  1125  001C                     	;# 
  1126  001C                     	;# 
  1127  001D                     	;# 
  1128  001D                     	;# 
  1129  001E                     	;# 
  1130  001F                     	;# 
  1131  008C                     	;# 
  1132  008C                     	;# 
  1133  008D                     	;# 
  1134  008E                     	;# 
  1135  008E                     	;# 
  1136  008F                     	;# 
  1137  0090                     	;# 
  1138  0090                     	;# 
  1139  0091                     	;# 
  1140  0093                     	;# 
  1141  0094                     	;# 
  1142  0095                     	;# 
  1143  0096                     	;# 
  1144  0097                     	;# 
  1145  0098                     	;# 
  1146  0099                     	;# 
  1147  009A                     	;# 
  1148  009B                     	;# 
  1149  009C                     	;# 
  1150  009D                     	;# 
  1151  009E                     	;# 
  1152  010C                     	;# 
  1153  010D                     	;# 
  1154  010E                     	;# 
  1155  010E                     	;# 
  1156  010F                     	;# 
  1157  0110                     	;# 
  1158  0110                     	;# 
  1159  0111                     	;# 
  1160  0112                     	;# 
  1161  0112                     	;# 
  1162  0113                     	;# 
  1163  0114                     	;# 
  1164  0114                     	;# 
  1165  0115                     	;# 
  1166  0116                     	;# 
  1167  0116                     	;# 
  1168  0117                     	;# 
  1169  0119                     	;# 
  1170  0119                     	;# 
  1171  0119                     	;# 
  1172  011A                     	;# 
  1173  011A                     	;# 
  1174  011A                     	;# 
  1175  011B                     	;# 
  1176  011B                     	;# 
  1177  011B                     	;# 
  1178  011B                     	;# 
  1179  011B                     	;# 
  1180  011C                     	;# 
  1181  011C                     	;# 
  1182  011C                     	;# 
  1183  011D                     	;# 
  1184  011D                     	;# 
  1185  011D                     	;# 
  1186  011E                     	;# 
  1187  011E                     	;# 
  1188  011E                     	;# 
  1189  011F                     	;# 
  1190  011F                     	;# 
  1191  011F                     	;# 
  1192  011F                     	;# 
  1193  011F                     	;# 
  1194  018C                     	;# 
  1195  018D                     	;# 
  1196  018E                     	;# 
  1197  018F                     	;# 
  1198  0190                     	;# 
  1199  0191                     	;# 
  1200  0192                     	;# 
  1201  0196                     	;# 
  1202  0197                     	;# 
  1203  0198                     	;# 
  1204  0199                     	;# 
  1205  019A                     	;# 
  1206  019B                     	;# 
  1207  019C                     	;# 
  1208  020C                     	;# 
  1209  020C                     	;# 
  1210  020D                     	;# 
  1211  020E                     	;# 
  1212  020F                     	;# 
  1213  020F                     	;# 
  1214  0210                     	;# 
  1215  0210                     	;# 
  1216  0211                     	;# 
  1217  0211                     	;# 
  1218  0212                     	;# 
  1219  0212                     	;# 
  1220  0213                     	;# 
  1221  0214                     	;# 
  1222  0215                     	;# 
  1223  0215                     	;# 
  1224  0216                     	;# 
  1225  0216                     	;# 
  1226  0217                     	;# 
  1227  0217                     	;# 
  1228  0218                     	;# 
  1229  0218                     	;# 
  1230  0219                     	;# 
  1231  021A                     	;# 
  1232  021B                     	;# 
  1233  021B                     	;# 
  1234  021C                     	;# 
  1235  021C                     	;# 
  1236  021D                     	;# 
  1237  021D                     	;# 
  1238  021E                     	;# 
  1239  021F                     	;# 
  1240  028C                     	;# 
  1241  028C                     	;# 
  1242  028D                     	;# 
  1243  028D                     	;# 
  1244  028E                     	;# 
  1245  028F                     	;# 
  1246  0290                     	;# 
  1247  0290                     	;# 
  1248  0291                     	;# 
  1249  0292                     	;# 
  1250  0292                     	;# 
  1251  0293                     	;# 
  1252  0293                     	;# 
  1253  0294                     	;# 
  1254  0295                     	;# 
  1255  0296                     	;# 
  1256  0296                     	;# 
  1257  0297                     	;# 
  1258  0298                     	;# 
  1259  0298                     	;# 
  1260  0299                     	;# 
  1261  0299                     	;# 
  1262  029A                     	;# 
  1263  029B                     	;# 
  1264  029C                     	;# 
  1265  029C                     	;# 
  1266  029D                     	;# 
  1267  030C                     	;# 
  1268  030C                     	;# 
  1269  030D                     	;# 
  1270  030E                     	;# 
  1271  030F                     	;# 
  1272  0310                     	;# 
  1273  0310                     	;# 
  1274  0311                     	;# 
  1275  0312                     	;# 
  1276  0313                     	;# 
  1277  0314                     	;# 
  1278  0314                     	;# 
  1279  0315                     	;# 
  1280  0316                     	;# 
  1281  0317                     	;# 
  1282  0318                     	;# 
  1283  0318                     	;# 
  1284  0319                     	;# 
  1285  031A                     	;# 
  1286  031B                     	;# 
  1287  031C                     	;# 
  1288  031C                     	;# 
  1289  031D                     	;# 
  1290  031E                     	;# 
  1291  031F                     	;# 
  1292  038C                     	;# 
  1293  038D                     	;# 
  1294  038E                     	;# 
  1295  0390                     	;# 
  1296  0391                     	;# 
  1297  0392                     	;# 
  1298  040C                     	;# 
  1299  040D                     	;# 
  1300  040E                     	;# 
  1301  040F                     	;# 
  1302  0410                     	;# 
  1303  0411                     	;# 
  1304  0416                     	;# 
  1305  0416                     	;# 
  1306  0417                     	;# 
  1307  0418                     	;# 
  1308  0418                     	;# 
  1309  0419                     	;# 
  1310  041A                     	;# 
  1311  041A                     	;# 
  1312  041B                     	;# 
  1313  041C                     	;# 
  1314  041C                     	;# 
  1315  041D                     	;# 
  1316  041E                     	;# 
  1317  041F                     	;# 
  1318  048C                     	;# 
  1319  048C                     	;# 
  1320  048D                     	;# 
  1321  048E                     	;# 
  1322  048F                     	;# 
  1323  048F                     	;# 
  1324  0490                     	;# 
  1325  0491                     	;# 
  1326  0492                     	;# 
  1327  0492                     	;# 
  1328  0493                     	;# 
  1329  0494                     	;# 
  1330  0495                     	;# 
  1331  0495                     	;# 
  1332  0496                     	;# 
  1333  0497                     	;# 
  1334  0498                     	;# 
  1335  0499                     	;# 
  1336  049A                     	;# 
  1337  049B                     	;# 
  1338  049C                     	;# 
  1339  049D                     	;# 
  1340  050C                     	;# 
  1341  050C                     	;# 
  1342  050D                     	;# 
  1343  050E                     	;# 
  1344  050F                     	;# 
  1345  050F                     	;# 
  1346  0510                     	;# 
  1347  0511                     	;# 
  1348  0512                     	;# 
  1349  0512                     	;# 
  1350  0513                     	;# 
  1351  0514                     	;# 
  1352  0515                     	;# 
  1353  0515                     	;# 
  1354  0516                     	;# 
  1355  0517                     	;# 
  1356  0518                     	;# 
  1357  0519                     	;# 
  1358  051A                     	;# 
  1359  051B                     	;# 
  1360  051C                     	;# 
  1361  051D                     	;# 
  1362  058C                     	;# 
  1363  058C                     	;# 
  1364  058D                     	;# 
  1365  058E                     	;# 
  1366  058F                     	;# 
  1367  058F                     	;# 
  1368  0590                     	;# 
  1369  0591                     	;# 
  1370  0592                     	;# 
  1371  0593                     	;# 
  1372  060C                     	;# 
  1373  060D                     	;# 
  1374  060E                     	;# 
  1375  060F                     	;# 
  1376  0610                     	;# 
  1377  0611                     	;# 
  1378  0612                     	;# 
  1379  0613                     	;# 
  1380  0614                     	;# 
  1381  0616                     	;# 
  1382  0617                     	;# 
  1383  0618                     	;# 
  1384  0619                     	;# 
  1385  061A                     	;# 
  1386  061B                     	;# 
  1387  061C                     	;# 
  1388  061D                     	;# 
  1389  061E                     	;# 
  1390  068C                     	;# 
  1391  068D                     	;# 
  1392  068E                     	;# 
  1393  068F                     	;# 
  1394  0690                     	;# 
  1395  0691                     	;# 
  1396  0692                     	;# 
  1397  0693                     	;# 
  1398  0694                     	;# 
  1399  070C                     	;# 
  1400  070D                     	;# 
  1401  070E                     	;# 
  1402  070F                     	;# 
  1403  0710                     	;# 
  1404  0711                     	;# 
  1405  0712                     	;# 
  1406  0713                     	;# 
  1407  0714                     	;# 
  1408  0716                     	;# 
  1409  0717                     	;# 
  1410  0718                     	;# 
  1411  0719                     	;# 
  1412  071A                     	;# 
  1413  071B                     	;# 
  1414  071C                     	;# 
  1415  071D                     	;# 
  1416  071E                     	;# 
  1417  0796                     	;# 
  1418  0797                     	;# 
  1419  0798                     	;# 
  1420  0799                     	;# 
  1421  079A                     	;# 
  1422  079B                     	;# 
  1423  080C                     	;# 
  1424  080D                     	;# 
  1425  080E                     	;# 
  1426  080F                     	;# 
  1427  0810                     	;# 
  1428  0811                     	;# 
  1429  0812                     	;# 
  1430  0813                     	;# 
  1431  0814                     	;# 
  1432  081A                     	;# 
  1433  081B                     	;# 
  1434  081C                     	;# 
  1435  081D                     	;# 
  1436  081E                     	;# 
  1437  081F                     	;# 
  1438  088C                     	;# 
  1439  088D                     	;# 
  1440  088E                     	;# 
  1441  088F                     	;# 
  1442  0890                     	;# 
  1443  0891                     	;# 
  1444  0892                     	;# 
  1445  0893                     	;# 
  1446  0895                     	;# 
  1447  0896                     	;# 
  1448  0897                     	;# 
  1449  0898                     	;# 
  1450  0899                     	;# 
  1451  089A                     	;# 
  1452  089B                     	;# 
  1453  090C                     	;# 
  1454  090E                     	;# 
  1455  090F                     	;# 
  1456  091F                     	;# 
  1457  091F                     	;# 
  1458  098F                     	;# 
  1459  098F                     	;# 
  1460  0990                     	;# 
  1461  0991                     	;# 
  1462  0992                     	;# 
  1463  0993                     	;# 
  1464  0994                     	;# 
  1465  0995                     	;# 
  1466  0996                     	;# 
  1467  0997                     	;# 
  1468  0E0F                     	;# 
  1469  0E10                     	;# 
  1470  0E11                     	;# 
  1471  0E12                     	;# 
  1472  0E13                     	;# 
  1473  0E14                     	;# 
  1474  0E15                     	;# 
  1475  0E16                     	;# 
  1476  0E17                     	;# 
  1477  0E18                     	;# 
  1478  0E19                     	;# 
  1479  0E1A                     	;# 
  1480  0E1B                     	;# 
  1481  0E1C                     	;# 
  1482  0E1D                     	;# 
  1483  0E1E                     	;# 
  1484  0E1F                     	;# 
  1485  0E20                     	;# 
  1486  0E21                     	;# 
  1487  0E22                     	;# 
  1488  0E23                     	;# 
  1489  0E24                     	;# 
  1490  0E25                     	;# 
  1491  0E26                     	;# 
  1492  0E27                     	;# 
  1493  0E28                     	;# 
  1494  0E29                     	;# 
  1495  0E2A                     	;# 
  1496  0E2B                     	;# 
  1497  0E2C                     	;# 
  1498  0E2D                     	;# 
  1499  0E2E                     	;# 
  1500  0E2F                     	;# 
  1501  0E30                     	;# 
  1502  0E31                     	;# 
  1503  0E32                     	;# 
  1504  0E33                     	;# 
  1505  0E34                     	;# 
  1506  0E35                     	;# 
  1507  0E36                     	;# 
  1508  0E37                     	;# 
  1509  0E8F                     	;# 
  1510  0E90                     	;# 
  1511  0E91                     	;# 
  1512  0E92                     	;# 
  1513  0E93                     	;# 
  1514  0E94                     	;# 
  1515  0E95                     	;# 
  1516  0E96                     	;# 
  1517  0E97                     	;# 
  1518  0E9C                     	;# 
  1519  0E9D                     	;# 
  1520  0E9E                     	;# 
  1521  0EA1                     	;# 
  1522  0EA2                     	;# 
  1523  0EA3                     	;# 
  1524  0EA4                     	;# 
  1525  0EA5                     	;# 
  1526  0EA9                     	;# 
  1527  0EAA                     	;# 
  1528  0EAB                     	;# 
  1529  0EAC                     	;# 
  1530  0EB1                     	;# 
  1531  0EB2                     	;# 
  1532  0EB3                     	;# 
  1533  0EB8                     	;# 
  1534  0EB9                     	;# 
  1535  0EBA                     	;# 
  1536  0EBB                     	;# 
  1537  0EBC                     	;# 
  1538  0EBD                     	;# 
  1539  0EBE                     	;# 
  1540  0EC3                     	;# 
  1541  0EC5                     	;# 
  1542  0EC6                     	;# 
  1543  0EC7                     	;# 
  1544  0EC8                     	;# 
  1545  0EC9                     	;# 
  1546  0ECA                     	;# 
  1547  0ECB                     	;# 
  1548  0ECC                     	;# 
  1549  0F10                     	;# 
  1550  0F11                     	;# 
  1551  0F12                     	;# 
  1552  0F13                     	;# 
  1553  0F14                     	;# 
  1554  0F15                     	;# 
  1555  0F16                     	;# 
  1556  0F17                     	;# 
  1557  0F18                     	;# 
  1558  0F19                     	;# 
  1559  0F1A                     	;# 
  1560  0F1B                     	;# 
  1561  0F1C                     	;# 
  1562  0F1D                     	;# 
  1563  0F1E                     	;# 
  1564  0F1F                     	;# 
  1565  0F20                     	;# 
  1566  0F21                     	;# 
  1567  0F22                     	;# 
  1568  0F23                     	;# 
  1569  0F24                     	;# 
  1570  0F25                     	;# 
  1571  0F26                     	;# 
  1572  0F27                     	;# 
  1573  0F38                     	;# 
  1574  0F39                     	;# 
  1575  0F3A                     	;# 
  1576  0F3B                     	;# 
  1577  0F3C                     	;# 
  1578  0F3D                     	;# 
  1579  0F3E                     	;# 
  1580  0F3F                     	;# 
  1581  0F40                     	;# 
  1582  0F41                     	;# 
  1583  0F43                     	;# 
  1584  0F44                     	;# 
  1585  0F45                     	;# 
  1586  0F46                     	;# 
  1587  0F47                     	;# 
  1588  0F48                     	;# 
  1589  0F49                     	;# 
  1590  0F4A                     	;# 
  1591  0F4B                     	;# 
  1592  0F4C                     	;# 
  1593  0F4E                     	;# 
  1594  0F4F                     	;# 
  1595  0F50                     	;# 
  1596  0F51                     	;# 
  1597  0F52                     	;# 
  1598  0F53                     	;# 
  1599  0F54                     	;# 
  1600  0F55                     	;# 
  1601  0F56                     	;# 
  1602  0F57                     	;# 
  1603  0F65                     	;# 
  1604  0F68                     	;# 
  1605  0F69                     	;# 
  1606  0F6A                     	;# 
  1607  0F6B                     	;# 
  1608  0FE4                     	;# 
  1609  0FE5                     	;# 
  1610  0FE6                     	;# 
  1611  0FE7                     	;# 
  1612  0FE8                     	;# 
  1613  0FE9                     	;# 
  1614  0FEA                     	;# 
  1615  0FEB                     	;# 
  1616  0FED                     	;# 
  1617  0FEE                     	;# 
  1618  0FEF                     	;# 
  1619  0000                     	;# 
  1620  0001                     	;# 
  1621  0002                     	;# 
  1622  0003                     	;# 
  1623  0004                     	;# 
  1624  0005                     	;# 
  1625  0006                     	;# 
  1626  0007                     	;# 
  1627  0008                     	;# 
  1628  0009                     	;# 
  1629  000A                     	;# 
  1630  000B                     	;# 
  1631  000C                     	;# 
  1632  000D                     	;# 
  1633  000E                     	;# 
  1634  0010                     	;# 
  1635  0011                     	;# 
  1636  0012                     	;# 
  1637  0013                     	;# 
  1638  0016                     	;# 
  1639  0017                     	;# 
  1640  0018                     	;# 
  1641  001C                     	;# 
  1642  001C                     	;# 
  1643  001D                     	;# 
  1644  001D                     	;# 
  1645  001E                     	;# 
  1646  001F                     	;# 
  1647  008C                     	;# 
  1648  008C                     	;# 
  1649  008D                     	;# 
  1650  008E                     	;# 
  1651  008E                     	;# 
  1652  008F                     	;# 
  1653  0090                     	;# 
  1654  0090                     	;# 
  1655  0091                     	;# 
  1656  0093                     	;# 
  1657  0094                     	;# 
  1658  0095                     	;# 
  1659  0096                     	;# 
  1660  0097                     	;# 
  1661  0098                     	;# 
  1662  0099                     	;# 
  1663  009A                     	;# 
  1664  009B                     	;# 
  1665  009C                     	;# 
  1666  009D                     	;# 
  1667  009E                     	;# 
  1668  010C                     	;# 
  1669  010D                     	;# 
  1670  010E                     	;# 
  1671  010E                     	;# 
  1672  010F                     	;# 
  1673  0110                     	;# 
  1674  0110                     	;# 
  1675  0111                     	;# 
  1676  0112                     	;# 
  1677  0112                     	;# 
  1678  0113                     	;# 
  1679  0114                     	;# 
  1680  0114                     	;# 
  1681  0115                     	;# 
  1682  0116                     	;# 
  1683  0116                     	;# 
  1684  0117                     	;# 
  1685  0119                     	;# 
  1686  0119                     	;# 
  1687  0119                     	;# 
  1688  011A                     	;# 
  1689  011A                     	;# 
  1690  011A                     	;# 
  1691  011B                     	;# 
  1692  011B                     	;# 
  1693  011B                     	;# 
  1694  011B                     	;# 
  1695  011B                     	;# 
  1696  011C                     	;# 
  1697  011C                     	;# 
  1698  011C                     	;# 
  1699  011D                     	;# 
  1700  011D                     	;# 
  1701  011D                     	;# 
  1702  011E                     	;# 
  1703  011E                     	;# 
  1704  011E                     	;# 
  1705  011F                     	;# 
  1706  011F                     	;# 
  1707  011F                     	;# 
  1708  011F                     	;# 
  1709  011F                     	;# 
  1710  018C                     	;# 
  1711  018D                     	;# 
  1712  018E                     	;# 
  1713  018F                     	;# 
  1714  0190                     	;# 
  1715  0191                     	;# 
  1716  0192                     	;# 
  1717  0196                     	;# 
  1718  0197                     	;# 
  1719  0198                     	;# 
  1720  0199                     	;# 
  1721  019A                     	;# 
  1722  019B                     	;# 
  1723  019C                     	;# 
  1724  020C                     	;# 
  1725  020C                     	;# 
  1726  020D                     	;# 
  1727  020E                     	;# 
  1728  020F                     	;# 
  1729  020F                     	;# 
  1730  0210                     	;# 
  1731  0210                     	;# 
  1732  0211                     	;# 
  1733  0211                     	;# 
  1734  0212                     	;# 
  1735  0212                     	;# 
  1736  0213                     	;# 
  1737  0214                     	;# 
  1738  0215                     	;# 
  1739  0215                     	;# 
  1740  0216                     	;# 
  1741  0216                     	;# 
  1742  0217                     	;# 
  1743  0217                     	;# 
  1744  0218                     	;# 
  1745  0218                     	;# 
  1746  0219                     	;# 
  1747  021A                     	;# 
  1748  021B                     	;# 
  1749  021B                     	;# 
  1750  021C                     	;# 
  1751  021C                     	;# 
  1752  021D                     	;# 
  1753  021D                     	;# 
  1754  021E                     	;# 
  1755  021F                     	;# 
  1756  028C                     	;# 
  1757  028C                     	;# 
  1758  028D                     	;# 
  1759  028D                     	;# 
  1760  028E                     	;# 
  1761  028F                     	;# 
  1762  0290                     	;# 
  1763  0290                     	;# 
  1764  0291                     	;# 
  1765  0292                     	;# 
  1766  0292                     	;# 
  1767  0293                     	;# 
  1768  0293                     	;# 
  1769  0294                     	;# 
  1770  0295                     	;# 
  1771  0296                     	;# 
  1772  0296                     	;# 
  1773  0297                     	;# 
  1774  0298                     	;# 
  1775  0298                     	;# 
  1776  0299                     	;# 
  1777  0299                     	;# 
  1778  029A                     	;# 
  1779  029B                     	;# 
  1780  029C                     	;# 
  1781  029C                     	;# 
  1782  029D                     	;# 
  1783  030C                     	;# 
  1784  030C                     	;# 
  1785  030D                     	;# 
  1786  030E                     	;# 
  1787  030F                     	;# 
  1788  0310                     	;# 
  1789  0310                     	;# 
  1790  0311                     	;# 
  1791  0312                     	;# 
  1792  0313                     	;# 
  1793  0314                     	;# 
  1794  0314                     	;# 
  1795  0315                     	;# 
  1796  0316                     	;# 
  1797  0317                     	;# 
  1798  0318                     	;# 
  1799  0318                     	;# 
  1800  0319                     	;# 
  1801  031A                     	;# 
  1802  031B                     	;# 
  1803  031C                     	;# 
  1804  031C                     	;# 
  1805  031D                     	;# 
  1806  031E                     	;# 
  1807  031F                     	;# 
  1808  038C                     	;# 
  1809  038D                     	;# 
  1810  038E                     	;# 
  1811  0390                     	;# 
  1812  0391                     	;# 
  1813  0392                     	;# 
  1814  040C                     	;# 
  1815  040D                     	;# 
  1816  040E                     	;# 
  1817  040F                     	;# 
  1818  0410                     	;# 
  1819  0411                     	;# 
  1820  0416                     	;# 
  1821  0416                     	;# 
  1822  0417                     	;# 
  1823  0418                     	;# 
  1824  0418                     	;# 
  1825  0419                     	;# 
  1826  041A                     	;# 
  1827  041A                     	;# 
  1828  041B                     	;# 
  1829  041C                     	;# 
  1830  041C                     	;# 
  1831  041D                     	;# 
  1832  041E                     	;# 
  1833  041F                     	;# 
  1834  048C                     	;# 
  1835  048C                     	;# 
  1836  048D                     	;# 
  1837  048E                     	;# 
  1838  048F                     	;# 
  1839  048F                     	;# 
  1840  0490                     	;# 
  1841  0491                     	;# 
  1842  0492                     	;# 
  1843  0492                     	;# 
  1844  0493                     	;# 
  1845  0494                     	;# 
  1846  0495                     	;# 
  1847  0495                     	;# 
  1848  0496                     	;# 
  1849  0497                     	;# 
  1850  0498                     	;# 
  1851  0499                     	;# 
  1852  049A                     	;# 
  1853  049B                     	;# 
  1854  049C                     	;# 
  1855  049D                     	;# 
  1856  050C                     	;# 
  1857  050C                     	;# 
  1858  050D                     	;# 
  1859  050E                     	;# 
  1860  050F                     	;# 
  1861  050F                     	;# 
  1862  0510                     	;# 
  1863  0511                     	;# 
  1864  0512                     	;# 
  1865  0512                     	;# 
  1866  0513                     	;# 
  1867  0514                     	;# 
  1868  0515                     	;# 
  1869  0515                     	;# 
  1870  0516                     	;# 
  1871  0517                     	;# 
  1872  0518                     	;# 
  1873  0519                     	;# 
  1874  051A                     	;# 
  1875  051B                     	;# 
  1876  051C                     	;# 
  1877  051D                     	;# 
  1878  058C                     	;# 
  1879  058C                     	;# 
  1880  058D                     	;# 
  1881  058E                     	;# 
  1882  058F                     	;# 
  1883  058F                     	;# 
  1884  0590                     	;# 
  1885  0591                     	;# 
  1886  0592                     	;# 
  1887  0593                     	;# 
  1888  060C                     	;# 
  1889  060D                     	;# 
  1890  060E                     	;# 
  1891  060F                     	;# 
  1892  0610                     	;# 
  1893  0611                     	;# 
  1894  0612                     	;# 
  1895  0613                     	;# 
  1896  0614                     	;# 
  1897  0616                     	;# 
  1898  0617                     	;# 
  1899  0618                     	;# 
  1900  0619                     	;# 
  1901  061A                     	;# 
  1902  061B                     	;# 
  1903  061C                     	;# 
  1904  061D                     	;# 
  1905  061E                     	;# 
  1906  068C                     	;# 
  1907  068D                     	;# 
  1908  068E                     	;# 
  1909  068F                     	;# 
  1910  0690                     	;# 
  1911  0691                     	;# 
  1912  0692                     	;# 
  1913  0693                     	;# 
  1914  0694                     	;# 
  1915  070C                     	;# 
  1916  070D                     	;# 
  1917  070E                     	;# 
  1918  070F                     	;# 
  1919  0710                     	;# 
  1920  0711                     	;# 
  1921  0712                     	;# 
  1922  0713                     	;# 
  1923  0714                     	;# 
  1924  0716                     	;# 
  1925  0717                     	;# 
  1926  0718                     	;# 
  1927  0719                     	;# 
  1928  071A                     	;# 
  1929  071B                     	;# 
  1930  071C                     	;# 
  1931  071D                     	;# 
  1932  071E                     	;# 
  1933  0796                     	;# 
  1934  0797                     	;# 
  1935  0798                     	;# 
  1936  0799                     	;# 
  1937  079A                     	;# 
  1938  079B                     	;# 
  1939  080C                     	;# 
  1940  080D                     	;# 
  1941  080E                     	;# 
  1942  080F                     	;# 
  1943  0810                     	;# 
  1944  0811                     	;# 
  1945  0812                     	;# 
  1946  0813                     	;# 
  1947  0814                     	;# 
  1948  081A                     	;# 
  1949  081B                     	;# 
  1950  081C                     	;# 
  1951  081D                     	;# 
  1952  081E                     	;# 
  1953  081F                     	;# 
  1954  088C                     	;# 
  1955  088D                     	;# 
  1956  088E                     	;# 
  1957  088F                     	;# 
  1958  0890                     	;# 
  1959  0891                     	;# 
  1960  0892                     	;# 
  1961  0893                     	;# 
  1962  0895                     	;# 
  1963  0896                     	;# 
  1964  0897                     	;# 
  1965  0898                     	;# 
  1966  0899                     	;# 
  1967  089A                     	;# 
  1968  089B                     	;# 
  1969  090C                     	;# 
  1970  090E                     	;# 
  1971  090F                     	;# 
  1972  091F                     	;# 
  1973  091F                     	;# 
  1974  098F                     	;# 
  1975  098F                     	;# 
  1976  0990                     	;# 
  1977  0991                     	;# 
  1978  0992                     	;# 
  1979  0993                     	;# 
  1980  0994                     	;# 
  1981  0995                     	;# 
  1982  0996                     	;# 
  1983  0997                     	;# 
  1984  0E0F                     	;# 
  1985  0E10                     	;# 
  1986  0E11                     	;# 
  1987  0E12                     	;# 
  1988  0E13                     	;# 
  1989  0E14                     	;# 
  1990  0E15                     	;# 
  1991  0E16                     	;# 
  1992  0E17                     	;# 
  1993  0E18                     	;# 
  1994  0E19                     	;# 
  1995  0E1A                     	;# 
  1996  0E1B                     	;# 
  1997  0E1C                     	;# 
  1998  0E1D                     	;# 
  1999  0E1E                     	;# 
  2000  0E1F                     	;# 
  2001  0E20                     	;# 
  2002  0E21                     	;# 
  2003  0E22                     	;# 
  2004  0E23                     	;# 
  2005  0E24                     	;# 
  2006  0E25                     	;# 
  2007  0E26                     	;# 
  2008  0E27                     	;# 
  2009  0E28                     	;# 
  2010  0E29                     	;# 
  2011  0E2A                     	;# 
  2012  0E2B                     	;# 
  2013  0E2C                     	;# 
  2014  0E2D                     	;# 
  2015  0E2E                     	;# 
  2016  0E2F                     	;# 
  2017  0E30                     	;# 
  2018  0E31                     	;# 
  2019  0E32                     	;# 
  2020  0E33                     	;# 
  2021  0E34                     	;# 
  2022  0E35                     	;# 
  2023  0E36                     	;# 
  2024  0E37                     	;# 
  2025  0E8F                     	;# 
  2026  0E90                     	;# 
  2027  0E91                     	;# 
  2028  0E92                     	;# 
  2029  0E93                     	;# 
  2030  0E94                     	;# 
  2031  0E95                     	;# 
  2032  0E96                     	;# 
  2033  0E97                     	;# 
  2034  0E9C                     	;# 
  2035  0E9D                     	;# 
  2036  0E9E                     	;# 
  2037  0EA1                     	;# 
  2038  0EA2                     	;# 
  2039  0EA3                     	;# 
  2040  0EA4                     	;# 
  2041  0EA5                     	;# 
  2042  0EA9                     	;# 
  2043  0EAA                     	;# 
  2044  0EAB                     	;# 
  2045  0EAC                     	;# 
  2046  0EB1                     	;# 
  2047  0EB2                     	;# 
  2048  0EB3                     	;# 
  2049  0EB8                     	;# 
  2050  0EB9                     	;# 
  2051  0EBA                     	;# 
  2052  0EBB                     	;# 
  2053  0EBC                     	;# 
  2054  0EBD                     	;# 
  2055  0EBE                     	;# 
  2056  0EC3                     	;# 
  2057  0EC5                     	;# 
  2058  0EC6                     	;# 
  2059  0EC7                     	;# 
  2060  0EC8                     	;# 
  2061  0EC9                     	;# 
  2062  0ECA                     	;# 
  2063  0ECB                     	;# 
  2064  0ECC                     	;# 
  2065  0F10                     	;# 
  2066  0F11                     	;# 
  2067  0F12                     	;# 
  2068  0F13                     	;# 
  2069  0F14                     	;# 
  2070  0F15                     	;# 
  2071  0F16                     	;# 
  2072  0F17                     	;# 
  2073  0F18                     	;# 
  2074  0F19                     	;# 
  2075  0F1A                     	;# 
  2076  0F1B                     	;# 
  2077  0F1C                     	;# 
  2078  0F1D                     	;# 
  2079  0F1E                     	;# 
  2080  0F1F                     	;# 
  2081  0F20                     	;# 
  2082  0F21                     	;# 
  2083  0F22                     	;# 
  2084  0F23                     	;# 
  2085  0F24                     	;# 
  2086  0F25                     	;# 
  2087  0F26                     	;# 
  2088  0F27                     	;# 
  2089  0F38                     	;# 
  2090  0F39                     	;# 
  2091  0F3A                     	;# 
  2092  0F3B                     	;# 
  2093  0F3C                     	;# 
  2094  0F3D                     	;# 
  2095  0F3E                     	;# 
  2096  0F3F                     	;# 
  2097  0F40                     	;# 
  2098  0F41                     	;# 
  2099  0F43                     	;# 
  2100  0F44                     	;# 
  2101  0F45                     	;# 
  2102  0F46                     	;# 
  2103  0F47                     	;# 
  2104  0F48                     	;# 
  2105  0F49                     	;# 
  2106  0F4A                     	;# 
  2107  0F4B                     	;# 
  2108  0F4C                     	;# 
  2109  0F4E                     	;# 
  2110  0F4F                     	;# 
  2111  0F50                     	;# 
  2112  0F51                     	;# 
  2113  0F52                     	;# 
  2114  0F53                     	;# 
  2115  0F54                     	;# 
  2116  0F55                     	;# 
  2117  0F56                     	;# 
  2118  0F57                     	;# 
  2119  0F65                     	;# 
  2120  0F68                     	;# 
  2121  0F69                     	;# 
  2122  0F6A                     	;# 
  2123  0F6B                     	;# 
  2124  0FE4                     	;# 
  2125  0FE5                     	;# 
  2126  0FE6                     	;# 
  2127  0FE7                     	;# 
  2128  0FE8                     	;# 
  2129  0FE9                     	;# 
  2130  0FEA                     	;# 
  2131  0FEB                     	;# 
  2132  0FED                     	;# 
  2133  0FEE                     	;# 
  2134  0FEF                     	;# 
  2135  0000                     	;# 
  2136  0001                     	;# 
  2137  0002                     	;# 
  2138  0003                     	;# 
  2139  0004                     	;# 
  2140  0005                     	;# 
  2141  0006                     	;# 
  2142  0007                     	;# 
  2143  0008                     	;# 
  2144  0009                     	;# 
  2145  000A                     	;# 
  2146  000B                     	;# 
  2147  000C                     	;# 
  2148  000D                     	;# 
  2149  000E                     	;# 
  2150  0010                     	;# 
  2151  0011                     	;# 
  2152  0012                     	;# 
  2153  0013                     	;# 
  2154  0016                     	;# 
  2155  0017                     	;# 
  2156  0018                     	;# 
  2157  001C                     	;# 
  2158  001C                     	;# 
  2159  001D                     	;# 
  2160  001D                     	;# 
  2161  001E                     	;# 
  2162  001F                     	;# 
  2163  008C                     	;# 
  2164  008C                     	;# 
  2165  008D                     	;# 
  2166  008E                     	;# 
  2167  008E                     	;# 
  2168  008F                     	;# 
  2169  0090                     	;# 
  2170  0090                     	;# 
  2171  0091                     	;# 
  2172  0093                     	;# 
  2173  0094                     	;# 
  2174  0095                     	;# 
  2175  0096                     	;# 
  2176  0097                     	;# 
  2177  0098                     	;# 
  2178  0099                     	;# 
  2179  009A                     	;# 
  2180  009B                     	;# 
  2181  009C                     	;# 
  2182  009D                     	;# 
  2183  009E                     	;# 
  2184  010C                     	;# 
  2185  010D                     	;# 
  2186  010E                     	;# 
  2187  010E                     	;# 
  2188  010F                     	;# 
  2189  0110                     	;# 
  2190  0110                     	;# 
  2191  0111                     	;# 
  2192  0112                     	;# 
  2193  0112                     	;# 
  2194  0113                     	;# 
  2195  0114                     	;# 
  2196  0114                     	;# 
  2197  0115                     	;# 
  2198  0116                     	;# 
  2199  0116                     	;# 
  2200  0117                     	;# 
  2201  0119                     	;# 
  2202  0119                     	;# 
  2203  0119                     	;# 
  2204  011A                     	;# 
  2205  011A                     	;# 
  2206  011A                     	;# 
  2207  011B                     	;# 
  2208  011B                     	;# 
  2209  011B                     	;# 
  2210  011B                     	;# 
  2211  011B                     	;# 
  2212  011C                     	;# 
  2213  011C                     	;# 
  2214  011C                     	;# 
  2215  011D                     	;# 
  2216  011D                     	;# 
  2217  011D                     	;# 
  2218  011E                     	;# 
  2219  011E                     	;# 
  2220  011E                     	;# 
  2221  011F                     	;# 
  2222  011F                     	;# 
  2223  011F                     	;# 
  2224  011F                     	;# 
  2225  011F                     	;# 
  2226  018C                     	;# 
  2227  018D                     	;# 
  2228  018E                     	;# 
  2229  018F                     	;# 
  2230  0190                     	;# 
  2231  0191                     	;# 
  2232  0192                     	;# 
  2233  0196                     	;# 
  2234  0197                     	;# 
  2235  0198                     	;# 
  2236  0199                     	;# 
  2237  019A                     	;# 
  2238  019B                     	;# 
  2239  019C                     	;# 
  2240  020C                     	;# 
  2241  020C                     	;# 
  2242  020D                     	;# 
  2243  020E                     	;# 
  2244  020F                     	;# 
  2245  020F                     	;# 
  2246  0210                     	;# 
  2247  0210                     	;# 
  2248  0211                     	;# 
  2249  0211                     	;# 
  2250  0212                     	;# 
  2251  0212                     	;# 
  2252  0213                     	;# 
  2253  0214                     	;# 
  2254  0215                     	;# 
  2255  0215                     	;# 
  2256  0216                     	;# 
  2257  0216                     	;# 
  2258  0217                     	;# 
  2259  0217                     	;# 
  2260  0218                     	;# 
  2261  0218                     	;# 
  2262  0219                     	;# 
  2263  021A                     	;# 
  2264  021B                     	;# 
  2265  021B                     	;# 
  2266  021C                     	;# 
  2267  021C                     	;# 
  2268  021D                     	;# 
  2269  021D                     	;# 
  2270  021E                     	;# 
  2271  021F                     	;# 
  2272  028C                     	;# 
  2273  028C                     	;# 
  2274  028D                     	;# 
  2275  028D                     	;# 
  2276  028E                     	;# 
  2277  028F                     	;# 
  2278  0290                     	;# 
  2279  0290                     	;# 
  2280  0291                     	;# 
  2281  0292                     	;# 
  2282  0292                     	;# 
  2283  0293                     	;# 
  2284  0293                     	;# 
  2285  0294                     	;# 
  2286  0295                     	;# 
  2287  0296                     	;# 
  2288  0296                     	;# 
  2289  0297                     	;# 
  2290  0298                     	;# 
  2291  0298                     	;# 
  2292  0299                     	;# 
  2293  0299                     	;# 
  2294  029A                     	;# 
  2295  029B                     	;# 
  2296  029C                     	;# 
  2297  029C                     	;# 
  2298  029D                     	;# 
  2299  030C                     	;# 
  2300  030C                     	;# 
  2301  030D                     	;# 
  2302  030E                     	;# 
  2303  030F                     	;# 
  2304  0310                     	;# 
  2305  0310                     	;# 
  2306  0311                     	;# 
  2307  0312                     	;# 
  2308  0313                     	;# 
  2309  0314                     	;# 
  2310  0314                     	;# 
  2311  0315                     	;# 
  2312  0316                     	;# 
  2313  0317                     	;# 
  2314  0318                     	;# 
  2315  0318                     	;# 
  2316  0319                     	;# 
  2317  031A                     	;# 
  2318  031B                     	;# 
  2319  031C                     	;# 
  2320  031C                     	;# 
  2321  031D                     	;# 
  2322  031E                     	;# 
  2323  031F                     	;# 
  2324  038C                     	;# 
  2325  038D                     	;# 
  2326  038E                     	;# 
  2327  0390                     	;# 
  2328  0391                     	;# 
  2329  0392                     	;# 
  2330  040C                     	;# 
  2331  040D                     	;# 
  2332  040E                     	;# 
  2333  040F                     	;# 
  2334  0410                     	;# 
  2335  0411                     	;# 
  2336  0416                     	;# 
  2337  0416                     	;# 
  2338  0417                     	;# 
  2339  0418                     	;# 
  2340  0418                     	;# 
  2341  0419                     	;# 
  2342  041A                     	;# 
  2343  041A                     	;# 
  2344  041B                     	;# 
  2345  041C                     	;# 
  2346  041C                     	;# 
  2347  041D                     	;# 
  2348  041E                     	;# 
  2349  041F                     	;# 
  2350  048C                     	;# 
  2351  048C                     	;# 
  2352  048D                     	;# 
  2353  048E                     	;# 
  2354  048F                     	;# 
  2355  048F                     	;# 
  2356  0490                     	;# 
  2357  0491                     	;# 
  2358  0492                     	;# 
  2359  0492                     	;# 
  2360  0493                     	;# 
  2361  0494                     	;# 
  2362  0495                     	;# 
  2363  0495                     	;# 
  2364  0496                     	;# 
  2365  0497                     	;# 
  2366  0498                     	;# 
  2367  0499                     	;# 
  2368  049A                     	;# 
  2369  049B                     	;# 
  2370  049C                     	;# 
  2371  049D                     	;# 
  2372  050C                     	;# 
  2373  050C                     	;# 
  2374  050D                     	;# 
  2375  050E                     	;# 
  2376  050F                     	;# 
  2377  050F                     	;# 
  2378  0510                     	;# 
  2379  0511                     	;# 
  2380  0512                     	;# 
  2381  0512                     	;# 
  2382  0513                     	;# 
  2383  0514                     	;# 
  2384  0515                     	;# 
  2385  0515                     	;# 
  2386  0516                     	;# 
  2387  0517                     	;# 
  2388  0518                     	;# 
  2389  0519                     	;# 
  2390  051A                     	;# 
  2391  051B                     	;# 
  2392  051C                     	;# 
  2393  051D                     	;# 
  2394  058C                     	;# 
  2395  058C                     	;# 
  2396  058D                     	;# 
  2397  058E                     	;# 
  2398  058F                     	;# 
  2399  058F                     	;# 
  2400  0590                     	;# 
  2401  0591                     	;# 
  2402  0592                     	;# 
  2403  0593                     	;# 
  2404  060C                     	;# 
  2405  060D                     	;# 
  2406  060E                     	;# 
  2407  060F                     	;# 
  2408  0610                     	;# 
  2409  0611                     	;# 
  2410  0612                     	;# 
  2411  0613                     	;# 
  2412  0614                     	;# 
  2413  0616                     	;# 
  2414  0617                     	;# 
  2415  0618                     	;# 
  2416  0619                     	;# 
  2417  061A                     	;# 
  2418  061B                     	;# 
  2419  061C                     	;# 
  2420  061D                     	;# 
  2421  061E                     	;# 
  2422  068C                     	;# 
  2423  068D                     	;# 
  2424  068E                     	;# 
  2425  068F                     	;# 
  2426  0690                     	;# 
  2427  0691                     	;# 
  2428  0692                     	;# 
  2429  0693                     	;# 
  2430  0694                     	;# 
  2431  070C                     	;# 
  2432  070D                     	;# 
  2433  070E                     	;# 
  2434  070F                     	;# 
  2435  0710                     	;# 
  2436  0711                     	;# 
  2437  0712                     	;# 
  2438  0713                     	;# 
  2439  0714                     	;# 
  2440  0716                     	;# 
  2441  0717                     	;# 
  2442  0718                     	;# 
  2443  0719                     	;# 
  2444  071A                     	;# 
  2445  071B                     	;# 
  2446  071C                     	;# 
  2447  071D                     	;# 
  2448  071E                     	;# 
  2449  0796                     	;# 
  2450  0797                     	;# 
  2451  0798                     	;# 
  2452  0799                     	;# 
  2453  079A                     	;# 
  2454  079B                     	;# 
  2455  080C                     	;# 
  2456  080D                     	;# 
  2457  080E                     	;# 
  2458  080F                     	;# 
  2459  0810                     	;# 
  2460  0811                     	;# 
  2461  0812                     	;# 
  2462  0813                     	;# 
  2463  0814                     	;# 
  2464  081A                     	;# 
  2465  081B                     	;# 
  2466  081C                     	;# 
  2467  081D                     	;# 
  2468  081E                     	;# 
  2469  081F                     	;# 
  2470  088C                     	;# 
  2471  088D                     	;# 
  2472  088E                     	;# 
  2473  088F                     	;# 
  2474  0890                     	;# 
  2475  0891                     	;# 
  2476  0892                     	;# 
  2477  0893                     	;# 
  2478  0895                     	;# 
  2479  0896                     	;# 
  2480  0897                     	;# 
  2481  0898                     	;# 
  2482  0899                     	;# 
  2483  089A                     	;# 
  2484  089B                     	;# 
  2485  090C                     	;# 
  2486  090E                     	;# 
  2487  090F                     	;# 
  2488  091F                     	;# 
  2489  091F                     	;# 
  2490  098F                     	;# 
  2491  098F                     	;# 
  2492  0990                     	;# 
  2493  0991                     	;# 
  2494  0992                     	;# 
  2495  0993                     	;# 
  2496  0994                     	;# 
  2497  0995                     	;# 
  2498  0996                     	;# 
  2499  0997                     	;# 
  2500  0E0F                     	;# 
  2501  0E10                     	;# 
  2502  0E11                     	;# 
  2503  0E12                     	;# 
  2504  0E13                     	;# 
  2505  0E14                     	;# 
  2506  0E15                     	;# 
  2507  0E16                     	;# 
  2508  0E17                     	;# 
  2509  0E18                     	;# 
  2510  0E19                     	;# 
  2511  0E1A                     	;# 
  2512  0E1B                     	;# 
  2513  0E1C                     	;# 
  2514  0E1D                     	;# 
  2515  0E1E                     	;# 
  2516  0E1F                     	;# 
  2517  0E20                     	;# 
  2518  0E21                     	;# 
  2519  0E22                     	;# 
  2520  0E23                     	;# 
  2521  0E24                     	;# 
  2522  0E25                     	;# 
  2523  0E26                     	;# 
  2524  0E27                     	;# 
  2525  0E28                     	;# 
  2526  0E29                     	;# 
  2527  0E2A                     	;# 
  2528  0E2B                     	;# 
  2529  0E2C                     	;# 
  2530  0E2D                     	;# 
  2531  0E2E                     	;# 
  2532  0E2F                     	;# 
  2533  0E30                     	;# 
  2534  0E31                     	;# 
  2535  0E32                     	;# 
  2536  0E33                     	;# 
  2537  0E34                     	;# 
  2538  0E35                     	;# 
  2539  0E36                     	;# 
  2540  0E37                     	;# 
  2541  0E8F                     	;# 
  2542  0E90                     	;# 
  2543  0E91                     	;# 
  2544  0E92                     	;# 
  2545  0E93                     	;# 
  2546  0E94                     	;# 
  2547  0E95                     	;# 
  2548  0E96                     	;# 
  2549  0E97                     	;# 
  2550  0E9C                     	;# 
  2551  0E9D                     	;# 
  2552  0E9E                     	;# 
  2553  0EA1                     	;# 
  2554  0EA2                     	;# 
  2555  0EA3                     	;# 
  2556  0EA4                     	;# 
  2557  0EA5                     	;# 
  2558  0EA9                     	;# 
  2559  0EAA                     	;# 
  2560  0EAB                     	;# 
  2561  0EAC                     	;# 
  2562  0EB1                     	;# 
  2563  0EB2                     	;# 
  2564  0EB3                     	;# 
  2565  0EB8                     	;# 
  2566  0EB9                     	;# 
  2567  0EBA                     	;# 
  2568  0EBB                     	;# 
  2569  0EBC                     	;# 
  2570  0EBD                     	;# 
  2571  0EBE                     	;# 
  2572  0EC3                     	;# 
  2573  0EC5                     	;# 
  2574  0EC6                     	;# 
  2575  0EC7                     	;# 
  2576  0EC8                     	;# 
  2577  0EC9                     	;# 
  2578  0ECA                     	;# 
  2579  0ECB                     	;# 
  2580  0ECC                     	;# 
  2581  0F10                     	;# 
  2582  0F11                     	;# 
  2583  0F12                     	;# 
  2584  0F13                     	;# 
  2585  0F14                     	;# 
  2586  0F15                     	;# 
  2587  0F16                     	;# 
  2588  0F17                     	;# 
  2589  0F18                     	;# 
  2590  0F19                     	;# 
  2591  0F1A                     	;# 
  2592  0F1B                     	;# 
  2593  0F1C                     	;# 
  2594  0F1D                     	;# 
  2595  0F1E                     	;# 
  2596  0F1F                     	;# 
  2597  0F20                     	;# 
  2598  0F21                     	;# 
  2599  0F22                     	;# 
  2600  0F23                     	;# 
  2601  0F24                     	;# 
  2602  0F25                     	;# 
  2603  0F26                     	;# 
  2604  0F27                     	;# 
  2605  0F38                     	;# 
  2606  0F39                     	;# 
  2607  0F3A                     	;# 
  2608  0F3B                     	;# 
  2609  0F3C                     	;# 
  2610  0F3D                     	;# 
  2611  0F3E                     	;# 
  2612  0F3F                     	;# 
  2613  0F40                     	;# 
  2614  0F41                     	;# 
  2615  0F43                     	;# 
  2616  0F44                     	;# 
  2617  0F45                     	;# 
  2618  0F46                     	;# 
  2619  0F47                     	;# 
  2620  0F48                     	;# 
  2621  0F49                     	;# 
  2622  0F4A                     	;# 
  2623  0F4B                     	;# 
  2624  0F4C                     	;# 
  2625  0F4E                     	;# 
  2626  0F4F                     	;# 
  2627  0F50                     	;# 
  2628  0F51                     	;# 
  2629  0F52                     	;# 
  2630  0F53                     	;# 
  2631  0F54                     	;# 
  2632  0F55                     	;# 
  2633  0F56                     	;# 
  2634  0F57                     	;# 
  2635  0F65                     	;# 
  2636  0F68                     	;# 
  2637  0F69                     	;# 
  2638  0F6A                     	;# 
  2639  0F6B                     	;# 
  2640  0FE4                     	;# 
  2641  0FE5                     	;# 
  2642  0FE6                     	;# 
  2643  0FE7                     	;# 
  2644  0FE8                     	;# 
  2645  0FE9                     	;# 
  2646  0FEA                     	;# 
  2647  0FEB                     	;# 
  2648  0FED                     	;# 
  2649  0FEE                     	;# 
  2650  0FEF                     	;# 
  2651  0000                     	;# 
  2652  0001                     	;# 
  2653  0002                     	;# 
  2654  0003                     	;# 
  2655  0004                     	;# 
  2656  0005                     	;# 
  2657  0006                     	;# 
  2658  0007                     	;# 
  2659  0008                     	;# 
  2660  0009                     	;# 
  2661  000A                     	;# 
  2662  000B                     	;# 
  2663  000C                     	;# 
  2664  000D                     	;# 
  2665  000E                     	;# 
  2666  0010                     	;# 
  2667  0011                     	;# 
  2668  0012                     	;# 
  2669  0013                     	;# 
  2670  0016                     	;# 
  2671  0017                     	;# 
  2672  0018                     	;# 
  2673  001C                     	;# 
  2674  001C                     	;# 
  2675  001D                     	;# 
  2676  001D                     	;# 
  2677  001E                     	;# 
  2678  001F                     	;# 
  2679  008C                     	;# 
  2680  008C                     	;# 
  2681  008D                     	;# 
  2682  008E                     	;# 
  2683  008E                     	;# 
  2684  008F                     	;# 
  2685  0090                     	;# 
  2686  0090                     	;# 
  2687  0091                     	;# 
  2688  0093                     	;# 
  2689  0094                     	;# 
  2690  0095                     	;# 
  2691  0096                     	;# 
  2692  0097                     	;# 
  2693  0098                     	;# 
  2694  0099                     	;# 
  2695  009A                     	;# 
  2696  009B                     	;# 
  2697  009C                     	;# 
  2698  009D                     	;# 
  2699  009E                     	;# 
  2700  010C                     	;# 
  2701  010D                     	;# 
  2702  010E                     	;# 
  2703  010E                     	;# 
  2704  010F                     	;# 
  2705  0110                     	;# 
  2706  0110                     	;# 
  2707  0111                     	;# 
  2708  0112                     	;# 
  2709  0112                     	;# 
  2710  0113                     	;# 
  2711  0114                     	;# 
  2712  0114                     	;# 
  2713  0115                     	;# 
  2714  0116                     	;# 
  2715  0116                     	;# 
  2716  0117                     	;# 
  2717  0119                     	;# 
  2718  0119                     	;# 
  2719  0119                     	;# 
  2720  011A                     	;# 
  2721  011A                     	;# 
  2722  011A                     	;# 
  2723  011B                     	;# 
  2724  011B                     	;# 
  2725  011B                     	;# 
  2726  011B                     	;# 
  2727  011B                     	;# 
  2728  011C                     	;# 
  2729  011C                     	;# 
  2730  011C                     	;# 
  2731  011D                     	;# 
  2732  011D                     	;# 
  2733  011D                     	;# 
  2734  011E                     	;# 
  2735  011E                     	;# 
  2736  011E                     	;# 
  2737  011F                     	;# 
  2738  011F                     	;# 
  2739  011F                     	;# 
  2740  011F                     	;# 
  2741  011F                     	;# 
  2742  018C                     	;# 
  2743  018D                     	;# 
  2744  018E                     	;# 
  2745  018F                     	;# 
  2746  0190                     	;# 
  2747  0191                     	;# 
  2748  0192                     	;# 
  2749  0196                     	;# 
  2750  0197                     	;# 
  2751  0198                     	;# 
  2752  0199                     	;# 
  2753  019A                     	;# 
  2754  019B                     	;# 
  2755  019C                     	;# 
  2756  020C                     	;# 
  2757  020C                     	;# 
  2758  020D                     	;# 
  2759  020E                     	;# 
  2760  020F                     	;# 
  2761  020F                     	;# 
  2762  0210                     	;# 
  2763  0210                     	;# 
  2764  0211                     	;# 
  2765  0211                     	;# 
  2766  0212                     	;# 
  2767  0212                     	;# 
  2768  0213                     	;# 
  2769  0214                     	;# 
  2770  0215                     	;# 
  2771  0215                     	;# 
  2772  0216                     	;# 
  2773  0216                     	;# 
  2774  0217                     	;# 
  2775  0217                     	;# 
  2776  0218                     	;# 
  2777  0218                     	;# 
  2778  0219                     	;# 
  2779  021A                     	;# 
  2780  021B                     	;# 
  2781  021B                     	;# 
  2782  021C                     	;# 
  2783  021C                     	;# 
  2784  021D                     	;# 
  2785  021D                     	;# 
  2786  021E                     	;# 
  2787  021F                     	;# 
  2788  028C                     	;# 
  2789  028C                     	;# 
  2790  028D                     	;# 
  2791  028D                     	;# 
  2792  028E                     	;# 
  2793  028F                     	;# 
  2794  0290                     	;# 
  2795  0290                     	;# 
  2796  0291                     	;# 
  2797  0292                     	;# 
  2798  0292                     	;# 
  2799  0293                     	;# 
  2800  0293                     	;# 
  2801  0294                     	;# 
  2802  0295                     	;# 
  2803  0296                     	;# 
  2804  0296                     	;# 
  2805  0297                     	;# 
  2806  0298                     	;# 
  2807  0298                     	;# 
  2808  0299                     	;# 
  2809  0299                     	;# 
  2810  029A                     	;# 
  2811  029B                     	;# 
  2812  029C                     	;# 
  2813  029C                     	;# 
  2814  029D                     	;# 
  2815  030C                     	;# 
  2816  030C                     	;# 
  2817  030D                     	;# 
  2818  030E                     	;# 
  2819  030F                     	;# 
  2820  0310                     	;# 
  2821  0310                     	;# 
  2822  0311                     	;# 
  2823  0312                     	;# 
  2824  0313                     	;# 
  2825  0314                     	;# 
  2826  0314                     	;# 
  2827  0315                     	;# 
  2828  0316                     	;# 
  2829  0317                     	;# 
  2830  0318                     	;# 
  2831  0318                     	;# 
  2832  0319                     	;# 
  2833  031A                     	;# 
  2834  031B                     	;# 
  2835  031C                     	;# 
  2836  031C                     	;# 
  2837  031D                     	;# 
  2838  031E                     	;# 
  2839  031F                     	;# 
  2840  038C                     	;# 
  2841  038D                     	;# 
  2842  038E                     	;# 
  2843  0390                     	;# 
  2844  0391                     	;# 
  2845  0392                     	;# 
  2846  040C                     	;# 
  2847  040D                     	;# 
  2848  040E                     	;# 
  2849  040F                     	;# 
  2850  0410                     	;# 
  2851  0411                     	;# 
  2852  0416                     	;# 
  2853  0416                     	;# 
  2854  0417                     	;# 
  2855  0418                     	;# 
  2856  0418                     	;# 
  2857  0419                     	;# 
  2858  041A                     	;# 
  2859  041A                     	;# 
  2860  041B                     	;# 
  2861  041C                     	;# 
  2862  041C                     	;# 
  2863  041D                     	;# 
  2864  041E                     	;# 
  2865  041F                     	;# 
  2866  048C                     	;# 
  2867  048C                     	;# 
  2868  048D                     	;# 
  2869  048E                     	;# 
  2870  048F                     	;# 
  2871  048F                     	;# 
  2872  0490                     	;# 
  2873  0491                     	;# 
  2874  0492                     	;# 
  2875  0492                     	;# 
  2876  0493                     	;# 
  2877  0494                     	;# 
  2878  0495                     	;# 
  2879  0495                     	;# 
  2880  0496                     	;# 
  2881  0497                     	;# 
  2882  0498                     	;# 
  2883  0499                     	;# 
  2884  049A                     	;# 
  2885  049B                     	;# 
  2886  049C                     	;# 
  2887  049D                     	;# 
  2888  050C                     	;# 
  2889  050C                     	;# 
  2890  050D                     	;# 
  2891  050E                     	;# 
  2892  050F                     	;# 
  2893  050F                     	;# 
  2894  0510                     	;# 
  2895  0511                     	;# 
  2896  0512                     	;# 
  2897  0512                     	;# 
  2898  0513                     	;# 
  2899  0514                     	;# 
  2900  0515                     	;# 
  2901  0515                     	;# 
  2902  0516                     	;# 
  2903  0517                     	;# 
  2904  0518                     	;# 
  2905  0519                     	;# 
  2906  051A                     	;# 
  2907  051B                     	;# 
  2908  051C                     	;# 
  2909  051D                     	;# 
  2910  058C                     	;# 
  2911  058C                     	;# 
  2912  058D                     	;# 
  2913  058E                     	;# 
  2914  058F                     	;# 
  2915  058F                     	;# 
  2916  0590                     	;# 
  2917  0591                     	;# 
  2918  0592                     	;# 
  2919  0593                     	;# 
  2920  060C                     	;# 
  2921  060D                     	;# 
  2922  060E                     	;# 
  2923  060F                     	;# 
  2924  0610                     	;# 
  2925  0611                     	;# 
  2926  0612                     	;# 
  2927  0613                     	;# 
  2928  0614                     	;# 
  2929  0616                     	;# 
  2930  0617                     	;# 
  2931  0618                     	;# 
  2932  0619                     	;# 
  2933  061A                     	;# 
  2934  061B                     	;# 
  2935  061C                     	;# 
  2936  061D                     	;# 
  2937  061E                     	;# 
  2938  068C                     	;# 
  2939  068D                     	;# 
  2940  068E                     	;# 
  2941  068F                     	;# 
  2942  0690                     	;# 
  2943  0691                     	;# 
  2944  0692                     	;# 
  2945  0693                     	;# 
  2946  0694                     	;# 
  2947  070C                     	;# 
  2948  070D                     	;# 
  2949  070E                     	;# 
  2950  070F                     	;# 
  2951  0710                     	;# 
  2952  0711                     	;# 
  2953  0712                     	;# 
  2954  0713                     	;# 
  2955  0714                     	;# 
  2956  0716                     	;# 
  2957  0717                     	;# 
  2958  0718                     	;# 
  2959  0719                     	;# 
  2960  071A                     	;# 
  2961  071B                     	;# 
  2962  071C                     	;# 
  2963  071D                     	;# 
  2964  071E                     	;# 
  2965  0796                     	;# 
  2966  0797                     	;# 
  2967  0798                     	;# 
  2968  0799                     	;# 
  2969  079A                     	;# 
  2970  079B                     	;# 
  2971  080C                     	;# 
  2972  080D                     	;# 
  2973  080E                     	;# 
  2974  080F                     	;# 
  2975  0810                     	;# 
  2976  0811                     	;# 
  2977  0812                     	;# 
  2978  0813                     	;# 
  2979  0814                     	;# 
  2980  081A                     	;# 
  2981  081B                     	;# 
  2982  081C                     	;# 
  2983  081D                     	;# 
  2984  081E                     	;# 
  2985  081F                     	;# 
  2986  088C                     	;# 
  2987  088D                     	;# 
  2988  088E                     	;# 
  2989  088F                     	;# 
  2990  0890                     	;# 
  2991  0891                     	;# 
  2992  0892                     	;# 
  2993  0893                     	;# 
  2994  0895                     	;# 
  2995  0896                     	;# 
  2996  0897                     	;# 
  2997  0898                     	;# 
  2998  0899                     	;# 
  2999  089A                     	;# 
  3000  089B                     	;# 
  3001  090C                     	;# 
  3002  090E                     	;# 
  3003  090F                     	;# 
  3004  091F                     	;# 
  3005  091F                     	;# 
  3006  098F                     	;# 
  3007  098F                     	;# 
  3008  0990                     	;# 
  3009  0991                     	;# 
  3010  0992                     	;# 
  3011  0993                     	;# 
  3012  0994                     	;# 
  3013  0995                     	;# 
  3014  0996                     	;# 
  3015  0997                     	;# 
  3016  0E0F                     	;# 
  3017  0E10                     	;# 
  3018  0E11                     	;# 
  3019  0E12                     	;# 
  3020  0E13                     	;# 
  3021  0E14                     	;# 
  3022  0E15                     	;# 
  3023  0E16                     	;# 
  3024  0E17                     	;# 
  3025  0E18                     	;# 
  3026  0E19                     	;# 
  3027  0E1A                     	;# 
  3028  0E1B                     	;# 
  3029  0E1C                     	;# 
  3030  0E1D                     	;# 
  3031  0E1E                     	;# 
  3032  0E1F                     	;# 
  3033  0E20                     	;# 
  3034  0E21                     	;# 
  3035  0E22                     	;# 
  3036  0E23                     	;# 
  3037  0E24                     	;# 
  3038  0E25                     	;# 
  3039  0E26                     	;# 
  3040  0E27                     	;# 
  3041  0E28                     	;# 
  3042  0E29                     	;# 
  3043  0E2A                     	;# 
  3044  0E2B                     	;# 
  3045  0E2C                     	;# 
  3046  0E2D                     	;# 
  3047  0E2E                     	;# 
  3048  0E2F                     	;# 
  3049  0E30                     	;# 
  3050  0E31                     	;# 
  3051  0E32                     	;# 
  3052  0E33                     	;# 
  3053  0E34                     	;# 
  3054  0E35                     	;# 
  3055  0E36                     	;# 
  3056  0E37                     	;# 
  3057  0E8F                     	;# 
  3058  0E90                     	;# 
  3059  0E91                     	;# 
  3060  0E92                     	;# 
  3061  0E93                     	;# 
  3062  0E94                     	;# 
  3063  0E95                     	;# 
  3064  0E96                     	;# 
  3065  0E97                     	;# 
  3066  0E9C                     	;# 
  3067  0E9D                     	;# 
  3068  0E9E                     	;# 
  3069  0EA1                     	;# 
  3070  0EA2                     	;# 
  3071  0EA3                     	;# 
  3072  0EA4                     	;# 
  3073  0EA5                     	;# 
  3074  0EA9                     	;# 
  3075  0EAA                     	;# 
  3076  0EAB                     	;# 
  3077  0EAC                     	;# 
  3078  0EB1                     	;# 
  3079  0EB2                     	;# 
  3080  0EB3                     	;# 
  3081  0EB8                     	;# 
  3082  0EB9                     	;# 
  3083  0EBA                     	;# 
  3084  0EBB                     	;# 
  3085  0EBC                     	;# 
  3086  0EBD                     	;# 
  3087  0EBE                     	;# 
  3088  0EC3                     	;# 
  3089  0EC5                     	;# 
  3090  0EC6                     	;# 
  3091  0EC7                     	;# 
  3092  0EC8                     	;# 
  3093  0EC9                     	;# 
  3094  0ECA                     	;# 
  3095  0ECB                     	;# 
  3096  0ECC                     	;# 
  3097  0F10                     	;# 
  3098  0F11                     	;# 
  3099  0F12                     	;# 
  3100  0F13                     	;# 
  3101  0F14                     	;# 
  3102  0F15                     	;# 
  3103  0F16                     	;# 
  3104  0F17                     	;# 
  3105  0F18                     	;# 
  3106  0F19                     	;# 
  3107  0F1A                     	;# 
  3108  0F1B                     	;# 
  3109  0F1C                     	;# 
  3110  0F1D                     	;# 
  3111  0F1E                     	;# 
  3112  0F1F                     	;# 
  3113  0F20                     	;# 
  3114  0F21                     	;# 
  3115  0F22                     	;# 
  3116  0F23                     	;# 
  3117  0F24                     	;# 
  3118  0F25                     	;# 
  3119  0F26                     	;# 
  3120  0F27                     	;# 
  3121  0F38                     	;# 
  3122  0F39                     	;# 
  3123  0F3A                     	;# 
  3124  0F3B                     	;# 
  3125  0F3C                     	;# 
  3126  0F3D                     	;# 
  3127  0F3E                     	;# 
  3128  0F3F                     	;# 
  3129  0F40                     	;# 
  3130  0F41                     	;# 
  3131  0F43                     	;# 
  3132  0F44                     	;# 
  3133  0F45                     	;# 
  3134  0F46                     	;# 
  3135  0F47                     	;# 
  3136  0F48                     	;# 
  3137  0F49                     	;# 
  3138  0F4A                     	;# 
  3139  0F4B                     	;# 
  3140  0F4C                     	;# 
  3141  0F4E                     	;# 
  3142  0F4F                     	;# 
  3143  0F50                     	;# 
  3144  0F51                     	;# 
  3145  0F52                     	;# 
  3146  0F53                     	;# 
  3147  0F54                     	;# 
  3148  0F55                     	;# 
  3149  0F56                     	;# 
  3150  0F57                     	;# 
  3151  0F65                     	;# 
  3152  0F68                     	;# 
  3153  0F69                     	;# 
  3154  0F6A                     	;# 
  3155  0F6B                     	;# 
  3156  0FE4                     	;# 
  3157  0FE5                     	;# 
  3158  0FE6                     	;# 
  3159  0FE7                     	;# 
  3160  0FE8                     	;# 
  3161  0FE9                     	;# 
  3162  0FEA                     	;# 
  3163  0FEB                     	;# 
  3164  0FED                     	;# 
  3165  0FEE                     	;# 
  3166  0FEF                     	;# 
  3167                           
  3168                           	psect	stringtext
  3169  03DD                     __pstringtext:	
  3170  03DD                     _dpowers:	
  3171  03DD  3401               	retlw	1
  3172  03DE  3400               	retlw	0
  3173  03DF  340A               	retlw	10
  3174  03E0  3400               	retlw	0
  3175  03E1  3464               	retlw	100
  3176  03E2  3400               	retlw	0
  3177  03E3  34E8               	retlw	232
  3178  03E4  3403               	retlw	3
  3179  03E5  3410               	retlw	16
  3180  03E6  3427               	retlw	39
  3181  03E7                     __end_of_dpowers:	
  3182  03E7                     _hexpowers:	
  3183  03E7  3401               	retlw	1
  3184  03E8  3400               	retlw	0
  3185  03E9  3410               	retlw	16
  3186  03EA  3400               	retlw	0
  3187  03EB  3400               	retlw	0
  3188  03EC  3401               	retlw	1
  3189  03ED  3400               	retlw	0
  3190  03EE  3410               	retlw	16
  3191  03EF                     __end_of_hexpowers:	
  3192  000B                     _INTCONbits	set	11
  3193  0011                     _TRISA	set	17
  3194  0013                     _TRISC	set	19
  3195  0012                     _TRISB	set	18
  3196  0018                     _LATC	set	24
  3197  0016                     _LATA	set	22
  3198  0017                     _LATB	set	23
  3199  005F                     _GIE	set	95
  3200  011A                     _TX1REG	set	282
  3201  0119                     _RC1REG	set	281
  3202  011D                     _RC1STAbits	set	285
  3203  011C                     _SP1BRGH	set	284
  3204  011B                     _SP1BRGL	set	283
  3205  011E                     _TX1STA	set	286
  3206  011D                     _RC1STA	set	285
  3207  011F                     _BAUD1CON	set	287
  3208  0196                     _SSP2BUF	set	406
  3209  019B                     _SSP2CON2bits	set	411
  3210  019A                     _SSP2CON1bits	set	410
  3211  0197                     _SSP2ADD	set	407
  3212  019C                     _SSP2CON3	set	412
  3213  019A                     _SSP2CON1	set	410
  3214  0199                     _SSP2STAT	set	409
  3215  0719                     _PIE3bits	set	1817
  3216  070F                     _PIR3bits	set	1807
  3217  0892                     _OSCTUNE	set	2194
  3218  0893                     _OSCFRQ	set	2195
  3219  0891                     _OSCEN	set	2193
  3220  088F                     _OSCCON3	set	2191
  3221  088D                     _OSCCON1	set	2189
  3222  0EC8                     _SSP2CLKPPSbits	set	3784
  3223  0EC9                     _SSP2DATPPSbits	set	3785
  3224  0E8F                     _PPSLOCKbits	set	3727
  3225  0E8F                     _PPSLOCK	set	3727
  3226  0F24                     _RC4PPS	set	3876
  3227  0F23                     _RC3PPS	set	3875
  3228  0F20                     _RC0PPS	set	3872
  3229  0F4E                     _ANSELC	set	3918
  3230  0F43                     _ANSELB	set	3907
  3231  0F38                     _ANSELA	set	3896
  3232  0F4F                     _WPUC	set	3919
  3233  0F44                     _WPUB	set	3908
  3234  0F39                     _WPUA	set	3897
  3235  0F65                     _WPUE	set	3941
  3236  03EF                     STR_8:	
  3237  03EF  340A               	retlw	10
  3238  03F0  3454               	retlw	84	;'T'
  3239  03F1  3468               	retlw	104	;'h'
  3240  03F2  3465               	retlw	101	;'e'
  3241  03F3  3420               	retlw	32	;' '
  3242  03F4  3474               	retlw	116	;'t'
  3243  03F5  3465               	retlw	101	;'e'
  3244  03F6  346D               	retlw	109	;'m'
  3245  03F7  3470               	retlw	112	;'p'
  3246  03F8  3465               	retlw	101	;'e'
  3247  03F9  3472               	retlw	114	;'r'
  3248  03FA  3461               	retlw	97	;'a'
  3249  03FB  3474               	retlw	116	;'t'
  3250  03FC  3475               	retlw	117	;'u'
  3251  03FD  3472               	retlw	114	;'r'
  3252  03FE  3465               	retlw	101	;'e'
  3253  03FF  3420               	retlw	32	;' '
  3254  0400  3469               	retlw	105	;'i'
  3255  0401  3473               	retlw	115	;'s'
  3256  0402  343A               	retlw	58	;':'
  3257  0403  3420               	retlw	32	;' '
  3258  0404  3425               	retlw	37	;'%'
  3259  0405  3464               	retlw	100	;'d'
  3260  0406  342E               	retlw	46	;'.'
  3261  0407  3425               	retlw	37	;'%'
  3262  0408  3464               	retlw	100	;'d'
  3263  0409  3420               	retlw	32	;' '
  3264  040A  3443               	retlw	67	;'C'
  3265  040B  340A               	retlw	10
  3266  040C  3400               	retlw	0
  3267  040D                     STR_9:	
  3268  040D  340A               	retlw	10
  3269  040E  3454               	retlw	84	;'T'
  3270  040F  3468               	retlw	104	;'h'
  3271  0410  3465               	retlw	101	;'e'
  3272  0411  3420               	retlw	32	;' '
  3273  0412  3443               	retlw	67	;'C'
  3274  0413  346F               	retlw	111	;'o'
  3275  0414  346E               	retlw	110	;'n'
  3276  0415  3476               	retlw	118	;'v'
  3277  0416  3465               	retlw	101	;'e'
  3278  0417  3472               	retlw	114	;'r'
  3279  0418  3473               	retlw	115	;'s'
  3280  0419  3469               	retlw	105	;'i'
  3281  041A  346F               	retlw	111	;'o'
  3282  041B  346E               	retlw	110	;'n'
  3283  041C  3420               	retlw	32	;' '
  3284  041D  3472               	retlw	114	;'r'
  3285  041E  3461               	retlw	97	;'a'
  3286  041F  3474               	retlw	116	;'t'
  3287  0420  3465               	retlw	101	;'e'
  3288  0421  3420               	retlw	32	;' '
  3289  0422  3469               	retlw	105	;'i'
  3290  0423  3473               	retlw	115	;'s'
  3291  0424  343A               	retlw	58	;':'
  3292  0425  3420               	retlw	32	;' '
  3293  0426  3425               	retlw	37	;'%'
  3294  0427  3478               	retlw	120	;'x'
  3295  0428  340A               	retlw	10
  3296  0429  3400               	retlw	0
  3297  042A                     STR_10:	
  3298  042A  3454               	retlw	84	;'T'
  3299  042B  3468               	retlw	104	;'h'
  3300  042C  3465               	retlw	101	;'e'
  3301  042D  3420               	retlw	32	;' '
  3302  042E  3468               	retlw	104	;'h'
  3303  042F  3469               	retlw	105	;'i'
  3304  0430  3467               	retlw	103	;'g'
  3305  0431  3468               	retlw	104	;'h'
  3306  0432  3420               	retlw	32	;' '
  3307  0433  346C               	retlw	108	;'l'
  3308  0434  3469               	retlw	105	;'i'
  3309  0435  346D               	retlw	109	;'m'
  3310  0436  3469               	retlw	105	;'i'
  3311  0437  3474               	retlw	116	;'t'
  3312  0438  3420               	retlw	32	;' '
  3313  0439  3469               	retlw	105	;'i'
  3314  043A  3473               	retlw	115	;'s'
  3315  043B  343A               	retlw	58	;':'
  3316  043C  3420               	retlw	32	;' '
  3317  043D  3425               	retlw	37	;'%'
  3318  043E  3464               	retlw	100	;'d'
  3319  043F  3420               	retlw	32	;' '
  3320  0440  3443               	retlw	67	;'C'
  3321  0441  340A               	retlw	10
  3322  0442  3400               	retlw	0
  3323  0443                     STR_2:	
  3324  0443  3454               	retlw	84	;'T'
  3325  0444  3465               	retlw	101	;'e'
  3326  0445  346D               	retlw	109	;'m'
  3327  0446  3470               	retlw	112	;'p'
  3328  0447  3465               	retlw	101	;'e'
  3329  0448  3472               	retlw	114	;'r'
  3330  0449  3461               	retlw	97	;'a'
  3331  044A  3474               	retlw	116	;'t'
  3332  044B  3475               	retlw	117	;'u'
  3333  044C  3472               	retlw	114	;'r'
  3334  044D  3465               	retlw	101	;'e'
  3335  044E  3420               	retlw	32	;' '
  3336  044F  3453               	retlw	83	;'S'
  3337  0450  3465               	retlw	101	;'e'
  3338  0451  346E               	retlw	110	;'n'
  3339  0452  3473               	retlw	115	;'s'
  3340  0453  346F               	retlw	111	;'o'
  3341  0454  3472               	retlw	114	;'r'
  3342  0455  3420               	retlw	32	;' '
  3343  0456  3444               	retlw	68	;'D'
  3344  0457  3465               	retlw	101	;'e'
  3345  0458  346D               	retlw	109	;'m'
  3346  0459  346F               	retlw	111	;'o'
  3347  045A  340A               	retlw	10
  3348  045B  3400               	retlw	0
  3349  045C                     STR_11:	
  3350  045C  3454               	retlw	84	;'T'
  3351  045D  3468               	retlw	104	;'h'
  3352  045E  3465               	retlw	101	;'e'
  3353  045F  3420               	retlw	32	;' '
  3354  0460  346C               	retlw	108	;'l'
  3355  0461  346F               	retlw	111	;'o'
  3356  0462  3477               	retlw	119	;'w'
  3357  0463  3420               	retlw	32	;' '
  3358  0464  346C               	retlw	108	;'l'
  3359  0465  3469               	retlw	105	;'i'
  3360  0466  346D               	retlw	109	;'m'
  3361  0467  3469               	retlw	105	;'i'
  3362  0468  3474               	retlw	116	;'t'
  3363  0469  3420               	retlw	32	;' '
  3364  046A  3469               	retlw	105	;'i'
  3365  046B  3473               	retlw	115	;'s'
  3366  046C  343A               	retlw	58	;':'
  3367  046D  3420               	retlw	32	;' '
  3368  046E  3425               	retlw	37	;'%'
  3369  046F  3464               	retlw	100	;'d'
  3370  0470  3420               	retlw	32	;' '
  3371  0471  3443               	retlw	67	;'C'
  3372  0472  340A               	retlw	10
  3373  0473  3400               	retlw	0
  3374  0474                     STR_6:	
  3375  0474  344D               	retlw	77	;'M'
  3376  0475  3461               	retlw	97	;'a'
  3377  0476  346E               	retlw	110	;'n'
  3378  0477  3475               	retlw	117	;'u'
  3379  0478  3466               	retlw	102	;'f'
  3380  0479  3461               	retlw	97	;'a'
  3381  047A  3463               	retlw	99	;'c'
  3382  047B  3474               	retlw	116	;'t'
  3383  047C  3475               	retlw	117	;'u'
  3384  047D  3472               	retlw	114	;'r'
  3385  047E  3465               	retlw	101	;'e'
  3386  047F  3472               	retlw	114	;'r'
  3387  0480  3420               	retlw	32	;' '
  3388  0481  3449               	retlw	73	;'I'
  3389  0482  3444               	retlw	68	;'D'
  3390  0483  343A               	retlw	58	;':'
  3391  0484  3420               	retlw	32	;' '
  3392  0485  3430               	retlw	48	;'0'
  3393  0486  3478               	retlw	120	;'x'
  3394  0487  3425               	retlw	37	;'%'
  3395  0488  3458               	retlw	88	;'X'
  3396  0489  340A               	retlw	10
  3397  048A  3400               	retlw	0
  3398  048B                     STR_3:	
  3399  048B  3450               	retlw	80	;'P'
  3400  048C  3472               	retlw	114	;'r'
  3401  048D  346F               	retlw	111	;'o'
  3402  048E  3464               	retlw	100	;'d'
  3403  048F  3475               	retlw	117	;'u'
  3404  0490  3463               	retlw	99	;'c'
  3405  0491  3474               	retlw	116	;'t'
  3406  0492  3420               	retlw	32	;' '
  3407  0493  3449               	retlw	73	;'I'
  3408  0494  3444               	retlw	68	;'D'
  3409  0495  343A               	retlw	58	;':'
  3410  0496  3420               	retlw	32	;' '
  3411  0497  3445               	retlw	69	;'E'
  3412  0498  344D               	retlw	77	;'M'
  3413  0499  3443               	retlw	67	;'C'
  3414  049A  3431               	retlw	49	;'1'
  3415  049B  3430               	retlw	48	;'0'
  3416  049C  3430               	retlw	48	;'0'
  3417  049D  3431               	retlw	49	;'1'
  3418  049E  3425               	retlw	37	;'%'
  3419  049F  3473               	retlw	115	;'s'
  3420  04A0  340A               	retlw	10
  3421  04A1  3400               	retlw	0
  3422  04A2                     STR_13:	
  3423  04A2  3430               	retlw	48	;'0'
  3424  04A3  3431               	retlw	49	;'1'
  3425  04A4  3432               	retlw	50	;'2'
  3426  04A5  3433               	retlw	51	;'3'
  3427  04A6  3434               	retlw	52	;'4'
  3428  04A7  3435               	retlw	53	;'5'
  3429  04A8  3436               	retlw	54	;'6'
  3430  04A9  3437               	retlw	55	;'7'
  3431  04AA  3438               	retlw	56	;'8'
  3432  04AB  3439               	retlw	57	;'9'
  3433  04AC  3441               	retlw	65	;'A'
  3434  04AD  3442               	retlw	66	;'B'
  3435  04AE  3443               	retlw	67	;'C'
  3436  04AF  3444               	retlw	68	;'D'
  3437  04B0  3445               	retlw	69	;'E'
  3438  04B1  3446               	retlw	70	;'F'
  3439  04B2  3400               	retlw	0
  3440  04B3                     STR_14:	
  3441  04B3  3430               	retlw	48	;'0'
  3442  04B4  3431               	retlw	49	;'1'
  3443  04B5  3432               	retlw	50	;'2'
  3444  04B6  3433               	retlw	51	;'3'
  3445  04B7  3434               	retlw	52	;'4'
  3446  04B8  3435               	retlw	53	;'5'
  3447  04B9  3436               	retlw	54	;'6'
  3448  04BA  3437               	retlw	55	;'7'
  3449  04BB  3438               	retlw	56	;'8'
  3450  04BC  3439               	retlw	57	;'9'
  3451  04BD  3461               	retlw	97	;'a'
  3452  04BE  3462               	retlw	98	;'b'
  3453  04BF  3463               	retlw	99	;'c'
  3454  04C0  3464               	retlw	100	;'d'
  3455  04C1  3465               	retlw	101	;'e'
  3456  04C2  3466               	retlw	102	;'f'
  3457  04C3  3400               	retlw	0
  3458  04C4                     STR_7:	
  3459  04C4  3452               	retlw	82	;'R'
  3460  04C5  3465               	retlw	101	;'e'
  3461  04C6  3476               	retlw	118	;'v'
  3462  04C7  3469               	retlw	105	;'i'
  3463  04C8  3473               	retlw	115	;'s'
  3464  04C9  3469               	retlw	105	;'i'
  3465  04CA  346F               	retlw	111	;'o'
  3466  04CB  346E               	retlw	110	;'n'
  3467  04CC  3420               	retlw	32	;' '
  3468  04CD  343A               	retlw	58	;':'
  3469  04CE  3420               	retlw	32	;' '
  3470  04CF  3425               	retlw	37	;'%'
  3471  04D0  3464               	retlw	100	;'d'
  3472  04D1  340A               	retlw	10
  3473  04D2  3400               	retlw	0
  3474  04D3                     STR_12:	
  3475  04D3  3428               	retlw	40	;'('
  3476  04D4  346E               	retlw	110	;'n'
  3477  04D5  3475               	retlw	117	;'u'
  3478  04D6  346C               	retlw	108	;'l'
  3479  04D7  346C               	retlw	108	;'l'
  3480  04D8  3429               	retlw	41	;')'
  3481  04D9  3400               	retlw	0
  3482  04DA                     STR_4:	
  3483  04DA  342D               	retlw	45	;'-'
  3484  04DB  3431               	retlw	49	;'1'
  3485  04DC  3400               	retlw	0
  3486  04DD                     STR_1:	
  3487  04DD  340C               	retlw	12
  3488  04DE  3400               	retlw	0
  3489  0442                     
  3490                           ; #config settings
  3491  0000                     
  3492                           	psect	cinit
  3493  001D                     start_initialization:	
  3494  001D                     __initialization:	
  3495                           
  3496                           ; Clear objects allocated to COMMON
  3497  001D  01F7               	clrf	__pbssCOMMON& (0+127)
  3498  001E  01F8               	clrf	(__pbssCOMMON+1)& (0+127)
  3499  001F  01F9               	clrf	(__pbssCOMMON+2)& (0+127)
  3500  0020  01FA               	clrf	(__pbssCOMMON+3)& (0+127)
  3501  0021  01FB               	clrf	(__pbssCOMMON+4)& (0+127)
  3502  0022  01FC               	clrf	(__pbssCOMMON+5)& (0+127)
  3503                           
  3504                           ; Clear objects allocated to BANK0
  3505  0023  304A               	movlw	low __pbssBANK0
  3506  0024  0084               	movwf	4
  3507  0025  3000               	movlw	high __pbssBANK0
  3508  0026  0085               	movwf	5
  3509  0027  301B               	movlw	27
  3510  0028  3187  2714         	fcall	clear_ram0
  3511  002A                     end_of_initialization:	
  3512                           ;End of C runtime variable initialization code
  3513                           
  3514  002A                     __end_of__initialization:	
  3515  002A  107E               	bcf	int$flags,0	;clear compiler interrupt flag (level 1)
  3516  002B  0020               	movlb	0
  3517  002C  3182  2AC9         	ljmp	_main	;jump to C main() function
  3518                           
  3519                           	psect	bssCOMMON
  3520  0077                     __pbssCOMMON:	
  3521  0077                     I2C2_ISR@i2c_10bit_address_restart:	
  3522  0077                     	ds	1
  3523  0078                     I2C2_ISR@i2c_bytes_left:	
  3524  0078                     	ds	1
  3525  0079                     I2C2_ISR@pi2c_buf_ptr:	
  3526  0079                     	ds	1
  3527  007A                     _p_i2c2_current:	
  3528  007A                     	ds	1
  3529  007B                     _p_i2c2_trb_current:	
  3530  007B                     	ds	1
  3531  007C                     _i2c2_trb_count:	
  3532  007C                     	ds	1
  3533                           
  3534                           	psect	bssBANK0
  3535  004A                     __pbssBANK0:	
  3536  004A                     _i2c2_object:	
  3537  004A                     	ds	5
  3538  004F                     _i2c2_state:	
  3539  004F                     	ds	1
  3540  0050                     EMC1001_Read@trb:	
  3541  0050                     	ds	8
  3542  0058                     I2C2_MasterRead@trBlock:	
  3543  0058                     	ds	4
  3544  005C                     I2C2_MasterWrite@trBlock:	
  3545  005C                     	ds	4
  3546  0060                     _i2c2_tr_queue:	
  3547  0060                     	ds	3
  3548  0063                     I2C2_ISR@i2c_address:	
  3549  0063                     	ds	2
  3550                           
  3551                           	psect	clrtext
  3552  0714                     clear_ram0:	
  3553                           ;	Called with FSR0 containing the base address, and
  3554                           ;	WREG with the size to clear
  3555                           
  3556  0714  0064               	clrwdt	;clear the watchdog before getting into this loop
  3557  0715                     clrloop0:	
  3558  0715  0180               	clrf	0	;clear RAM location pointed to by FSR
  3559  0716  3101               	addfsr 0,1
  3560  0717  0B89               	decfsz	9,f	;Have we reached the end of clearing yet?
  3561  0718  2F15               	goto	clrloop0	;have we reached the end yet?
  3562  0719  3400               	retlw	0	;all done for this memory range, return
  3563                           
  3564                           	psect	cstackCOMMON
  3565  0070                     __pcstackCOMMON:	
  3566  0070                     ?_I2C2_Stop:	
  3567  0070                     ??_I2C2_Stop:	
  3568                           ; 1 bytes @ 0x0
  3569                           
  3570  0070                     ?_I2C2_FunctionComplete:	
  3571                           ; 1 bytes @ 0x0
  3572                           
  3573  0070                     ??_I2C2_FunctionComplete:	
  3574                           ; 1 bytes @ 0x0
  3575                           
  3576  0070                     ?_PIN_MANAGER_Initialize:	
  3577                           ; 1 bytes @ 0x0
  3578                           
  3579  0070                     ?_OSCILLATOR_Initialize:	
  3580                           ; 1 bytes @ 0x0
  3581                           
  3582  0070                     ?_EUSART_Initialize:	
  3583                           ; 1 bytes @ 0x0
  3584                           
  3585  0070                     ?_EUSART_Write:	
  3586                           ; 1 bytes @ 0x0
  3587                           
  3588  0070                     ?_putch:	
  3589                           ; 1 bytes @ 0x0
  3590                           
  3591  0070                     ?_I2C2_Initialize:	
  3592                           ; 1 bytes @ 0x0
  3593                           
  3594  0070                     ?_I2C2_ISR:	
  3595                           ; 1 bytes @ 0x0
  3596                           
  3597  0070                     ?_I2C2_BusCollisionISR:	
  3598                           ; 1 bytes @ 0x0
  3599                           
  3600  0070                     ??_I2C2_BusCollisionISR:	
  3601                           ; 1 bytes @ 0x0
  3602                           
  3603  0070                     ?_INTERRUPT_InterruptManager:	
  3604                           ; 1 bytes @ 0x0
  3605                           
  3606  0070                     ?_SYSTEM_Initialize:	
  3607                           ; 1 bytes @ 0x0
  3608                           
  3609  0070                     ?_main:	
  3610                           ; 1 bytes @ 0x0
  3611                           
  3612                           
  3613                           ; 1 bytes @ 0x0
  3614  0070                     	ds	1
  3615  0071                     I2C2_Stop@completion_code:	
  3616                           
  3617                           ; 1 bytes @ 0x1
  3618  0071                     	ds	1
  3619  0072                     ??_I2C2_ISR:	
  3620                           
  3621                           ; 1 bytes @ 0x2
  3622  0072                     	ds	4
  3623  0076                     ??_INTERRUPT_InterruptManager:	
  3624                           
  3625                           ; 1 bytes @ 0x6
  3626  0076                     	ds	1
  3627                           
  3628                           	psect	cstackBANK0
  3629  0020                     __pcstackBANK0:	
  3630  0020                     ?_I2C2_MasterWriteTRBBuild:	
  3631  0020                     ?_I2C2_MasterTRBInsert:	
  3632                           ; 1 bytes @ 0x0
  3633                           
  3634  0020                     ?_I2C2_MasterReadTRBBuild:	
  3635                           ; 1 bytes @ 0x0
  3636                           
  3637  0020                     ??_PIN_MANAGER_Initialize:	
  3638                           ; 1 bytes @ 0x0
  3639                           
  3640  0020                     ??_OSCILLATOR_Initialize:	
  3641                           ; 1 bytes @ 0x0
  3642                           
  3643  0020                     ??_EUSART_Initialize:	
  3644                           ; 1 bytes @ 0x0
  3645                           
  3646  0020                     ??_EUSART_Write:	
  3647                           ; 1 bytes @ 0x0
  3648                           
  3649  0020                     ??_I2C2_Initialize:	
  3650                           ; 1 bytes @ 0x0
  3651                           
  3652  0020                     ?___wmul:	
  3653                           ; 1 bytes @ 0x0
  3654                           
  3655  0020                     ?___lwdiv:	
  3656                           ; 2 bytes @ 0x0
  3657                           
  3658  0020                     EUSART_Write@txData:	
  3659                           ; 2 bytes @ 0x0
  3660                           
  3661  0020                     I2C2_MasterTRBInsert@ptrb_list:	
  3662                           ; 1 bytes @ 0x0
  3663                           
  3664  0020                     I2C2_MasterReadTRBBuild@pdata:	
  3665                           ; 1 bytes @ 0x0
  3666                           
  3667  0020                     I2C2_MasterWriteTRBBuild@pdata:	
  3668                           ; 1 bytes @ 0x0
  3669                           
  3670  0020                     PIN_MANAGER_Initialize@state:	
  3671                           ; 1 bytes @ 0x0
  3672                           
  3673  0020                     ___wmul@multiplier:	
  3674                           ; 1 bytes @ 0x0
  3675                           
  3676  0020                     ___lwdiv@divisor:	
  3677                           ; 2 bytes @ 0x0
  3678                           
  3679                           
  3680                           ; 2 bytes @ 0x0
  3681  0020                     	ds	1
  3682  0021                     ??_putch:	
  3683  0021                     ??_SYSTEM_Initialize:	
  3684                           ; 1 bytes @ 0x1
  3685                           
  3686  0021                     putch@txData:	
  3687                           ; 1 bytes @ 0x1
  3688                           
  3689  0021                     I2C2_MasterTRBInsert@pflag:	
  3690                           ; 1 bytes @ 0x1
  3691                           
  3692  0021                     I2C2_MasterReadTRBBuild@length:	
  3693                           ; 1 bytes @ 0x1
  3694                           
  3695  0021                     I2C2_MasterWriteTRBBuild@length:	
  3696                           ; 1 bytes @ 0x1
  3697                           
  3698                           
  3699                           ; 1 bytes @ 0x1
  3700  0021                     	ds	1
  3701  0022                     ??_I2C2_MasterTRBInsert:	
  3702  0022                     ?_cputs:	
  3703                           ; 1 bytes @ 0x2
  3704                           
  3705  0022                     I2C2_MasterReadTRBBuild@address:	
  3706                           ; 1 bytes @ 0x2
  3707                           
  3708  0022                     I2C2_MasterWriteTRBBuild@address:	
  3709                           ; 2 bytes @ 0x2
  3710                           
  3711  0022                     ___wmul@multiplicand:	
  3712                           ; 2 bytes @ 0x2
  3713                           
  3714  0022                     ___lwdiv@dividend:	
  3715                           ; 2 bytes @ 0x2
  3716                           
  3717  0022                     cputs@s:	
  3718                           ; 2 bytes @ 0x2
  3719                           
  3720                           
  3721                           ; 2 bytes @ 0x2
  3722  0022                     	ds	1
  3723  0023                     I2C2_MasterTRBInsert@count:	
  3724                           
  3725                           ; 1 bytes @ 0x3
  3726  0023                     	ds	1
  3727  0024                     ??_I2C2_MasterWriteTRBBuild:	
  3728  0024                     ??_I2C2_MasterReadTRBBuild:	
  3729                           ; 1 bytes @ 0x4
  3730                           
  3731  0024                     ??_cputs:	
  3732                           ; 1 bytes @ 0x4
  3733                           
  3734  0024                     ??___wmul:	
  3735                           ; 1 bytes @ 0x4
  3736                           
  3737  0024                     ??___lwdiv:	
  3738                           ; 1 bytes @ 0x4
  3739                           
  3740  0024                     ___wmul@product:	
  3741                           ; 1 bytes @ 0x4
  3742                           
  3743                           
  3744                           ; 2 bytes @ 0x4
  3745  0024                     	ds	1
  3746  0025                     ?_puts:	
  3747  0025                     ___lwdiv@quotient:	
  3748                           ; 2 bytes @ 0x5
  3749                           
  3750  0025                     puts@s:	
  3751                           ; 2 bytes @ 0x5
  3752                           
  3753                           
  3754                           ; 2 bytes @ 0x5
  3755  0025                     	ds	1
  3756  0026                     I2C2_MasterReadTRBBuild@ptrb:	
  3757  0026                     I2C2_MasterWriteTRBBuild@ptrb:	
  3758                           ; 1 bytes @ 0x6
  3759                           
  3760                           
  3761                           ; 1 bytes @ 0x6
  3762  0026                     	ds	1
  3763  0027                     ??_puts:	
  3764  0027                     ?_EMC1001_Read:	
  3765                           ; 1 bytes @ 0x7
  3766                           
  3767  0027                     EMC1001_Read@pData:	
  3768                           ; 1 bytes @ 0x7
  3769                           
  3770  0027                     ___lwdiv@counter:	
  3771                           ; 1 bytes @ 0x7
  3772                           
  3773                           
  3774                           ; 1 bytes @ 0x7
  3775  0027                     	ds	1
  3776  0028                     ??_EMC1001_Read:	
  3777  0028                     ?___lwmod:	
  3778                           ; 1 bytes @ 0x8
  3779                           
  3780  0028                     ___lwmod@divisor:	
  3781                           ; 2 bytes @ 0x8
  3782                           
  3783                           
  3784                           ; 2 bytes @ 0x8
  3785  0028                     	ds	2
  3786  002A                     EMC1001_Read@reg:	
  3787  002A                     ___lwmod@dividend:	
  3788                           ; 1 bytes @ 0xA
  3789                           
  3790                           
  3791                           ; 2 bytes @ 0xA
  3792  002A                     	ds	1
  3793  002B                     EMC1001_Read@status:	
  3794                           
  3795                           ; 1 bytes @ 0xB
  3796  002B                     	ds	1
  3797  002C                     ??___lwmod:	
  3798                           
  3799                           ; 1 bytes @ 0xC
  3800  002C                     	ds	1
  3801  002D                     ___lwmod@counter:	
  3802                           
  3803                           ; 1 bytes @ 0xD
  3804  002D                     	ds	1
  3805  002E                     ?_printf:	
  3806  002E                     printf@f:	
  3807                           ; 2 bytes @ 0xE
  3808                           
  3809                           
  3810                           ; 2 bytes @ 0xE
  3811  002E                     	ds	6
  3812  0034                     ??_printf:	
  3813                           
  3814                           ; 1 bytes @ 0x14
  3815  0034                     	ds	4
  3816  0038                     printf@idx:	
  3817                           
  3818                           ; 1 bytes @ 0x18
  3819  0038                     	ds	1
  3820  0039                     _printf$645:	
  3821                           
  3822                           ; 2 bytes @ 0x19
  3823  0039                     	ds	2
  3824  003B                     printf@prec:	
  3825                           
  3826                           ; 1 bytes @ 0x1B
  3827  003B                     	ds	1
  3828  003C                     printf@cp:	
  3829                           
  3830                           ; 2 bytes @ 0x1C
  3831  003C                     	ds	2
  3832  003E                     printf@ap:	
  3833                           
  3834                           ; 1 bytes @ 0x1E
  3835  003E                     	ds	1
  3836  003F                     printf@flag:	
  3837                           
  3838                           ; 1 bytes @ 0x1F
  3839  003F                     	ds	1
  3840  0040                     printf@val:	
  3841                           
  3842                           ; 2 bytes @ 0x20
  3843  0040                     	ds	2
  3844  0042                     printf@c:	
  3845                           
  3846                           ; 1 bytes @ 0x22
  3847  0042                     	ds	1
  3848  0043                     ??_main:	
  3849                           
  3850                           ; 1 bytes @ 0x23
  3851  0043                     	ds	2
  3852  0045                     _main$603:	
  3853                           
  3854                           ; 2 bytes @ 0x25
  3855  0045                     	ds	2
  3856  0047                     main@temp:	
  3857                           
  3858                           ; 1 bytes @ 0x27
  3859  0047                     	ds	1
  3860  0048                     main@templo:	
  3861                           
  3862                           ; 1 bytes @ 0x28
  3863  0048                     	ds	1
  3864  0049                     main@data:	
  3865                           
  3866                           ; 1 bytes @ 0x29
  3867  0049                     	ds	1
  3868                           
  3869                           	psect	maintext
  3870  02C9                     __pmaintext:	
  3871 ;;
  3872 ;;Main: autosize = 0, tempsize = 2, incstack = 0, save=0
  3873 ;;
  3874 ;; *************** function _main *****************
  3875 ;; Defined at:
  3876 ;;		line 69 in file "main.c"
  3877 ;; Parameters:    Size  Location     Type
  3878 ;;		None
  3879 ;; Auto vars:     Size  Location     Type
  3880 ;;  data            1   41[BANK0 ] unsigned char 
  3881 ;;  templo          1   40[BANK0 ] unsigned char 
  3882 ;;  temp            1   39[BANK0 ] char 
  3883 ;; Return value:  Size  Location     Type
  3884 ;;                  1    wreg      void 
  3885 ;; Registers used:
  3886 ;;		wreg, fsr0l, fsr0h, fsr1l, fsr1h, status,2, status,0, pclath, cstack
  3887 ;; Tracked objects:
  3888 ;;		On entry : B1F/0
  3889 ;;		On exit  : 0/0
  3890 ;;		Unchanged: 0/0
  3891 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
  3892 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  3893 ;;      Locals:         0       5       0       0       0       0       0       0       0       0       0       0       
      +0       0
  3894 ;;      Temps:          0       2       0       0       0       0       0       0       0       0       0       0       
      +0       0
  3895 ;;      Totals:         0       7       0       0       0       0       0       0       0       0       0       0       
      +0       0
  3896 ;;Total ram usage:        7 bytes
  3897 ;; Hardware stack levels required when called:    7
  3898 ;; This function calls:
  3899 ;;		_EMC1001_Read
  3900 ;;		_SYSTEM_Initialize
  3901 ;;		___wmul
  3902 ;;		_printf
  3903 ;;		_puts
  3904 ;; This function is called by:
  3905 ;;		Startup code after reset
  3906 ;; This function uses a non-reentrant model
  3907 ;;
  3908                           
  3909                           
  3910                           ;psect for function _main
  3911  02C9                     _main:	
  3912                           
  3913                           ;main.c: 71: uint8_t data;
  3914                           ;main.c: 72: int8_t temp;
  3915                           ;main.c: 73: uint8_t templo;
  3916                           ;main.c: 75: SYSTEM_Initialize();
  3917                           
  3918                           ;incstack = 0
  3919                           ; Regs used in _main: [wreg-fsr1h+status,2+status,0+pclath+cstack]
  3920  02C9  3186  26EA  3182   	fcall	_SYSTEM_Initialize
  3921                           
  3922                           ;main.c: 76: (INTCONbits.GIE = 1);
  3923  02CC  178B               	bsf	11,7	;volatile
  3924                           
  3925                           ;main.c: 77: (INTCONbits.PEIE = 1);
  3926  02CD  170B               	bsf	11,6	;volatile
  3927  02CE                     l2115:	
  3928                           ;main.c: 79: while (1)
  3929                           
  3930                           
  3931                           ;main.c: 80: {
  3932                           ;main.c: 81: printf("\x0C");
  3933  02CE  30DD               	movlw	low (STR_1| (0+32768))
  3934  02CF  0020               	movlb	0	; select bank0
  3935  02D0  00AE               	movwf	printf@f
  3936  02D1  3084               	movlw	high (STR_1| (0+32768))
  3937  02D2  00AF               	movwf	printf@f+1
  3938  02D3  3180  202E  3182   	fcall	_printf
  3939                           
  3940                           ;main.c: 82: puts("Temperature Sensor Demo\n");
  3941  02D6  3043               	movlw	low (STR_2| (0+32768))
  3942  02D7  0020               	movlb	0	; select bank0
  3943  02D8  00A5               	movwf	puts@s
  3944  02D9  3084               	movlw	high (STR_2| (0+32768))
  3945  02DA  00A6               	movwf	puts@s+1
  3946  02DB  3186  26DE  3182   	fcall	_puts
  3947                           
  3948                           ;main.c: 83: if (EMC1001_Read(0xfd, &data)) printf("Product ID: EMC1001%s\n", data ? "-1
      +                          " : "");
  3949  02DE  3049               	movlw	(low (main@data| 0))& (0+255)
  3950  02DF  0020               	movlb	0	; select bank0
  3951  02E0  00C3               	movwf	??_main
  3952  02E1  0843               	movf	??_main,w
  3953  02E2  00A7               	movwf	EMC1001_Read@pData
  3954  02E3  30FD               	movlw	253
  3955  02E4  3185  256B  3182   	fcall	_EMC1001_Read
  3956  02E7  3A00               	xorlw	0
  3957  02E8  1903               	skipnz
  3958  02E9  2B01               	goto	l2127
  3959  02EA  0020               	movlb	0	; select bank0
  3960  02EB  0849               	movf	main@data,w
  3961  02EC  1D03               	btfss	3,2
  3962  02ED  2AF2               	goto	l2123
  3963  02EE  3042               	movlw	low ((STR_10+24)| (0+32768))
  3964  02EF  00C5               	movwf	_main$603
  3965  02F0  3084               	movlw	high ((STR_10+24)| (0+32768))
  3966  02F1  2AF5               	goto	L1
  3967  02F2                     l2123:	
  3968  02F2  30DA               	movlw	low (STR_4| (0+32768))
  3969  02F3  00C5               	movwf	_main$603
  3970  02F4  3084               	movlw	high (STR_4| (0+32768))
  3971  02F5                     L1:	
  3972  02F5  00C6               	movwf	_main$603+1
  3973  02F6  308B               	movlw	low (STR_3| (0+32768))
  3974  02F7  00AE               	movwf	printf@f
  3975  02F8  3084               	movlw	high (STR_3| (0+32768))
  3976  02F9  00AF               	movwf	printf@f+1
  3977  02FA  0846               	movf	_main$603+1,w
  3978  02FB  00B1               	movwf	(low ((?_printf| 0+2))+1)
  3979  02FC  0845               	movf	_main$603,w
  3980  02FD  00B0               	movwf	low ((?_printf| 0+2))
  3981  02FE  3180  202E  3182   	fcall	_printf
  3982  0301                     l2127:	
  3983                           
  3984                           ;main.c: 84: if (EMC1001_Read(0xfe, &data)) printf("Manufacturer ID: 0x%X\n", data);
  3985  0301  3049               	movlw	(low (main@data| 0))& (0+255)
  3986  0302  0020               	movlb	0	; select bank0
  3987  0303  00C3               	movwf	??_main
  3988  0304  0843               	movf	??_main,w
  3989  0305  00A7               	movwf	EMC1001_Read@pData
  3990  0306  30FE               	movlw	254
  3991  0307  3185  256B  3182   	fcall	_EMC1001_Read
  3992  030A  3A00               	xorlw	0
  3993  030B  1903               	skipnz
  3994  030C  2B1C               	goto	l2131
  3995  030D  3074               	movlw	low (STR_6| (0+32768))
  3996  030E  0020               	movlb	0	; select bank0
  3997  030F  00AE               	movwf	printf@f
  3998  0310  3084               	movlw	high (STR_6| (0+32768))
  3999  0311  00AF               	movwf	printf@f+1
  4000  0312  0849               	movf	main@data,w
  4001  0313  00C3               	movwf	??_main
  4002  0314  01C4               	clrf	??_main+1
  4003  0315  0843               	movf	??_main,w
  4004  0316  00B0               	movwf	?_printf+2
  4005  0317  0844               	movf	??_main+1,w
  4006  0318  00B1               	movwf	?_printf+3
  4007  0319  3180  202E  3182   	fcall	_printf
  4008  031C                     l2131:	
  4009                           
  4010                           ;main.c: 85: if (EMC1001_Read(0xff, &data)) printf("Revision : %d\n", data);
  4011  031C  3049               	movlw	(low (main@data| 0))& (0+255)
  4012  031D  0020               	movlb	0	; select bank0
  4013  031E  00C3               	movwf	??_main
  4014  031F  0843               	movf	??_main,w
  4015  0320  00A7               	movwf	EMC1001_Read@pData
  4016  0321  30FF               	movlw	255
  4017  0322  3185  256B  3182   	fcall	_EMC1001_Read
  4018  0325  3A00               	xorlw	0
  4019  0326  1903               	skipnz
  4020  0327  2B37               	goto	l2135
  4021  0328  30C4               	movlw	low (STR_7| (0+32768))
  4022  0329  0020               	movlb	0	; select bank0
  4023  032A  00AE               	movwf	printf@f
  4024  032B  3084               	movlw	high (STR_7| (0+32768))
  4025  032C  00AF               	movwf	printf@f+1
  4026  032D  0849               	movf	main@data,w
  4027  032E  00C3               	movwf	??_main
  4028  032F  01C4               	clrf	??_main+1
  4029  0330  0843               	movf	??_main,w
  4030  0331  00B0               	movwf	?_printf+2
  4031  0332  0844               	movf	??_main+1,w
  4032  0333  00B1               	movwf	?_printf+3
  4033  0334  3180  202E  3182   	fcall	_printf
  4034  0337                     l2135:	
  4035                           
  4036                           ;main.c: 87: if (EMC1001_Read(0, (uint8_t*)&temp)) {
  4037  0337  3047               	movlw	(low (main@temp| 0))& (0+255)
  4038  0338  0020               	movlb	0	; select bank0
  4039  0339  00C3               	movwf	??_main
  4040  033A  0843               	movf	??_main,w
  4041  033B  00A7               	movwf	EMC1001_Read@pData
  4042  033C  3000               	movlw	0
  4043  033D  3185  256B  3182   	fcall	_EMC1001_Read
  4044  0340  3A00               	xorlw	0
  4045  0341  1903               	skipnz
  4046  0342  2B7E               	goto	l2147
  4047                           
  4048                           ;main.c: 88: EMC1001_Read(2, &templo);
  4049  0343  3048               	movlw	(low (main@templo| 0))& (0+255)
  4050  0344  0020               	movlb	0	; select bank0
  4051  0345  00C3               	movwf	??_main
  4052  0346  0843               	movf	??_main,w
  4053  0347  00A7               	movwf	EMC1001_Read@pData
  4054  0348  3002               	movlw	2
  4055  0349  3185  256B  3182   	fcall	_EMC1001_Read
  4056                           
  4057                           ;main.c: 89: templo = templo >> 6;
  4058  034C  0020               	movlb	0	; select bank0
  4059  034D  0848               	movf	main@templo,w
  4060  034E  00C3               	movwf	??_main
  4061  034F  3006               	movlw	6
  4062  0350                     u1875:	
  4063  0350  36C3               	lsrf	??_main,f
  4064  0351  0B89               	decfsz	9,f
  4065  0352  2B50               	goto	u1875
  4066  0353  0843               	movf	??_main,w
  4067  0354  00C4               	movwf	??_main+1
  4068  0355  0844               	movf	??_main+1,w
  4069  0356  00C8               	movwf	main@templo
  4070                           
  4071                           ;main.c: 90: if (temp < 0) templo = 3-templo;
  4072  0357  1FC7               	btfss	main@temp,7
  4073  0358  2B5F               	goto	l2145
  4074  0359  0348               	decf	main@templo,w
  4075  035A  3AFF               	xorlw	255
  4076  035B  3E03               	addlw	3
  4077  035C  00C3               	movwf	??_main
  4078  035D  0843               	movf	??_main,w
  4079  035E  00C8               	movwf	main@templo
  4080  035F                     l2145:	
  4081                           
  4082                           ;main.c: 91: printf("\nThe temperature is: %d.%d C\n", temp, templo*25);
  4083  035F  30EF               	movlw	low (STR_8| (0+32768))
  4084  0360  00AE               	movwf	printf@f
  4085  0361  3083               	movlw	high (STR_8| (0+32768))
  4086  0362  00AF               	movwf	printf@f+1
  4087  0363  0847               	movf	main@temp,w
  4088  0364  00B0               	movwf	?_printf+2
  4089  0365  01B1               	clrf	?_printf+3
  4090  0366  1BB0               	btfsc	?_printf+2,7
  4091  0367  03B1               	decf	?_printf+3,f
  4092  0368  0848               	movf	main@templo,w
  4093  0369  00C3               	movwf	??_main
  4094  036A  01C4               	clrf	??_main+1
  4095  036B  0843               	movf	??_main,w
  4096  036C  00A0               	movwf	___wmul@multiplier
  4097  036D  0844               	movf	??_main+1,w
  4098  036E  00A1               	movwf	___wmul@multiplier+1
  4099  036F  3019               	movlw	25
  4100  0370  00A2               	movwf	___wmul@multiplicand
  4101  0371  3000               	movlw	0
  4102  0372  00A3               	movwf	___wmul@multiplicand+1
  4103  0373  3186  2651  3182   	fcall	___wmul
  4104  0376  0020               	movlb	0	; select bank0
  4105  0377  0821               	movf	?___wmul+1,w
  4106  0378  00B3               	movwf	?_printf+5
  4107  0379  0820               	movf	?___wmul,w
  4108  037A  00B2               	movwf	?_printf+4
  4109  037B  3180  202E  3182   	fcall	_printf
  4110  037E                     l2147:	
  4111                           
  4112                           ;main.c: 92: }
  4113                           ;main.c: 94: if (EMC1001_Read(4, &data)) printf("\nThe Conversion rate is: %x\n", data);
  4114  037E  3049               	movlw	(low (main@data| 0))& (0+255)
  4115  037F  0020               	movlb	0	; select bank0
  4116  0380  00C3               	movwf	??_main
  4117  0381  0843               	movf	??_main,w
  4118  0382  00A7               	movwf	EMC1001_Read@pData
  4119  0383  3004               	movlw	4
  4120  0384  3185  256B  3182   	fcall	_EMC1001_Read
  4121  0387  3A00               	xorlw	0
  4122  0388  1903               	skipnz
  4123  0389  2B99               	goto	l2151
  4124  038A  300D               	movlw	low (STR_9| (0+32768))
  4125  038B  0020               	movlb	0	; select bank0
  4126  038C  00AE               	movwf	printf@f
  4127  038D  3084               	movlw	high (STR_9| (0+32768))
  4128  038E  00AF               	movwf	printf@f+1
  4129  038F  0849               	movf	main@data,w
  4130  0390  00C3               	movwf	??_main
  4131  0391  01C4               	clrf	??_main+1
  4132  0392  0843               	movf	??_main,w
  4133  0393  00B0               	movwf	?_printf+2
  4134  0394  0844               	movf	??_main+1,w
  4135  0395  00B1               	movwf	?_printf+3
  4136  0396  3180  202E  3182   	fcall	_printf
  4137  0399                     l2151:	
  4138                           
  4139                           ;main.c: 95: if (EMC1001_Read(5, &data)) printf("The high limit is: %d C\n", data);
  4140  0399  3049               	movlw	(low (main@data| 0))& (0+255)
  4141  039A  0020               	movlb	0	; select bank0
  4142  039B  00C3               	movwf	??_main
  4143  039C  0843               	movf	??_main,w
  4144  039D  00A7               	movwf	EMC1001_Read@pData
  4145  039E  3005               	movlw	5
  4146  039F  3185  256B  3182   	fcall	_EMC1001_Read
  4147  03A2  3A00               	xorlw	0
  4148  03A3  1903               	skipnz
  4149  03A4  2BB4               	goto	l2155
  4150  03A5  302A               	movlw	low (STR_10| (0+32768))
  4151  03A6  0020               	movlb	0	; select bank0
  4152  03A7  00AE               	movwf	printf@f
  4153  03A8  3084               	movlw	high (STR_10| (0+32768))
  4154  03A9  00AF               	movwf	printf@f+1
  4155  03AA  0849               	movf	main@data,w
  4156  03AB  00C3               	movwf	??_main
  4157  03AC  01C4               	clrf	??_main+1
  4158  03AD  0843               	movf	??_main,w
  4159  03AE  00B0               	movwf	?_printf+2
  4160  03AF  0844               	movf	??_main+1,w
  4161  03B0  00B1               	movwf	?_printf+3
  4162  03B1  3180  202E  3182   	fcall	_printf
  4163  03B4                     l2155:	
  4164                           
  4165                           ;main.c: 96: if (EMC1001_Read(7, &data)) printf("The low limit is: %d C\n", data);
  4166  03B4  3049               	movlw	(low (main@data| 0))& (0+255)
  4167  03B5  0020               	movlb	0	; select bank0
  4168  03B6  00C3               	movwf	??_main
  4169  03B7  0843               	movf	??_main,w
  4170  03B8  00A7               	movwf	EMC1001_Read@pData
  4171  03B9  3007               	movlw	7
  4172  03BA  3185  256B  3182   	fcall	_EMC1001_Read
  4173  03BD  3A00               	xorlw	0
  4174  03BE  1903               	skipnz
  4175  03BF  2BCF               	goto	l2159
  4176  03C0  305C               	movlw	low (STR_11| (0+32768))
  4177  03C1  0020               	movlb	0	; select bank0
  4178  03C2  00AE               	movwf	printf@f
  4179  03C3  3084               	movlw	high (STR_11| (0+32768))
  4180  03C4  00AF               	movwf	printf@f+1
  4181  03C5  0849               	movf	main@data,w
  4182  03C6  00C3               	movwf	??_main
  4183  03C7  01C4               	clrf	??_main+1
  4184  03C8  0843               	movf	??_main,w
  4185  03C9  00B0               	movwf	?_printf+2
  4186  03CA  0844               	movf	??_main+1,w
  4187  03CB  00B1               	movwf	?_printf+3
  4188  03CC  3180  202E  3182   	fcall	_printf
  4189  03CF                     l2159:	
  4190                           
  4191                           ;main.c: 98: _delay((unsigned long)((1000)*(1000000/4000.0)));
  4192  03CF  3002               	movlw	2
  4193  03D0  0020               	movlb	0	; select bank0
  4194  03D1  00C4               	movwf	??_main+1
  4195  03D2  3045               	movlw	69
  4196  03D3  00C3               	movwf	??_main
  4197  03D4  30A9               	movlw	169
  4198  03D5                     u1927:	
  4199  03D5  0B89               	decfsz	9,f
  4200  03D6  2BD5               	goto	u1927
  4201  03D7  0BC3               	decfsz	??_main,f
  4202  03D8  2BD5               	goto	u1927
  4203  03D9  0BC4               	decfsz	??_main+1,f
  4204  03DA  2BD5               	goto	u1927
  4205  03DB  3200               	nop2
  4206  03DC  2ACE               	goto	l2115
  4207  03DD                     __end_of_main:	
  4208                           
  4209                           	psect	text1
  4210  06DE                     __ptext1:	
  4211 ;; *************** function _puts *****************
  4212 ;; Defined at:
  4213 ;;		line 8 in file "/opt/microchip/xc8/v1.41/sources/common/puts.c"
  4214 ;; Parameters:    Size  Location     Type
  4215 ;;  s               2    5[BANK0 ] PTR const unsigned char 
  4216 ;;		 -> STR_2(25), 
  4217 ;; Auto vars:     Size  Location     Type
  4218 ;;		None
  4219 ;; Return value:  Size  Location     Type
  4220 ;;                  2    5[BANK0 ] int 
  4221 ;; Registers used:
  4222 ;;		wreg, fsr0l, fsr0h, status,2, status,0, pclath, cstack
  4223 ;; Tracked objects:
  4224 ;;		On entry : 0/0
  4225 ;;		On exit  : 0/0
  4226 ;;		Unchanged: 0/0
  4227 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
  4228 ;;      Params:         0       2       0       0       0       0       0       0       0       0       0       0       
      +0       0
  4229 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  4230 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  4231 ;;      Totals:         0       2       0       0       0       0       0       0       0       0       0       0       
      +0       0
  4232 ;;Total ram usage:        2 bytes
  4233 ;; Hardware stack levels used:    1
  4234 ;; Hardware stack levels required when called:    6
  4235 ;; This function calls:
  4236 ;;		_cputs
  4237 ;;		_putch
  4238 ;; This function is called by:
  4239 ;;		_main
  4240 ;; This function uses a non-reentrant model
  4241 ;;
  4242                           
  4243                           
  4244                           ;psect for function _puts
  4245  06DE                     _puts:	
  4246                           
  4247                           ;incstack = 0
  4248                           ; Regs used in _puts: [wreg-fsr0h+status,2+status,0+pclath+cstack]
  4249  06DE  0020               	movlb	0	; select bank0
  4250  06DF  0826               	movf	puts@s+1,w
  4251  06E0  00A3               	movwf	cputs@s+1
  4252  06E1  0825               	movf	puts@s,w
  4253  06E2  00A2               	movwf	cputs@s
  4254  06E3  3186  26B5  3186   	fcall	_cputs
  4255  06E6  300A               	movlw	10
  4256  06E7  3187  271A         	fcall	_putch
  4257  06E9  0008               	return
  4258  06EA                     __end_of_puts:	
  4259                           
  4260                           	psect	text2
  4261  06B5                     __ptext2:	
  4262 ;; *************** function _cputs *****************
  4263 ;; Defined at:
  4264 ;;		line 4 in file "/opt/microchip/xc8/v1.41/sources/common/cputs.c"
  4265 ;; Parameters:    Size  Location     Type
  4266 ;;  s               2    2[BANK0 ] PTR const unsigned char 
  4267 ;;		 -> STR_2(25), 
  4268 ;; Auto vars:     Size  Location     Type
  4269 ;;		None
  4270 ;; Return value:  Size  Location     Type
  4271 ;;                  1    wreg      void 
  4272 ;; Registers used:
  4273 ;;		wreg, fsr0l, fsr0h, status,2, status,0, pclath, cstack
  4274 ;; Tracked objects:
  4275 ;;		On entry : 0/0
  4276 ;;		On exit  : 0/0
  4277 ;;		Unchanged: 0/0
  4278 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
  4279 ;;      Params:         0       2       0       0       0       0       0       0       0       0       0       0       
      +0       0
  4280 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  4281 ;;      Temps:          0       1       0       0       0       0       0       0       0       0       0       0       
      +0       0
  4282 ;;      Totals:         0       3       0       0       0       0       0       0       0       0       0       0       
      +0       0
  4283 ;;Total ram usage:        3 bytes
  4284 ;; Hardware stack levels used:    1
  4285 ;; Hardware stack levels required when called:    5
  4286 ;; This function calls:
  4287 ;;		_putch
  4288 ;; This function is called by:
  4289 ;;		_puts
  4290 ;; This function uses a non-reentrant model
  4291 ;;
  4292                           
  4293                           
  4294                           ;psect for function _cputs
  4295  06B5                     _cputs:	
  4296  06B5                     l1995:	
  4297                           ;incstack = 0
  4298                           ; Regs used in _cputs: [wreg-fsr0h+status,2+status,0+pclath+cstack]
  4299                           
  4300  06B5  0020               	movlb	0	; select bank0
  4301  06B6  0822               	movf	cputs@s,w
  4302  06B7  0084               	movwf	4
  4303  06B8  0823               	movf	cputs@s+1,w
  4304  06B9  0085               	movwf	5
  4305  06BA  0012               	moviw fsr0++
  4306  06BB  1903               	btfsc	3,2
  4307  06BC  0008               	return
  4308  06BD  0020               	movlb	0	; select bank0
  4309  06BE  0822               	movf	cputs@s,w
  4310  06BF  0084               	movwf	4
  4311  06C0  0823               	movf	cputs@s+1,w
  4312  06C1  0085               	movwf	5
  4313  06C2  0800               	movf	0,w	;code access
  4314  06C3  3187  271A  3186   	fcall	_putch
  4315  06C6  3001               	movlw	1
  4316  06C7  0020               	movlb	0	; select bank0
  4317  06C8  07A2               	addwf	cputs@s,f
  4318  06C9  3000               	movlw	0
  4319  06CA  3DA3               	addwfc	cputs@s+1,f
  4320  06CB  2EB5               	goto	l1995
  4321  06CC                     __end_of_cputs:	
  4322                           
  4323                           	psect	text3
  4324  002E                     __ptext3:	
  4325 ;; *************** function _printf *****************
  4326 ;; Defined at:
  4327 ;;		line 464 in file "/opt/microchip/xc8/v1.41/sources/common/doprnt.c"
  4328 ;; Parameters:    Size  Location     Type
  4329 ;;  f               2   14[BANK0 ] PTR const unsigned char 
  4330 ;;		 -> STR_11(24), STR_10(25), STR_9(29), STR_8(30), 
  4331 ;;		 -> STR_7(15), STR_6(23), STR_3(23), STR_1(2), 
  4332 ;; Auto vars:     Size  Location     Type
  4333 ;;  idx             1   24[BANK0 ] unsigned char 
  4334 ;;  tmpval          4    0        struct .
  4335 ;;  val             2   32[BANK0 ] unsigned int 
  4336 ;;  cp              2   28[BANK0 ] PTR const unsigned char 
  4337 ;;		 -> STR_12(7), STR_5(1), STR_4(3), I2C2_ISR@i2c_address(2), 
  4338 ;;  len             2    0        unsigned int 
  4339 ;;  c               1   34[BANK0 ] char 
  4340 ;;  flag            1   31[BANK0 ] unsigned char 
  4341 ;;  ap              1   30[BANK0 ] PTR void [1]
  4342 ;;		 -> ?_printf(2), 
  4343 ;;  prec            1   27[BANK0 ] char 
  4344 ;; Return value:  Size  Location     Type
  4345 ;;                  2   14[BANK0 ] int 
  4346 ;; Registers used:
  4347 ;;		wreg, fsr0l, fsr0h, fsr1l, fsr1h, status,2, status,0, pclath, cstack
  4348 ;; Tracked objects:
  4349 ;;		On entry : 0/0
  4350 ;;		On exit  : 0/0
  4351 ;;		Unchanged: 0/0
  4352 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
  4353 ;;      Params:         0       6       0       0       0       0       0       0       0       0       0       0       
      +0       0
  4354 ;;      Locals:         0      11       0       0       0       0       0       0       0       0       0       0       
      +0       0
  4355 ;;      Temps:          0       4       0       0       0       0       0       0       0       0       0       0       
      +0       0
  4356 ;;      Totals:         0      21       0       0       0       0       0       0       0       0       0       0       
      +0       0
  4357 ;;Total ram usage:       21 bytes
  4358 ;; Hardware stack levels used:    1
  4359 ;; Hardware stack levels required when called:    5
  4360 ;; This function calls:
  4361 ;;		___lwdiv
  4362 ;;		___lwmod
  4363 ;;		_putch
  4364 ;; This function is called by:
  4365 ;;		_main
  4366 ;; This function uses a non-reentrant model
  4367 ;;
  4368                           
  4369                           
  4370                           ;psect for function _printf
  4371  002E                     _printf:	
  4372                           
  4373                           ;doprnt.c: 466: va_list ap;
  4374                           ;doprnt.c: 499: signed char c;
  4375                           ;doprnt.c: 506: signed char prec;
  4376                           ;doprnt.c: 508: unsigned char flag;
  4377                           ;doprnt.c: 523: union {
  4378                           ;doprnt.c: 524: unsigned long vd;
  4379                           ;doprnt.c: 525: double integ;
  4380                           ;doprnt.c: 526: } tmpval;
  4381                           ;doprnt.c: 528: unsigned int val;
  4382                           ;doprnt.c: 529: unsigned len;
  4383                           ;doprnt.c: 530: const char * cp;
  4384                           ;doprnt.c: 533: *ap = __va_start();
  4385                           
  4386                           ;incstack = 0
  4387                           ; Regs used in _printf: [wreg-fsr1h+status,2+status,0+pclath+cstack]
  4388  002E  3030               	movlw	(low ((?_printf| 0+2)))& (0+255)
  4389  002F  0020               	movlb	0	; select bank0
  4390  0030  00B4               	movwf	??_printf
  4391  0031  0834               	movf	??_printf,w
  4392  0032  00BE               	movwf	printf@ap
  4393  0033                     l2089:	
  4394                           ;doprnt.c: 536: while(c = *f++) {
  4395                           
  4396  0033  0020               	movlb	0	; select bank0
  4397  0034  082F               	movf	printf@f+1,w
  4398  0035  00B5               	movwf	??_printf+1
  4399  0036  082E               	movf	printf@f,w
  4400  0037  00B4               	movwf	??_printf
  4401  0038  0AAE               	incf	printf@f,f
  4402  0039  1903               	skipnz
  4403  003A  0AAF               	incf	printf@f+1,f
  4404  003B  0834               	movf	??_printf,w
  4405  003C  0084               	movwf	4
  4406  003D  0835               	movf	??_printf+1,w
  4407  003E  0085               	movwf	5
  4408  003F  0800               	movf	0,w	;code access
  4409  0040  00B6               	movwf	??_printf+2
  4410  0041  0836               	movf	??_printf+2,w
  4411  0042  00C2               	movwf	printf@c
  4412  0043  0842               	movf	printf@c,w
  4413  0044  1903               	btfsc	3,2
  4414  0045  0008               	return
  4415                           
  4416                           ;doprnt.c: 538: if(c != '%')
  4417  0046  3025               	movlw	37
  4418  0047  0642               	xorwf	printf@c,w
  4419  0048  1903               	btfsc	3,2
  4420  0049  284F               	goto	l2005
  4421                           
  4422                           ;doprnt.c: 540: {
  4423                           ;doprnt.c: 541: (putch(c) );
  4424  004A  0842               	movf	printf@c,w
  4425  004B  3187  271A  3180   	fcall	_putch
  4426                           
  4427                           ;doprnt.c: 542: continue;
  4428  004E  2833               	goto	l2089
  4429  004F                     l2005:	
  4430                           
  4431                           ;doprnt.c: 543: }
  4432                           ;doprnt.c: 548: flag = 0;
  4433  004F  0020               	movlb	0	; select bank0
  4434  0050  01BF               	clrf	printf@flag
  4435                           
  4436                           ;doprnt.c: 635: switch(c = *f++) {
  4437  0051  287D               	goto	l2023
  4438  0052                     l338:	
  4439                           ;doprnt.c: 712: case 'X':
  4440                           
  4441                           ;doprnt.c: 698: case 'i':
  4442                           ;doprnt.c: 699: break;
  4443                           
  4444                           ;doprnt.c: 697: case 'd':
  4445                           
  4446                           ;doprnt.c: 638: goto alldone;
  4447                           
  4448                           ;doprnt.c: 637: case 0:
  4449                           
  4450                           
  4451                           ;doprnt.c: 714: flag |= 0x20;
  4452  0052  16BF               	bsf	printf@flag,5
  4453  0053                     l339:	
  4454                           ;doprnt.c: 718: case 'x':
  4455                           
  4456                           
  4457                           ;doprnt.c: 721: flag |= 0x80;
  4458  0053  17BF               	bsf	printf@flag,7
  4459                           
  4460                           ;doprnt.c: 723: break;
  4461  0054  289D               	goto	l337
  4462  0055                     l2007:	
  4463                           ;doprnt.c: 728: case 's':
  4464                           
  4465                           
  4466                           ;doprnt.c: 734: cp = (*(const char * *)__va_arg((*(const char * **)ap), (const char *)0)
      +                          );
  4467  0055  083E               	movf	printf@ap,w
  4468  0056  0086               	movwf	6
  4469  0057  0187               	clrf	7
  4470  0058  3F40               	moviw [0]fsr1
  4471  0059  00BC               	movwf	printf@cp
  4472  005A  3F41               	moviw [1]fsr1
  4473  005B  00BD               	movwf	printf@cp+1
  4474  005C  3002               	movlw	2
  4475  005D  00B4               	movwf	??_printf
  4476  005E  0834               	movf	??_printf,w
  4477  005F  07BE               	addwf	printf@ap,f
  4478                           
  4479                           ;doprnt.c: 740: if(!cp)
  4480  0060  083C               	movf	printf@cp,w
  4481  0061  043D               	iorwf	printf@cp+1,w
  4482  0062  1D03               	btfss	3,2
  4483  0063  2868               	goto	l2019
  4484                           
  4485                           ;doprnt.c: 741: cp = "(null)";
  4486  0064  30D3               	movlw	low (STR_12| (0+32768))
  4487  0065  00BC               	movwf	printf@cp
  4488  0066  3084               	movlw	high (STR_12| (0+32768))
  4489  0067  00BD               	movwf	printf@cp+1
  4490  0068                     l2019:	
  4491                           ;doprnt.c: 777: while(*cp)
  4492                           
  4493  0068  083C               	movf	printf@cp,w
  4494  0069  0084               	movwf	4
  4495  006A  083D               	movf	printf@cp+1,w
  4496  006B  0085               	movwf	5
  4497  006C  0012               	moviw fsr0++
  4498  006D  1903               	btfsc	3,2
  4499  006E  2833               	goto	l2089
  4500                           
  4501                           ;doprnt.c: 778: (putch(*cp++) );
  4502  006F  083C               	movf	printf@cp,w
  4503  0070  0084               	movwf	4
  4504  0071  083D               	movf	printf@cp+1,w
  4505  0072  0085               	movwf	5
  4506  0073  0800               	movf	0,w	;code access
  4507  0074  3187  271A  3180   	fcall	_putch
  4508  0077  3001               	movlw	1
  4509  0078  0020               	movlb	0	; select bank0
  4510  0079  07BC               	addwf	printf@cp,f
  4511  007A  3000               	movlw	0
  4512  007B  3DBD               	addwfc	printf@cp+1,f
  4513  007C  2868               	goto	l2019
  4514  007D                     l2023:	
  4515                           ;doprnt.c: 822: }
  4516                           
  4517                           ;doprnt.c: 813: continue;
  4518                           
  4519                           ;doprnt.c: 802: default:
  4520                           
  4521                           ;doprnt.c: 779: continue;
  4522                           
  4523  007D  082F               	movf	printf@f+1,w
  4524  007E  00B5               	movwf	??_printf+1
  4525  007F  082E               	movf	printf@f,w
  4526  0080  00B4               	movwf	??_printf
  4527  0081  0AAE               	incf	printf@f,f
  4528  0082  1903               	skipnz
  4529  0083  0AAF               	incf	printf@f+1,f
  4530  0084  0834               	movf	??_printf,w
  4531  0085  0084               	movwf	4
  4532  0086  0835               	movf	??_printf+1,w
  4533  0087  0085               	movwf	5
  4534  0088  0800               	movf	0,w	;code access
  4535  0089  00C2               	movwf	printf@c
  4536                           
  4537                           ; Switch size 1, requested type "space"
  4538                           ; Number of cases is 6, Range of values is 0 to 120
  4539                           ; switch strategies available:
  4540                           ; Name         Instructions Cycles
  4541                           ; simple_byte           19    10 (average)
  4542                           ; direct_byte          248     6 (fixed)
  4543                           ; jumptable            260     6 (fixed)
  4544                           ;	Chosen strategy is simple_byte
  4545  008A  3A00               	xorlw	0	; case 0
  4546  008B  1903               	skipnz
  4547  008C  298E               	goto	l372
  4548  008D  3A58               	xorlw	88	; case 88
  4549  008E  1903               	skipnz
  4550  008F  2852               	goto	l338
  4551  0090  3A3C               	xorlw	60	; case 100
  4552  0091  1903               	skipnz
  4553  0092  289D               	goto	l337
  4554  0093  3A0D               	xorlw	13	; case 105
  4555  0094  1903               	skipnz
  4556  0095  289D               	goto	l337
  4557  0096  3A1A               	xorlw	26	; case 115
  4558  0097  1903               	skipnz
  4559  0098  2855               	goto	l2007
  4560  0099  3A0B               	xorlw	11	; case 120
  4561  009A  1903               	skipnz
  4562  009B  2853               	goto	l339
  4563  009C  2833               	goto	l2089
  4564  009D                     l337:	
  4565                           
  4566                           ;doprnt.c: 1251: if((flag & 0x80) == 0x00)
  4567  009D  1BBF               	btfsc	printf@flag,7
  4568  009E  28B6               	goto	l2035
  4569                           
  4570                           ;doprnt.c: 1253: {
  4571                           ;doprnt.c: 1259: val = (int)(*(int *)__va_arg((*(int **)ap), (int)0));
  4572  009F  083E               	movf	printf@ap,w
  4573  00A0  0086               	movwf	6
  4574  00A1  0187               	clrf	7
  4575  00A2  3F40               	moviw [0]fsr1
  4576  00A3  00C0               	movwf	printf@val
  4577  00A4  3F41               	moviw [1]fsr1
  4578  00A5  00C1               	movwf	printf@val+1
  4579  00A6  3002               	movlw	2
  4580  00A7  00B4               	movwf	??_printf
  4581  00A8  0834               	movf	??_printf,w
  4582  00A9  07BE               	addwf	printf@ap,f
  4583                           
  4584                           ;doprnt.c: 1261: if((int)val < 0) {
  4585  00AA  1FC1               	btfss	printf@val+1,7
  4586  00AB  2906               	goto	l2061
  4587                           
  4588                           ;doprnt.c: 1262: flag |= 0x03;
  4589  00AC  3003               	movlw	3
  4590  00AD  00B4               	movwf	??_printf
  4591  00AE  0834               	movf	??_printf,w
  4592  00AF  04BF               	iorwf	printf@flag,f
  4593                           
  4594                           ;doprnt.c: 1263: val = -val;
  4595  00B0  09C0               	comf	printf@val,f
  4596  00B1  09C1               	comf	printf@val+1,f
  4597  00B2  0AC0               	incf	printf@val,f
  4598  00B3  1903               	skipnz
  4599  00B4  0AC1               	incf	printf@val+1,f
  4600                           
  4601                           ;doprnt.c: 1264: }
  4602                           ;doprnt.c: 1266: }
  4603  00B5  2906               	goto	l2061
  4604  00B6                     l2035:	
  4605                           
  4606                           ;doprnt.c: 1268: else
  4607                           ;doprnt.c: 1273: {
  4608                           ;doprnt.c: 1286: val = (*(unsigned *)__va_arg((*(unsigned **)ap), (unsigned)0));
  4609  00B6  083E               	movf	printf@ap,w
  4610  00B7  0086               	movwf	6
  4611  00B8  0187               	clrf	7
  4612  00B9  3F40               	moviw [0]fsr1
  4613  00BA  00C0               	movwf	printf@val
  4614  00BB  3F41               	moviw [1]fsr1
  4615  00BC  00C1               	movwf	printf@val+1
  4616  00BD  3002               	movlw	2
  4617  00BE  00B4               	movwf	??_printf
  4618  00BF  0834               	movf	??_printf,w
  4619  00C0  07BE               	addwf	printf@ap,f
  4620                           
  4621                           ;doprnt.c: 1287: }
  4622                           ;doprnt.c: 1294: switch((unsigned char)(flag & 0x80)) {
  4623  00C1  2906               	goto	l2061
  4624  00C2                     l350:	
  4625                           ;doprnt.c: 1299: case 0x00:
  4626                           
  4627                           
  4628                           ;doprnt.c: 1305: for(c = 1 ; c != sizeof dpowers/sizeof dpowers[0] ; c++)
  4629  00C2  01C2               	clrf	printf@c
  4630  00C3  0AC2               	incf	printf@c,f
  4631  00C4                     L4:	
  4632  00C4  3005               	movlw	5
  4633  00C5  0642               	xorwf	printf@c,w
  4634  00C6  1903               	btfsc	3,2
  4635  00C7  290F               	goto	l2063
  4636                           
  4637                           ;doprnt.c: 1306: if(val < dpowers[c])
  4638  00C8  0842               	movf	printf@c,w
  4639  00C9  00B4               	movwf	??_printf
  4640  00CA  01B5               	clrf	??_printf+1
  4641  00CB  35B4               	lslf	??_printf,f
  4642  00CC  0DB5               	rlf	??_printf+1,f
  4643  00CD  30DD               	movlw	low (_dpowers| (0+32768))
  4644  00CE  0734               	addwf	??_printf,w
  4645  00CF  0084               	movwf	4
  4646  00D0  3083               	movlw	high (_dpowers| (0+32768))
  4647  00D1  3D35               	addwfc	??_printf+1,w
  4648  00D2  0085               	movwf	5
  4649  00D3  3F00               	moviw [0]fsr0
  4650  00D4  00B6               	movwf	??_printf+2
  4651  00D5  3F01               	moviw [1]fsr0
  4652  00D6  00B7               	movwf	??_printf+3
  4653  00D7  0837               	movf	??_printf+3,w
  4654  00D8  0241               	subwf	printf@val+1,w
  4655  00D9  1D03               	skipz
  4656  00DA  28DD               	goto	u1695
  4657  00DB  0836               	movf	??_printf+2,w
  4658  00DC  0240               	subwf	printf@val,w
  4659  00DD                     u1695:	
  4660  00DD  1C03               	btfss	3,0
  4661  00DE  290F               	goto	l2063
  4662                           
  4663                           ;doprnt.c: 1307: break;
  4664  00DF  3001               	movlw	1
  4665  00E0  00B4               	movwf	??_printf
  4666  00E1  0834               	movf	??_printf,w
  4667  00E2  07C2               	addwf	printf@c,f
  4668  00E3  28C4               	goto	L4
  4669  00E4                     l355:	
  4670                           ;doprnt.c: 1314: case 0x80:
  4671                           
  4672                           ;doprnt.c: 1309: break;
  4673                           
  4674                           
  4675                           ;doprnt.c: 1316: for(c = 1 ; c != sizeof hexpowers/sizeof hexpowers[0] ; c++)
  4676  00E4  01C2               	clrf	printf@c
  4677  00E5  0AC2               	incf	printf@c,f
  4678  00E6                     L5:	
  4679  00E6  3004               	movlw	4
  4680  00E7  0642               	xorwf	printf@c,w
  4681  00E8  1903               	btfsc	3,2
  4682  00E9  290F               	goto	l2063
  4683                           
  4684                           ;doprnt.c: 1317: if(val < hexpowers[c])
  4685  00EA  0842               	movf	printf@c,w
  4686  00EB  00B4               	movwf	??_printf
  4687  00EC  01B5               	clrf	??_printf+1
  4688  00ED  35B4               	lslf	??_printf,f
  4689  00EE  0DB5               	rlf	??_printf+1,f
  4690  00EF  30E7               	movlw	low (_hexpowers| (0+32768))
  4691  00F0  0734               	addwf	??_printf,w
  4692  00F1  0084               	movwf	4
  4693  00F2  3083               	movlw	high (_hexpowers| (0+32768))
  4694  00F3  3D35               	addwfc	??_printf+1,w
  4695  00F4  0085               	movwf	5
  4696  00F5  3F00               	moviw [0]fsr0
  4697  00F6  00B6               	movwf	??_printf+2
  4698  00F7  3F01               	moviw [1]fsr0
  4699  00F8  00B7               	movwf	??_printf+3
  4700  00F9  0837               	movf	??_printf+3,w
  4701  00FA  0241               	subwf	printf@val+1,w
  4702  00FB  1D03               	skipz
  4703  00FC  28FF               	goto	u1725
  4704  00FD  0836               	movf	??_printf+2,w
  4705  00FE  0240               	subwf	printf@val,w
  4706  00FF                     u1725:	
  4707  00FF  1C03               	btfss	3,0
  4708  0100  290F               	goto	l2063
  4709                           
  4710                           ;doprnt.c: 1318: break;
  4711  0101  3001               	movlw	1
  4712  0102  00B4               	movwf	??_printf
  4713  0103  0834               	movf	??_printf,w
  4714  0104  07C2               	addwf	printf@c,f
  4715  0105  28E6               	goto	L5
  4716  0106                     l2061:	
  4717                           ;doprnt.c: 1336: }
  4718                           
  4719                           ;doprnt.c: 1320: break;
  4720                           
  4721  0106  083F               	movf	printf@flag,w
  4722  0107  3980               	andlw	128
  4723                           
  4724                           ; Switch size 1, requested type "space"
  4725                           ; Number of cases is 2, Range of values is 0 to 128
  4726                           ; switch strategies available:
  4727                           ; Name         Instructions Cycles
  4728                           ; simple_byte            7     4 (average)
  4729                           ; jumptable            260     6 (fixed)
  4730                           ;	Chosen strategy is simple_byte
  4731  0108  3A00               	xorlw	0	; case 0
  4732  0109  1903               	skipnz
  4733  010A  28C2               	goto	l350
  4734  010B  3A80               	xorlw	128	; case 128
  4735  010C  1903               	skipnz
  4736  010D  28E4               	goto	l355
  4737  010E  290F               	goto	l2063
  4738  010F                     l2063:	
  4739                           
  4740                           ;doprnt.c: 1422: {
  4741                           ;doprnt.c: 1438: if(flag & 0x03)
  4742  010F  083F               	movf	printf@flag,w
  4743  0110  3903               	andlw	3
  4744  0111  1903               	btfsc	3,2
  4745  0112  2917               	goto	l2067
  4746                           
  4747                           ;doprnt.c: 1439: (putch('-') );
  4748  0113  302D               	movlw	45
  4749  0114  3187  271A  3180   	fcall	_putch
  4750  0117                     l2067:	
  4751                           
  4752                           ;doprnt.c: 1469: }
  4753                           ;doprnt.c: 1472: prec = c;
  4754  0117  0020               	movlb	0	; select bank0
  4755  0118  0842               	movf	printf@c,w
  4756  0119  00B4               	movwf	??_printf
  4757  011A  0834               	movf	??_printf,w
  4758  011B  00BB               	movwf	printf@prec
  4759                           
  4760                           ;doprnt.c: 1474: while(prec--) {
  4761  011C  297C               	goto	l2087
  4762  011D                     l2069:	
  4763                           ;doprnt.c: 1478: {
  4764                           ;doprnt.c: 1483: case 0x00:
  4765                           
  4766                           ;doprnt.c: 1476: switch((unsigned char)(flag & 0x80))
  4767                           
  4768                           
  4769                           ;doprnt.c: 1489: c = (val / dpowers[prec]) % 10 + '0';
  4770  011D  300A               	movlw	10
  4771  011E  00A8               	movwf	___lwmod@divisor
  4772  011F  3000               	movlw	0
  4773  0120  00A9               	movwf	___lwmod@divisor+1
  4774  0121  083B               	movf	printf@prec,w
  4775  0122  00B4               	movwf	??_printf
  4776  0123  01B5               	clrf	??_printf+1
  4777  0124  35B4               	lslf	??_printf,f
  4778  0125  0DB5               	rlf	??_printf+1,f
  4779  0126  30DD               	movlw	low (_dpowers| (0+32768))
  4780  0127  0734               	addwf	??_printf,w
  4781  0128  0084               	movwf	4
  4782  0129  3083               	movlw	high (_dpowers| (0+32768))
  4783  012A  3D35               	addwfc	??_printf+1,w
  4784  012B  0085               	movwf	5
  4785  012C  3F00               	moviw [0]fsr0
  4786  012D  00A0               	movwf	___lwdiv@divisor
  4787  012E  3F01               	moviw [1]fsr0
  4788  012F  00A1               	movwf	___lwdiv@divisor+1
  4789  0130  0841               	movf	printf@val+1,w
  4790  0131  00A3               	movwf	___lwdiv@dividend+1
  4791  0132  0840               	movf	printf@val,w
  4792  0133  00A2               	movwf	___lwdiv@dividend
  4793  0134  3185  25A7  3180   	fcall	___lwdiv
  4794  0137  0020               	movlb	0	; select bank0
  4795  0138  0821               	movf	?___lwdiv+1,w
  4796  0139  00AB               	movwf	___lwmod@dividend+1
  4797  013A  0820               	movf	?___lwdiv,w
  4798  013B  00AA               	movwf	___lwmod@dividend
  4799  013C  3185  25DC  3180   	fcall	___lwmod
  4800  013F  0020               	movlb	0	; select bank0
  4801  0140  0828               	movf	?___lwmod,w
  4802  0141  3E30               	addlw	48
  4803  0142  2975               	goto	L2
  4804  0143                     l2071:	
  4805                           ;doprnt.c: 1497: case 0x80:
  4806                           
  4807                           ;doprnt.c: 1491: break;
  4808                           
  4809                           
  4810                           ;doprnt.c: 1499: {
  4811                           ;doprnt.c: 1500: unsigned char idx = (val / hexpowers[prec]) & 0xF;
  4812  0143  083B               	movf	printf@prec,w
  4813  0144  00B4               	movwf	??_printf
  4814  0145  01B5               	clrf	??_printf+1
  4815  0146  35B4               	lslf	??_printf,f
  4816  0147  0DB5               	rlf	??_printf+1,f
  4817  0148  30E7               	movlw	low (_hexpowers| (0+32768))
  4818  0149  0734               	addwf	??_printf,w
  4819  014A  0084               	movwf	4
  4820  014B  3083               	movlw	high (_hexpowers| (0+32768))
  4821  014C  3D35               	addwfc	??_printf+1,w
  4822  014D  0085               	movwf	5
  4823  014E  3F00               	moviw [0]fsr0
  4824  014F  00A0               	movwf	___lwdiv@divisor
  4825  0150  3F01               	moviw [1]fsr0
  4826  0151  00A1               	movwf	___lwdiv@divisor+1
  4827  0152  0841               	movf	printf@val+1,w
  4828  0153  00A3               	movwf	___lwdiv@dividend+1
  4829  0154  0840               	movf	printf@val,w
  4830  0155  00A2               	movwf	___lwdiv@dividend
  4831  0156  3185  25A7  3180   	fcall	___lwdiv
  4832  0159  0020               	movlb	0	; select bank0
  4833  015A  0820               	movf	?___lwdiv,w
  4834  015B  390F               	andlw	15
  4835  015C  00B6               	movwf	??_printf+2
  4836  015D  0836               	movf	??_printf+2,w
  4837  015E  00B8               	movwf	printf@idx
  4838                           
  4839                           ;doprnt.c: 1502: c = (flag & 0x20 ? "0123456789ABCDEF" : "0123456789abcdef")[idx];
  4840  015F  1ABF               	btfsc	printf@flag,5
  4841  0160  2965               	goto	l2077
  4842  0161  30B3               	movlw	low (STR_14| (0+32768))
  4843  0162  00B9               	movwf	_printf$645
  4844  0163  3084               	movlw	high (STR_14| (0+32768))
  4845  0164  2968               	goto	L3
  4846  0165                     l2077:	
  4847  0165  30A2               	movlw	low (STR_13| (0+32768))
  4848  0166  00B9               	movwf	_printf$645
  4849  0167  3084               	movlw	high (STR_13| (0+32768))
  4850  0168                     L3:	
  4851  0168  00BA               	movwf	_printf$645+1
  4852  0169  083A               	movf	_printf$645+1,w
  4853  016A  00B5               	movwf	??_printf+1
  4854  016B  0839               	movf	_printf$645,w
  4855  016C  00B4               	movwf	??_printf
  4856  016D  0838               	movf	printf@idx,w
  4857  016E  0734               	addwf	??_printf,w
  4858  016F  0084               	movwf	4
  4859  0170  0835               	movf	??_printf+1,w
  4860  0171  1803               	skipnc
  4861  0172  0A35               	incf	??_printf+1,w
  4862  0173  0085               	movwf	5
  4863  0174  0800               	movf	0,w	;code access
  4864  0175                     L2:	
  4865  0175  00B6               	movwf	??_printf+2
  4866  0176  0836               	movf	??_printf+2,w
  4867  0177  00C2               	movwf	printf@c
  4868  0178                     l2085:	
  4869                           ;doprnt.c: 1523: }
  4870                           
  4871                           ;doprnt.c: 1508: }
  4872                           ;doprnt.c: 1510: break;
  4873                           
  4874                           
  4875                           ;doprnt.c: 1524: (putch(c) );
  4876  0178  0842               	movf	printf@c,w
  4877  0179  3187  271A  3180   	fcall	_putch
  4878  017C                     l2087:	
  4879  017C  30FF               	movlw	255
  4880  017D  0020               	movlb	0	; select bank0
  4881  017E  00B4               	movwf	??_printf
  4882  017F  0834               	movf	??_printf,w
  4883  0180  07BB               	addwf	printf@prec,f
  4884  0181  0A3B               	incf	printf@prec,w
  4885  0182  1903               	btfsc	3,2
  4886  0183  2833               	goto	l2089
  4887  0184  083F               	movf	printf@flag,w
  4888  0185  3980               	andlw	128
  4889                           
  4890                           ; Switch size 1, requested type "space"
  4891                           ; Number of cases is 2, Range of values is 0 to 128
  4892                           ; switch strategies available:
  4893                           ; Name         Instructions Cycles
  4894                           ; simple_byte            7     4 (average)
  4895                           ; jumptable            260     6 (fixed)
  4896                           ;	Chosen strategy is simple_byte
  4897  0186  3A00               	xorlw	0	; case 0
  4898  0187  1903               	skipnz
  4899  0188  291D               	goto	l2069
  4900  0189  3A80               	xorlw	128	; case 128
  4901  018A  1903               	skipnz
  4902  018B  2943               	goto	l2071
  4903  018C  2978               	goto	l2085
  4904  018D  2978               	goto	l2085
  4905  018E                     l372:	
  4906                           ;doprnt.c: 1540: return 0;
  4907                           ;	Return value of _printf is never used
  4908                           
  4909                           ;doprnt.c: 1525: }
  4910                           ;doprnt.c: 1533: }
  4911                           ;doprnt.c: 1535: alldone:
  4912                           
  4913  018E  0008               	return
  4914  018F                     __end_of_printf:	
  4915                           
  4916                           	psect	text4
  4917  071A                     __ptext4:	
  4918 ;; *************** function _putch *****************
  4919 ;; Defined at:
  4920 ;;		line 111 in file "mcc_generated_files/eusart.c"
  4921 ;; Parameters:    Size  Location     Type
  4922 ;;  txData          1    wreg     unsigned char 
  4923 ;; Auto vars:     Size  Location     Type
  4924 ;;  txData          1    1[BANK0 ] unsigned char 
  4925 ;; Return value:  Size  Location     Type
  4926 ;;                  1    wreg      void 
  4927 ;; Registers used:
  4928 ;;		wreg, status,2, status,0, pclath, cstack
  4929 ;; Tracked objects:
  4930 ;;		On entry : 0/0
  4931 ;;		On exit  : 0/0
  4932 ;;		Unchanged: 0/0
  4933 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
  4934 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  4935 ;;      Locals:         0       1       0       0       0       0       0       0       0       0       0       0       
      +0       0
  4936 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  4937 ;;      Totals:         0       1       0       0       0       0       0       0       0       0       0       0       
      +0       0
  4938 ;;Total ram usage:        1 bytes
  4939 ;; Hardware stack levels used:    1
  4940 ;; Hardware stack levels required when called:    4
  4941 ;; This function calls:
  4942 ;;		_EUSART_Write
  4943 ;; This function is called by:
  4944 ;;		_printf
  4945 ;;		_puts
  4946 ;;		_cputs
  4947 ;; This function uses a non-reentrant model
  4948 ;;
  4949                           
  4950                           
  4951                           ;psect for function _putch
  4952  071A                     _putch:	
  4953                           
  4954                           ;incstack = 0
  4955                           ; Regs used in _putch: [wreg+status,2+status,0+pclath+cstack]
  4956                           ;putch@txData stored from wreg
  4957  071A  0020               	movlb	0	; select bank0
  4958  071B  00A1               	movwf	putch@txData
  4959                           
  4960                           ;eusart.c: 113: EUSART_Write(txData);
  4961  071C  0821               	movf	putch@txData,w
  4962  071D  3187  2701         	fcall	_EUSART_Write
  4963  071F  0008               	return
  4964  0720                     __end_of_putch:	
  4965                           
  4966                           	psect	text5
  4967  0701                     __ptext5:	
  4968 ;; *************** function _EUSART_Write *****************
  4969 ;; Defined at:
  4970 ;;		line 97 in file "mcc_generated_files/eusart.c"
  4971 ;; Parameters:    Size  Location     Type
  4972 ;;  txData          1    wreg     unsigned char 
  4973 ;; Auto vars:     Size  Location     Type
  4974 ;;  txData          1    0[BANK0 ] unsigned char 
  4975 ;; Return value:  Size  Location     Type
  4976 ;;                  1    wreg      void 
  4977 ;; Registers used:
  4978 ;;		wreg
  4979 ;; Tracked objects:
  4980 ;;		On entry : 0/0
  4981 ;;		On exit  : 0/0
  4982 ;;		Unchanged: 0/0
  4983 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
  4984 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  4985 ;;      Locals:         0       1       0       0       0       0       0       0       0       0       0       0       
      +0       0
  4986 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  4987 ;;      Totals:         0       1       0       0       0       0       0       0       0       0       0       0       
      +0       0
  4988 ;;Total ram usage:        1 bytes
  4989 ;; Hardware stack levels used:    1
  4990 ;; Hardware stack levels required when called:    3
  4991 ;; This function calls:
  4992 ;;		Nothing
  4993 ;; This function is called by:
  4994 ;;		_putch
  4995 ;; This function uses a non-reentrant model
  4996 ;;
  4997                           
  4998                           
  4999                           ;psect for function _EUSART_Write
  5000  0701                     _EUSART_Write:	
  5001                           
  5002                           ;incstack = 0
  5003                           ; Regs used in _EUSART_Write: [wreg]
  5004                           ;EUSART_Write@txData stored from wreg
  5005  0701  0020               	movlb	0	; select bank0
  5006  0702  00A0               	movwf	EUSART_Write@txData
  5007  0703                     l31:	
  5008                           ;eusart.c: 100: {
  5009                           
  5010                           ;eusart.c: 99: while(0 == PIR3bits.TXIF)
  5011                           
  5012  0703  002E               	movlb	14	; select bank14
  5013  0704  1E0F               	btfss	15,4	;volatile
  5014  0705  2F03               	goto	l31
  5015                           
  5016                           ;eusart.c: 101: }
  5017                           ;eusart.c: 103: TX1REG = txData;
  5018  0706  0020               	movlb	0	; select bank0
  5019  0707  0820               	movf	EUSART_Write@txData,w
  5020  0708  0022               	movlb	2	; select bank2
  5021  0709  009A               	movwf	26	;volatile
  5022  070A  0008               	return
  5023  070B                     __end_of_EUSART_Write:	
  5024                           
  5025                           	psect	text6
  5026  05DC                     __ptext6:	
  5027 ;; *************** function ___lwmod *****************
  5028 ;; Defined at:
  5029 ;;		line 6 in file "/opt/microchip/xc8/v1.41/sources/common/lwmod.c"
  5030 ;; Parameters:    Size  Location     Type
  5031 ;;  divisor         2    8[BANK0 ] unsigned int 
  5032 ;;  dividend        2   10[BANK0 ] unsigned int 
  5033 ;; Auto vars:     Size  Location     Type
  5034 ;;  counter         1   13[BANK0 ] unsigned char 
  5035 ;; Return value:  Size  Location     Type
  5036 ;;                  2    8[BANK0 ] unsigned int 
  5037 ;; Registers used:
  5038 ;;		wreg, status,2, status,0
  5039 ;; Tracked objects:
  5040 ;;		On entry : 0/0
  5041 ;;		On exit  : 0/0
  5042 ;;		Unchanged: 0/0
  5043 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
  5044 ;;      Params:         0       4       0       0       0       0       0       0       0       0       0       0       
      +0       0
  5045 ;;      Locals:         0       1       0       0       0       0       0       0       0       0       0       0       
      +0       0
  5046 ;;      Temps:          0       1       0       0       0       0       0       0       0       0       0       0       
      +0       0
  5047 ;;      Totals:         0       6       0       0       0       0       0       0       0       0       0       0       
      +0       0
  5048 ;;Total ram usage:        6 bytes
  5049 ;; Hardware stack levels used:    1
  5050 ;; Hardware stack levels required when called:    3
  5051 ;; This function calls:
  5052 ;;		Nothing
  5053 ;; This function is called by:
  5054 ;;		_printf
  5055 ;; This function uses a non-reentrant model
  5056 ;;
  5057                           
  5058                           
  5059                           ;psect for function ___lwmod
  5060  05DC                     ___lwmod:	
  5061                           
  5062                           ;incstack = 0
  5063                           ; Regs used in ___lwmod: [wreg+status,2+status,0]
  5064  05DC  0020               	movlb	0	; select bank0
  5065  05DD  0828               	movf	___lwmod@divisor,w
  5066  05DE  0429               	iorwf	___lwmod@divisor+1,w
  5067  05DF  1903               	btfsc	3,2
  5068  05E0  2E04               	goto	l1551
  5069  05E1  01AD               	clrf	___lwmod@counter
  5070  05E2  0AAD               	incf	___lwmod@counter,f
  5071  05E3                     l1541:	
  5072  05E3  1BA9               	btfsc	___lwmod@divisor+1,7
  5073  05E4  2DEF               	goto	l1543
  5074  05E5  3001               	movlw	1
  5075  05E6                     u995:	
  5076  05E6  35A8               	lslf	___lwmod@divisor,f
  5077  05E7  0DA9               	rlf	___lwmod@divisor+1,f
  5078  05E8  0B89               	decfsz	9,f
  5079  05E9  2DE6               	goto	u995
  5080  05EA  3001               	movlw	1
  5081  05EB  00AC               	movwf	??___lwmod
  5082  05EC  082C               	movf	??___lwmod,w
  5083  05ED  07AD               	addwf	___lwmod@counter,f
  5084  05EE  2DE3               	goto	l1541
  5085  05EF                     l1543:	
  5086  05EF  0829               	movf	___lwmod@divisor+1,w
  5087  05F0  022B               	subwf	___lwmod@dividend+1,w
  5088  05F1  1D03               	skipz
  5089  05F2  2DF5               	goto	u1015
  5090  05F3  0828               	movf	___lwmod@divisor,w
  5091  05F4  022A               	subwf	___lwmod@dividend,w
  5092  05F5                     u1015:	
  5093  05F5  1C03               	skipc
  5094  05F6  2DFB               	goto	l1547
  5095  05F7  0828               	movf	___lwmod@divisor,w
  5096  05F8  02AA               	subwf	___lwmod@dividend,f
  5097  05F9  0829               	movf	___lwmod@divisor+1,w
  5098  05FA  3BAB               	subwfb	___lwmod@dividend+1,f
  5099  05FB                     l1547:	
  5100  05FB  3001               	movlw	1
  5101  05FC                     u1025:	
  5102  05FC  36A9               	lsrf	___lwmod@divisor+1,f
  5103  05FD  0CA8               	rrf	___lwmod@divisor,f
  5104  05FE  0B89               	decfsz	9,f
  5105  05FF  2DFC               	goto	u1025
  5106  0600  3001               	movlw	1
  5107  0601  02AD               	subwf	___lwmod@counter,f
  5108  0602  1D03               	btfss	3,2
  5109  0603  2DEF               	goto	l1543
  5110  0604                     l1551:	
  5111  0604  082B               	movf	___lwmod@dividend+1,w
  5112  0605  00A9               	movwf	?___lwmod+1
  5113  0606  082A               	movf	___lwmod@dividend,w
  5114  0607  00A8               	movwf	?___lwmod
  5115  0608  0008               	return
  5116  0609                     __end_of___lwmod:	
  5117                           
  5118                           	psect	text7
  5119  05A7                     __ptext7:	
  5120 ;; *************** function ___lwdiv *****************
  5121 ;; Defined at:
  5122 ;;		line 6 in file "/opt/microchip/xc8/v1.41/sources/common/lwdiv.c"
  5123 ;; Parameters:    Size  Location     Type
  5124 ;;  divisor         2    0[BANK0 ] unsigned int 
  5125 ;;  dividend        2    2[BANK0 ] unsigned int 
  5126 ;; Auto vars:     Size  Location     Type
  5127 ;;  quotient        2    5[BANK0 ] unsigned int 
  5128 ;;  counter         1    7[BANK0 ] unsigned char 
  5129 ;; Return value:  Size  Location     Type
  5130 ;;                  2    0[BANK0 ] unsigned int 
  5131 ;; Registers used:
  5132 ;;		wreg, status,2, status,0
  5133 ;; Tracked objects:
  5134 ;;		On entry : 0/0
  5135 ;;		On exit  : 0/0
  5136 ;;		Unchanged: 0/0
  5137 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
  5138 ;;      Params:         0       4       0       0       0       0       0       0       0       0       0       0       
      +0       0
  5139 ;;      Locals:         0       3       0       0       0       0       0       0       0       0       0       0       
      +0       0
  5140 ;;      Temps:          0       1       0       0       0       0       0       0       0       0       0       0       
      +0       0
  5141 ;;      Totals:         0       8       0       0       0       0       0       0       0       0       0       0       
      +0       0
  5142 ;;Total ram usage:        8 bytes
  5143 ;; Hardware stack levels used:    1
  5144 ;; Hardware stack levels required when called:    3
  5145 ;; This function calls:
  5146 ;;		Nothing
  5147 ;; This function is called by:
  5148 ;;		_printf
  5149 ;; This function uses a non-reentrant model
  5150 ;;
  5151                           
  5152                           
  5153                           ;psect for function ___lwdiv
  5154  05A7                     ___lwdiv:	
  5155                           
  5156                           ;incstack = 0
  5157                           ; Regs used in ___lwdiv: [wreg+status,2+status,0]
  5158  05A7  0020               	movlb	0	; select bank0
  5159  05A8  01A5               	clrf	___lwdiv@quotient
  5160  05A9  01A6               	clrf	___lwdiv@quotient+1
  5161  05AA  0820               	movf	___lwdiv@divisor,w
  5162  05AB  0421               	iorwf	___lwdiv@divisor+1,w
  5163  05AC  1903               	btfsc	3,2
  5164  05AD  2DD7               	goto	l1529
  5165  05AE  01A7               	clrf	___lwdiv@counter
  5166  05AF  0AA7               	incf	___lwdiv@counter,f
  5167  05B0                     l1517:	
  5168  05B0  1BA1               	btfsc	___lwdiv@divisor+1,7
  5169  05B1  2DBC               	goto	l1519
  5170  05B2  3001               	movlw	1
  5171  05B3                     u925:	
  5172  05B3  35A0               	lslf	___lwdiv@divisor,f
  5173  05B4  0DA1               	rlf	___lwdiv@divisor+1,f
  5174  05B5  0B89               	decfsz	9,f
  5175  05B6  2DB3               	goto	u925
  5176  05B7  3001               	movlw	1
  5177  05B8  00A4               	movwf	??___lwdiv
  5178  05B9  0824               	movf	??___lwdiv,w
  5179  05BA  07A7               	addwf	___lwdiv@counter,f
  5180  05BB  2DB0               	goto	l1517
  5181  05BC                     l1519:	
  5182  05BC  3001               	movlw	1
  5183  05BD                     u945:	
  5184  05BD  35A5               	lslf	___lwdiv@quotient,f
  5185  05BE  0DA6               	rlf	___lwdiv@quotient+1,f
  5186  05BF  0B89               	decfsz	9,f
  5187  05C0  2DBD               	goto	u945
  5188  05C1  0821               	movf	___lwdiv@divisor+1,w
  5189  05C2  0223               	subwf	___lwdiv@dividend+1,w
  5190  05C3  1D03               	skipz
  5191  05C4  2DC7               	goto	u955
  5192  05C5  0820               	movf	___lwdiv@divisor,w
  5193  05C6  0222               	subwf	___lwdiv@dividend,w
  5194  05C7                     u955:	
  5195  05C7  1C03               	skipc
  5196  05C8  2DCE               	goto	l1525
  5197  05C9  0820               	movf	___lwdiv@divisor,w
  5198  05CA  02A2               	subwf	___lwdiv@dividend,f
  5199  05CB  0821               	movf	___lwdiv@divisor+1,w
  5200  05CC  3BA3               	subwfb	___lwdiv@dividend+1,f
  5201  05CD  1425               	bsf	___lwdiv@quotient,0
  5202  05CE                     l1525:	
  5203  05CE  3001               	movlw	1
  5204  05CF                     u965:	
  5205  05CF  36A1               	lsrf	___lwdiv@divisor+1,f
  5206  05D0  0CA0               	rrf	___lwdiv@divisor,f
  5207  05D1  0B89               	decfsz	9,f
  5208  05D2  2DCF               	goto	u965
  5209  05D3  3001               	movlw	1
  5210  05D4  02A7               	subwf	___lwdiv@counter,f
  5211  05D5  1D03               	btfss	3,2
  5212  05D6  2DBC               	goto	l1519
  5213  05D7                     l1529:	
  5214  05D7  0826               	movf	___lwdiv@quotient+1,w
  5215  05D8  00A1               	movwf	?___lwdiv+1
  5216  05D9  0825               	movf	___lwdiv@quotient,w
  5217  05DA  00A0               	movwf	?___lwdiv
  5218  05DB  0008               	return
  5219  05DC                     __end_of___lwdiv:	
  5220                           
  5221                           	psect	text8
  5222  0651                     __ptext8:	
  5223 ;; *************** function ___wmul *****************
  5224 ;; Defined at:
  5225 ;;		line 15 in file "/opt/microchip/xc8/v1.41/sources/common/Umul16.c"
  5226 ;; Parameters:    Size  Location     Type
  5227 ;;  multiplier      2    0[BANK0 ] unsigned int 
  5228 ;;  multiplicand    2    2[BANK0 ] unsigned int 
  5229 ;; Auto vars:     Size  Location     Type
  5230 ;;  product         2    4[BANK0 ] unsigned int 
  5231 ;; Return value:  Size  Location     Type
  5232 ;;                  2    0[BANK0 ] unsigned int 
  5233 ;; Registers used:
  5234 ;;		wreg, status,2, status,0
  5235 ;; Tracked objects:
  5236 ;;		On entry : 0/0
  5237 ;;		On exit  : 0/0
  5238 ;;		Unchanged: 0/0
  5239 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
  5240 ;;      Params:         0       4       0       0       0       0       0       0       0       0       0       0       
      +0       0
  5241 ;;      Locals:         0       2       0       0       0       0       0       0       0       0       0       0       
      +0       0
  5242 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  5243 ;;      Totals:         0       6       0       0       0       0       0       0       0       0       0       0       
      +0       0
  5244 ;;Total ram usage:        6 bytes
  5245 ;; Hardware stack levels used:    1
  5246 ;; Hardware stack levels required when called:    3
  5247 ;; This function calls:
  5248 ;;		Nothing
  5249 ;; This function is called by:
  5250 ;;		_main
  5251 ;; This function uses a non-reentrant model
  5252 ;;
  5253                           
  5254                           
  5255                           ;psect for function ___wmul
  5256  0651                     ___wmul:	
  5257                           
  5258                           ;incstack = 0
  5259                           ; Regs used in ___wmul: [wreg+status,2+status,0]
  5260  0651  0020               	movlb	0	; select bank0
  5261  0652  01A4               	clrf	___wmul@product
  5262  0653  01A5               	clrf	___wmul@product+1
  5263  0654                     l2097:	
  5264  0654  1C20               	btfss	___wmul@multiplier,0
  5265  0655  2E5A               	goto	l454
  5266  0656  0822               	movf	___wmul@multiplicand,w
  5267  0657  07A4               	addwf	___wmul@product,f
  5268  0658  0823               	movf	___wmul@multiplicand+1,w
  5269  0659  3DA5               	addwfc	___wmul@product+1,f
  5270  065A                     l454:	
  5271  065A  3001               	movlw	1
  5272  065B                     u1795:	
  5273  065B  35A2               	lslf	___wmul@multiplicand,f
  5274  065C  0DA3               	rlf	___wmul@multiplicand+1,f
  5275  065D  0B89               	decfsz	9,f
  5276  065E  2E5B               	goto	u1795
  5277  065F  3001               	movlw	1
  5278  0660                     u1805:	
  5279  0660  36A1               	lsrf	___wmul@multiplier+1,f
  5280  0661  0CA0               	rrf	___wmul@multiplier,f
  5281  0662  0B89               	decfsz	9,f
  5282  0663  2E60               	goto	u1805
  5283  0664  0820               	movf	___wmul@multiplier,w
  5284  0665  0421               	iorwf	___wmul@multiplier+1,w
  5285  0666  1D03               	btfss	3,2
  5286  0667  2E54               	goto	l2097
  5287  0668  0825               	movf	___wmul@product+1,w
  5288  0669  00A1               	movwf	?___wmul+1
  5289  066A  0824               	movf	___wmul@product,w
  5290  066B  00A0               	movwf	?___wmul
  5291  066C  0008               	return
  5292  066D                     __end_of___wmul:	
  5293                           
  5294                           	psect	text9
  5295  06EA                     __ptext9:	
  5296 ;; *************** function _SYSTEM_Initialize *****************
  5297 ;; Defined at:
  5298 ;;		line 82 in file "mcc_generated_files/mcc.c"
  5299 ;; Parameters:    Size  Location     Type
  5300 ;;		None
  5301 ;; Auto vars:     Size  Location     Type
  5302 ;;		None
  5303 ;; Return value:  Size  Location     Type
  5304 ;;                  1    wreg      void 
  5305 ;; Registers used:
  5306 ;;		wreg, status,2, status,0, pclath, cstack
  5307 ;; Tracked objects:
  5308 ;;		On entry : 0/0
  5309 ;;		On exit  : 0/0
  5310 ;;		Unchanged: 0/0
  5311 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
  5312 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  5313 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  5314 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  5315 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  5316 ;;Total ram usage:        0 bytes
  5317 ;; Hardware stack levels used:    1
  5318 ;; Hardware stack levels required when called:    4
  5319 ;; This function calls:
  5320 ;;		_EUSART_Initialize
  5321 ;;		_I2C2_Initialize
  5322 ;;		_OSCILLATOR_Initialize
  5323 ;;		_PIN_MANAGER_Initialize
  5324 ;; This function is called by:
  5325 ;;		_main
  5326 ;; This function uses a non-reentrant model
  5327 ;;
  5328                           
  5329                           
  5330                           ;psect for function _SYSTEM_Initialize
  5331  06EA                     _SYSTEM_Initialize:	
  5332                           
  5333                           ;mcc.c: 85: PIN_MANAGER_Initialize();
  5334                           
  5335                           ;incstack = 0
  5336                           ; Regs used in _SYSTEM_Initialize: [wreg+status,2+status,0+pclath+cstack]
  5337  06EA  3184  24DF  3186   	fcall	_PIN_MANAGER_Initialize
  5338                           
  5339                           ;mcc.c: 86: OSCILLATOR_Initialize();
  5340  06ED  3187  270B  3186   	fcall	_OSCILLATOR_Initialize
  5341                           
  5342                           ;mcc.c: 87: I2C2_Initialize();
  5343  06F0  3186  266D  3186   	fcall	_I2C2_Initialize
  5344                           
  5345                           ;mcc.c: 88: EUSART_Initialize();
  5346  06F3  3186  26F6         	fcall	_EUSART_Initialize
  5347  06F5  0008               	return
  5348  06F6                     __end_of_SYSTEM_Initialize:	
  5349                           
  5350                           	psect	text10
  5351  04DF                     __ptext10:	
  5352 ;; *************** function _PIN_MANAGER_Initialize *****************
  5353 ;; Defined at:
  5354 ;;		line 50 in file "mcc_generated_files/pin_manager.c"
  5355 ;; Parameters:    Size  Location     Type
  5356 ;;		None
  5357 ;; Auto vars:     Size  Location     Type
  5358 ;;  state           1    0[BANK0 ] unsigned char 
  5359 ;; Return value:  Size  Location     Type
  5360 ;;                  1    wreg      void 
  5361 ;; Registers used:
  5362 ;;		wreg, status,2, status,0
  5363 ;; Tracked objects:
  5364 ;;		On entry : 0/0
  5365 ;;		On exit  : 0/0
  5366 ;;		Unchanged: 0/0
  5367 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
  5368 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  5369 ;;      Locals:         0       1       0       0       0       0       0       0       0       0       0       0       
      +0       0
  5370 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  5371 ;;      Totals:         0       1       0       0       0       0       0       0       0       0       0       0       
      +0       0
  5372 ;;Total ram usage:        1 bytes
  5373 ;; Hardware stack levels used:    1
  5374 ;; Hardware stack levels required when called:    3
  5375 ;; This function calls:
  5376 ;;		Nothing
  5377 ;; This function is called by:
  5378 ;;		_SYSTEM_Initialize
  5379 ;; This function uses a non-reentrant model
  5380 ;;
  5381                           
  5382                           
  5383                           ;psect for function _PIN_MANAGER_Initialize
  5384  04DF                     _PIN_MANAGER_Initialize:	
  5385                           
  5386                           ;pin_manager.c: 52: LATB = 0x0;
  5387                           
  5388                           ;incstack = 0
  5389                           ; Regs used in _PIN_MANAGER_Initialize: [wreg+status,2+status,0]
  5390  04DF  0020               	movlb	0	; select bank0
  5391  04E0  0197               	clrf	23	;volatile
  5392                           
  5393                           ;pin_manager.c: 53: WPUE = 0x8;
  5394  04E1  3008               	movlw	8
  5395  04E2  003E               	movlb	30	; select bank30
  5396  04E3  00E5               	movwf	101	;volatile
  5397                           
  5398                           ;pin_manager.c: 54: LATA = 0x0;
  5399  04E4  0020               	movlb	0	; select bank0
  5400  04E5  0196               	clrf	22	;volatile
  5401                           
  5402                           ;pin_manager.c: 55: LATC = 0x1;
  5403  04E6  3001               	movlw	1
  5404  04E7  0098               	movwf	24	;volatile
  5405                           
  5406                           ;pin_manager.c: 56: WPUA = 0xF0;
  5407  04E8  30F0               	movlw	240
  5408  04E9  003E               	movlb	30	; select bank30
  5409  04EA  00B9               	movwf	57	;volatile
  5410                           
  5411                           ;pin_manager.c: 57: WPUB = 0xFF;
  5412  04EB  30FF               	movlw	255
  5413  04EC  00C4               	movwf	68	;volatile
  5414                           
  5415                           ;pin_manager.c: 58: WPUC = 0xE7;
  5416  04ED  30E7               	movlw	231
  5417  04EE  00CF               	movwf	79	;volatile
  5418                           
  5419                           ;pin_manager.c: 59: ANSELA = 0xFF;
  5420  04EF  30FF               	movlw	255
  5421  04F0  00B8               	movwf	56	;volatile
  5422                           
  5423                           ;pin_manager.c: 60: ANSELB = 0xFF;
  5424  04F1  30FF               	movlw	255
  5425  04F2  00C3               	movwf	67	;volatile
  5426                           
  5427                           ;pin_manager.c: 61: ANSELC = 0xE7;
  5428  04F3  30E7               	movlw	231
  5429  04F4  00CE               	movwf	78	;volatile
  5430                           
  5431                           ;pin_manager.c: 62: TRISB = 0xFF;
  5432  04F5  30FF               	movlw	255
  5433  04F6  0020               	movlb	0	; select bank0
  5434  04F7  0092               	movwf	18	;volatile
  5435                           
  5436                           ;pin_manager.c: 63: TRISC = 0xFE;
  5437  04F8  30FE               	movlw	254
  5438  04F9  0093               	movwf	19	;volatile
  5439                           
  5440                           ;pin_manager.c: 64: TRISA = 0xF0;
  5441  04FA  30F0               	movlw	240
  5442  04FB  0091               	movwf	17	;volatile
  5443                           
  5444                           ;pin_manager.c: 69: bool state = GIE;
  5445  04FC  3000               	movlw	0
  5446  04FD  1B8B               	btfsc	11,7	;volatile
  5447  04FE  3001               	movlw	1
  5448  04FF  00A0               	movwf	PIN_MANAGER_Initialize@state
  5449                           
  5450                           ;pin_manager.c: 70: GIE = 0;
  5451  0500  138B               	bcf	11,7	;volatile
  5452                           
  5453                           ;pin_manager.c: 71: PPSLOCK = 0x55;
  5454  0501  3055               	movlw	85
  5455  0502  003D               	movlb	29	; select bank29
  5456  0503  008F               	movwf	15	;volatile
  5457                           
  5458                           ;pin_manager.c: 72: PPSLOCK = 0xAA;
  5459  0504  30AA               	movlw	170
  5460  0505  008F               	movwf	15	;volatile
  5461                           
  5462                           ;pin_manager.c: 73: PPSLOCKbits.PPSLOCKED = 0x00;
  5463  0506  100F               	bcf	15,0	;volatile
  5464                           
  5465                           ;pin_manager.c: 75: RC0PPS = 0x10;
  5466  0507  3010               	movlw	16
  5467  0508  003E               	movlb	30	; select bank30
  5468  0509  00A0               	movwf	32	;volatile
  5469                           
  5470                           ;pin_manager.c: 76: RC3PPS = 0x17;
  5471  050A  3017               	movlw	23
  5472  050B  00A3               	movwf	35	;volatile
  5473                           
  5474                           ;pin_manager.c: 77: SSP2DATPPSbits.SSP2DATPPS = 0x13;
  5475  050C  003D               	movlb	29	; select bank29
  5476  050D  0849               	movf	73,w	;volatile
  5477  050E  39E0               	andlw	-32
  5478  050F  3813               	iorlw	19
  5479  0510  00C9               	movwf	73	;volatile
  5480                           
  5481                           ;pin_manager.c: 78: SSP2CLKPPSbits.SSP2CLKPPS = 0x14;
  5482  0511  0848               	movf	72,w	;volatile
  5483  0512  39E0               	andlw	-32
  5484  0513  3814               	iorlw	20
  5485  0514  00C8               	movwf	72	;volatile
  5486                           
  5487                           ;pin_manager.c: 79: RC4PPS = 0x16;
  5488  0515  3016               	movlw	22
  5489  0516  003E               	movlb	30	; select bank30
  5490  0517  00A4               	movwf	36	;volatile
  5491                           
  5492                           ;pin_manager.c: 81: PPSLOCK = 0x55;
  5493  0518  3055               	movlw	85
  5494  0519  003D               	movlb	29	; select bank29
  5495  051A  008F               	movwf	15	;volatile
  5496                           
  5497                           ;pin_manager.c: 82: PPSLOCK = 0xAA;
  5498  051B  30AA               	movlw	170
  5499  051C  008F               	movwf	15	;volatile
  5500                           
  5501                           ;pin_manager.c: 83: PPSLOCKbits.PPSLOCKED = 0x01;
  5502  051D  140F               	bsf	15,0	;volatile
  5503                           
  5504                           ;pin_manager.c: 85: GIE = state;
  5505  051E  0020               	movlb	0	; select bank0
  5506  051F  1C20               	btfss	PIN_MANAGER_Initialize@state,0
  5507  0520  2D23               	goto	u1600
  5508  0521  178B               	bsf	11,7	;volatile
  5509  0522  0008               	return
  5510  0523                     u1600:	
  5511  0523  138B               	bcf	11,7	;volatile
  5512  0524  0008               	return
  5513  0525                     __end_of_PIN_MANAGER_Initialize:	
  5514                           
  5515                           	psect	text11
  5516  070B                     __ptext11:	
  5517 ;; *************** function _OSCILLATOR_Initialize *****************
  5518 ;; Defined at:
  5519 ;;		line 91 in file "mcc_generated_files/mcc.c"
  5520 ;; Parameters:    Size  Location     Type
  5521 ;;		None
  5522 ;; Auto vars:     Size  Location     Type
  5523 ;;		None
  5524 ;; Return value:  Size  Location     Type
  5525 ;;                  1    wreg      void 
  5526 ;; Registers used:
  5527 ;;		wreg, status,2
  5528 ;; Tracked objects:
  5529 ;;		On entry : 0/0
  5530 ;;		On exit  : 0/0
  5531 ;;		Unchanged: 0/0
  5532 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
  5533 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  5534 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  5535 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  5536 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  5537 ;;Total ram usage:        0 bytes
  5538 ;; Hardware stack levels used:    1
  5539 ;; Hardware stack levels required when called:    3
  5540 ;; This function calls:
  5541 ;;		Nothing
  5542 ;; This function is called by:
  5543 ;;		_SYSTEM_Initialize
  5544 ;; This function uses a non-reentrant model
  5545 ;;
  5546                           
  5547                           
  5548                           ;psect for function _OSCILLATOR_Initialize
  5549  070B                     _OSCILLATOR_Initialize:	
  5550                           
  5551                           ;mcc.c: 94: OSCCON1 = 0x62;
  5552                           
  5553                           ;incstack = 0
  5554                           ; Regs used in _OSCILLATOR_Initialize: [wreg+status,2]
  5555  070B  3062               	movlw	98
  5556  070C  0031               	movlb	17	; select bank17
  5557  070D  008D               	movwf	13	;volatile
  5558                           
  5559                           ;mcc.c: 96: OSCCON3 = 0x00;
  5560  070E  018F               	clrf	15	;volatile
  5561                           
  5562                           ;mcc.c: 98: OSCEN = 0x00;
  5563  070F  0191               	clrf	17	;volatile
  5564                           
  5565                           ;mcc.c: 100: OSCFRQ = 0x02;
  5566  0710  3002               	movlw	2
  5567  0711  0093               	movwf	19	;volatile
  5568                           
  5569                           ;mcc.c: 102: OSCTUNE = 0x00;
  5570  0712  0192               	clrf	18	;volatile
  5571  0713  0008               	return
  5572  0714                     __end_of_OSCILLATOR_Initialize:	
  5573                           
  5574                           	psect	text12
  5575  066D                     __ptext12:	
  5576 ;; *************** function _I2C2_Initialize *****************
  5577 ;; Defined at:
  5578 ;;		line 198 in file "mcc_generated_files/i2c2.c"
  5579 ;; Parameters:    Size  Location     Type
  5580 ;;		None
  5581 ;; Auto vars:     Size  Location     Type
  5582 ;;		None
  5583 ;; Return value:  Size  Location     Type
  5584 ;;                  1    wreg      void 
  5585 ;; Registers used:
  5586 ;;		wreg, status,2
  5587 ;; Tracked objects:
  5588 ;;		On entry : 0/0
  5589 ;;		On exit  : 0/0
  5590 ;;		Unchanged: 0/0
  5591 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
  5592 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  5593 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  5594 ;;      Temps:          0       1       0       0       0       0       0       0       0       0       0       0       
      +0       0
  5595 ;;      Totals:         0       1       0       0       0       0       0       0       0       0       0       0       
      +0       0
  5596 ;;Total ram usage:        1 bytes
  5597 ;; Hardware stack levels used:    1
  5598 ;; Hardware stack levels required when called:    3
  5599 ;; This function calls:
  5600 ;;		Nothing
  5601 ;; This function is called by:
  5602 ;;		_SYSTEM_Initialize
  5603 ;; This function uses a non-reentrant model
  5604 ;;
  5605                           
  5606                           
  5607                           ;psect for function _I2C2_Initialize
  5608  066D                     _I2C2_Initialize:	
  5609                           
  5610                           ;i2c2.c: 200: i2c2_object.pTrHead = i2c2_tr_queue;
  5611                           
  5612                           ;incstack = 0
  5613                           ; Regs used in _I2C2_Initialize: [wreg+status,2]
  5614  066D  3060               	movlw	(low (_i2c2_tr_queue| 0))& (0+255)
  5615  066E  0020               	movlb	0	; select bank0
  5616  066F  00A0               	movwf	??_I2C2_Initialize
  5617  0670  0820               	movf	??_I2C2_Initialize,w
  5618  0671  00CB               	movwf	low ((_i2c2_object| 0+1))
  5619                           
  5620                           ;i2c2.c: 201: i2c2_object.pTrTail = i2c2_tr_queue;
  5621  0672  3060               	movlw	(low (_i2c2_tr_queue| 0))& (0+255)
  5622  0673  00A0               	movwf	??_I2C2_Initialize
  5623  0674  0820               	movf	??_I2C2_Initialize,w
  5624  0675  00CA               	movwf	_i2c2_object
  5625                           
  5626                           ;i2c2.c: 202: i2c2_object.trStatus.s.empty = 1;
  5627  0676  14CC               	bsf	_i2c2_object+2,1
  5628                           
  5629                           ;i2c2.c: 203: i2c2_object.trStatus.s.full = 0;
  5630  0677  104C               	bcf	_i2c2_object+2,0
  5631                           
  5632                           ;i2c2.c: 205: i2c2_object.i2cErrors = 0;
  5633  0678  01CE               	clrf	_i2c2_object+4
  5634                           
  5635                           ;i2c2.c: 208: SSP2STAT = 0x80;
  5636  0679  3080               	movlw	128
  5637  067A  0023               	movlb	3	; select bank3
  5638  067B  0099               	movwf	25	;volatile
  5639                           
  5640                           ;i2c2.c: 210: SSP2CON1 = 0x28;
  5641  067C  3028               	movlw	40
  5642  067D  009A               	movwf	26	;volatile
  5643                           
  5644                           ;i2c2.c: 212: SSP2CON3 = 0x00;
  5645  067E  019C               	clrf	28	;volatile
  5646                           
  5647                           ;i2c2.c: 214: SSP2ADD = 0x04;
  5648  067F  3004               	movlw	4
  5649  0680  0097               	movwf	23	;volatile
  5650                           
  5651                           ;i2c2.c: 218: PIR3bits.SSP2IF = 0;
  5652  0681  002E               	movlb	14	; select bank14
  5653  0682  110F               	bcf	15,2	;volatile
  5654                           
  5655                           ;i2c2.c: 220: PIE3bits.SSP2IE = 1;
  5656  0683  1519               	bsf	25,2	;volatile
  5657  0684  0008               	return
  5658  0685                     __end_of_I2C2_Initialize:	
  5659                           
  5660                           	psect	text13
  5661  06F6                     __ptext13:	
  5662 ;; *************** function _EUSART_Initialize *****************
  5663 ;; Defined at:
  5664 ;;		line 55 in file "mcc_generated_files/eusart.c"
  5665 ;; Parameters:    Size  Location     Type
  5666 ;;		None
  5667 ;; Auto vars:     Size  Location     Type
  5668 ;;		None
  5669 ;; Return value:  Size  Location     Type
  5670 ;;                  1    wreg      void 
  5671 ;; Registers used:
  5672 ;;		wreg, status,2
  5673 ;; Tracked objects:
  5674 ;;		On entry : 0/0
  5675 ;;		On exit  : 0/0
  5676 ;;		Unchanged: 0/0
  5677 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
  5678 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  5679 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  5680 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  5681 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  5682 ;;Total ram usage:        0 bytes
  5683 ;; Hardware stack levels used:    1
  5684 ;; Hardware stack levels required when called:    3
  5685 ;; This function calls:
  5686 ;;		Nothing
  5687 ;; This function is called by:
  5688 ;;		_SYSTEM_Initialize
  5689 ;; This function uses a non-reentrant model
  5690 ;;
  5691                           
  5692                           
  5693                           ;psect for function _EUSART_Initialize
  5694  06F6                     _EUSART_Initialize:	
  5695                           
  5696                           ;eusart.c: 60: BAUD1CON = 0x08;
  5697                           
  5698                           ;incstack = 0
  5699                           ; Regs used in _EUSART_Initialize: [wreg+status,2]
  5700  06F6  3008               	movlw	8
  5701  06F7  0022               	movlb	2	; select bank2
  5702  06F8  009F               	movwf	31	;volatile
  5703                           
  5704                           ;eusart.c: 63: RC1STA = 0x80;
  5705  06F9  3080               	movlw	128
  5706  06FA  009D               	movwf	29	;volatile
  5707                           
  5708                           ;eusart.c: 66: TX1STA = 0x24;
  5709  06FB  3024               	movlw	36
  5710  06FC  009E               	movwf	30	;volatile
  5711                           
  5712                           ;eusart.c: 69: SP1BRGL = 0x19;
  5713  06FD  3019               	movlw	25
  5714  06FE  009B               	movwf	27	;volatile
  5715                           
  5716                           ;eusart.c: 72: SP1BRGH = 0x00;
  5717  06FF  019C               	clrf	28	;volatile
  5718  0700  0008               	return
  5719  0701                     __end_of_EUSART_Initialize:	
  5720                           
  5721                           	psect	text14
  5722  056B                     __ptext14:	
  5723 ;; *************** function _EMC1001_Read *****************
  5724 ;; Defined at:
  5725 ;;		line 51 in file "main.c"
  5726 ;; Parameters:    Size  Location     Type
  5727 ;;  reg             1    wreg     unsigned char 
  5728 ;;  pData           1    7[BANK0 ] PTR unsigned char 
  5729 ;;		 -> main@templo(1), main@temp(1), main@data(1), 
  5730 ;; Auto vars:     Size  Location     Type
  5731 ;;  reg             1   10[BANK0 ] unsigned char 
  5732 ;;  status          1   11[BANK0 ] enum E14334
  5733 ;; Return value:  Size  Location     Type
  5734 ;;                  1    wreg      unsigned char 
  5735 ;; Registers used:
  5736 ;;		wreg, fsr1l, fsr1h, status,2, status,0, pclath, cstack
  5737 ;; Tracked objects:
  5738 ;;		On entry : 0/0
  5739 ;;		On exit  : 0/0
  5740 ;;		Unchanged: 0/0
  5741 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
  5742 ;;      Params:         0       1       0       0       0       0       0       0       0       0       0       0       
      +0       0
  5743 ;;      Locals:         0       2       0       0       0       0       0       0       0       0       0       0       
      +0       0
  5744 ;;      Temps:          0       2       0       0       0       0       0       0       0       0       0       0       
      +0       0
  5745 ;;      Totals:         0       5       0       0       0       0       0       0       0       0       0       0       
      +0       0
  5746 ;;Total ram usage:        5 bytes
  5747 ;; Hardware stack levels used:    1
  5748 ;; Hardware stack levels required when called:    4
  5749 ;; This function calls:
  5750 ;;		_I2C2_MasterReadTRBBuild
  5751 ;;		_I2C2_MasterTRBInsert
  5752 ;;		_I2C2_MasterWriteTRBBuild
  5753 ;; This function is called by:
  5754 ;;		_main
  5755 ;; This function uses a non-reentrant model
  5756 ;;
  5757                           
  5758                           
  5759                           ;psect for function _EMC1001_Read
  5760  056B                     _EMC1001_Read:	
  5761                           
  5762                           ;incstack = 0
  5763                           ; Regs used in _EMC1001_Read: [wreg+fsr1l+fsr1h+status,2+status,0+pclath+cstack]
  5764                           ;EMC1001_Read@reg stored from wreg
  5765  056B  0020               	movlb	0	; select bank0
  5766  056C  00AA               	movwf	EMC1001_Read@reg
  5767                           
  5768                           ;main.c: 53: I2C2_MESSAGE_STATUS status = I2C2_MESSAGE_PENDING;
  5769  056D  3002               	movlw	2
  5770  056E  00A8               	movwf	??_EMC1001_Read
  5771  056F  0828               	movf	??_EMC1001_Read,w
  5772  0570  00AB               	movwf	EMC1001_Read@status
  5773                           
  5774                           ;main.c: 54: static I2C2_TRANSACTION_REQUEST_BLOCK trb[2];
  5775                           ;main.c: 56: I2C2_MasterWriteTRBBuild(&trb[0], &reg, 1, 0x38);
  5776  0571  302A               	movlw	(low (EMC1001_Read@reg| 0))& (0+255)
  5777  0572  00A8               	movwf	??_EMC1001_Read
  5778  0573  0828               	movf	??_EMC1001_Read,w
  5779  0574  00A0               	movwf	I2C2_MasterWriteTRBBuild@pdata
  5780  0575  01A1               	clrf	I2C2_MasterWriteTRBBuild@length
  5781  0576  0AA1               	incf	I2C2_MasterWriteTRBBuild@length,f
  5782  0577  3038               	movlw	56
  5783  0578  00A2               	movwf	I2C2_MasterWriteTRBBuild@address
  5784  0579  3000               	movlw	0
  5785  057A  00A3               	movwf	I2C2_MasterWriteTRBBuild@address+1
  5786  057B  3050               	movlw	(low (EMC1001_Read@trb| 0))& (0+255)
  5787  057C  3186  2631  3185   	fcall	_I2C2_MasterWriteTRBBuild
  5788                           
  5789                           ;main.c: 57: I2C2_MasterReadTRBBuild(&trb[1], pData, 1, 0x38);
  5790  057F  0020               	movlb	0	; select bank0
  5791  0580  0827               	movf	EMC1001_Read@pData,w
  5792  0581  00A8               	movwf	??_EMC1001_Read
  5793  0582  0828               	movf	??_EMC1001_Read,w
  5794  0583  00A0               	movwf	I2C2_MasterReadTRBBuild@pdata
  5795  0584  01A1               	clrf	I2C2_MasterReadTRBBuild@length
  5796  0585  0AA1               	incf	I2C2_MasterReadTRBBuild@length,f
  5797  0586  3038               	movlw	56
  5798  0587  00A2               	movwf	I2C2_MasterReadTRBBuild@address
  5799  0588  3000               	movlw	0
  5800  0589  00A3               	movwf	I2C2_MasterReadTRBBuild@address+1
  5801  058A  3054               	movlw	(low ((EMC1001_Read@trb| 0+4)))& (0+255)
  5802  058B  3186  2609  3185   	fcall	_I2C2_MasterReadTRBBuild
  5803                           
  5804                           ;main.c: 58: I2C2_MasterTRBInsert(2, &trb[0], &status);
  5805  058E  3050               	movlw	(low (EMC1001_Read@trb| 0))& (0+255)
  5806  058F  0020               	movlb	0	; select bank0
  5807  0590  00A8               	movwf	??_EMC1001_Read
  5808  0591  0828               	movf	??_EMC1001_Read,w
  5809  0592  00A0               	movwf	I2C2_MasterTRBInsert@ptrb_list
  5810  0593  302B               	movlw	(low (EMC1001_Read@status| 0))& (0+255)
  5811  0594  00A9               	movwf	??_EMC1001_Read+1
  5812  0595  0829               	movf	??_EMC1001_Read+1,w
  5813  0596  00A1               	movwf	I2C2_MasterTRBInsert@pflag
  5814  0597  3002               	movlw	2
  5815  0598  3185  2525  3185   	fcall	_I2C2_MasterTRBInsert
  5816  059B                     l1717:	
  5817                           ;main.c: 60: while(status == I2C2_MESSAGE_PENDING);
  5818                           
  5819  059B  3002               	movlw	2
  5820  059C  0020               	movlb	0	; select bank0
  5821  059D  062B               	xorwf	EMC1001_Read@status,w
  5822  059E  1903               	btfsc	3,2
  5823  059F  2D9B               	goto	l1717
  5824                           
  5825                           ;main.c: 62: return (status == I2C2_MESSAGE_COMPLETE);
  5826  05A0  082B               	movf	EMC1001_Read@status,w
  5827  05A1  1D03               	btfss	3,2
  5828  05A2  2DA5               	goto	u1220
  5829  05A3  3001               	movlw	1
  5830  05A4  0008               	return
  5831  05A5                     u1220:	
  5832  05A5  3000               	movlw	0
  5833  05A6  0008               	return
  5834  05A7                     __end_of_EMC1001_Read:	
  5835                           
  5836                           	psect	text15
  5837  0631                     __ptext15:	
  5838 ;; *************** function _I2C2_MasterWriteTRBBuild *****************
  5839 ;; Defined at:
  5840 ;;		line 707 in file "mcc_generated_files/i2c2.c"
  5841 ;; Parameters:    Size  Location     Type
  5842 ;;  ptrb            1    wreg     PTR struct .
  5843 ;;		 -> EMC1001_Read@trb(8), I2C2_MasterWrite@trBlock(4), 
  5844 ;;  pdata           1    0[BANK0 ] PTR unsigned char 
  5845 ;;		 -> EMC1001_Read@reg(1), 
  5846 ;;  length          1    1[BANK0 ] unsigned char 
  5847 ;;  address         2    2[BANK0 ] unsigned int 
  5848 ;; Auto vars:     Size  Location     Type
  5849 ;;  ptrb            1    6[BANK0 ] PTR struct .
  5850 ;;		 -> EMC1001_Read@trb(8), I2C2_MasterWrite@trBlock(4), 
  5851 ;; Return value:  Size  Location     Type
  5852 ;;                  1    wreg      void 
  5853 ;; Registers used:
  5854 ;;		wreg, fsr1l, fsr1h, status,2, status,0
  5855 ;; Tracked objects:
  5856 ;;		On entry : 0/0
  5857 ;;		On exit  : 0/0
  5858 ;;		Unchanged: 0/0
  5859 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
  5860 ;;      Params:         0       4       0       0       0       0       0       0       0       0       0       0       
      +0       0
  5861 ;;      Locals:         0       1       0       0       0       0       0       0       0       0       0       0       
      +0       0
  5862 ;;      Temps:          0       2       0       0       0       0       0       0       0       0       0       0       
      +0       0
  5863 ;;      Totals:         0       7       0       0       0       0       0       0       0       0       0       0       
      +0       0
  5864 ;;Total ram usage:        7 bytes
  5865 ;; Hardware stack levels used:    1
  5866 ;; Hardware stack levels required when called:    3
  5867 ;; This function calls:
  5868 ;;		Nothing
  5869 ;; This function is called by:
  5870 ;;		_EMC1001_Read
  5871 ;;		_I2C2_MasterWrite
  5872 ;; This function uses a non-reentrant model
  5873 ;;
  5874                           
  5875                           
  5876                           ;psect for function _I2C2_MasterWriteTRBBuild
  5877  0631                     _I2C2_MasterWriteTRBBuild:	
  5878                           
  5879                           ;incstack = 0
  5880                           ; Regs used in _I2C2_MasterWriteTRBBuild: [wreg+fsr1l+fsr1h+status,2+status,0]
  5881                           ;I2C2_MasterWriteTRBBuild@ptrb stored from wreg
  5882  0631  0020               	movlb	0	; select bank0
  5883  0632  00A6               	movwf	I2C2_MasterWriteTRBBuild@ptrb
  5884                           
  5885                           ;i2c2.c: 713: ptrb->address = address << 1;
  5886  0633  0823               	movf	I2C2_MasterWriteTRBBuild@address+1,w
  5887  0634  00A5               	movwf	??_I2C2_MasterWriteTRBBuild+1
  5888  0635  0822               	movf	I2C2_MasterWriteTRBBuild@address,w
  5889  0636  00A4               	movwf	??_I2C2_MasterWriteTRBBuild
  5890  0637  35A4               	lslf	??_I2C2_MasterWriteTRBBuild,f
  5891  0638  0DA5               	rlf	??_I2C2_MasterWriteTRBBuild+1,f
  5892  0639  0826               	movf	I2C2_MasterWriteTRBBuild@ptrb,w
  5893  063A  0086               	movwf	6
  5894  063B  0187               	clrf	7
  5895  063C  0824               	movf	??_I2C2_MasterWriteTRBBuild,w
  5896  063D  3FC0               	movwi [0]fsr1
  5897  063E  0825               	movf	??_I2C2_MasterWriteTRBBuild+1,w
  5898  063F  3FC1               	movwi [1]fsr1
  5899                           
  5900                           ;i2c2.c: 714: ptrb->length = length;
  5901  0640  0821               	movf	I2C2_MasterWriteTRBBuild@length,w
  5902  0641  00A4               	movwf	??_I2C2_MasterWriteTRBBuild
  5903  0642  0826               	movf	I2C2_MasterWriteTRBBuild@ptrb,w
  5904  0643  3E02               	addlw	2
  5905  0644  0086               	movwf	6
  5906  0645  0187               	clrf	7
  5907  0646  0824               	movf	??_I2C2_MasterWriteTRBBuild,w
  5908  0647  0081               	movwf	1
  5909                           
  5910                           ;i2c2.c: 715: ptrb->pbuffer = pdata;
  5911  0648  0820               	movf	I2C2_MasterWriteTRBBuild@pdata,w
  5912  0649  00A4               	movwf	??_I2C2_MasterWriteTRBBuild
  5913  064A  0826               	movf	I2C2_MasterWriteTRBBuild@ptrb,w
  5914  064B  3E03               	addlw	3
  5915  064C  0086               	movwf	6
  5916  064D  0187               	clrf	7
  5917  064E  0824               	movf	??_I2C2_MasterWriteTRBBuild,w
  5918  064F  0081               	movwf	1
  5919  0650  0008               	return
  5920  0651                     __end_of_I2C2_MasterWriteTRBBuild:	
  5921                           
  5922                           	psect	text16
  5923  0525                     __ptext16:	
  5924 ;; *************** function _I2C2_MasterTRBInsert *****************
  5925 ;; Defined at:
  5926 ;;		line 641 in file "mcc_generated_files/i2c2.c"
  5927 ;; Parameters:    Size  Location     Type
  5928 ;;  count           1    wreg     unsigned char 
  5929 ;;  ptrb_list       1    0[BANK0 ] PTR struct .
  5930 ;;		 -> EMC1001_Read@trb(8), I2C2_MasterRead@trBlock(4), I2C2_MasterWrite@trBlock(4), 
  5931 ;;  pflag           1    1[BANK0 ] PTR enum E14260
  5932 ;;		 -> EMC1001_Read@status(1), 
  5933 ;; Auto vars:     Size  Location     Type
  5934 ;;  count           1    3[BANK0 ] unsigned char 
  5935 ;; Return value:  Size  Location     Type
  5936 ;;                  1    wreg      void 
  5937 ;; Registers used:
  5938 ;;		wreg, fsr1l, fsr1h, status,2, status,0
  5939 ;; Tracked objects:
  5940 ;;		On entry : 0/0
  5941 ;;		On exit  : 0/0
  5942 ;;		Unchanged: 0/0
  5943 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
  5944 ;;      Params:         0       2       0       0       0       0       0       0       0       0       0       0       
      +0       0
  5945 ;;      Locals:         0       1       0       0       0       0       0       0       0       0       0       0       
      +0       0
  5946 ;;      Temps:          0       1       0       0       0       0       0       0       0       0       0       0       
      +0       0
  5947 ;;      Totals:         0       4       0       0       0       0       0       0       0       0       0       0       
      +0       0
  5948 ;;Total ram usage:        4 bytes
  5949 ;; Hardware stack levels used:    1
  5950 ;; Hardware stack levels required when called:    3
  5951 ;; This function calls:
  5952 ;;		Nothing
  5953 ;; This function is called by:
  5954 ;;		_EMC1001_Read
  5955 ;;		_I2C2_MasterWrite
  5956 ;;		_I2C2_MasterRead
  5957 ;; This function uses a non-reentrant model
  5958 ;;
  5959                           
  5960                           
  5961                           ;psect for function _I2C2_MasterTRBInsert
  5962  0525                     _I2C2_MasterTRBInsert:	
  5963                           
  5964                           ;incstack = 0
  5965                           ; Regs used in _I2C2_MasterTRBInsert: [wreg+fsr1l+fsr1h+status,2+status,0]
  5966                           ;I2C2_MasterTRBInsert@count stored from wreg
  5967  0525  0020               	movlb	0	; select bank0
  5968  0526  00A3               	movwf	I2C2_MasterTRBInsert@count
  5969                           
  5970                           ;i2c2.c: 648: if (i2c2_object.trStatus.s.full != 1)
  5971  0527  184C               	btfsc	_i2c2_object+2,0
  5972  0528  2D59               	goto	l1455
  5973                           
  5974                           ;i2c2.c: 649: {
  5975                           ;i2c2.c: 650: *pflag = I2C2_MESSAGE_PENDING;
  5976  0529  3002               	movlw	2
  5977  052A  00A2               	movwf	??_I2C2_MasterTRBInsert
  5978  052B  0821               	movf	I2C2_MasterTRBInsert@pflag,w
  5979  052C  0086               	movwf	6
  5980  052D  0187               	clrf	7
  5981  052E  0822               	movf	??_I2C2_MasterTRBInsert,w
  5982  052F  0081               	movwf	1
  5983                           
  5984                           ;i2c2.c: 652: i2c2_object.pTrTail->ptrb_list = ptrb_list;
  5985  0530  0820               	movf	I2C2_MasterTRBInsert@ptrb_list,w
  5986  0531  00A2               	movwf	??_I2C2_MasterTRBInsert
  5987  0532  0A4A               	incf	_i2c2_object,w
  5988  0533  0086               	movwf	6
  5989  0534  0187               	clrf	7
  5990  0535  0822               	movf	??_I2C2_MasterTRBInsert,w
  5991  0536  0081               	movwf	1
  5992                           
  5993                           ;i2c2.c: 653: i2c2_object.pTrTail->count = count;
  5994  0537  0823               	movf	I2C2_MasterTRBInsert@count,w
  5995  0538  00A2               	movwf	??_I2C2_MasterTRBInsert
  5996  0539  084A               	movf	_i2c2_object,w
  5997  053A  0086               	movwf	6
  5998  053B  0187               	clrf	7
  5999  053C  0822               	movf	??_I2C2_MasterTRBInsert,w
  6000  053D  0081               	movwf	1
  6001                           
  6002                           ;i2c2.c: 654: i2c2_object.pTrTail->pTrFlag = pflag;
  6003  053E  0821               	movf	I2C2_MasterTRBInsert@pflag,w
  6004  053F  00A2               	movwf	??_I2C2_MasterTRBInsert
  6005  0540  084A               	movf	_i2c2_object,w
  6006  0541  3E02               	addlw	2
  6007  0542  0086               	movwf	6
  6008  0543  0187               	clrf	7
  6009  0544  0822               	movf	??_I2C2_MasterTRBInsert,w
  6010  0545  0081               	movwf	1
  6011                           
  6012                           ;i2c2.c: 655: i2c2_object.pTrTail++;
  6013  0546  3003               	movlw	3
  6014  0547  00A2               	movwf	??_I2C2_MasterTRBInsert
  6015  0548  0822               	movf	??_I2C2_MasterTRBInsert,w
  6016  0549  07CA               	addwf	_i2c2_object,f
  6017                           
  6018                           ;i2c2.c: 658: if (i2c2_object.pTrTail == (i2c2_tr_queue + 1))
  6019  054A  084A               	movf	_i2c2_object,w
  6020  054B  3A63               	xorlw	(low ((_i2c2_tr_queue| 0+3)))& (0+255)
  6021  054C  1D03               	skipz
  6022  054D  2D52               	goto	l1451
  6023                           
  6024                           ;i2c2.c: 659: {
  6025                           ;i2c2.c: 661: i2c2_object.pTrTail = i2c2_tr_queue;
  6026  054E  3060               	movlw	(low (_i2c2_tr_queue| 0))& (0+255)
  6027  054F  00A2               	movwf	??_I2C2_MasterTRBInsert
  6028  0550  0822               	movf	??_I2C2_MasterTRBInsert,w
  6029  0551  00CA               	movwf	_i2c2_object
  6030  0552                     l1451:	
  6031                           
  6032                           ;i2c2.c: 662: }
  6033                           ;i2c2.c: 666: i2c2_object.trStatus.s.empty = 0;
  6034  0552  10CC               	bcf	_i2c2_object+2,1
  6035                           
  6036                           ;i2c2.c: 669: if (i2c2_object.pTrHead == i2c2_object.pTrTail)
  6037  0553  084B               	movf	low ((_i2c2_object| 0+1)),w
  6038  0554  064A               	xorwf	_i2c2_object,w
  6039  0555  1D03               	skipz
  6040  0556  2D5E               	goto	l1457
  6041                           
  6042                           ;i2c2.c: 670: {
  6043                           ;i2c2.c: 672: i2c2_object.trStatus.s.full = 1;
  6044  0557  144C               	bsf	_i2c2_object+2,0
  6045                           
  6046                           ;i2c2.c: 673: }
  6047                           ;i2c2.c: 675: }
  6048  0558  2D5E               	goto	l1457
  6049  0559                     l1455:	
  6050                           
  6051                           ;i2c2.c: 676: else
  6052                           ;i2c2.c: 677: {
  6053                           ;i2c2.c: 678: *pflag = I2C2_MESSAGE_FAIL;
  6054  0559  0821               	movf	I2C2_MasterTRBInsert@pflag,w
  6055  055A  0086               	movwf	6
  6056  055B  0187               	clrf	7
  6057  055C  0181               	clrf	1
  6058  055D  0A81               	incf	1,f
  6059  055E                     l1457:	
  6060                           
  6061                           ;i2c2.c: 679: }
  6062                           ;i2c2.c: 682: if (*pflag == I2C2_MESSAGE_PENDING)
  6063  055E  0821               	movf	I2C2_MasterTRBInsert@pflag,w
  6064  055F  0086               	movwf	6
  6065  0560  0187               	clrf	7
  6066  0561  3002               	movlw	2
  6067  0562  0601               	xorwf	1,w
  6068  0563  1D03               	btfss	3,2
  6069  0564  0008               	return
  6070  0565                     l1461:	
  6071                           ;i2c2.c: 683: {
  6072                           ;i2c2.c: 684: while(i2c2_state != S_MASTER_IDLE);
  6073                           
  6074  0565  084F               	movf	_i2c2_state,w
  6075  0566  1D03               	btfss	3,2
  6076  0567  2D65               	goto	l1461
  6077                           
  6078                           ;i2c2.c: 685: {
  6079                           ;i2c2.c: 688: PIR3bits.SSP2IF = 1;
  6080  0568  002E               	movlb	14	; select bank14
  6081  0569  150F               	bsf	15,2	;volatile
  6082  056A  0008               	return
  6083  056B                     __end_of_I2C2_MasterTRBInsert:	
  6084                           
  6085                           	psect	text17
  6086  0609                     __ptext17:	
  6087 ;; *************** function _I2C2_MasterReadTRBBuild *****************
  6088 ;; Defined at:
  6089 ;;		line 694 in file "mcc_generated_files/i2c2.c"
  6090 ;; Parameters:    Size  Location     Type
  6091 ;;  ptrb            1    wreg     PTR struct .
  6092 ;;		 -> EMC1001_Read@trb(8), I2C2_MasterRead@trBlock(4), 
  6093 ;;  pdata           1    0[BANK0 ] PTR unsigned char 
  6094 ;;		 -> main@templo(1), main@temp(1), main@data(1), 
  6095 ;;  length          1    1[BANK0 ] unsigned char 
  6096 ;;  address         2    2[BANK0 ] unsigned int 
  6097 ;; Auto vars:     Size  Location     Type
  6098 ;;  ptrb            1    6[BANK0 ] PTR struct .
  6099 ;;		 -> EMC1001_Read@trb(8), I2C2_MasterRead@trBlock(4), 
  6100 ;; Return value:  Size  Location     Type
  6101 ;;                  1    wreg      void 
  6102 ;; Registers used:
  6103 ;;		wreg, fsr1l, fsr1h, status,2, status,0
  6104 ;; Tracked objects:
  6105 ;;		On entry : 0/0
  6106 ;;		On exit  : 0/0
  6107 ;;		Unchanged: 0/0
  6108 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
  6109 ;;      Params:         0       4       0       0       0       0       0       0       0       0       0       0       
      +0       0
  6110 ;;      Locals:         0       1       0       0       0       0       0       0       0       0       0       0       
      +0       0
  6111 ;;      Temps:          0       2       0       0       0       0       0       0       0       0       0       0       
      +0       0
  6112 ;;      Totals:         0       7       0       0       0       0       0       0       0       0       0       0       
      +0       0
  6113 ;;Total ram usage:        7 bytes
  6114 ;; Hardware stack levels used:    1
  6115 ;; Hardware stack levels required when called:    3
  6116 ;; This function calls:
  6117 ;;		Nothing
  6118 ;; This function is called by:
  6119 ;;		_EMC1001_Read
  6120 ;;		_I2C2_MasterRead
  6121 ;; This function uses a non-reentrant model
  6122 ;;
  6123                           
  6124                           
  6125                           ;psect for function _I2C2_MasterReadTRBBuild
  6126  0609                     _I2C2_MasterReadTRBBuild:	
  6127                           
  6128                           ;incstack = 0
  6129                           ; Regs used in _I2C2_MasterReadTRBBuild: [wreg+fsr1l+fsr1h+status,2+status,0]
  6130                           ;I2C2_MasterReadTRBBuild@ptrb stored from wreg
  6131  0609  0020               	movlb	0	; select bank0
  6132  060A  00A6               	movwf	I2C2_MasterReadTRBBuild@ptrb
  6133                           
  6134                           ;i2c2.c: 700: ptrb->address = address << 1;
  6135  060B  0823               	movf	I2C2_MasterReadTRBBuild@address+1,w
  6136  060C  00A5               	movwf	??_I2C2_MasterReadTRBBuild+1
  6137  060D  0822               	movf	I2C2_MasterReadTRBBuild@address,w
  6138  060E  00A4               	movwf	??_I2C2_MasterReadTRBBuild
  6139  060F  35A4               	lslf	??_I2C2_MasterReadTRBBuild,f
  6140  0610  0DA5               	rlf	??_I2C2_MasterReadTRBBuild+1,f
  6141  0611  0826               	movf	I2C2_MasterReadTRBBuild@ptrb,w
  6142  0612  0086               	movwf	6
  6143  0613  0187               	clrf	7
  6144  0614  0824               	movf	??_I2C2_MasterReadTRBBuild,w
  6145  0615  3FC0               	movwi [0]fsr1
  6146  0616  0825               	movf	??_I2C2_MasterReadTRBBuild+1,w
  6147  0617  3FC1               	movwi [1]fsr1
  6148                           
  6149                           ;i2c2.c: 702: ptrb->address |= 0x01;
  6150  0618  0826               	movf	I2C2_MasterReadTRBBuild@ptrb,w
  6151  0619  0086               	movwf	6
  6152  061A  0187               	clrf	7
  6153  061B  3001               	movlw	1
  6154  061C  0481               	iorwf	1,f
  6155  061D  3141               	addfsr 1,1
  6156  061E  3000               	movlw	0
  6157  061F  0481               	iorwf	1,f
  6158                           
  6159                           ;i2c2.c: 703: ptrb->length = length;
  6160  0620  0821               	movf	I2C2_MasterReadTRBBuild@length,w
  6161  0621  00A4               	movwf	??_I2C2_MasterReadTRBBuild
  6162  0622  0826               	movf	I2C2_MasterReadTRBBuild@ptrb,w
  6163  0623  3E02               	addlw	2
  6164  0624  0086               	movwf	6
  6165  0625  0187               	clrf	7
  6166  0626  0824               	movf	??_I2C2_MasterReadTRBBuild,w
  6167  0627  0081               	movwf	1
  6168                           
  6169                           ;i2c2.c: 704: ptrb->pbuffer = pdata;
  6170  0628  0820               	movf	I2C2_MasterReadTRBBuild@pdata,w
  6171  0629  00A4               	movwf	??_I2C2_MasterReadTRBBuild
  6172  062A  0826               	movf	I2C2_MasterReadTRBBuild@ptrb,w
  6173  062B  3E03               	addlw	3
  6174  062C  0086               	movwf	6
  6175  062D  0187               	clrf	7
  6176  062E  0824               	movf	??_I2C2_MasterReadTRBBuild,w
  6177  062F  0081               	movwf	1
  6178  0630  0008               	return
  6179  0631                     __end_of_I2C2_MasterReadTRBBuild:	
  6180                           
  6181                           	psect	intentry
  6182  0004                     __pintentry:	
  6183 ;; *************** function _INTERRUPT_InterruptManager *****************
  6184 ;; Defined at:
  6185 ;;		line 51 in file "mcc_generated_files/interrupt_manager.c"
  6186 ;; Parameters:    Size  Location     Type
  6187 ;;		None
  6188 ;; Auto vars:     Size  Location     Type
  6189 ;;		None
  6190 ;; Return value:  Size  Location     Type
  6191 ;;                  1    wreg      void 
  6192 ;; Registers used:
  6193 ;;		wreg, fsr0l, fsr0h, fsr1l, fsr1h, status,2, status,0, pclath, cstack
  6194 ;; Tracked objects:
  6195 ;;		On entry : 0/0
  6196 ;;		On exit  : 0/0
  6197 ;;		Unchanged: 0/0
  6198 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
  6199 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  6200 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  6201 ;;      Temps:          1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  6202 ;;      Totals:         1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  6203 ;;Total ram usage:        1 bytes
  6204 ;; Hardware stack levels used:    1
  6205 ;; Hardware stack levels required when called:    2
  6206 ;; This function calls:
  6207 ;;		_I2C2_BusCollisionISR
  6208 ;;		_I2C2_ISR
  6209 ;; This function is called by:
  6210 ;;		Interrupt level 1
  6211 ;; This function uses a non-reentrant model
  6212 ;;
  6213                           
  6214  0004                     _INTERRUPT_InterruptManager:	
  6215                           
  6216                           ;incstack = 0
  6217  0004  147E               	bsf	126,0	;set compiler interrupt flag (level 1)
  6218                           
  6219                           ; Regs used in _INTERRUPT_InterruptManager: [wreg-fsr1h+status,2+status,0+pclath+cstack]
  6220  0005  3180               	pagesel	$
  6221  0006  0020               	movlb	0	; select bank0
  6222  0007  087F               	movf	127,w
  6223  0008  00F6               	movwf	??_INTERRUPT_InterruptManager
  6224                           
  6225                           ;interrupt_manager.c: 54: if(PIE3bits.BCL2IE == 1 && PIR3bits.BCL2IF == 1)
  6226  0009  002E               	movlb	14	; select bank14
  6227  000A  1999               	btfsc	25,3	;volatile
  6228  000B  1D8F               	btfss	15,3	;volatile
  6229  000C  2811               	goto	i1l198
  6230                           
  6231                           ;interrupt_manager.c: 55: {
  6232                           ;interrupt_manager.c: 56: I2C2_BusCollisionISR();
  6233  000D  3187  2720  3180   	fcall	_I2C2_BusCollisionISR
  6234                           
  6235                           ;interrupt_manager.c: 57: }
  6236  0010  2816               	goto	i1l202
  6237  0011                     i1l198:	
  6238                           
  6239                           ;interrupt_manager.c: 58: else if(PIE3bits.SSP2IE == 1 && PIR3bits.SSP2IF == 1)
  6240  0011  1919               	btfsc	25,2	;volatile
  6241  0012  1D0F               	btfss	15,2	;volatile
  6242  0013  2816               	goto	i1l202
  6243                           
  6244                           ;interrupt_manager.c: 59: {
  6245                           ;interrupt_manager.c: 60: I2C2_ISR();
  6246  0014  3181  218F         	fcall	_I2C2_ISR
  6247  0016                     i1l202:	
  6248                           ;interrupt_manager.c: 62: else
  6249                           ;interrupt_manager.c: 63: {
  6250                           
  6251                           ;interrupt_manager.c: 61: }
  6252                           
  6253  0016  0876               	movf	??_INTERRUPT_InterruptManager,w
  6254  0017  0020               	movlb	0	; select bank0
  6255  0018  00FF               	movwf	127
  6256  0019  107E               	bcf	126,0	;clear compiler interrupt flag (level 1)
  6257  001A  0009               	retfie
  6258  001B                     __end_of_INTERRUPT_InterruptManager:	
  6259                           
  6260                           	psect	text19
  6261  018F                     __ptext19:	
  6262 ;; *************** function _I2C2_ISR *****************
  6263 ;; Defined at:
  6264 ;;		line 233 in file "mcc_generated_files/i2c2.c"
  6265 ;; Parameters:    Size  Location     Type
  6266 ;;		None
  6267 ;; Auto vars:     Size  Location     Type
  6268 ;;		None
  6269 ;; Return value:  Size  Location     Type
  6270 ;;                  1    wreg      void 
  6271 ;; Registers used:
  6272 ;;		wreg, fsr0l, fsr0h, fsr1l, fsr1h, status,2, status,0, pclath, cstack
  6273 ;; Tracked objects:
  6274 ;;		On entry : 0/0
  6275 ;;		On exit  : 0/0
  6276 ;;		Unchanged: 0/0
  6277 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
  6278 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  6279 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  6280 ;;      Temps:          4       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  6281 ;;      Totals:         4       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  6282 ;;Total ram usage:        4 bytes
  6283 ;; Hardware stack levels used:    1
  6284 ;; Hardware stack levels required when called:    1
  6285 ;; This function calls:
  6286 ;;		_I2C2_FunctionComplete
  6287 ;;		_I2C2_Stop
  6288 ;; This function is called by:
  6289 ;;		_INTERRUPT_InterruptManager
  6290 ;; This function uses a non-reentrant model
  6291 ;;
  6292                           
  6293                           
  6294                           ;psect for function _I2C2_ISR
  6295  018F                     _I2C2_ISR:	
  6296                           
  6297                           ;i2c2.c: 236: static uint8_t *pi2c_buf_ptr;
  6298                           ;i2c2.c: 237: static uint16_t i2c_address = 0;
  6299                           ;i2c2.c: 238: static uint8_t i2c_bytes_left = 0;
  6300                           ;i2c2.c: 239: static uint8_t i2c_10bit_address_restart = 0;
  6301                           ;i2c2.c: 241: PIR3bits.SSP2IF = 0;
  6302                           
  6303                           ;incstack = 0
  6304                           ; Regs used in _I2C2_ISR: [wreg-fsr1h+status,2+status,0+pclath+cstack]
  6305  018F  002E               	movlb	14	; select bank14
  6306  0190  110F               	bcf	15,2	;volatile
  6307                           
  6308                           ;i2c2.c: 245: if(SSP2CON1bits.WCOL)
  6309  0191  0023               	movlb	3	; select bank3
  6310  0192  1F9A               	btfss	26,7	;volatile
  6311  0193  2ABD               	goto	i1l1699
  6312                           
  6313                           ;i2c2.c: 246: {
  6314                           ;i2c2.c: 248: SSP2CON1bits.WCOL = 0;
  6315  0194  139A               	bcf	26,7	;volatile
  6316                           
  6317                           ;i2c2.c: 249: i2c2_state = S_MASTER_IDLE;
  6318  0195  0020               	movlb	0	; select bank0
  6319  0196  01CF               	clrf	_i2c2_state
  6320                           
  6321                           ;i2c2.c: 250: *(p_i2c2_current->pTrFlag) = I2C2_MESSAGE_FAIL;
  6322  0197  087A               	movf	_p_i2c2_current,w
  6323  0198  3E02               	addlw	2
  6324  0199  0086               	movwf	6
  6325  019A  0187               	clrf	7
  6326  019B  0801               	movf	1,w
  6327  019C  0086               	movwf	6
  6328  019D  0187               	clrf	7
  6329  019E  0181               	clrf	1
  6330  019F  0A81               	incf	1,f
  6331                           
  6332                           ;i2c2.c: 253: p_i2c2_current = (0);
  6333  01A0  01FA               	clrf	_p_i2c2_current
  6334                           
  6335                           ;i2c2.c: 255: return;
  6336  01A1  0008               	return
  6337  01A2                     i1l100:	
  6338                           ;i2c2.c: 260: {
  6339                           ;i2c2.c: 261: case S_MASTER_IDLE:
  6340                           
  6341                           ;i2c2.c: 256: }
  6342                           ;i2c2.c: 259: switch(i2c2_state)
  6343                           
  6344                           
  6345                           ;i2c2.c: 263: if(i2c2_object.trStatus.s.empty != 1)
  6346  01A2  18CC               	btfsc	_i2c2_object+2,1
  6347  01A3  0008               	return
  6348                           
  6349                           ;i2c2.c: 264: {
  6350                           ;i2c2.c: 266: p_i2c2_current = i2c2_object.pTrHead;
  6351  01A4  084B               	movf	low ((_i2c2_object| 0+1)),w
  6352  01A5  00F2               	movwf	??_I2C2_ISR
  6353  01A6  0872               	movf	??_I2C2_ISR,w
  6354  01A7  00FA               	movwf	_p_i2c2_current
  6355                           
  6356                           ;i2c2.c: 267: i2c2_trb_count = i2c2_object.pTrHead->count;
  6357  01A8  084B               	movf	low ((_i2c2_object| 0+1)),w
  6358  01A9  0086               	movwf	6
  6359  01AA  0187               	clrf	7
  6360  01AB  0801               	movf	1,w
  6361  01AC  00F2               	movwf	??_I2C2_ISR
  6362  01AD  0872               	movf	??_I2C2_ISR,w
  6363  01AE  00FC               	movwf	_i2c2_trb_count
  6364                           
  6365                           ;i2c2.c: 268: p_i2c2_trb_current = i2c2_object.pTrHead->ptrb_list;
  6366  01AF  084B               	movf	low ((_i2c2_object| 0+1)),w
  6367  01B0  0086               	movwf	6
  6368  01B1  0187               	clrf	7
  6369  01B2  3F41               	moviw [1]fsr1
  6370  01B3  00FB               	movwf	_p_i2c2_trb_current
  6371                           
  6372                           ;i2c2.c: 270: i2c2_object.pTrHead++;
  6373  01B4  3003               	movlw	3
  6374  01B5  00F2               	movwf	??_I2C2_ISR
  6375  01B6  0872               	movf	??_I2C2_ISR,w
  6376  01B7  07CB               	addwf	low ((_i2c2_object| 0+1)),f
  6377                           
  6378                           ;i2c2.c: 273: if(i2c2_object.pTrHead == (i2c2_tr_queue + 1))
  6379  01B8  084B               	movf	low ((_i2c2_object| 0+1)),w
  6380  01B9  3A63               	xorlw	(low ((_i2c2_tr_queue| 0+3)))& (0+255)
  6381  01BA  1D03               	skipz
  6382  01BB  29C0               	goto	i1l1587
  6383                           
  6384                           ;i2c2.c: 274: {
  6385                           ;i2c2.c: 276: i2c2_object.pTrHead = i2c2_tr_queue;
  6386  01BC  3060               	movlw	(low (_i2c2_tr_queue| 0))& (0+255)
  6387  01BD  00F2               	movwf	??_I2C2_ISR
  6388  01BE  0872               	movf	??_I2C2_ISR,w
  6389  01BF  00CB               	movwf	low ((_i2c2_object| 0+1))
  6390  01C0                     i1l1587:	
  6391                           
  6392                           ;i2c2.c: 277: }
  6393                           ;i2c2.c: 281: i2c2_object.trStatus.s.full = 0;
  6394  01C0  104C               	bcf	_i2c2_object+2,0
  6395                           
  6396                           ;i2c2.c: 284: if(i2c2_object.pTrHead == i2c2_object.pTrTail)
  6397  01C1  084B               	movf	low ((_i2c2_object| 0+1)),w
  6398  01C2  064A               	xorwf	_i2c2_object,w
  6399  01C3  1903               	btfsc	3,2
  6400                           
  6401                           ;i2c2.c: 285: {
  6402                           ;i2c2.c: 287: i2c2_object.trStatus.s.empty = 1;
  6403  01C4  14CC               	bsf	_i2c2_object+2,1
  6404                           
  6405                           ;i2c2.c: 288: }
  6406                           ;i2c2.c: 291: SSP2CON2bits.SEN = 1;
  6407  01C5  0023               	movlb	3	; select bank3
  6408  01C6  141B               	bsf	27,0	;volatile
  6409                           
  6410                           ;i2c2.c: 294: i2c2_state = S_MASTER_SEND_ADDR;
  6411  01C7  3002               	movlw	2
  6412  01C8  00F2               	movwf	??_I2C2_ISR
  6413  01C9  0872               	movf	??_I2C2_ISR,w
  6414  01CA  0020               	movlb	0	; select bank0
  6415  01CB  00CF               	movwf	_i2c2_state
  6416                           
  6417                           ;i2c2.c: 295: }
  6418                           ;i2c2.c: 297: break;
  6419  01CC  0008               	return
  6420  01CD                     i1l105:	
  6421                           ;i2c2.c: 299: case S_MASTER_RESTART:
  6422                           
  6423                           
  6424                           ;i2c2.c: 304: SSP2CON2bits.RSEN = 1;
  6425  01CD  0023               	movlb	3	; select bank3
  6426  01CE  149B               	bsf	27,1	;volatile
  6427                           
  6428                           ;i2c2.c: 307: i2c2_state = S_MASTER_SEND_ADDR;
  6429  01CF  3002               	movlw	2
  6430  01D0  00F2               	movwf	??_I2C2_ISR
  6431  01D1  0872               	movf	??_I2C2_ISR,w
  6432  01D2  0020               	movlb	0	; select bank0
  6433  01D3  00CF               	movwf	_i2c2_state
  6434                           
  6435                           ;i2c2.c: 309: break;
  6436  01D4  0008               	return
  6437  01D5                     i1l106:	
  6438                           ;i2c2.c: 311: case S_MASTER_SEND_ADDR_10BIT_LSB:
  6439                           
  6440                           
  6441                           ;i2c2.c: 313: if(SSP2CON2bits.ACKSTAT)
  6442  01D5  0023               	movlb	3	; select bank3
  6443  01D6  1F1B               	btfss	27,6	;volatile
  6444  01D7  29E1               	goto	i1l1599
  6445                           
  6446                           ;i2c2.c: 314: {
  6447                           ;i2c2.c: 315: i2c2_object.i2cErrors++;
  6448  01D8  3001               	movlw	1
  6449  01D9  00F2               	movwf	??_I2C2_ISR
  6450  01DA  0872               	movf	??_I2C2_ISR,w
  6451  01DB  0020               	movlb	0	; select bank0
  6452  01DC  07CE               	addwf	_i2c2_object+4,f
  6453                           
  6454                           ;i2c2.c: 316: I2C2_Stop(I2C2_MESSAGE_ADDRESS_NO_ACK);
  6455  01DD  3004               	movlw	4
  6456  01DE  3186  269D         	fcall	_I2C2_Stop
  6457                           
  6458                           ;i2c2.c: 317: }
  6459  01E0  0008               	return
  6460  01E1                     i1l1599:	
  6461                           
  6462                           ;i2c2.c: 318: else
  6463                           ;i2c2.c: 319: {
  6464                           ;i2c2.c: 321: SSP2BUF = (i2c_address >> 1) & 0x00FF;
  6465  01E1  0020               	movlb	0	; select bank0
  6466  01E2  0864               	movf	I2C2_ISR@i2c_address+1,w
  6467  01E3  00F3               	movwf	??_I2C2_ISR+1
  6468  01E4  0863               	movf	I2C2_ISR@i2c_address,w
  6469  01E5  00F2               	movwf	??_I2C2_ISR
  6470  01E6  36F3               	lsrf	??_I2C2_ISR+1,f
  6471  01E7  0CF2               	rrf	??_I2C2_ISR,f
  6472  01E8  0872               	movf	??_I2C2_ISR,w
  6473  01E9  0023               	movlb	3	; select bank3
  6474  01EA  0096               	movwf	22	;volatile
  6475                           
  6476                           ;i2c2.c: 324: if(i2c_address & 0x01)
  6477  01EB  0020               	movlb	0	; select bank0
  6478  01EC  1C63               	btfss	I2C2_ISR@i2c_address,0
  6479  01ED  29F3               	goto	i1l1605
  6480                           
  6481                           ;i2c2.c: 325: {
  6482                           ;i2c2.c: 328: i2c2_state = S_MASTER_10BIT_RESTART;
  6483  01EE  300B               	movlw	11
  6484  01EF  00F2               	movwf	??_I2C2_ISR
  6485  01F0  0872               	movf	??_I2C2_ISR,w
  6486  01F1  00CF               	movwf	_i2c2_state
  6487                           
  6488                           ;i2c2.c: 329: }
  6489  01F2  0008               	return
  6490  01F3                     i1l1605:	
  6491                           
  6492                           ;i2c2.c: 330: else
  6493                           ;i2c2.c: 331: {
  6494                           ;i2c2.c: 333: i2c2_state = S_MASTER_SEND_DATA;
  6495  01F3  3003               	movlw	3
  6496  01F4  00F2               	movwf	??_I2C2_ISR
  6497  01F5  0872               	movf	??_I2C2_ISR,w
  6498  01F6  00CF               	movwf	_i2c2_state
  6499                           
  6500                           ;i2c2.c: 334: }
  6501                           ;i2c2.c: 335: }
  6502                           ;i2c2.c: 337: break;
  6503  01F7  0008               	return
  6504  01F8                     i1l111:	
  6505                           ;i2c2.c: 339: case S_MASTER_10BIT_RESTART:
  6506                           
  6507                           
  6508                           ;i2c2.c: 341: if(SSP2CON2bits.ACKSTAT)
  6509  01F8  0023               	movlb	3	; select bank3
  6510  01F9  1F1B               	btfss	27,6	;volatile
  6511  01FA  2A04               	goto	i1l112
  6512                           
  6513                           ;i2c2.c: 342: {
  6514                           ;i2c2.c: 343: i2c2_object.i2cErrors++;
  6515  01FB  3001               	movlw	1
  6516  01FC  00F2               	movwf	??_I2C2_ISR
  6517  01FD  0872               	movf	??_I2C2_ISR,w
  6518  01FE  0020               	movlb	0	; select bank0
  6519  01FF  07CE               	addwf	_i2c2_object+4,f
  6520                           
  6521                           ;i2c2.c: 344: I2C2_Stop(I2C2_MESSAGE_ADDRESS_NO_ACK);
  6522  0200  3004               	movlw	4
  6523  0201  3186  269D         	fcall	_I2C2_Stop
  6524                           
  6525                           ;i2c2.c: 345: }
  6526  0203  0008               	return
  6527  0204                     i1l112:	
  6528                           
  6529                           ;i2c2.c: 346: else
  6530                           ;i2c2.c: 347: {
  6531                           ;i2c2.c: 350: SSP2CON2bits.RSEN = 1;
  6532  0204  149B               	bsf	27,1	;volatile
  6533                           
  6534                           ;i2c2.c: 354: i2c_address = 0x00F0 | ((i2c_address >> 8) & 0x0006);
  6535  0205  0020               	movlb	0	; select bank0
  6536  0206  0864               	movf	I2C2_ISR@i2c_address+1,w
  6537  0207  00F3               	movwf	??_I2C2_ISR+1
  6538  0208  0863               	movf	I2C2_ISR@i2c_address,w
  6539  0209  00F2               	movwf	??_I2C2_ISR
  6540  020A  0873               	movf	??_I2C2_ISR+1,w
  6541  020B  00F2               	movwf	??_I2C2_ISR
  6542  020C  01F3               	clrf	??_I2C2_ISR+1
  6543  020D  3006               	movlw	6
  6544  020E  0572               	andwf	??_I2C2_ISR,w
  6545  020F  00F4               	movwf	??_I2C2_ISR+2
  6546  0210  3000               	movlw	0
  6547  0211  0573               	andwf	??_I2C2_ISR+1,w
  6548  0212  00F5               	movwf	??_I2C2_ISR+3
  6549  0213  30F0               	movlw	240
  6550  0214  0474               	iorwf	??_I2C2_ISR+2,w
  6551  0215  00E3               	movwf	I2C2_ISR@i2c_address
  6552  0216  3000               	movlw	0
  6553  0217  0475               	iorwf	??_I2C2_ISR+3,w
  6554  0218  00E4               	movwf	I2C2_ISR@i2c_address+1
  6555                           
  6556                           ;i2c2.c: 357: i2c_address |= 0x0001;
  6557  0219  1463               	bsf	I2C2_ISR@i2c_address,0
  6558                           
  6559                           ;i2c2.c: 360: i2c_10bit_address_restart = 1;
  6560  021A  01F7               	clrf	I2C2_ISR@i2c_10bit_address_restart
  6561  021B  0AF7               	incf	I2C2_ISR@i2c_10bit_address_restart,f
  6562                           
  6563                           ;i2c2.c: 363: i2c2_state = S_MASTER_SEND_ADDR;
  6564  021C  3002               	movlw	2
  6565  021D  00F2               	movwf	??_I2C2_ISR
  6566  021E  0872               	movf	??_I2C2_ISR,w
  6567  021F  00CF               	movwf	_i2c2_state
  6568                           
  6569                           ;i2c2.c: 364: }
  6570                           ;i2c2.c: 366: break;
  6571  0220  0008               	return
  6572  0221                     i1l1619:	
  6573                           ;i2c2.c: 368: case S_MASTER_SEND_ADDR:
  6574                           
  6575                           
  6576                           ;i2c2.c: 381: if(i2c_10bit_address_restart != 1)
  6577  0221  0377               	decf	I2C2_ISR@i2c_10bit_address_restart,w
  6578  0222  1903               	btfsc	3,2
  6579  0223  2A35               	goto	i1l1639
  6580                           
  6581                           ;i2c2.c: 382: {
  6582                           ;i2c2.c: 384: i2c_address = p_i2c2_trb_current->address;
  6583  0224  087B               	movf	_p_i2c2_trb_current,w
  6584  0225  0086               	movwf	6
  6585  0226  0187               	clrf	7
  6586  0227  3F40               	moviw [0]fsr1
  6587  0228  00E3               	movwf	I2C2_ISR@i2c_address
  6588  0229  3F41               	moviw [1]fsr1
  6589  022A  00E4               	movwf	I2C2_ISR@i2c_address+1
  6590                           
  6591                           ;i2c2.c: 385: pi2c_buf_ptr = p_i2c2_trb_current->pbuffer;
  6592  022B  087B               	movf	_p_i2c2_trb_current,w
  6593  022C  0086               	movwf	6
  6594  022D  0187               	clrf	7
  6595  022E  3F43               	moviw [3]fsr1
  6596  022F  00F9               	movwf	I2C2_ISR@pi2c_buf_ptr
  6597                           
  6598                           ;i2c2.c: 386: i2c_bytes_left = p_i2c2_trb_current->length;
  6599  0230  087B               	movf	_p_i2c2_trb_current,w
  6600  0231  0086               	movwf	6
  6601  0232  0187               	clrf	7
  6602  0233  3F42               	moviw [2]fsr1
  6603  0234  00F8               	movwf	I2C2_ISR@i2c_bytes_left
  6604  0235                     i1l1639:	
  6605                           ;i2c2.c: 407: }
  6606                           ;i2c2.c: 408: }
  6607                           
  6608                           ;i2c2.c: 406: i2c_10bit_address_restart = 0;
  6609                           
  6610                           ;i2c2.c: 404: i2c2_state = S_MASTER_ACK_ADDR;
  6611                           
  6612                           ;i2c2.c: 400: else
  6613                           ;i2c2.c: 401: {
  6614                           ;i2c2.c: 403: SSP2BUF = i2c_address;
  6615                           
  6616                           ;i2c2.c: 399: }
  6617                           
  6618                           ;i2c2.c: 398: i2c2_state = S_MASTER_SEND_ADDR_10BIT_LSB;
  6619                           
  6620                           ;i2c2.c: 393: {
  6621                           ;i2c2.c: 397: SSP2BUF = 0xF0 | ((i2c_address >> 8) & 0x0006);
  6622                           
  6623                           ;i2c2.c: 391: {
  6624                           ;i2c2.c: 392: if (0 == i2c_10bit_address_restart)
  6625                           
  6626                           ;i2c2.c: 387: }
  6627                           ;i2c2.c: 390: if(!1 && (0x0 != i2c_address))
  6628                           
  6629                           
  6630                           ;i2c2.c: 409: else
  6631                           ;i2c2.c: 410: {
  6632                           ;i2c2.c: 412: SSP2BUF = i2c_address;
  6633  0235  0863               	movf	I2C2_ISR@i2c_address,w
  6634  0236  0023               	movlb	3	; select bank3
  6635  0237  0096               	movwf	22	;volatile
  6636                           
  6637                           ;i2c2.c: 413: if(i2c_address & 0x01)
  6638  0238  0020               	movlb	0	; select bank0
  6639  0239  1C63               	btfss	I2C2_ISR@i2c_address,0
  6640  023A  2A40               	goto	i1l1645
  6641                           
  6642                           ;i2c2.c: 414: {
  6643                           ;i2c2.c: 416: i2c2_state = S_MASTER_ACK_ADDR;
  6644  023B  3005               	movlw	5
  6645  023C  00F2               	movwf	??_I2C2_ISR
  6646  023D  0872               	movf	??_I2C2_ISR,w
  6647  023E  00CF               	movwf	_i2c2_state
  6648                           
  6649                           ;i2c2.c: 417: }
  6650  023F  0008               	return
  6651  0240                     i1l1645:	
  6652                           
  6653                           ;i2c2.c: 418: else
  6654                           ;i2c2.c: 419: {
  6655                           ;i2c2.c: 421: i2c2_state = S_MASTER_SEND_DATA;
  6656  0240  3003               	movlw	3
  6657  0241  00F2               	movwf	??_I2C2_ISR
  6658  0242  0872               	movf	??_I2C2_ISR,w
  6659  0243  00CF               	movwf	_i2c2_state
  6660                           
  6661                           ;i2c2.c: 422: }
  6662                           ;i2c2.c: 423: }
  6663                           ;i2c2.c: 424: break;
  6664  0244  0008               	return
  6665  0245                     i1l122:	
  6666                           ;i2c2.c: 426: case S_MASTER_SEND_DATA:
  6667                           
  6668                           
  6669                           ;i2c2.c: 429: if(SSP2CON2bits.ACKSTAT)
  6670  0245  0023               	movlb	3	; select bank3
  6671  0246  1F1B               	btfss	27,6	;volatile
  6672  0247  2A53               	goto	i1l1653
  6673                           
  6674                           ;i2c2.c: 430: {
  6675                           ;i2c2.c: 432: i2c2_object.i2cErrors++;
  6676  0248  3001               	movlw	1
  6677  0249  00F2               	movwf	??_I2C2_ISR
  6678  024A  0872               	movf	??_I2C2_ISR,w
  6679  024B  0020               	movlb	0	; select bank0
  6680  024C  07CE               	addwf	_i2c2_object+4,f
  6681                           
  6682                           ;i2c2.c: 435: SSP2CON2bits.ACKSTAT = 0;
  6683  024D  0023               	movlb	3	; select bank3
  6684  024E  131B               	bcf	27,6	;volatile
  6685                           
  6686                           ;i2c2.c: 438: I2C2_Stop(I2C2_DATA_NO_ACK);
  6687  024F  3005               	movlw	5
  6688  0250  3186  269D         	fcall	_I2C2_Stop
  6689                           
  6690                           ;i2c2.c: 440: }
  6691  0252  0008               	return
  6692  0253                     i1l1653:	
  6693                           
  6694                           ;i2c2.c: 441: else
  6695                           ;i2c2.c: 442: {
  6696                           ;i2c2.c: 444: if(i2c_bytes_left-- == 0U)
  6697  0253  3001               	movlw	1
  6698  0254  02F8               	subwf	I2C2_ISR@i2c_bytes_left,f
  6699  0255  0A78               	incf	I2C2_ISR@i2c_bytes_left,w
  6700  0256  1D03               	btfss	3,2
  6701  0257  2A6C               	goto	i1l1661
  6702                           
  6703                           ;i2c2.c: 445: {
  6704                           ;i2c2.c: 449: p_i2c2_trb_current++;
  6705  0258  3004               	movlw	4
  6706  0259  00F2               	movwf	??_I2C2_ISR
  6707  025A  0872               	movf	??_I2C2_ISR,w
  6708  025B  07FB               	addwf	_p_i2c2_trb_current,f
  6709                           
  6710                           ;i2c2.c: 452: if(--i2c2_trb_count == 0)
  6711  025C  3001               	movlw	1
  6712  025D  02FC               	subwf	_i2c2_trb_count,f
  6713  025E  1D03               	btfss	3,2
  6714  025F  2A64               	goto	i1l126
  6715                           
  6716                           ;i2c2.c: 453: {
  6717                           ;i2c2.c: 454: I2C2_Stop(I2C2_MESSAGE_COMPLETE);
  6718  0260  3000               	movlw	0
  6719  0261  3186  269D         	fcall	_I2C2_Stop
  6720                           
  6721                           ;i2c2.c: 455: }
  6722  0263  0008               	return
  6723  0264                     i1l126:	
  6724                           
  6725                           ;i2c2.c: 456: else
  6726                           ;i2c2.c: 457: {
  6727                           ;i2c2.c: 464: SSP2CON2bits.RSEN = 1;
  6728  0264  0023               	movlb	3	; select bank3
  6729  0265  149B               	bsf	27,1	;volatile
  6730                           
  6731                           ;i2c2.c: 467: i2c2_state = S_MASTER_SEND_ADDR;
  6732  0266  3002               	movlw	2
  6733  0267  00F2               	movwf	??_I2C2_ISR
  6734  0268  0872               	movf	??_I2C2_ISR,w
  6735  0269  0020               	movlb	0	; select bank0
  6736  026A  00CF               	movwf	_i2c2_state
  6737                           
  6738                           ;i2c2.c: 469: }
  6739                           ;i2c2.c: 470: }
  6740  026B  0008               	return
  6741  026C                     i1l1661:	
  6742                           
  6743                           ;i2c2.c: 471: else
  6744                           ;i2c2.c: 472: {
  6745                           ;i2c2.c: 474: SSP2BUF = *pi2c_buf_ptr++;
  6746  026C  0879               	movf	I2C2_ISR@pi2c_buf_ptr,w
  6747  026D  0086               	movwf	6
  6748  026E  0187               	clrf	7
  6749  026F  0801               	movf	1,w
  6750  0270  0023               	movlb	3	; select bank3
  6751  0271  0096               	movwf	22	;volatile
  6752  0272  3001               	movlw	1
  6753  0273  00F2               	movwf	??_I2C2_ISR
  6754  0274  0872               	movf	??_I2C2_ISR,w
  6755  0275  07F9               	addwf	I2C2_ISR@pi2c_buf_ptr,f
  6756                           
  6757                           ;i2c2.c: 475: }
  6758                           ;i2c2.c: 476: }
  6759                           ;i2c2.c: 477: break;
  6760  0276  0008               	return
  6761  0277                     i1l129:	
  6762                           ;i2c2.c: 479: case S_MASTER_ACK_ADDR:
  6763                           
  6764                           
  6765                           ;i2c2.c: 482: if(SSP2CON2bits.ACKSTAT)
  6766  0277  0023               	movlb	3	; select bank3
  6767  0278  1F1B               	btfss	27,6	;volatile
  6768  0279  2A85               	goto	i1l130
  6769                           
  6770                           ;i2c2.c: 483: {
  6771                           ;i2c2.c: 486: i2c2_object.i2cErrors++;
  6772  027A  3001               	movlw	1
  6773  027B  00F2               	movwf	??_I2C2_ISR
  6774  027C  0872               	movf	??_I2C2_ISR,w
  6775  027D  0020               	movlb	0	; select bank0
  6776  027E  07CE               	addwf	_i2c2_object+4,f
  6777                           
  6778                           ;i2c2.c: 489: I2C2_Stop(I2C2_MESSAGE_ADDRESS_NO_ACK);
  6779  027F  3004               	movlw	4
  6780  0280  3186  269D         	fcall	_I2C2_Stop
  6781                           
  6782                           ;i2c2.c: 492: SSP2CON2bits.ACKSTAT = 0;
  6783  0282  0023               	movlb	3	; select bank3
  6784  0283  131B               	bcf	27,6	;volatile
  6785                           
  6786                           ;i2c2.c: 493: }
  6787  0284  0008               	return
  6788  0285                     i1l130:	
  6789                           
  6790                           ;i2c2.c: 494: else
  6791                           ;i2c2.c: 495: {
  6792                           ;i2c2.c: 496: SSP2CON2bits.RCEN = 1;
  6793  0285  159B               	bsf	27,3	;volatile
  6794                           
  6795                           ;i2c2.c: 497: i2c2_state = S_MASTER_ACK_RCV_DATA;
  6796  0286  3008               	movlw	8
  6797  0287  00F2               	movwf	??_I2C2_ISR
  6798  0288  0872               	movf	??_I2C2_ISR,w
  6799  0289  0020               	movlb	0	; select bank0
  6800  028A  00CF               	movwf	_i2c2_state
  6801                           
  6802                           ;i2c2.c: 498: }
  6803                           ;i2c2.c: 499: break;
  6804  028B  0008               	return
  6805  028C                     i1l1673:	
  6806                           ;i2c2.c: 501: case S_MASTER_RCV_DATA:
  6807                           
  6808                           
  6809                           ;i2c2.c: 506: i2c2_state = S_MASTER_ACK_RCV_DATA;
  6810  028C  3008               	movlw	8
  6811  028D  00F2               	movwf	??_I2C2_ISR
  6812  028E  0872               	movf	??_I2C2_ISR,w
  6813  028F  00CF               	movwf	_i2c2_state
  6814                           
  6815                           ;i2c2.c: 509: SSP2CON2bits.RCEN = 1;
  6816  0290  0023               	movlb	3	; select bank3
  6817  0291  159B               	bsf	27,3	;volatile
  6818                           
  6819                           ;i2c2.c: 511: break;
  6820  0292  0008               	return
  6821  0293                     i1l1677:	
  6822                           ;i2c2.c: 513: case S_MASTER_ACK_RCV_DATA:
  6823                           
  6824                           
  6825                           ;i2c2.c: 516: *pi2c_buf_ptr++ = SSP2BUF;
  6826  0293  0023               	movlb	3	; select bank3
  6827  0294  0816               	movf	22,w	;volatile
  6828  0295  00F2               	movwf	??_I2C2_ISR
  6829  0296  0879               	movf	I2C2_ISR@pi2c_buf_ptr,w
  6830  0297  0086               	movwf	6
  6831  0298  0187               	clrf	7
  6832  0299  0872               	movf	??_I2C2_ISR,w
  6833  029A  0081               	movwf	1
  6834  029B  3001               	movlw	1
  6835  029C  00F2               	movwf	??_I2C2_ISR
  6836  029D  0872               	movf	??_I2C2_ISR,w
  6837  029E  07F9               	addwf	I2C2_ISR@pi2c_buf_ptr,f
  6838                           
  6839                           ;i2c2.c: 519: if(--i2c_bytes_left)
  6840  029F  3001               	movlw	1
  6841  02A0  02F8               	subwf	I2C2_ISR@i2c_bytes_left,f
  6842  02A1  1903               	btfsc	3,2
  6843  02A2  2AAA               	goto	i1l134
  6844                           
  6845                           ;i2c2.c: 520: {
  6846                           ;i2c2.c: 526: SSP2CON2bits.ACKDT = 0;
  6847  02A3  129B               	bcf	27,5	;volatile
  6848                           
  6849                           ;i2c2.c: 529: i2c2_state = S_MASTER_RCV_DATA;
  6850  02A4  3006               	movlw	6
  6851  02A5  00F2               	movwf	??_I2C2_ISR
  6852  02A6  0872               	movf	??_I2C2_ISR,w
  6853  02A7  0020               	movlb	0	; select bank0
  6854  02A8  00CF               	movwf	_i2c2_state
  6855                           
  6856                           ;i2c2.c: 530: }
  6857  02A9  2AAD               	goto	i1l1689
  6858  02AA                     i1l134:	
  6859                           
  6860                           ;i2c2.c: 531: else
  6861                           ;i2c2.c: 532: {
  6862                           ;i2c2.c: 536: SSP2CON2bits.ACKDT = 1;
  6863  02AA  169B               	bsf	27,5	;volatile
  6864                           
  6865                           ;i2c2.c: 538: I2C2_FunctionComplete();
  6866  02AB  3186  26CC         	fcall	_I2C2_FunctionComplete
  6867  02AD                     i1l1689:	
  6868                           
  6869                           ;i2c2.c: 539: }
  6870                           ;i2c2.c: 542: SSP2CON2bits.ACKEN = 1;
  6871  02AD  0023               	movlb	3	; select bank3
  6872  02AE  161B               	bsf	27,4	;volatile
  6873                           
  6874                           ;i2c2.c: 543: break;
  6875  02AF  0008               	return
  6876  02B0                     i1l1691:	
  6877                           ;i2c2.c: 545: case S_MASTER_RCV_STOP:
  6878                           
  6879                           
  6880                           ;i2c2.c: 546: case S_MASTER_SEND_STOP:
  6881                           ;i2c2.c: 549: I2C2_Stop(I2C2_MESSAGE_COMPLETE);
  6882  02B0  3000               	movlw	0
  6883  02B1  3186  269D         	fcall	_I2C2_Stop
  6884                           
  6885                           ;i2c2.c: 550: break;
  6886  02B3  0008               	return
  6887  02B4                     i1l1693:	
  6888                           ;i2c2.c: 552: default:
  6889                           
  6890                           
  6891                           ;i2c2.c: 556: i2c2_object.i2cErrors++;
  6892  02B4  3001               	movlw	1
  6893  02B5  00F2               	movwf	??_I2C2_ISR
  6894  02B6  0872               	movf	??_I2C2_ISR,w
  6895  02B7  0020               	movlb	0	; select bank0
  6896  02B8  07CE               	addwf	_i2c2_object+4,f
  6897                           
  6898                           ;i2c2.c: 557: I2C2_Stop(I2C2_LOST_STATE);
  6899  02B9  3006               	movlw	6
  6900  02BA  3186  269D         	fcall	_I2C2_Stop
  6901                           
  6902                           ;i2c2.c: 560: }
  6903                           
  6904                           ;i2c2.c: 558: break;
  6905  02BC  0008               	return
  6906  02BD                     i1l1699:	
  6907  02BD  0020               	movlb	0	; select bank0
  6908  02BE  084F               	movf	_i2c2_state,w
  6909                           
  6910                           ; Switch size 1, requested type "space"
  6911                           ; Number of cases is 11, Range of values is 0 to 11
  6912                           ; switch strategies available:
  6913                           ; Name         Instructions Cycles
  6914                           ; direct_byte           30     6 (fixed)
  6915                           ; simple_byte           34    18 (average)
  6916                           ; jumptable            260     6 (fixed)
  6917                           ;	Chosen strategy is direct_byte
  6918  02BF  0084               	movwf	4
  6919  02C0  300C               	movlw	12
  6920  02C1  0204               	subwf	4,w
  6921  02C2  1803               	skipnc
  6922  02C3  2AB4               	goto	i1l1693
  6923  02C4  3186               	movlp	high i1S2191
  6924  02C5  3504               	lslf	4,w
  6925  02C6  3E85               	addlw	low i1S2191
  6926  02C7  0082               	movwf	2
  6927  02C8  0008               	return
  6928  02C9                     __end_of_I2C2_ISR:	
  6929                           
  6930                           	psect	swtext1
  6931  0685                     __pswtext1:	
  6932  0685                     i1S2191:	
  6933  0685  3181  29A2         	ljmp	i1l100
  6934  0687  3181  29CD         	ljmp	i1l105
  6935  0689  3182  2A21         	ljmp	i1l1619
  6936  068B  3182  2A45         	ljmp	i1l122
  6937  068D  3182  2AB0         	ljmp	i1l1691
  6938  068F  3182  2A77         	ljmp	i1l129
  6939  0691  3182  2A8C         	ljmp	i1l1673
  6940  0693  3182  2AB0         	ljmp	i1l1691
  6941  0695  3182  2A93         	ljmp	i1l1677
  6942  0697  3182  2AB4         	ljmp	i1l1693
  6943  0699  3181  29D5         	ljmp	i1l106
  6944  069B  3181  29F8         	ljmp	i1l111
  6945                           
  6946                           	psect	text20
  6947  069D                     __ptext20:	
  6948 ;; *************** function _I2C2_Stop *****************
  6949 ;; Defined at:
  6950 ;;		line 581 in file "mcc_generated_files/i2c2.c"
  6951 ;; Parameters:    Size  Location     Type
  6952 ;;  completion_c    1    wreg     enum E14260
  6953 ;; Auto vars:     Size  Location     Type
  6954 ;;  completion_c    1    1[COMMON] enum E14260
  6955 ;; Return value:  Size  Location     Type
  6956 ;;                  1    wreg      void 
  6957 ;; Registers used:
  6958 ;;		wreg, fsr1l, fsr1h, status,2, status,0
  6959 ;; Tracked objects:
  6960 ;;		On entry : 0/0
  6961 ;;		On exit  : 0/0
  6962 ;;		Unchanged: 0/0
  6963 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
  6964 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  6965 ;;      Locals:         1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  6966 ;;      Temps:          1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  6967 ;;      Totals:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  6968 ;;Total ram usage:        2 bytes
  6969 ;; Hardware stack levels used:    1
  6970 ;; This function calls:
  6971 ;;		Nothing
  6972 ;; This function is called by:
  6973 ;;		_I2C2_ISR
  6974 ;; This function uses a non-reentrant model
  6975 ;;
  6976                           
  6977                           
  6978                           ;psect for function _I2C2_Stop
  6979  069D                     _I2C2_Stop:	
  6980                           
  6981                           ;incstack = 0
  6982                           ; Regs used in _I2C2_Stop: [wreg+fsr1l+fsr1h+status,2+status,0]
  6983                           ;I2C2_Stop@completion_code stored from wreg
  6984  069D  00F1               	movwf	I2C2_Stop@completion_code
  6985                           
  6986                           ;i2c2.c: 584: SSP2CON2bits.PEN = 1;
  6987  069E  0023               	movlb	3	; select bank3
  6988  069F  151B               	bsf	27,2	;volatile
  6989                           
  6990                           ;i2c2.c: 587: if (p_i2c2_current->pTrFlag != (0))
  6991  06A0  087A               	movf	_p_i2c2_current,w
  6992  06A1  3E02               	addlw	2
  6993  06A2  0086               	movwf	6
  6994  06A3  0187               	clrf	7
  6995  06A4  0801               	movf	1,w
  6996  06A5  1903               	btfsc	3,2
  6997  06A6  2EB2               	goto	i1l1433
  6998                           
  6999                           ;i2c2.c: 588: {
  7000                           ;i2c2.c: 590: *(p_i2c2_current->pTrFlag) = completion_code;
  7001  06A7  0871               	movf	I2C2_Stop@completion_code,w
  7002  06A8  00F0               	movwf	??_I2C2_Stop
  7003  06A9  087A               	movf	_p_i2c2_current,w
  7004  06AA  3E02               	addlw	2
  7005  06AB  0086               	movwf	6
  7006  06AC  0187               	clrf	7
  7007  06AD  0801               	movf	1,w
  7008  06AE  0086               	movwf	6
  7009  06AF  0187               	clrf	7
  7010  06B0  0870               	movf	??_I2C2_Stop,w
  7011  06B1  0081               	movwf	1
  7012  06B2                     i1l1433:	
  7013                           
  7014                           ;i2c2.c: 591: }
  7015                           ;i2c2.c: 594: i2c2_state = S_MASTER_IDLE;
  7016  06B2  0020               	movlb	0	; select bank0
  7017  06B3  01CF               	clrf	_i2c2_state
  7018  06B4  0008               	return
  7019  06B5                     __end_of_I2C2_Stop:	
  7020                           
  7021                           	psect	text21
  7022  06CC                     __ptext21:	
  7023 ;; *************** function _I2C2_FunctionComplete *****************
  7024 ;; Defined at:
  7025 ;;		line 563 in file "mcc_generated_files/i2c2.c"
  7026 ;; Parameters:    Size  Location     Type
  7027 ;;		None
  7028 ;; Auto vars:     Size  Location     Type
  7029 ;;		None
  7030 ;; Return value:  Size  Location     Type
  7031 ;;                  1    wreg      void 
  7032 ;; Registers used:
  7033 ;;		wreg, status,2, status,0
  7034 ;; Tracked objects:
  7035 ;;		On entry : 0/0
  7036 ;;		On exit  : 0/0
  7037 ;;		Unchanged: 0/0
  7038 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
  7039 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  7040 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  7041 ;;      Temps:          1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  7042 ;;      Totals:         1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  7043 ;;Total ram usage:        1 bytes
  7044 ;; Hardware stack levels used:    1
  7045 ;; This function calls:
  7046 ;;		Nothing
  7047 ;; This function is called by:
  7048 ;;		_I2C2_ISR
  7049 ;; This function uses a non-reentrant model
  7050 ;;
  7051                           
  7052                           
  7053                           ;psect for function _I2C2_FunctionComplete
  7054  06CC                     _I2C2_FunctionComplete:	
  7055                           
  7056                           ;i2c2.c: 567: p_i2c2_trb_current++;
  7057                           
  7058                           ;incstack = 0
  7059                           ; Regs used in _I2C2_FunctionComplete: [wreg+status,2+status,0]
  7060  06CC  3004               	movlw	4
  7061  06CD  00F0               	movwf	??_I2C2_FunctionComplete
  7062  06CE  0870               	movf	??_I2C2_FunctionComplete,w
  7063  06CF  07FB               	addwf	_p_i2c2_trb_current,f
  7064                           
  7065                           ;i2c2.c: 570: if(--i2c2_trb_count == 0)
  7066  06D0  3001               	movlw	1
  7067  06D1  02FC               	subwf	_i2c2_trb_count,f
  7068  06D2  1D03               	btfss	3,2
  7069  06D3  2EDA               	goto	i1l141
  7070                           
  7071                           ;i2c2.c: 571: {
  7072                           ;i2c2.c: 572: i2c2_state = S_MASTER_SEND_STOP;
  7073  06D4  3004               	movlw	4
  7074  06D5  00F0               	movwf	??_I2C2_FunctionComplete
  7075  06D6  0870               	movf	??_I2C2_FunctionComplete,w
  7076  06D7  0020               	movlb	0	; select bank0
  7077  06D8  00CF               	movwf	_i2c2_state
  7078                           
  7079                           ;i2c2.c: 573: }
  7080  06D9  0008               	return
  7081  06DA                     i1l141:	
  7082                           
  7083                           ;i2c2.c: 574: else
  7084                           ;i2c2.c: 575: {
  7085                           ;i2c2.c: 576: i2c2_state = S_MASTER_RESTART;
  7086  06DA  0020               	movlb	0	; select bank0
  7087  06DB  01CF               	clrf	_i2c2_state
  7088  06DC  0ACF               	incf	_i2c2_state,f
  7089  06DD  0008               	return
  7090  06DE                     __end_of_I2C2_FunctionComplete:	
  7091                           
  7092                           	psect	text22
  7093  0720                     __ptext22:	
  7094 ;; *************** function _I2C2_BusCollisionISR *****************
  7095 ;; Defined at:
  7096 ;;		line 728 in file "mcc_generated_files/i2c2.c"
  7097 ;; Parameters:    Size  Location     Type
  7098 ;;		None
  7099 ;; Auto vars:     Size  Location     Type
  7100 ;;		None
  7101 ;; Return value:  Size  Location     Type
  7102 ;;                  1    wreg      void 
  7103 ;; Registers used:
  7104 ;;		None
  7105 ;; Tracked objects:
  7106 ;;		On entry : 0/0
  7107 ;;		On exit  : 0/0
  7108 ;;		Unchanged: 0/0
  7109 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
  7110 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  7111 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  7112 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  7113 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  7114 ;;Total ram usage:        0 bytes
  7115 ;; Hardware stack levels used:    1
  7116 ;; This function calls:
  7117 ;;		Nothing
  7118 ;; This function is called by:
  7119 ;;		_INTERRUPT_InterruptManager
  7120 ;; This function uses a non-reentrant model
  7121 ;;
  7122                           
  7123                           
  7124                           ;psect for function _I2C2_BusCollisionISR
  7125  0720                     _I2C2_BusCollisionISR:	
  7126                           
  7127                           ;incstack = 0
  7128                           ; Regs used in _I2C2_BusCollisionISR: []
  7129  0720  0008               	return
  7130  0721                     __end_of_I2C2_BusCollisionISR:	
  7131  007E                     btemp	set	126	;btemp
  7132  007E                     int$flags	set	126
  7133  007E                     wtemp0	set	126


Data Sizes:
    Strings     240
    Constant    18
    Data        0
    BSS         33
    Persistent  0
    Stack       0

Auto Spaces:
    Space          Size  Autos    Used
    COMMON           14      7      13
    BANK0            80     42      69
    BANK1            80      0       0
    BANK2            80      0       0
    BANK3            80      0       0
    BANK4            80      0       0
    BANK5            80      0       0
    BANK6            80      0       0
    BANK7            80      0       0
    BANK8            80      0       0
    BANK9            80      0       0
    BANK10           80      0       0
    BANK11           80      0       0
    BANK12           48      0       0

Pointer List with Targets:

    i2c2_tr_queue.ptrb_list.pbuffer	PTR unsigned char  size(1) Largest target is 1
		 -> main@templo(BANK0[1]), main@temp(BANK0[1]), main@data(BANK0[1]), EMC1001_Read@reg(BANK0[1]), 

    EMC1001_Read@trb.pbuffer	PTR unsigned char  size(1) Largest target is 1
		 -> main@templo(BANK0[1]), main@temp(BANK0[1]), main@data(BANK0[1]), EMC1001_Read@reg(BANK0[1]), 

    i2c2_tr_queue.pTrFlag	PTR enum E14260 size(1) Largest target is 1
		 -> EMC1001_Read@status(BANK0[1]), 

    i2c2_tr_queue.ptrb_list	PTR struct . size(1) Largest target is 10
		 -> EMC1001_Read@trb(BANK0[8]), I2C2_MasterRead@trBlock(BANK0[4]), I2C2_MasterWrite@trBlock(BANK0[4]), 

    cputs@s	PTR const unsigned char  size(2) Largest target is 25
		 -> STR_2(CODE[25]), 

    puts@s	PTR const unsigned char  size(2) Largest target is 25
		 -> STR_2(CODE[25]), 

    printf$645	PTR const unsigned char  size(2) Largest target is 17
		 -> STR_14(CODE[17]), STR_13(CODE[17]), 

    printf@f	PTR const unsigned char  size(2) Largest target is 30
		 -> STR_11(CODE[24]), STR_10(CODE[25]), STR_9(CODE[29]), STR_8(CODE[30]), 
		 -> STR_7(CODE[15]), STR_6(CODE[23]), STR_3(CODE[23]), STR_1(CODE[2]), 

    printf@cp	PTR const unsigned char  size(2) Largest target is 7
		 -> STR_12(CODE[7]), STR_5(CODE[1]), STR_4(CODE[3]), I2C2_ISR@i2c_address(BANK0[2]), 

    printf@ap	PTR void [1] size(1) Largest target is 2
		 -> ?_printf(BANK0[2]), 

    main$603	PTR const unsigned char  size(2) Largest target is 3
		 -> STR_5(CODE[1]), STR_4(CODE[3]), 

    EMC1001_Read@pData	PTR unsigned char  size(1) Largest target is 1
		 -> main@templo(BANK0[1]), main@temp(BANK0[1]), main@data(BANK0[1]), 

    I2C2_MasterWriteTRBBuild@pdata	PTR unsigned char  size(1) Largest target is 1
		 -> EMC1001_Read@reg(BANK0[1]), 

    I2C2_MasterWriteTRBBuild@ptrb.pbuffer	PTR unsigned char  size(1) Largest target is 1
		 -> main@templo(BANK0[1]), main@temp(BANK0[1]), main@data(BANK0[1]), EMC1001_Read@reg(BANK0[1]), 

    I2C2_MasterWriteTRBBuild@ptrb	PTR struct . size(1) Largest target is 10
		 -> EMC1001_Read@trb(BANK0[8]), I2C2_MasterWrite@trBlock(BANK0[4]), 

    I2C2_MasterReadTRBBuild@pdata	PTR unsigned char  size(1) Largest target is 1
		 -> main@templo(BANK0[1]), main@temp(BANK0[1]), main@data(BANK0[1]), 

    I2C2_MasterReadTRBBuild@ptrb.pbuffer	PTR unsigned char  size(1) Largest target is 1
		 -> main@templo(BANK0[1]), main@temp(BANK0[1]), main@data(BANK0[1]), EMC1001_Read@reg(BANK0[1]), 

    I2C2_MasterReadTRBBuild@ptrb	PTR struct . size(1) Largest target is 10
		 -> EMC1001_Read@trb(BANK0[8]), I2C2_MasterRead@trBlock(BANK0[4]), 

    i2c2_object.pTrTail.ptrb_list.pbuffer	PTR unsigned char  size(1) Largest target is 1
		 -> main@templo(BANK0[1]), main@temp(BANK0[1]), main@data(BANK0[1]), EMC1001_Read@reg(BANK0[1]), 

    i2c2_object.pTrTail.pTrFlag	PTR enum E14260 size(1) Largest target is 1
		 -> EMC1001_Read@status(BANK0[1]), 

    i2c2_object.pTrTail.ptrb_list	PTR struct . size(1) Largest target is 10
		 -> EMC1001_Read@trb(BANK0[8]), I2C2_MasterRead@trBlock(BANK0[4]), I2C2_MasterWrite@trBlock(BANK0[4]), 

    I2C2_MasterTRBInsert@ptrb_list	PTR struct . size(1) Largest target is 10
		 -> EMC1001_Read@trb(BANK0[8]), I2C2_MasterRead@trBlock(BANK0[4]), I2C2_MasterWrite@trBlock(BANK0[4]), 

    I2C2_MasterTRBInsert@pflag	PTR enum E14260 size(1) Largest target is 1
		 -> EMC1001_Read@status(BANK0[1]), 

    F14372.pbuffer	PTR unsigned char  size(1) Largest target is 1
		 -> main@templo(BANK0[1]), main@temp(BANK0[1]), main@data(BANK0[1]), EMC1001_Read@reg(BANK0[1]), 

    F14367.pbuffer	PTR unsigned char  size(1) Largest target is 1
		 -> main@templo(BANK0[1]), main@temp(BANK0[1]), main@data(BANK0[1]), EMC1001_Read@reg(BANK0[1]), 

    I2C2_ISR@pi2c_buf_ptr	PTR unsigned char  size(1) Largest target is 2
		 -> main@templo(BANK0[1]), main@temp(BANK0[1]), main@data(BANK0[1]), EMC1001_Read@reg(BANK0[1]), 
		 -> I2C2_ISR@i2c_address(BANK0[2]), NULL(NULL[0]), 

    S87$pbuffer	PTR unsigned char  size(1) Largest target is 1
		 -> main@templo(BANK0[1]), main@temp(BANK0[1]), main@data(BANK0[1]), EMC1001_Read@reg(BANK0[1]), 

    p_i2c2_trb_current.pbuffer	PTR unsigned char  size(1) Largest target is 1
		 -> main@templo(BANK0[1]), main@temp(BANK0[1]), main@data(BANK0[1]), EMC1001_Read@reg(BANK0[1]), 

    p_i2c2_trb_current	PTR struct . size(1) Largest target is 10
		 -> EMC1001_Read@trb(BANK0[8]), I2C2_MasterRead@trBlock(BANK0[4]), I2C2_MasterWrite@trBlock(BANK0[4]), NULL(NULL[0]), 

    i2c2_object.pTrHead.pTrFlag	PTR enum E14260 size(1) Largest target is 1
		 -> EMC1001_Read@status(BANK0[1]), 

    i2c2_object.pTrHead.ptrb_list	PTR struct . size(1) Largest target is 10
		 -> EMC1001_Read@trb(BANK0[8]), I2C2_MasterRead@trBlock(BANK0[4]), I2C2_MasterWrite@trBlock(BANK0[4]), 

    S99$pTrFlag	PTR enum E14260 size(1) Largest target is 1
		 -> EMC1001_Read@status(BANK0[1]), 

    p_i2c2_current.pTrFlag	PTR enum E14260 size(1) Largest target is 1
		 -> EMC1001_Read@status(BANK0[1]), 

    S99$ptrb_list	PTR struct . size(1) Largest target is 10
		 -> EMC1001_Read@trb(BANK0[8]), I2C2_MasterRead@trBlock(BANK0[4]), I2C2_MasterWrite@trBlock(BANK0[4]), 

    p_i2c2_current.ptrb_list	PTR struct . size(1) Largest target is 10
		 -> EMC1001_Read@trb(BANK0[8]), I2C2_MasterRead@trBlock(BANK0[4]), I2C2_MasterWrite@trBlock(BANK0[4]), 

    p_i2c2_current	PTR struct . size(1) Largest target is 5
		 -> i2c2_tr_queue(BANK0[3]), NULL(NULL[0]), 

    S110$pTrHead	PTR struct . size(1) Largest target is 5
		 -> i2c2_tr_queue(BANK0[3]), 

    i2c2_object.pTrHead	PTR struct . size(1) Largest target is 5
		 -> i2c2_tr_queue(BANK0[3]), 

    S110$pTrTail	PTR struct . size(1) Largest target is 5
		 -> i2c2_tr_queue(BANK0[3]), 

    i2c2_object.pTrTail	PTR struct . size(1) Largest target is 5
		 -> i2c2_tr_queue(BANK0[3]), 


Critical Paths under _main in COMMON

    None.

Critical Paths under _INTERRUPT_InterruptManager in COMMON

    _INTERRUPT_InterruptManager->_I2C2_ISR
    _I2C2_ISR->_I2C2_Stop

Critical Paths under _main in BANK0

    _main->_printf
    _puts->_cputs
    _cputs->_putch
    _printf->___lwmod
    _putch->_EUSART_Write
    ___lwmod->___lwdiv
    _SYSTEM_Initialize->_I2C2_Initialize
    _SYSTEM_Initialize->_PIN_MANAGER_Initialize
    _EMC1001_Read->_I2C2_MasterReadTRBBuild
    _EMC1001_Read->_I2C2_MasterWriteTRBBuild

Critical Paths under _INTERRUPT_InterruptManager in BANK0

    None.

Critical Paths under _main in BANK1

    None.

Critical Paths under _INTERRUPT_InterruptManager in BANK1

    None.

Critical Paths under _main in BANK2

    None.

Critical Paths under _INTERRUPT_InterruptManager in BANK2

    None.

Critical Paths under _main in BANK3

    None.

Critical Paths under _INTERRUPT_InterruptManager in BANK3

    None.

Critical Paths under _main in BANK4

    None.

Critical Paths under _INTERRUPT_InterruptManager in BANK4

    None.

Critical Paths under _main in BANK5

    None.

Critical Paths under _INTERRUPT_InterruptManager in BANK5

    None.

Critical Paths under _main in BANK6

    None.

Critical Paths under _INTERRUPT_InterruptManager in BANK6

    None.

Critical Paths under _main in BANK7

    None.

Critical Paths under _INTERRUPT_InterruptManager in BANK7

    None.

Critical Paths under _main in BANK8

    None.

Critical Paths under _INTERRUPT_InterruptManager in BANK8

    None.

Critical Paths under _main in BANK9

    None.

Critical Paths under _INTERRUPT_InterruptManager in BANK9

    None.

Critical Paths under _main in BANK10

    None.

Critical Paths under _INTERRUPT_InterruptManager in BANK10

    None.

Critical Paths under _main in BANK11

    None.

Critical Paths under _INTERRUPT_InterruptManager in BANK11

    None.

Critical Paths under _main in BANK12

    None.

Critical Paths under _INTERRUPT_InterruptManager in BANK12

    None.

Call Graph Tables:

 ---------------------------------------------------------------------------------
 (Depth) Function   	        Calls       Base Space   Used Autos Params    Refs
 ---------------------------------------------------------------------------------
 (0) _main                                                 7     7      0    5689
                                             35 BANK0      7     7      0
                       _EMC1001_Read
                  _SYSTEM_Initialize
                             ___wmul
                             _printf
                               _puts
 ---------------------------------------------------------------------------------
 (1) _puts                                                 2     0      2     350
                                              5 BANK0      2     0      2
                              _cputs
                              _putch
 ---------------------------------------------------------------------------------
 (2) _cputs                                                3     1      2     192
                                              2 BANK0      3     1      2
                              _putch
 ---------------------------------------------------------------------------------
 (1) _printf                                              27    21      6    2353
                                             14 BANK0     21    15      6
                            ___lwdiv
                            ___lwmod
                             ___wmul (ARG)
                              _putch
 ---------------------------------------------------------------------------------
 (2) _putch                                                1     1      0      62
                                              1 BANK0      1     1      0
                       _EUSART_Write
 ---------------------------------------------------------------------------------
 (3) _EUSART_Write                                         1     1      0      31
                                              0 BANK0      1     1      0
 ---------------------------------------------------------------------------------
 (2) ___lwmod                                              6     2      4     265
                                              8 BANK0      6     2      4
                            ___lwdiv (ARG)
 ---------------------------------------------------------------------------------
 (2) ___lwdiv                                              8     4      4     374
                                              0 BANK0      8     4      4
 ---------------------------------------------------------------------------------
 (1) ___wmul                                               6     2      4     266
                                              0 BANK0      6     2      4
 ---------------------------------------------------------------------------------
 (1) _SYSTEM_Initialize                                    0     0      0      34
                  _EUSART_Initialize
                    _I2C2_Initialize
              _OSCILLATOR_Initialize
             _PIN_MANAGER_Initialize
 ---------------------------------------------------------------------------------
 (2) _PIN_MANAGER_Initialize                               1     1      0      34
                                              0 BANK0      1     1      0
 ---------------------------------------------------------------------------------
 (2) _OSCILLATOR_Initialize                                0     0      0       0
 ---------------------------------------------------------------------------------
 (2) _I2C2_Initialize                                      1     1      0       0
                                              0 BANK0      1     1      0
 ---------------------------------------------------------------------------------
 (2) _EUSART_Initialize                                    0     0      0       0
 ---------------------------------------------------------------------------------
 (1) _EMC1001_Read                                         5     4      1    2027
                                              7 BANK0      5     4      1
            _I2C2_MasterReadTRBBuild
               _I2C2_MasterTRBInsert
           _I2C2_MasterWriteTRBBuild
 ---------------------------------------------------------------------------------
 (2) _I2C2_MasterWriteTRBBuild                             7     3      4     504
                                              0 BANK0      7     3      4
 ---------------------------------------------------------------------------------
 (2) _I2C2_MasterTRBInsert                                 4     2      2     450
                                              0 BANK0      4     2      2
 ---------------------------------------------------------------------------------
 (2) _I2C2_MasterReadTRBBuild                              7     3      4     526
                                              0 BANK0      7     3      4
 ---------------------------------------------------------------------------------
 Estimated maximum stack depth 3
 ---------------------------------------------------------------------------------
 (Depth) Function   	        Calls       Base Space   Used Autos Params    Refs
 ---------------------------------------------------------------------------------
 (5) _INTERRUPT_InterruptManager                           1     1      0      22
                                              6 COMMON     1     1      0
               _I2C2_BusCollisionISR
                           _I2C2_ISR
 ---------------------------------------------------------------------------------
 (6) _I2C2_ISR                                             4     4      0      22
                                              2 COMMON     4     4      0
              _I2C2_FunctionComplete
                          _I2C2_Stop
 ---------------------------------------------------------------------------------
 (7) _I2C2_Stop                                            2     2      0      22
                                              0 COMMON     2     2      0
 ---------------------------------------------------------------------------------
 (7) _I2C2_FunctionComplete                                1     1      0       0
                                              0 COMMON     1     1      0
 ---------------------------------------------------------------------------------
 (6) _I2C2_BusCollisionISR                                 0     0      0       0
 ---------------------------------------------------------------------------------
 Estimated maximum stack depth 7
 ---------------------------------------------------------------------------------

 Call Graph Graphs:

 _main (ROOT)
   _EMC1001_Read
     _I2C2_MasterReadTRBBuild
     _I2C2_MasterTRBInsert
     _I2C2_MasterWriteTRBBuild
   _SYSTEM_Initialize
     _EUSART_Initialize
     _I2C2_Initialize
     _OSCILLATOR_Initialize
     _PIN_MANAGER_Initialize
   ___wmul
   _printf
     ___lwdiv
     ___lwmod
       ___lwdiv (ARG)
     ___wmul (ARG)
     _putch (ARG)
       _EUSART_Write
   _puts
     _cputs
       _putch
         _EUSART_Write
     _putch
       _EUSART_Write

 _INTERRUPT_InterruptManager (ROOT)
   _I2C2_BusCollisionISR
   _I2C2_ISR
     _I2C2_FunctionComplete
     _I2C2_Stop

 Address spaces:
Name               Size   Autos  Total    Cost      Usage
BIGRAM             3F0      0       0       0        0.0%
EEDATA             100      0       0       0        0.0%
NULL                 0      0       0       0        0.0%
CODE                 0      0       0       0        0.0%
BITCOMMON            E      0       0       1        0.0%
BITSFR0              0      0       0       1        0.0%
SFR0                 0      0       0       1        0.0%
COMMON               E      7       D       2       92.9%
BITSFR1              0      0       0       2        0.0%
SFR1                 0      0       0       2        0.0%
BITSFR2              0      0       0       3        0.0%
SFR2                 0      0       0       3        0.0%
STACK                0      0       0       3        0.0%
BITBANK0            50      0       0       4        0.0%
BITSFR3              0      0       0       4        0.0%
SFR3                 0      0       0       4        0.0%
BANK0               50     2A      45       5       86.2%
BITSFR4              0      0       0       5        0.0%
SFR4                 0      0       0       5        0.0%
BITBANK1            50      0       0       6        0.0%
BITSFR5              0      0       0       6        0.0%
SFR5                 0      0       0       6        0.0%
BANK1               50      0       0       7        0.0%
BITSFR6              0      0       0       7        0.0%
SFR6                 0      0       0       7        0.0%
BITBANK2            50      0       0       8        0.0%
BITSFR7              0      0       0       8        0.0%
SFR7                 0      0       0       8        0.0%
BANK2               50      0       0       9        0.0%
BITSFR8              0      0       0       9        0.0%
SFR8                 0      0       0       9        0.0%
BITBANK3            50      0       0      10        0.0%
BITSFR9              0      0       0      10        0.0%
SFR9                 0      0       0      10        0.0%
BANK3               50      0       0      11        0.0%
BITSFR10             0      0       0      11        0.0%
SFR10                0      0       0      11        0.0%
BITBANK4            50      0       0      12        0.0%
BITSFR11             0      0       0      12        0.0%
SFR11                0      0       0      12        0.0%
BANK4               50      0       0      13        0.0%
BITSFR12             0      0       0      13        0.0%
SFR12                0      0       0      13        0.0%
BITBANK5            50      0       0      14        0.0%
BITSFR13             0      0       0      14        0.0%
SFR13                0      0       0      14        0.0%
BANK5               50      0       0      15        0.0%
BITSFR14             0      0       0      15        0.0%
SFR14                0      0       0      15        0.0%
BITBANK6            50      0       0      16        0.0%
BITSFR15             0      0       0      16        0.0%
SFR15                0      0       0      16        0.0%
BANK6               50      0       0      17        0.0%
BITSFR16             0      0       0      17        0.0%
SFR16                0      0       0      17        0.0%
BITBANK7            50      0       0      18        0.0%
BITSFR17             0      0       0      18        0.0%
SFR17                0      0       0      18        0.0%
BANK7               50      0       0      19        0.0%
BITSFR18             0      0       0      19        0.0%
SFR18                0      0       0      19        0.0%
BITSFR19             0      0       0      20        0.0%
SFR19                0      0       0      20        0.0%
ABS                  0      0      52      20        0.0%
BITBANK8            50      0       0      21        0.0%
BITSFR20             0      0       0      21        0.0%
SFR20                0      0       0      21        0.0%
BANK8               50      0       0      22        0.0%
BITSFR21             0      0       0      22        0.0%
SFR21                0      0       0      22        0.0%
BITBANK9            50      0       0      23        0.0%
BITSFR22             0      0       0      23        0.0%
SFR22                0      0       0      23        0.0%
BANK9               50      0       0      24        0.0%
BITSFR23             0      0       0      24        0.0%
SFR23                0      0       0      24        0.0%
BITBANK10           50      0       0      25        0.0%
BITSFR24             0      0       0      25        0.0%
SFR24                0      0       0      25        0.0%
BANK10              50      0       0      26        0.0%
BITSFR25             0      0       0      26        0.0%
SFR25                0      0       0      26        0.0%
BITBANK11           50      0       0      27        0.0%
BITSFR26             0      0       0      27        0.0%
SFR26                0      0       0      27        0.0%
BANK11              50      0       0      28        0.0%
BITSFR27             0      0       0      28        0.0%
SFR27                0      0       0      28        0.0%
BITBANK12           30      0       0      29        0.0%
BITSFR28             0      0       0      29        0.0%
SFR28                0      0       0      29        0.0%
BANK12              30      0       0      30        0.0%
BITSFR29             0      0       0      30        0.0%
SFR29                0      0       0      30        0.0%
BITSFR30             0      0       0      31        0.0%
SFR30                0      0       0      31        0.0%
DATA                 0      0      52      31        0.0%
BITSFR31             0      0       0      32        0.0%
SFR31                0      0       0      32        0.0%


Microchip Technology PIC Macro Assembler V1.41 build -162212810 
Symbol Table                                                                                   Wed Mar 22 05:22:02 2017

                                  pc 0002                          __CFG_CP$OFF 0000  
              ?_I2C2_MasterTRBInsert 0020                                   l31 0703  
                ___wmul@multiplicand 0022       I2C2_MasterReadTRBBuild@address 0022  
                        __CFG_LVP$ON 0000                          __CFG_ZCD$ON 0000  
                                l350 00C2                                  l337 009D  
                                l338 0052                                  l355 00E4  
                                l339 0053                                  l372 018E  
                                l454 065A                                  _GIE 005F  
                       __CFG_CPD$OFF 0000                    EMC1001_Read@pData 0027  
                                u925 05B3                                  u945 05BD  
                                u955 05C7                                  u965 05CF  
                                u995 05E6                __size_of_EMC1001_Read 003C  
                       __CFG_BORV$LO 0000                                  wreg 0009  
                   __end_of_I2C2_ISR 02C9                                 l2005 004F  
                               l2007 0055                                 l2023 007D  
                               l2035 00B6                                 l2019 0068  
                               l2131 031C                                 l2123 02F2  
                               l2115 02CE                                 l2061 0106  
                               l2071 0143                                 l2063 010F  
                               l2151 0399                                 l2135 0337  
                               l2127 0301                                 l2145 035F  
                               l1451 0552                                 l2067 0117  
                               l2155 03B4                                 l2147 037E  
                               l1461 0565                                 l1525 05CE  
                               l1517 05B0                                 l1541 05E3  
                               l2077 0165                                 l2085 0178  
                               l2069 011D                                 l1455 0559  
                               l1519 05BC                                 l1543 05EF  
                               l1551 0604                                 l2087 017C  
                               l2159 03CF                                 l1457 055E  
                               l2097 0654                                 l1529 05D7  
                               l2089 0033                                 l1547 05FB  
                               l1717 059B                                 l1995 06B5  
                               STR_1 04DD                                 STR_2 0443  
                               STR_3 048B                                 STR_4 04DA  
                               STR_5 0442                                 STR_6 0474  
                               STR_7 04C4                                 STR_8 03EF  
                               STR_9 040D                                 u1015 05F5  
                               u1025 05FC                                 u1220 05A5  
                               _LATA 0016                                 _LATB 0017  
                               _LATC 0018                                 u1600 0523  
                               u1805 0660                                 u1725 00FF  
                               u1695 00DD                                 u1927 03D5  
                               u1795 065B                                 u1875 0350  
                               _WPUA 0F39                                 _WPUB 0F44  
                               _WPUC 0F4F                                 _WPUE 0F65  
                       __CFG_WRT$OFF 0000                        __CFG_FCMEN$ON 0000  
                               _main 02C9                                 fsr0h 0005  
                               fsr1h 0007                                 indf0 0000  
                               fsr0l 0004                                 indf1 0001  
                               fsr1l 0006                                 btemp 007E  
                               _puts 06DE          I2C2_MasterReadTRBBuild@ptrb 0026  
                      __CFG_BOREN$ON 0000                                 start 001B  
                 EMC1001_Read@status 002B                        __CFG_CSWEN$ON 0000  
                      __CFG_MCLRE$ON 0000                         _EMC1001_Read 056B  
                         _i2c2_state 004F                        ?_EUSART_Write 0070  
     __size_of_OSCILLATOR_Initialize 0009        __end_of_OSCILLATOR_Initialize 0714  
            _I2C2_MasterReadTRBBuild 0609                                ?_main 0070  
                              STR_10 042A                                STR_11 045C  
                              STR_12 04D3                                STR_13 04A2  
                              STR_14 04B3                        __CFG_WDTE$OFF 0000  
                  __end_of_I2C2_Stop 06B5                                ?_puts 0025  
                    __end_of___lwdiv 05DC                                i1l100 01A2  
                              i1l111 01F8                                i1l112 0204  
                              i1l105 01CD                                i1l130 0285  
                              i1l122 0245                                i1l106 01D5  
                              i1l202 0016                                i1l141 06DA  
     __size_of_I2C2_FunctionComplete 0012                                i1l134 02AA  
                              i1l126 0264                                i1l129 0277  
                    __end_of___lwmod 0609                                i1l198 0011  
      __end_of_I2C2_FunctionComplete 06DE                                _OSCEN 0891  
                              _TRISA 0011                                _TRISB 0012  
                              _TRISC 0013                      __end_of_dpowers 03E7  
                              _cputs 06B5                                _putch 071A  
       I2C2_MasterReadTRBBuild@pdata 0020                                puts@s 0025  
                              status 0003                                wtemp0 007E  
                  ??_I2C2_Initialize 0020                      __initialization 001D  
                       __end_of_main 03DD               ??_I2C2_MasterTRBInsert 0022  
                       __end_of_puts 06EA                       ??_EUSART_Write 0020  
        ?_INTERRUPT_InterruptManager 0070     __end_of_I2C2_MasterWriteTRBBuild 0651  
                             ??_main 0043                          _i2c2_object 004A  
                             ??_puts 0027                               ?_cputs 0022  
                             i1S2191 0685                               _ANSELA 0F38  
                             ?_putch 0070                               _ANSELB 0F43  
                             _ANSELC 0F4E                   __CFG_RSTOSC$HFINT1 0000  
                             _RC1REG 0119                               _RC0PPS 0F20  
                             _RC1STA 011D                               _RC3PPS 0F23  
                             _RC4PPS 0F24         __end_of_I2C2_BusCollisionISR 0721  
                             i1l1433 06B2                               i1l1605 01F3  
                             i1l1619 0221                               i1l1661 026C  
                             i1l1653 0253                               i1l1645 0240  
                             i1l1639 0235                               i1l1673 028C  
                             i1l1691 02B0                               i1l1587 01C0  
                             i1l1693 02B4                               i1l1677 0293  
                             i1l1599 01E1                               i1l1689 02AD  
                             i1l1699 02BD                       __CFG_WDTCCS$SC 0000  
                             _OSCFRQ 0893                               _TX1REG 011A  
                             _TX1STA 011E                       __CFG_PWRTE$OFF 0000  
                             ___wmul 0651                       _p_i2c2_current 007A  
                     __CFG_STVREN$ON 0000            ??_I2C2_MasterReadTRBBuild 0024  
                          ??___lwdiv 0024                            ??___lwmod 002C  
                          ?_I2C2_ISR 0070             I2C2_Stop@completion_code 0071  
                             _printf 002E        I2C2_MasterReadTRBBuild@length 0021  
                             cputs@s 0022                    _SYSTEM_Initialize 06EA  
            __end_of__initialization 002A                   ?_SYSTEM_Initialize 0070  
                    EMC1001_Read@reg 002A                      EMC1001_Read@trb 0050  
                     __pcstackCOMMON 0070                  ??_SYSTEM_Initialize 0021  
                      __end_of_cputs 06CC                       _i2c2_trb_count 007C  
                      __end_of_putch 0720                           ??_I2C2_ISR 0072  
           _I2C2_MasterWriteTRBBuild 0631         I2C2_MasterWriteTRBBuild@ptrb 0026  
                            ??_cputs 0024            __end_of_SYSTEM_Initialize 06F6  
                            ??_putch 0021                           __pbssBANK0 004A  
               __end_of_EUSART_Write 070B                           __pmaintext 02C9  
                            ?___wmul 0020                      __CFG_PPS1WAY$ON 0000  
                         __pintentry 0004                       _SSP2DATPPSbits 0EC9  
               _I2C2_BusCollisionISR 0720                              ?_printf 002E  
                            _SP1BRGH 011C                              _SP1BRGL 011B  
  I2C2_ISR@i2c_10bit_address_restart 0077                              _OSCCON1 088D  
                            _OSCCON3 088F                            _I2C2_Stop 069D  
                     _SSP2CLKPPSbits 0EC8                              _OSCTUNE 0892  
                            _SSP2ADD 0197                              _PPSLOCK 0E8F  
                            _SSP2BUF 0196                      _I2C2_Initialize 066D  
             I2C2_MasterRead@trBlock 0058                 __CFG_SCANE$available 0000  
                    __size_of___wmul 001C                              ___lwdiv 05A7  
                            ___lwmod 05DC                ?_I2C2_BusCollisionISR 0070  
          I2C2_MasterTRBInsert@count 0023                              __ptext1 06DE  
                            __ptext2 06B5                              __ptext3 002E  
                            __ptext4 071A                              __ptext5 0701  
                            __ptext6 05DC                              __ptext7 05A7  
                            __ptext8 0651                              __ptext9 06EA  
          I2C2_MasterTRBInsert@pflag 0021                      __size_of_printf 0161  
                  __end_of_hexpowers 03EF                              _dpowers 03DD  
              _OSCILLATOR_Initialize 070B             ??_PIN_MANAGER_Initialize 0020  
                         ?_I2C2_Stop 0070                _I2C2_FunctionComplete 06CC  
         __size_of_SYSTEM_Initialize 000C                              clrloop0 0715  
               end_of_initialization 002A                    _EUSART_Initialize 06F6  
                 ?_EUSART_Initialize 0070                   _p_i2c2_trb_current 007B  
                            printf@c 0042                              printf@f 002E  
             I2C2_ISR@i2c_bytes_left 0078                         __pstringtext 03DD  
                         _printf$645 0039        __size_of_I2C2_MasterTRBInsert 0046  
              __CFG_WDTCPS$WDTCPS_31 0000                  ??_EUSART_Initialize 0020  
                  __size_of_I2C2_ISR 013A              __end_of_I2C2_Initialize 0685  
              __size_of_EUSART_Write 000A                     __CFG_FEXTOSC$OFF 0000  
          __end_of_EUSART_Initialize 0701                           main@templo 0048  
             ??_I2C2_BusCollisionISR 0070           ??_I2C2_MasterWriteTRBBuild 0024  
                     __end_of___wmul 066D                         _EUSART_Write 0701  
             ?_OSCILLATOR_Initialize 0070                       __end_of_printf 018F  
             ?_I2C2_FunctionComplete 0070                  start_initialization 001D  
                        ??_I2C2_Stop 0070      __size_of_PIN_MANAGER_Initialize 0046  
                        putch@txData 0021      I2C2_MasterWriteTRBBuild@address 0022  
           ?_I2C2_MasterReadTRBBuild 0020                     __CFG_LPBOREN$OFF 0000  
                      ?_EMC1001_Read 0027                             ??___wmul 0024  
      I2C2_MasterWriteTRBBuild@pdata 0020                 I2C2_ISR@pi2c_buf_ptr 0079  
                           ??_printf 0034                          __pbssCOMMON 0077  
                   ?_I2C2_Initialize 0070                            ___latbits 0002  
                      __pcstackBANK0 0020                        _i2c2_tr_queue 0060  
         __size_of_EUSART_Initialize 000B                     ___lwdiv@dividend 0022  
             _PIN_MANAGER_Initialize 04DF                       ??_EMC1001_Read 0028  
                           ?___lwdiv 0020                             ?___lwmod 0028  
                           _I2C2_ISR 018F         ??_INTERRUPT_InterruptManager 0076  
                          __pswtext1 0685                             _BAUD1CON 011F  
                          _hexpowers 03E7                     ___lwdiv@quotient 0025  
                     __size_of_cputs 0017                       __size_of_putch 0006  
    __end_of_I2C2_MasterReadTRBBuild 0631                       ___wmul@product 0024  
                          clear_ram0 0714                             _PIE3bits 0719  
__size_of_INTERRUPT_InterruptManager 0017                             _PIR3bits 070F  
                           _SSP2CON1 019A                             _SSP2CON3 019C  
                           _SSP2STAT 0199        I2C2_MasterTRBInsert@ptrb_list 0020  
                  ___wmul@multiplier 0020                           printf@flag 003F  
                         printf@prec 003B         __end_of_I2C2_MasterTRBInsert 056B  
     I2C2_MasterWriteTRBBuild@length 0021              ??_OSCILLATOR_Initialize 0020  
                   __size_of___lwdiv 0035                     __size_of___lwmod 002D  
            ??_I2C2_FunctionComplete 0070                             _main$603 0045  
                    ___lwdiv@divisor 0020                      ___lwdiv@counter 0027  
                           __ptext10 04DF                             __ptext11 070B  
                           __ptext20 069D                             __ptext12 066D  
                           __ptext21 06CC                             __ptext13 06F6  
                           __ptext22 0720                             __ptext14 056B  
                           __ptext15 0631                             __ptext16 0525  
                           __ptext17 0609                             __ptext19 018F  
               __end_of_EMC1001_Read 05A7                         _SSP2CON1bits 019A  
                       _SSP2CON2bits 019B                        __size_of_main 0114  
                      __size_of_puts 000C                 __CFG_WDTCWS$WDTCWS_7 0000  
                         _RC1STAbits 011D                             int$flags 007E  
 __end_of_INTERRUPT_InterruptManager 001B           _INTERRUPT_InterruptManager 0004  
                           main@data 0049                            printf@idx 0038  
                          printf@val 0040              I2C2_MasterWrite@trBlock 005C  
                           main@temp 0047        __size_of_I2C2_BusCollisionISR 0001  
        PIN_MANAGER_Initialize@state 0020     __size_of_I2C2_MasterReadTRBBuild 0028  
                         _INTCONbits 000B    __size_of_I2C2_MasterWriteTRBBuild 0020  
          ?_I2C2_MasterWriteTRBBuild 0020                             intlevel1 0000  
                   ___lwmod@dividend 002A                  I2C2_ISR@i2c_address 0063  
            ?_PIN_MANAGER_Initialize 0070                    __CFG_CLKOUTEN$OFF 0000  
                        _PPSLOCKbits 0E8F                             printf@ap 003E  
                           printf@cp 003C                 _I2C2_MasterTRBInsert 0525  
                    ___lwmod@divisor 0028                      ___lwmod@counter 002D  
                 EUSART_Write@txData 0020       __end_of_PIN_MANAGER_Initialize 0525  
           __size_of_I2C2_Initialize 0018                   __size_of_I2C2_Stop 0018  
