

Microchip Technology PIC LITE Macro Assembler V1.41 build -162212810 
                                                                                               Wed Mar 22 17:40:59 2017

Microchip Technology Omniscient Code Generator v1.41 (Free mode) build 201701250102
     1                           	processor	16F18855
     2                           	opt	pw 120
     3                           	opt	lm
     4                           	psect	stringtext,global,class=STRCODE,delta=2
     5                           	psect	cinit,global,class=CODE,merge=1,delta=2
     6                           	psect	bssCOMMON,global,class=COMMON,space=1,delta=1
     7                           	psect	bssBANK0,global,class=BANK0,space=1,delta=1
     8                           	psect	clrtext,global,class=CODE,delta=2
     9                           	psect	cstackCOMMON,global,class=COMMON,space=1,delta=1
    10                           	psect	cstackBANK0,global,class=BANK0,space=1,delta=1
    11                           	psect	maintext,global,class=CODE,merge=1,split=1,delta=2
    12                           	psect	text1,local,class=CODE,merge=1,delta=2
    13                           	psect	text2,local,class=CODE,merge=1,delta=2
    14                           	psect	text3,local,class=CODE,merge=1,delta=2
    15                           	psect	text4,local,class=CODE,merge=1,delta=2
    16                           	psect	text5,local,class=CODE,merge=1,delta=2
    17                           	psect	text6,local,class=CODE,merge=1,delta=2
    18                           	psect	text7,local,class=CODE,merge=1,delta=2,group=2
    19                           	psect	text8,local,class=CODE,merge=1,delta=2
    20                           	psect	text9,local,class=CODE,merge=1,delta=2,group=2
    21                           	psect	text10,local,class=CODE,merge=1,delta=2,group=2
    22                           	psect	text11,local,class=CODE,merge=1,delta=2
    23                           	psect	text12,local,class=CODE,merge=1,delta=2
    24                           	psect	text13,local,class=CODE,merge=1,delta=2
    25                           	psect	text14,local,class=CODE,merge=1,delta=2,group=2
    26                           	psect	text15,local,class=CODE,merge=1,delta=2,group=2
    27                           	psect	text16,local,class=CODE,merge=1,delta=2
    28                           	psect	text17,local,class=CODE,merge=1,delta=2
    29                           	psect	text18,local,class=CODE,merge=1,delta=2
    30                           	psect	text19,local,class=CODE,merge=1,delta=2
    31                           	psect	intentry,global,class=CODE,delta=2
    32                           	psect	text21,local,class=CODE,merge=1,delta=2
    33                           	psect	swtext1,local,class=CONST,delta=2
    34                           	psect	text22,local,class=CODE,merge=1,delta=2
    35                           	psect	text23,local,class=CODE,merge=1,delta=2
    36                           	psect	text24,local,class=CODE,merge=1,delta=2
    37                           	dabs	1,0x7E,2
    38  0000                     
    39                           ; Version 1.41
    40                           ; Generated 25/01/2017 GMT
    41                           ; 
    42                           ; Copyright Â© 2017, Microchip Technology Inc. and its subsidiaries ("Microchip")
    43                           ; All rights reserved.
    44                           ; 
    45                           ; This software is developed by Microchip Technology Inc. and its subsidiaries ("Microch
      +                          ip").
    46                           ; 
    47                           ; Redistribution and use in source and binary forms, with or without modification, are
    48                           ; permitted provided that the following conditions are met:
    49                           ; 
    50                           ;     1. Redistributions of source code must retain the above copyright notice, this lis
      +                          t of
    51                           ;        conditions and the following disclaimer.
    52                           ; 
    53                           ;     2. Redistributions in binary form must reproduce the above copyright notice, this 
      +                          list
    54                           ;        of conditions and the following disclaimer in the documentation and/or other
    55                           ;        materials provided with the distribution.
    56                           ; 
    57                           ;     3. Microchip's name may not be used to endorse or promote products derived from th
      +                          is
    58                           ;        software without specific prior written permission.
    59                           ; 
    60                           ; THIS SOFTWARE IS PROVIDED BY MICROCHIP "AS IS" AND ANY EXPRESS OR IMPLIED WARRANTIES,
    61                           ; INCLUDING, BUT NOT LIMITED TO, THE IMPLIED WARRANTIES OF MERCHANTABILITY AND FITNESS F
      +                          OR
    62                           ; PURPOSE ARE DISCLAIMED.  IN NO EVENT SHALL MICROCHIP BE LIABLE FOR ANY DIRECT, INDIREC
      +                          T,
    63                           ; INCIDENTAL, SPECIAL, EXEMPLARY, OR CONSEQUENTIAL DAMAGES (INCLUDING BUT NOT LIMITED TO
    64                           ; PROCUREMENT OF SUBSTITUTE GOODS OR SERVICES; LOSS OF USE, DATA OR PROFITS; OR BUSINESS
    65                           ; INTERRUPTION) HOWSOEVER CAUSED AND ON ANY THEORY OF LIABILITY, WHETHER IN CONTRACT, ST
      +                          RICT
    66                           ; LIABILITY, OR TORT (INCLUDING NEGLIGENCE OR OTHERWISE) ARISING IN ANY WAY OUT OF THE U
      +                          SE OF
    67                           ; THIS SOFTWARE, EVEN IF ADVISED OF THE POSSIBILITY OF SUCH DAMAGE.
    68                           ; 
    69                           ; 
    70                           ; Code-generator required, PIC16F18855 Definitions
    71                           ; 
    72                           ; SFR Addresses
    73  0000                     	;# 
    74  0001                     	;# 
    75  0002                     	;# 
    76  0003                     	;# 
    77  0004                     	;# 
    78  0005                     	;# 
    79  0006                     	;# 
    80  0007                     	;# 
    81  0008                     	;# 
    82  0009                     	;# 
    83  000A                     	;# 
    84  000B                     	;# 
    85  000C                     	;# 
    86  000D                     	;# 
    87  000E                     	;# 
    88  0010                     	;# 
    89  0011                     	;# 
    90  0012                     	;# 
    91  0013                     	;# 
    92  0016                     	;# 
    93  0017                     	;# 
    94  0018                     	;# 
    95  001C                     	;# 
    96  001C                     	;# 
    97  001D                     	;# 
    98  001D                     	;# 
    99  001E                     	;# 
   100  001F                     	;# 
   101  008C                     	;# 
   102  008C                     	;# 
   103  008D                     	;# 
   104  008E                     	;# 
   105  008E                     	;# 
   106  008F                     	;# 
   107  0090                     	;# 
   108  0090                     	;# 
   109  0091                     	;# 
   110  0093                     	;# 
   111  0094                     	;# 
   112  0095                     	;# 
   113  0096                     	;# 
   114  0097                     	;# 
   115  0098                     	;# 
   116  0099                     	;# 
   117  009A                     	;# 
   118  009B                     	;# 
   119  009C                     	;# 
   120  009D                     	;# 
   121  009E                     	;# 
   122  010C                     	;# 
   123  010D                     	;# 
   124  010E                     	;# 
   125  010E                     	;# 
   126  010F                     	;# 
   127  0110                     	;# 
   128  0110                     	;# 
   129  0111                     	;# 
   130  0112                     	;# 
   131  0112                     	;# 
   132  0113                     	;# 
   133  0114                     	;# 
   134  0114                     	;# 
   135  0115                     	;# 
   136  0116                     	;# 
   137  0116                     	;# 
   138  0117                     	;# 
   139  0119                     	;# 
   140  0119                     	;# 
   141  0119                     	;# 
   142  011A                     	;# 
   143  011A                     	;# 
   144  011A                     	;# 
   145  011B                     	;# 
   146  011B                     	;# 
   147  011B                     	;# 
   148  011B                     	;# 
   149  011B                     	;# 
   150  011C                     	;# 
   151  011C                     	;# 
   152  011C                     	;# 
   153  011D                     	;# 
   154  011D                     	;# 
   155  011D                     	;# 
   156  011E                     	;# 
   157  011E                     	;# 
   158  011E                     	;# 
   159  011F                     	;# 
   160  011F                     	;# 
   161  011F                     	;# 
   162  011F                     	;# 
   163  011F                     	;# 
   164  018C                     	;# 
   165  018D                     	;# 
   166  018E                     	;# 
   167  018F                     	;# 
   168  0190                     	;# 
   169  0191                     	;# 
   170  0192                     	;# 
   171  0196                     	;# 
   172  0197                     	;# 
   173  0198                     	;# 
   174  0199                     	;# 
   175  019A                     	;# 
   176  019B                     	;# 
   177  019C                     	;# 
   178  020C                     	;# 
   179  020C                     	;# 
   180  020D                     	;# 
   181  020E                     	;# 
   182  020F                     	;# 
   183  020F                     	;# 
   184  0210                     	;# 
   185  0210                     	;# 
   186  0211                     	;# 
   187  0211                     	;# 
   188  0212                     	;# 
   189  0212                     	;# 
   190  0213                     	;# 
   191  0214                     	;# 
   192  0215                     	;# 
   193  0215                     	;# 
   194  0216                     	;# 
   195  0216                     	;# 
   196  0217                     	;# 
   197  0217                     	;# 
   198  0218                     	;# 
   199  0218                     	;# 
   200  0219                     	;# 
   201  021A                     	;# 
   202  021B                     	;# 
   203  021B                     	;# 
   204  021C                     	;# 
   205  021C                     	;# 
   206  021D                     	;# 
   207  021D                     	;# 
   208  021E                     	;# 
   209  021F                     	;# 
   210  028C                     	;# 
   211  028C                     	;# 
   212  028D                     	;# 
   213  028D                     	;# 
   214  028E                     	;# 
   215  028F                     	;# 
   216  0290                     	;# 
   217  0290                     	;# 
   218  0291                     	;# 
   219  0292                     	;# 
   220  0292                     	;# 
   221  0293                     	;# 
   222  0293                     	;# 
   223  0294                     	;# 
   224  0295                     	;# 
   225  0296                     	;# 
   226  0296                     	;# 
   227  0297                     	;# 
   228  0298                     	;# 
   229  0298                     	;# 
   230  0299                     	;# 
   231  0299                     	;# 
   232  029A                     	;# 
   233  029B                     	;# 
   234  029C                     	;# 
   235  029C                     	;# 
   236  029D                     	;# 
   237  030C                     	;# 
   238  030C                     	;# 
   239  030D                     	;# 
   240  030E                     	;# 
   241  030F                     	;# 
   242  0310                     	;# 
   243  0310                     	;# 
   244  0311                     	;# 
   245  0312                     	;# 
   246  0313                     	;# 
   247  0314                     	;# 
   248  0314                     	;# 
   249  0315                     	;# 
   250  0316                     	;# 
   251  0317                     	;# 
   252  0318                     	;# 
   253  0318                     	;# 
   254  0319                     	;# 
   255  031A                     	;# 
   256  031B                     	;# 
   257  031C                     	;# 
   258  031C                     	;# 
   259  031D                     	;# 
   260  031E                     	;# 
   261  031F                     	;# 
   262  038C                     	;# 
   263  038D                     	;# 
   264  038E                     	;# 
   265  0390                     	;# 
   266  0391                     	;# 
   267  0392                     	;# 
   268  040C                     	;# 
   269  040D                     	;# 
   270  040E                     	;# 
   271  040F                     	;# 
   272  0410                     	;# 
   273  0411                     	;# 
   274  0416                     	;# 
   275  0416                     	;# 
   276  0417                     	;# 
   277  0418                     	;# 
   278  0418                     	;# 
   279  0419                     	;# 
   280  041A                     	;# 
   281  041A                     	;# 
   282  041B                     	;# 
   283  041C                     	;# 
   284  041C                     	;# 
   285  041D                     	;# 
   286  041E                     	;# 
   287  041F                     	;# 
   288  048C                     	;# 
   289  048C                     	;# 
   290  048D                     	;# 
   291  048E                     	;# 
   292  048F                     	;# 
   293  048F                     	;# 
   294  0490                     	;# 
   295  0491                     	;# 
   296  0492                     	;# 
   297  0492                     	;# 
   298  0493                     	;# 
   299  0494                     	;# 
   300  0495                     	;# 
   301  0495                     	;# 
   302  0496                     	;# 
   303  0497                     	;# 
   304  0498                     	;# 
   305  0499                     	;# 
   306  049A                     	;# 
   307  049B                     	;# 
   308  049C                     	;# 
   309  049D                     	;# 
   310  050C                     	;# 
   311  050C                     	;# 
   312  050D                     	;# 
   313  050E                     	;# 
   314  050F                     	;# 
   315  050F                     	;# 
   316  0510                     	;# 
   317  0511                     	;# 
   318  0512                     	;# 
   319  0512                     	;# 
   320  0513                     	;# 
   321  0514                     	;# 
   322  0515                     	;# 
   323  0515                     	;# 
   324  0516                     	;# 
   325  0517                     	;# 
   326  0518                     	;# 
   327  0519                     	;# 
   328  051A                     	;# 
   329  051B                     	;# 
   330  051C                     	;# 
   331  051D                     	;# 
   332  058C                     	;# 
   333  058C                     	;# 
   334  058D                     	;# 
   335  058E                     	;# 
   336  058F                     	;# 
   337  058F                     	;# 
   338  0590                     	;# 
   339  0591                     	;# 
   340  0592                     	;# 
   341  0593                     	;# 
   342  060C                     	;# 
   343  060D                     	;# 
   344  060E                     	;# 
   345  060F                     	;# 
   346  0610                     	;# 
   347  0611                     	;# 
   348  0612                     	;# 
   349  0613                     	;# 
   350  0614                     	;# 
   351  0616                     	;# 
   352  0617                     	;# 
   353  0618                     	;# 
   354  0619                     	;# 
   355  061A                     	;# 
   356  061B                     	;# 
   357  061C                     	;# 
   358  061D                     	;# 
   359  061E                     	;# 
   360  068C                     	;# 
   361  068D                     	;# 
   362  068E                     	;# 
   363  068F                     	;# 
   364  0690                     	;# 
   365  0691                     	;# 
   366  0692                     	;# 
   367  0693                     	;# 
   368  0694                     	;# 
   369  070C                     	;# 
   370  070D                     	;# 
   371  070E                     	;# 
   372  070F                     	;# 
   373  0710                     	;# 
   374  0711                     	;# 
   375  0712                     	;# 
   376  0713                     	;# 
   377  0714                     	;# 
   378  0716                     	;# 
   379  0717                     	;# 
   380  0718                     	;# 
   381  0719                     	;# 
   382  071A                     	;# 
   383  071B                     	;# 
   384  071C                     	;# 
   385  071D                     	;# 
   386  071E                     	;# 
   387  0796                     	;# 
   388  0797                     	;# 
   389  0798                     	;# 
   390  0799                     	;# 
   391  079A                     	;# 
   392  079B                     	;# 
   393  080C                     	;# 
   394  080D                     	;# 
   395  080E                     	;# 
   396  080F                     	;# 
   397  0810                     	;# 
   398  0811                     	;# 
   399  0812                     	;# 
   400  0813                     	;# 
   401  0814                     	;# 
   402  081A                     	;# 
   403  081B                     	;# 
   404  081C                     	;# 
   405  081D                     	;# 
   406  081E                     	;# 
   407  081F                     	;# 
   408  088C                     	;# 
   409  088D                     	;# 
   410  088E                     	;# 
   411  088F                     	;# 
   412  0890                     	;# 
   413  0891                     	;# 
   414  0892                     	;# 
   415  0893                     	;# 
   416  0895                     	;# 
   417  0896                     	;# 
   418  0897                     	;# 
   419  0898                     	;# 
   420  0899                     	;# 
   421  089A                     	;# 
   422  089B                     	;# 
   423  090C                     	;# 
   424  090E                     	;# 
   425  090F                     	;# 
   426  091F                     	;# 
   427  091F                     	;# 
   428  098F                     	;# 
   429  098F                     	;# 
   430  0990                     	;# 
   431  0991                     	;# 
   432  0992                     	;# 
   433  0993                     	;# 
   434  0994                     	;# 
   435  0995                     	;# 
   436  0996                     	;# 
   437  0997                     	;# 
   438  0E0F                     	;# 
   439  0E10                     	;# 
   440  0E11                     	;# 
   441  0E12                     	;# 
   442  0E13                     	;# 
   443  0E14                     	;# 
   444  0E15                     	;# 
   445  0E16                     	;# 
   446  0E17                     	;# 
   447  0E18                     	;# 
   448  0E19                     	;# 
   449  0E1A                     	;# 
   450  0E1B                     	;# 
   451  0E1C                     	;# 
   452  0E1D                     	;# 
   453  0E1E                     	;# 
   454  0E1F                     	;# 
   455  0E20                     	;# 
   456  0E21                     	;# 
   457  0E22                     	;# 
   458  0E23                     	;# 
   459  0E24                     	;# 
   460  0E25                     	;# 
   461  0E26                     	;# 
   462  0E27                     	;# 
   463  0E28                     	;# 
   464  0E29                     	;# 
   465  0E2A                     	;# 
   466  0E2B                     	;# 
   467  0E2C                     	;# 
   468  0E2D                     	;# 
   469  0E2E                     	;# 
   470  0E2F                     	;# 
   471  0E30                     	;# 
   472  0E31                     	;# 
   473  0E32                     	;# 
   474  0E33                     	;# 
   475  0E34                     	;# 
   476  0E35                     	;# 
   477  0E36                     	;# 
   478  0E37                     	;# 
   479  0E8F                     	;# 
   480  0E90                     	;# 
   481  0E91                     	;# 
   482  0E92                     	;# 
   483  0E93                     	;# 
   484  0E94                     	;# 
   485  0E95                     	;# 
   486  0E96                     	;# 
   487  0E97                     	;# 
   488  0E9C                     	;# 
   489  0E9D                     	;# 
   490  0E9E                     	;# 
   491  0EA1                     	;# 
   492  0EA2                     	;# 
   493  0EA3                     	;# 
   494  0EA4                     	;# 
   495  0EA5                     	;# 
   496  0EA9                     	;# 
   497  0EAA                     	;# 
   498  0EAB                     	;# 
   499  0EAC                     	;# 
   500  0EB1                     	;# 
   501  0EB2                     	;# 
   502  0EB3                     	;# 
   503  0EB8                     	;# 
   504  0EB9                     	;# 
   505  0EBA                     	;# 
   506  0EBB                     	;# 
   507  0EBC                     	;# 
   508  0EBD                     	;# 
   509  0EBE                     	;# 
   510  0EC3                     	;# 
   511  0EC5                     	;# 
   512  0EC6                     	;# 
   513  0EC7                     	;# 
   514  0EC8                     	;# 
   515  0EC9                     	;# 
   516  0ECA                     	;# 
   517  0ECB                     	;# 
   518  0ECC                     	;# 
   519  0F10                     	;# 
   520  0F11                     	;# 
   521  0F12                     	;# 
   522  0F13                     	;# 
   523  0F14                     	;# 
   524  0F15                     	;# 
   525  0F16                     	;# 
   526  0F17                     	;# 
   527  0F18                     	;# 
   528  0F19                     	;# 
   529  0F1A                     	;# 
   530  0F1B                     	;# 
   531  0F1C                     	;# 
   532  0F1D                     	;# 
   533  0F1E                     	;# 
   534  0F1F                     	;# 
   535  0F20                     	;# 
   536  0F21                     	;# 
   537  0F22                     	;# 
   538  0F23                     	;# 
   539  0F24                     	;# 
   540  0F25                     	;# 
   541  0F26                     	;# 
   542  0F27                     	;# 
   543  0F38                     	;# 
   544  0F39                     	;# 
   545  0F3A                     	;# 
   546  0F3B                     	;# 
   547  0F3C                     	;# 
   548  0F3D                     	;# 
   549  0F3E                     	;# 
   550  0F3F                     	;# 
   551  0F40                     	;# 
   552  0F41                     	;# 
   553  0F43                     	;# 
   554  0F44                     	;# 
   555  0F45                     	;# 
   556  0F46                     	;# 
   557  0F47                     	;# 
   558  0F48                     	;# 
   559  0F49                     	;# 
   560  0F4A                     	;# 
   561  0F4B                     	;# 
   562  0F4C                     	;# 
   563  0F4E                     	;# 
   564  0F4F                     	;# 
   565  0F50                     	;# 
   566  0F51                     	;# 
   567  0F52                     	;# 
   568  0F53                     	;# 
   569  0F54                     	;# 
   570  0F55                     	;# 
   571  0F56                     	;# 
   572  0F57                     	;# 
   573  0F65                     	;# 
   574  0F68                     	;# 
   575  0F69                     	;# 
   576  0F6A                     	;# 
   577  0F6B                     	;# 
   578  0FE4                     	;# 
   579  0FE5                     	;# 
   580  0FE6                     	;# 
   581  0FE7                     	;# 
   582  0FE8                     	;# 
   583  0FE9                     	;# 
   584  0FEA                     	;# 
   585  0FEB                     	;# 
   586  0FED                     	;# 
   587  0FEE                     	;# 
   588  0FEF                     	;# 
   589  0000                     	;# 
   590  0001                     	;# 
   591  0002                     	;# 
   592  0003                     	;# 
   593  0004                     	;# 
   594  0005                     	;# 
   595  0006                     	;# 
   596  0007                     	;# 
   597  0008                     	;# 
   598  0009                     	;# 
   599  000A                     	;# 
   600  000B                     	;# 
   601  000C                     	;# 
   602  000D                     	;# 
   603  000E                     	;# 
   604  0010                     	;# 
   605  0011                     	;# 
   606  0012                     	;# 
   607  0013                     	;# 
   608  0016                     	;# 
   609  0017                     	;# 
   610  0018                     	;# 
   611  001C                     	;# 
   612  001C                     	;# 
   613  001D                     	;# 
   614  001D                     	;# 
   615  001E                     	;# 
   616  001F                     	;# 
   617  008C                     	;# 
   618  008C                     	;# 
   619  008D                     	;# 
   620  008E                     	;# 
   621  008E                     	;# 
   622  008F                     	;# 
   623  0090                     	;# 
   624  0090                     	;# 
   625  0091                     	;# 
   626  0093                     	;# 
   627  0094                     	;# 
   628  0095                     	;# 
   629  0096                     	;# 
   630  0097                     	;# 
   631  0098                     	;# 
   632  0099                     	;# 
   633  009A                     	;# 
   634  009B                     	;# 
   635  009C                     	;# 
   636  009D                     	;# 
   637  009E                     	;# 
   638  010C                     	;# 
   639  010D                     	;# 
   640  010E                     	;# 
   641  010E                     	;# 
   642  010F                     	;# 
   643  0110                     	;# 
   644  0110                     	;# 
   645  0111                     	;# 
   646  0112                     	;# 
   647  0112                     	;# 
   648  0113                     	;# 
   649  0114                     	;# 
   650  0114                     	;# 
   651  0115                     	;# 
   652  0116                     	;# 
   653  0116                     	;# 
   654  0117                     	;# 
   655  0119                     	;# 
   656  0119                     	;# 
   657  0119                     	;# 
   658  011A                     	;# 
   659  011A                     	;# 
   660  011A                     	;# 
   661  011B                     	;# 
   662  011B                     	;# 
   663  011B                     	;# 
   664  011B                     	;# 
   665  011B                     	;# 
   666  011C                     	;# 
   667  011C                     	;# 
   668  011C                     	;# 
   669  011D                     	;# 
   670  011D                     	;# 
   671  011D                     	;# 
   672  011E                     	;# 
   673  011E                     	;# 
   674  011E                     	;# 
   675  011F                     	;# 
   676  011F                     	;# 
   677  011F                     	;# 
   678  011F                     	;# 
   679  011F                     	;# 
   680  018C                     	;# 
   681  018D                     	;# 
   682  018E                     	;# 
   683  018F                     	;# 
   684  0190                     	;# 
   685  0191                     	;# 
   686  0192                     	;# 
   687  0196                     	;# 
   688  0197                     	;# 
   689  0198                     	;# 
   690  0199                     	;# 
   691  019A                     	;# 
   692  019B                     	;# 
   693  019C                     	;# 
   694  020C                     	;# 
   695  020C                     	;# 
   696  020D                     	;# 
   697  020E                     	;# 
   698  020F                     	;# 
   699  020F                     	;# 
   700  0210                     	;# 
   701  0210                     	;# 
   702  0211                     	;# 
   703  0211                     	;# 
   704  0212                     	;# 
   705  0212                     	;# 
   706  0213                     	;# 
   707  0214                     	;# 
   708  0215                     	;# 
   709  0215                     	;# 
   710  0216                     	;# 
   711  0216                     	;# 
   712  0217                     	;# 
   713  0217                     	;# 
   714  0218                     	;# 
   715  0218                     	;# 
   716  0219                     	;# 
   717  021A                     	;# 
   718  021B                     	;# 
   719  021B                     	;# 
   720  021C                     	;# 
   721  021C                     	;# 
   722  021D                     	;# 
   723  021D                     	;# 
   724  021E                     	;# 
   725  021F                     	;# 
   726  028C                     	;# 
   727  028C                     	;# 
   728  028D                     	;# 
   729  028D                     	;# 
   730  028E                     	;# 
   731  028F                     	;# 
   732  0290                     	;# 
   733  0290                     	;# 
   734  0291                     	;# 
   735  0292                     	;# 
   736  0292                     	;# 
   737  0293                     	;# 
   738  0293                     	;# 
   739  0294                     	;# 
   740  0295                     	;# 
   741  0296                     	;# 
   742  0296                     	;# 
   743  0297                     	;# 
   744  0298                     	;# 
   745  0298                     	;# 
   746  0299                     	;# 
   747  0299                     	;# 
   748  029A                     	;# 
   749  029B                     	;# 
   750  029C                     	;# 
   751  029C                     	;# 
   752  029D                     	;# 
   753  030C                     	;# 
   754  030C                     	;# 
   755  030D                     	;# 
   756  030E                     	;# 
   757  030F                     	;# 
   758  0310                     	;# 
   759  0310                     	;# 
   760  0311                     	;# 
   761  0312                     	;# 
   762  0313                     	;# 
   763  0314                     	;# 
   764  0314                     	;# 
   765  0315                     	;# 
   766  0316                     	;# 
   767  0317                     	;# 
   768  0318                     	;# 
   769  0318                     	;# 
   770  0319                     	;# 
   771  031A                     	;# 
   772  031B                     	;# 
   773  031C                     	;# 
   774  031C                     	;# 
   775  031D                     	;# 
   776  031E                     	;# 
   777  031F                     	;# 
   778  038C                     	;# 
   779  038D                     	;# 
   780  038E                     	;# 
   781  0390                     	;# 
   782  0391                     	;# 
   783  0392                     	;# 
   784  040C                     	;# 
   785  040D                     	;# 
   786  040E                     	;# 
   787  040F                     	;# 
   788  0410                     	;# 
   789  0411                     	;# 
   790  0416                     	;# 
   791  0416                     	;# 
   792  0417                     	;# 
   793  0418                     	;# 
   794  0418                     	;# 
   795  0419                     	;# 
   796  041A                     	;# 
   797  041A                     	;# 
   798  041B                     	;# 
   799  041C                     	;# 
   800  041C                     	;# 
   801  041D                     	;# 
   802  041E                     	;# 
   803  041F                     	;# 
   804  048C                     	;# 
   805  048C                     	;# 
   806  048D                     	;# 
   807  048E                     	;# 
   808  048F                     	;# 
   809  048F                     	;# 
   810  0490                     	;# 
   811  0491                     	;# 
   812  0492                     	;# 
   813  0492                     	;# 
   814  0493                     	;# 
   815  0494                     	;# 
   816  0495                     	;# 
   817  0495                     	;# 
   818  0496                     	;# 
   819  0497                     	;# 
   820  0498                     	;# 
   821  0499                     	;# 
   822  049A                     	;# 
   823  049B                     	;# 
   824  049C                     	;# 
   825  049D                     	;# 
   826  050C                     	;# 
   827  050C                     	;# 
   828  050D                     	;# 
   829  050E                     	;# 
   830  050F                     	;# 
   831  050F                     	;# 
   832  0510                     	;# 
   833  0511                     	;# 
   834  0512                     	;# 
   835  0512                     	;# 
   836  0513                     	;# 
   837  0514                     	;# 
   838  0515                     	;# 
   839  0515                     	;# 
   840  0516                     	;# 
   841  0517                     	;# 
   842  0518                     	;# 
   843  0519                     	;# 
   844  051A                     	;# 
   845  051B                     	;# 
   846  051C                     	;# 
   847  051D                     	;# 
   848  058C                     	;# 
   849  058C                     	;# 
   850  058D                     	;# 
   851  058E                     	;# 
   852  058F                     	;# 
   853  058F                     	;# 
   854  0590                     	;# 
   855  0591                     	;# 
   856  0592                     	;# 
   857  0593                     	;# 
   858  060C                     	;# 
   859  060D                     	;# 
   860  060E                     	;# 
   861  060F                     	;# 
   862  0610                     	;# 
   863  0611                     	;# 
   864  0612                     	;# 
   865  0613                     	;# 
   866  0614                     	;# 
   867  0616                     	;# 
   868  0617                     	;# 
   869  0618                     	;# 
   870  0619                     	;# 
   871  061A                     	;# 
   872  061B                     	;# 
   873  061C                     	;# 
   874  061D                     	;# 
   875  061E                     	;# 
   876  068C                     	;# 
   877  068D                     	;# 
   878  068E                     	;# 
   879  068F                     	;# 
   880  0690                     	;# 
   881  0691                     	;# 
   882  0692                     	;# 
   883  0693                     	;# 
   884  0694                     	;# 
   885  070C                     	;# 
   886  070D                     	;# 
   887  070E                     	;# 
   888  070F                     	;# 
   889  0710                     	;# 
   890  0711                     	;# 
   891  0712                     	;# 
   892  0713                     	;# 
   893  0714                     	;# 
   894  0716                     	;# 
   895  0717                     	;# 
   896  0718                     	;# 
   897  0719                     	;# 
   898  071A                     	;# 
   899  071B                     	;# 
   900  071C                     	;# 
   901  071D                     	;# 
   902  071E                     	;# 
   903  0796                     	;# 
   904  0797                     	;# 
   905  0798                     	;# 
   906  0799                     	;# 
   907  079A                     	;# 
   908  079B                     	;# 
   909  080C                     	;# 
   910  080D                     	;# 
   911  080E                     	;# 
   912  080F                     	;# 
   913  0810                     	;# 
   914  0811                     	;# 
   915  0812                     	;# 
   916  0813                     	;# 
   917  0814                     	;# 
   918  081A                     	;# 
   919  081B                     	;# 
   920  081C                     	;# 
   921  081D                     	;# 
   922  081E                     	;# 
   923  081F                     	;# 
   924  088C                     	;# 
   925  088D                     	;# 
   926  088E                     	;# 
   927  088F                     	;# 
   928  0890                     	;# 
   929  0891                     	;# 
   930  0892                     	;# 
   931  0893                     	;# 
   932  0895                     	;# 
   933  0896                     	;# 
   934  0897                     	;# 
   935  0898                     	;# 
   936  0899                     	;# 
   937  089A                     	;# 
   938  089B                     	;# 
   939  090C                     	;# 
   940  090E                     	;# 
   941  090F                     	;# 
   942  091F                     	;# 
   943  091F                     	;# 
   944  098F                     	;# 
   945  098F                     	;# 
   946  0990                     	;# 
   947  0991                     	;# 
   948  0992                     	;# 
   949  0993                     	;# 
   950  0994                     	;# 
   951  0995                     	;# 
   952  0996                     	;# 
   953  0997                     	;# 
   954  0E0F                     	;# 
   955  0E10                     	;# 
   956  0E11                     	;# 
   957  0E12                     	;# 
   958  0E13                     	;# 
   959  0E14                     	;# 
   960  0E15                     	;# 
   961  0E16                     	;# 
   962  0E17                     	;# 
   963  0E18                     	;# 
   964  0E19                     	;# 
   965  0E1A                     	;# 
   966  0E1B                     	;# 
   967  0E1C                     	;# 
   968  0E1D                     	;# 
   969  0E1E                     	;# 
   970  0E1F                     	;# 
   971  0E20                     	;# 
   972  0E21                     	;# 
   973  0E22                     	;# 
   974  0E23                     	;# 
   975  0E24                     	;# 
   976  0E25                     	;# 
   977  0E26                     	;# 
   978  0E27                     	;# 
   979  0E28                     	;# 
   980  0E29                     	;# 
   981  0E2A                     	;# 
   982  0E2B                     	;# 
   983  0E2C                     	;# 
   984  0E2D                     	;# 
   985  0E2E                     	;# 
   986  0E2F                     	;# 
   987  0E30                     	;# 
   988  0E31                     	;# 
   989  0E32                     	;# 
   990  0E33                     	;# 
   991  0E34                     	;# 
   992  0E35                     	;# 
   993  0E36                     	;# 
   994  0E37                     	;# 
   995  0E8F                     	;# 
   996  0E90                     	;# 
   997  0E91                     	;# 
   998  0E92                     	;# 
   999  0E93                     	;# 
  1000  0E94                     	;# 
  1001  0E95                     	;# 
  1002  0E96                     	;# 
  1003  0E97                     	;# 
  1004  0E9C                     	;# 
  1005  0E9D                     	;# 
  1006  0E9E                     	;# 
  1007  0EA1                     	;# 
  1008  0EA2                     	;# 
  1009  0EA3                     	;# 
  1010  0EA4                     	;# 
  1011  0EA5                     	;# 
  1012  0EA9                     	;# 
  1013  0EAA                     	;# 
  1014  0EAB                     	;# 
  1015  0EAC                     	;# 
  1016  0EB1                     	;# 
  1017  0EB2                     	;# 
  1018  0EB3                     	;# 
  1019  0EB8                     	;# 
  1020  0EB9                     	;# 
  1021  0EBA                     	;# 
  1022  0EBB                     	;# 
  1023  0EBC                     	;# 
  1024  0EBD                     	;# 
  1025  0EBE                     	;# 
  1026  0EC3                     	;# 
  1027  0EC5                     	;# 
  1028  0EC6                     	;# 
  1029  0EC7                     	;# 
  1030  0EC8                     	;# 
  1031  0EC9                     	;# 
  1032  0ECA                     	;# 
  1033  0ECB                     	;# 
  1034  0ECC                     	;# 
  1035  0F10                     	;# 
  1036  0F11                     	;# 
  1037  0F12                     	;# 
  1038  0F13                     	;# 
  1039  0F14                     	;# 
  1040  0F15                     	;# 
  1041  0F16                     	;# 
  1042  0F17                     	;# 
  1043  0F18                     	;# 
  1044  0F19                     	;# 
  1045  0F1A                     	;# 
  1046  0F1B                     	;# 
  1047  0F1C                     	;# 
  1048  0F1D                     	;# 
  1049  0F1E                     	;# 
  1050  0F1F                     	;# 
  1051  0F20                     	;# 
  1052  0F21                     	;# 
  1053  0F22                     	;# 
  1054  0F23                     	;# 
  1055  0F24                     	;# 
  1056  0F25                     	;# 
  1057  0F26                     	;# 
  1058  0F27                     	;# 
  1059  0F38                     	;# 
  1060  0F39                     	;# 
  1061  0F3A                     	;# 
  1062  0F3B                     	;# 
  1063  0F3C                     	;# 
  1064  0F3D                     	;# 
  1065  0F3E                     	;# 
  1066  0F3F                     	;# 
  1067  0F40                     	;# 
  1068  0F41                     	;# 
  1069  0F43                     	;# 
  1070  0F44                     	;# 
  1071  0F45                     	;# 
  1072  0F46                     	;# 
  1073  0F47                     	;# 
  1074  0F48                     	;# 
  1075  0F49                     	;# 
  1076  0F4A                     	;# 
  1077  0F4B                     	;# 
  1078  0F4C                     	;# 
  1079  0F4E                     	;# 
  1080  0F4F                     	;# 
  1081  0F50                     	;# 
  1082  0F51                     	;# 
  1083  0F52                     	;# 
  1084  0F53                     	;# 
  1085  0F54                     	;# 
  1086  0F55                     	;# 
  1087  0F56                     	;# 
  1088  0F57                     	;# 
  1089  0F65                     	;# 
  1090  0F68                     	;# 
  1091  0F69                     	;# 
  1092  0F6A                     	;# 
  1093  0F6B                     	;# 
  1094  0FE4                     	;# 
  1095  0FE5                     	;# 
  1096  0FE6                     	;# 
  1097  0FE7                     	;# 
  1098  0FE8                     	;# 
  1099  0FE9                     	;# 
  1100  0FEA                     	;# 
  1101  0FEB                     	;# 
  1102  0FED                     	;# 
  1103  0FEE                     	;# 
  1104  0FEF                     	;# 
  1105  0000                     	;# 
  1106  0001                     	;# 
  1107  0002                     	;# 
  1108  0003                     	;# 
  1109  0004                     	;# 
  1110  0005                     	;# 
  1111  0006                     	;# 
  1112  0007                     	;# 
  1113  0008                     	;# 
  1114  0009                     	;# 
  1115  000A                     	;# 
  1116  000B                     	;# 
  1117  000C                     	;# 
  1118  000D                     	;# 
  1119  000E                     	;# 
  1120  0010                     	;# 
  1121  0011                     	;# 
  1122  0012                     	;# 
  1123  0013                     	;# 
  1124  0016                     	;# 
  1125  0017                     	;# 
  1126  0018                     	;# 
  1127  001C                     	;# 
  1128  001C                     	;# 
  1129  001D                     	;# 
  1130  001D                     	;# 
  1131  001E                     	;# 
  1132  001F                     	;# 
  1133  008C                     	;# 
  1134  008C                     	;# 
  1135  008D                     	;# 
  1136  008E                     	;# 
  1137  008E                     	;# 
  1138  008F                     	;# 
  1139  0090                     	;# 
  1140  0090                     	;# 
  1141  0091                     	;# 
  1142  0093                     	;# 
  1143  0094                     	;# 
  1144  0095                     	;# 
  1145  0096                     	;# 
  1146  0097                     	;# 
  1147  0098                     	;# 
  1148  0099                     	;# 
  1149  009A                     	;# 
  1150  009B                     	;# 
  1151  009C                     	;# 
  1152  009D                     	;# 
  1153  009E                     	;# 
  1154  010C                     	;# 
  1155  010D                     	;# 
  1156  010E                     	;# 
  1157  010E                     	;# 
  1158  010F                     	;# 
  1159  0110                     	;# 
  1160  0110                     	;# 
  1161  0111                     	;# 
  1162  0112                     	;# 
  1163  0112                     	;# 
  1164  0113                     	;# 
  1165  0114                     	;# 
  1166  0114                     	;# 
  1167  0115                     	;# 
  1168  0116                     	;# 
  1169  0116                     	;# 
  1170  0117                     	;# 
  1171  0119                     	;# 
  1172  0119                     	;# 
  1173  0119                     	;# 
  1174  011A                     	;# 
  1175  011A                     	;# 
  1176  011A                     	;# 
  1177  011B                     	;# 
  1178  011B                     	;# 
  1179  011B                     	;# 
  1180  011B                     	;# 
  1181  011B                     	;# 
  1182  011C                     	;# 
  1183  011C                     	;# 
  1184  011C                     	;# 
  1185  011D                     	;# 
  1186  011D                     	;# 
  1187  011D                     	;# 
  1188  011E                     	;# 
  1189  011E                     	;# 
  1190  011E                     	;# 
  1191  011F                     	;# 
  1192  011F                     	;# 
  1193  011F                     	;# 
  1194  011F                     	;# 
  1195  011F                     	;# 
  1196  018C                     	;# 
  1197  018D                     	;# 
  1198  018E                     	;# 
  1199  018F                     	;# 
  1200  0190                     	;# 
  1201  0191                     	;# 
  1202  0192                     	;# 
  1203  0196                     	;# 
  1204  0197                     	;# 
  1205  0198                     	;# 
  1206  0199                     	;# 
  1207  019A                     	;# 
  1208  019B                     	;# 
  1209  019C                     	;# 
  1210  020C                     	;# 
  1211  020C                     	;# 
  1212  020D                     	;# 
  1213  020E                     	;# 
  1214  020F                     	;# 
  1215  020F                     	;# 
  1216  0210                     	;# 
  1217  0210                     	;# 
  1218  0211                     	;# 
  1219  0211                     	;# 
  1220  0212                     	;# 
  1221  0212                     	;# 
  1222  0213                     	;# 
  1223  0214                     	;# 
  1224  0215                     	;# 
  1225  0215                     	;# 
  1226  0216                     	;# 
  1227  0216                     	;# 
  1228  0217                     	;# 
  1229  0217                     	;# 
  1230  0218                     	;# 
  1231  0218                     	;# 
  1232  0219                     	;# 
  1233  021A                     	;# 
  1234  021B                     	;# 
  1235  021B                     	;# 
  1236  021C                     	;# 
  1237  021C                     	;# 
  1238  021D                     	;# 
  1239  021D                     	;# 
  1240  021E                     	;# 
  1241  021F                     	;# 
  1242  028C                     	;# 
  1243  028C                     	;# 
  1244  028D                     	;# 
  1245  028D                     	;# 
  1246  028E                     	;# 
  1247  028F                     	;# 
  1248  0290                     	;# 
  1249  0290                     	;# 
  1250  0291                     	;# 
  1251  0292                     	;# 
  1252  0292                     	;# 
  1253  0293                     	;# 
  1254  0293                     	;# 
  1255  0294                     	;# 
  1256  0295                     	;# 
  1257  0296                     	;# 
  1258  0296                     	;# 
  1259  0297                     	;# 
  1260  0298                     	;# 
  1261  0298                     	;# 
  1262  0299                     	;# 
  1263  0299                     	;# 
  1264  029A                     	;# 
  1265  029B                     	;# 
  1266  029C                     	;# 
  1267  029C                     	;# 
  1268  029D                     	;# 
  1269  030C                     	;# 
  1270  030C                     	;# 
  1271  030D                     	;# 
  1272  030E                     	;# 
  1273  030F                     	;# 
  1274  0310                     	;# 
  1275  0310                     	;# 
  1276  0311                     	;# 
  1277  0312                     	;# 
  1278  0313                     	;# 
  1279  0314                     	;# 
  1280  0314                     	;# 
  1281  0315                     	;# 
  1282  0316                     	;# 
  1283  0317                     	;# 
  1284  0318                     	;# 
  1285  0318                     	;# 
  1286  0319                     	;# 
  1287  031A                     	;# 
  1288  031B                     	;# 
  1289  031C                     	;# 
  1290  031C                     	;# 
  1291  031D                     	;# 
  1292  031E                     	;# 
  1293  031F                     	;# 
  1294  038C                     	;# 
  1295  038D                     	;# 
  1296  038E                     	;# 
  1297  0390                     	;# 
  1298  0391                     	;# 
  1299  0392                     	;# 
  1300  040C                     	;# 
  1301  040D                     	;# 
  1302  040E                     	;# 
  1303  040F                     	;# 
  1304  0410                     	;# 
  1305  0411                     	;# 
  1306  0416                     	;# 
  1307  0416                     	;# 
  1308  0417                     	;# 
  1309  0418                     	;# 
  1310  0418                     	;# 
  1311  0419                     	;# 
  1312  041A                     	;# 
  1313  041A                     	;# 
  1314  041B                     	;# 
  1315  041C                     	;# 
  1316  041C                     	;# 
  1317  041D                     	;# 
  1318  041E                     	;# 
  1319  041F                     	;# 
  1320  048C                     	;# 
  1321  048C                     	;# 
  1322  048D                     	;# 
  1323  048E                     	;# 
  1324  048F                     	;# 
  1325  048F                     	;# 
  1326  0490                     	;# 
  1327  0491                     	;# 
  1328  0492                     	;# 
  1329  0492                     	;# 
  1330  0493                     	;# 
  1331  0494                     	;# 
  1332  0495                     	;# 
  1333  0495                     	;# 
  1334  0496                     	;# 
  1335  0497                     	;# 
  1336  0498                     	;# 
  1337  0499                     	;# 
  1338  049A                     	;# 
  1339  049B                     	;# 
  1340  049C                     	;# 
  1341  049D                     	;# 
  1342  050C                     	;# 
  1343  050C                     	;# 
  1344  050D                     	;# 
  1345  050E                     	;# 
  1346  050F                     	;# 
  1347  050F                     	;# 
  1348  0510                     	;# 
  1349  0511                     	;# 
  1350  0512                     	;# 
  1351  0512                     	;# 
  1352  0513                     	;# 
  1353  0514                     	;# 
  1354  0515                     	;# 
  1355  0515                     	;# 
  1356  0516                     	;# 
  1357  0517                     	;# 
  1358  0518                     	;# 
  1359  0519                     	;# 
  1360  051A                     	;# 
  1361  051B                     	;# 
  1362  051C                     	;# 
  1363  051D                     	;# 
  1364  058C                     	;# 
  1365  058C                     	;# 
  1366  058D                     	;# 
  1367  058E                     	;# 
  1368  058F                     	;# 
  1369  058F                     	;# 
  1370  0590                     	;# 
  1371  0591                     	;# 
  1372  0592                     	;# 
  1373  0593                     	;# 
  1374  060C                     	;# 
  1375  060D                     	;# 
  1376  060E                     	;# 
  1377  060F                     	;# 
  1378  0610                     	;# 
  1379  0611                     	;# 
  1380  0612                     	;# 
  1381  0613                     	;# 
  1382  0614                     	;# 
  1383  0616                     	;# 
  1384  0617                     	;# 
  1385  0618                     	;# 
  1386  0619                     	;# 
  1387  061A                     	;# 
  1388  061B                     	;# 
  1389  061C                     	;# 
  1390  061D                     	;# 
  1391  061E                     	;# 
  1392  068C                     	;# 
  1393  068D                     	;# 
  1394  068E                     	;# 
  1395  068F                     	;# 
  1396  0690                     	;# 
  1397  0691                     	;# 
  1398  0692                     	;# 
  1399  0693                     	;# 
  1400  0694                     	;# 
  1401  070C                     	;# 
  1402  070D                     	;# 
  1403  070E                     	;# 
  1404  070F                     	;# 
  1405  0710                     	;# 
  1406  0711                     	;# 
  1407  0712                     	;# 
  1408  0713                     	;# 
  1409  0714                     	;# 
  1410  0716                     	;# 
  1411  0717                     	;# 
  1412  0718                     	;# 
  1413  0719                     	;# 
  1414  071A                     	;# 
  1415  071B                     	;# 
  1416  071C                     	;# 
  1417  071D                     	;# 
  1418  071E                     	;# 
  1419  0796                     	;# 
  1420  0797                     	;# 
  1421  0798                     	;# 
  1422  0799                     	;# 
  1423  079A                     	;# 
  1424  079B                     	;# 
  1425  080C                     	;# 
  1426  080D                     	;# 
  1427  080E                     	;# 
  1428  080F                     	;# 
  1429  0810                     	;# 
  1430  0811                     	;# 
  1431  0812                     	;# 
  1432  0813                     	;# 
  1433  0814                     	;# 
  1434  081A                     	;# 
  1435  081B                     	;# 
  1436  081C                     	;# 
  1437  081D                     	;# 
  1438  081E                     	;# 
  1439  081F                     	;# 
  1440  088C                     	;# 
  1441  088D                     	;# 
  1442  088E                     	;# 
  1443  088F                     	;# 
  1444  0890                     	;# 
  1445  0891                     	;# 
  1446  0892                     	;# 
  1447  0893                     	;# 
  1448  0895                     	;# 
  1449  0896                     	;# 
  1450  0897                     	;# 
  1451  0898                     	;# 
  1452  0899                     	;# 
  1453  089A                     	;# 
  1454  089B                     	;# 
  1455  090C                     	;# 
  1456  090E                     	;# 
  1457  090F                     	;# 
  1458  091F                     	;# 
  1459  091F                     	;# 
  1460  098F                     	;# 
  1461  098F                     	;# 
  1462  0990                     	;# 
  1463  0991                     	;# 
  1464  0992                     	;# 
  1465  0993                     	;# 
  1466  0994                     	;# 
  1467  0995                     	;# 
  1468  0996                     	;# 
  1469  0997                     	;# 
  1470  0E0F                     	;# 
  1471  0E10                     	;# 
  1472  0E11                     	;# 
  1473  0E12                     	;# 
  1474  0E13                     	;# 
  1475  0E14                     	;# 
  1476  0E15                     	;# 
  1477  0E16                     	;# 
  1478  0E17                     	;# 
  1479  0E18                     	;# 
  1480  0E19                     	;# 
  1481  0E1A                     	;# 
  1482  0E1B                     	;# 
  1483  0E1C                     	;# 
  1484  0E1D                     	;# 
  1485  0E1E                     	;# 
  1486  0E1F                     	;# 
  1487  0E20                     	;# 
  1488  0E21                     	;# 
  1489  0E22                     	;# 
  1490  0E23                     	;# 
  1491  0E24                     	;# 
  1492  0E25                     	;# 
  1493  0E26                     	;# 
  1494  0E27                     	;# 
  1495  0E28                     	;# 
  1496  0E29                     	;# 
  1497  0E2A                     	;# 
  1498  0E2B                     	;# 
  1499  0E2C                     	;# 
  1500  0E2D                     	;# 
  1501  0E2E                     	;# 
  1502  0E2F                     	;# 
  1503  0E30                     	;# 
  1504  0E31                     	;# 
  1505  0E32                     	;# 
  1506  0E33                     	;# 
  1507  0E34                     	;# 
  1508  0E35                     	;# 
  1509  0E36                     	;# 
  1510  0E37                     	;# 
  1511  0E8F                     	;# 
  1512  0E90                     	;# 
  1513  0E91                     	;# 
  1514  0E92                     	;# 
  1515  0E93                     	;# 
  1516  0E94                     	;# 
  1517  0E95                     	;# 
  1518  0E96                     	;# 
  1519  0E97                     	;# 
  1520  0E9C                     	;# 
  1521  0E9D                     	;# 
  1522  0E9E                     	;# 
  1523  0EA1                     	;# 
  1524  0EA2                     	;# 
  1525  0EA3                     	;# 
  1526  0EA4                     	;# 
  1527  0EA5                     	;# 
  1528  0EA9                     	;# 
  1529  0EAA                     	;# 
  1530  0EAB                     	;# 
  1531  0EAC                     	;# 
  1532  0EB1                     	;# 
  1533  0EB2                     	;# 
  1534  0EB3                     	;# 
  1535  0EB8                     	;# 
  1536  0EB9                     	;# 
  1537  0EBA                     	;# 
  1538  0EBB                     	;# 
  1539  0EBC                     	;# 
  1540  0EBD                     	;# 
  1541  0EBE                     	;# 
  1542  0EC3                     	;# 
  1543  0EC5                     	;# 
  1544  0EC6                     	;# 
  1545  0EC7                     	;# 
  1546  0EC8                     	;# 
  1547  0EC9                     	;# 
  1548  0ECA                     	;# 
  1549  0ECB                     	;# 
  1550  0ECC                     	;# 
  1551  0F10                     	;# 
  1552  0F11                     	;# 
  1553  0F12                     	;# 
  1554  0F13                     	;# 
  1555  0F14                     	;# 
  1556  0F15                     	;# 
  1557  0F16                     	;# 
  1558  0F17                     	;# 
  1559  0F18                     	;# 
  1560  0F19                     	;# 
  1561  0F1A                     	;# 
  1562  0F1B                     	;# 
  1563  0F1C                     	;# 
  1564  0F1D                     	;# 
  1565  0F1E                     	;# 
  1566  0F1F                     	;# 
  1567  0F20                     	;# 
  1568  0F21                     	;# 
  1569  0F22                     	;# 
  1570  0F23                     	;# 
  1571  0F24                     	;# 
  1572  0F25                     	;# 
  1573  0F26                     	;# 
  1574  0F27                     	;# 
  1575  0F38                     	;# 
  1576  0F39                     	;# 
  1577  0F3A                     	;# 
  1578  0F3B                     	;# 
  1579  0F3C                     	;# 
  1580  0F3D                     	;# 
  1581  0F3E                     	;# 
  1582  0F3F                     	;# 
  1583  0F40                     	;# 
  1584  0F41                     	;# 
  1585  0F43                     	;# 
  1586  0F44                     	;# 
  1587  0F45                     	;# 
  1588  0F46                     	;# 
  1589  0F47                     	;# 
  1590  0F48                     	;# 
  1591  0F49                     	;# 
  1592  0F4A                     	;# 
  1593  0F4B                     	;# 
  1594  0F4C                     	;# 
  1595  0F4E                     	;# 
  1596  0F4F                     	;# 
  1597  0F50                     	;# 
  1598  0F51                     	;# 
  1599  0F52                     	;# 
  1600  0F53                     	;# 
  1601  0F54                     	;# 
  1602  0F55                     	;# 
  1603  0F56                     	;# 
  1604  0F57                     	;# 
  1605  0F65                     	;# 
  1606  0F68                     	;# 
  1607  0F69                     	;# 
  1608  0F6A                     	;# 
  1609  0F6B                     	;# 
  1610  0FE4                     	;# 
  1611  0FE5                     	;# 
  1612  0FE6                     	;# 
  1613  0FE7                     	;# 
  1614  0FE8                     	;# 
  1615  0FE9                     	;# 
  1616  0FEA                     	;# 
  1617  0FEB                     	;# 
  1618  0FED                     	;# 
  1619  0FEE                     	;# 
  1620  0FEF                     	;# 
  1621  0000                     	;# 
  1622  0001                     	;# 
  1623  0002                     	;# 
  1624  0003                     	;# 
  1625  0004                     	;# 
  1626  0005                     	;# 
  1627  0006                     	;# 
  1628  0007                     	;# 
  1629  0008                     	;# 
  1630  0009                     	;# 
  1631  000A                     	;# 
  1632  000B                     	;# 
  1633  000C                     	;# 
  1634  000D                     	;# 
  1635  000E                     	;# 
  1636  0010                     	;# 
  1637  0011                     	;# 
  1638  0012                     	;# 
  1639  0013                     	;# 
  1640  0016                     	;# 
  1641  0017                     	;# 
  1642  0018                     	;# 
  1643  001C                     	;# 
  1644  001C                     	;# 
  1645  001D                     	;# 
  1646  001D                     	;# 
  1647  001E                     	;# 
  1648  001F                     	;# 
  1649  008C                     	;# 
  1650  008C                     	;# 
  1651  008D                     	;# 
  1652  008E                     	;# 
  1653  008E                     	;# 
  1654  008F                     	;# 
  1655  0090                     	;# 
  1656  0090                     	;# 
  1657  0091                     	;# 
  1658  0093                     	;# 
  1659  0094                     	;# 
  1660  0095                     	;# 
  1661  0096                     	;# 
  1662  0097                     	;# 
  1663  0098                     	;# 
  1664  0099                     	;# 
  1665  009A                     	;# 
  1666  009B                     	;# 
  1667  009C                     	;# 
  1668  009D                     	;# 
  1669  009E                     	;# 
  1670  010C                     	;# 
  1671  010D                     	;# 
  1672  010E                     	;# 
  1673  010E                     	;# 
  1674  010F                     	;# 
  1675  0110                     	;# 
  1676  0110                     	;# 
  1677  0111                     	;# 
  1678  0112                     	;# 
  1679  0112                     	;# 
  1680  0113                     	;# 
  1681  0114                     	;# 
  1682  0114                     	;# 
  1683  0115                     	;# 
  1684  0116                     	;# 
  1685  0116                     	;# 
  1686  0117                     	;# 
  1687  0119                     	;# 
  1688  0119                     	;# 
  1689  0119                     	;# 
  1690  011A                     	;# 
  1691  011A                     	;# 
  1692  011A                     	;# 
  1693  011B                     	;# 
  1694  011B                     	;# 
  1695  011B                     	;# 
  1696  011B                     	;# 
  1697  011B                     	;# 
  1698  011C                     	;# 
  1699  011C                     	;# 
  1700  011C                     	;# 
  1701  011D                     	;# 
  1702  011D                     	;# 
  1703  011D                     	;# 
  1704  011E                     	;# 
  1705  011E                     	;# 
  1706  011E                     	;# 
  1707  011F                     	;# 
  1708  011F                     	;# 
  1709  011F                     	;# 
  1710  011F                     	;# 
  1711  011F                     	;# 
  1712  018C                     	;# 
  1713  018D                     	;# 
  1714  018E                     	;# 
  1715  018F                     	;# 
  1716  0190                     	;# 
  1717  0191                     	;# 
  1718  0192                     	;# 
  1719  0196                     	;# 
  1720  0197                     	;# 
  1721  0198                     	;# 
  1722  0199                     	;# 
  1723  019A                     	;# 
  1724  019B                     	;# 
  1725  019C                     	;# 
  1726  020C                     	;# 
  1727  020C                     	;# 
  1728  020D                     	;# 
  1729  020E                     	;# 
  1730  020F                     	;# 
  1731  020F                     	;# 
  1732  0210                     	;# 
  1733  0210                     	;# 
  1734  0211                     	;# 
  1735  0211                     	;# 
  1736  0212                     	;# 
  1737  0212                     	;# 
  1738  0213                     	;# 
  1739  0214                     	;# 
  1740  0215                     	;# 
  1741  0215                     	;# 
  1742  0216                     	;# 
  1743  0216                     	;# 
  1744  0217                     	;# 
  1745  0217                     	;# 
  1746  0218                     	;# 
  1747  0218                     	;# 
  1748  0219                     	;# 
  1749  021A                     	;# 
  1750  021B                     	;# 
  1751  021B                     	;# 
  1752  021C                     	;# 
  1753  021C                     	;# 
  1754  021D                     	;# 
  1755  021D                     	;# 
  1756  021E                     	;# 
  1757  021F                     	;# 
  1758  028C                     	;# 
  1759  028C                     	;# 
  1760  028D                     	;# 
  1761  028D                     	;# 
  1762  028E                     	;# 
  1763  028F                     	;# 
  1764  0290                     	;# 
  1765  0290                     	;# 
  1766  0291                     	;# 
  1767  0292                     	;# 
  1768  0292                     	;# 
  1769  0293                     	;# 
  1770  0293                     	;# 
  1771  0294                     	;# 
  1772  0295                     	;# 
  1773  0296                     	;# 
  1774  0296                     	;# 
  1775  0297                     	;# 
  1776  0298                     	;# 
  1777  0298                     	;# 
  1778  0299                     	;# 
  1779  0299                     	;# 
  1780  029A                     	;# 
  1781  029B                     	;# 
  1782  029C                     	;# 
  1783  029C                     	;# 
  1784  029D                     	;# 
  1785  030C                     	;# 
  1786  030C                     	;# 
  1787  030D                     	;# 
  1788  030E                     	;# 
  1789  030F                     	;# 
  1790  0310                     	;# 
  1791  0310                     	;# 
  1792  0311                     	;# 
  1793  0312                     	;# 
  1794  0313                     	;# 
  1795  0314                     	;# 
  1796  0314                     	;# 
  1797  0315                     	;# 
  1798  0316                     	;# 
  1799  0317                     	;# 
  1800  0318                     	;# 
  1801  0318                     	;# 
  1802  0319                     	;# 
  1803  031A                     	;# 
  1804  031B                     	;# 
  1805  031C                     	;# 
  1806  031C                     	;# 
  1807  031D                     	;# 
  1808  031E                     	;# 
  1809  031F                     	;# 
  1810  038C                     	;# 
  1811  038D                     	;# 
  1812  038E                     	;# 
  1813  0390                     	;# 
  1814  0391                     	;# 
  1815  0392                     	;# 
  1816  040C                     	;# 
  1817  040D                     	;# 
  1818  040E                     	;# 
  1819  040F                     	;# 
  1820  0410                     	;# 
  1821  0411                     	;# 
  1822  0416                     	;# 
  1823  0416                     	;# 
  1824  0417                     	;# 
  1825  0418                     	;# 
  1826  0418                     	;# 
  1827  0419                     	;# 
  1828  041A                     	;# 
  1829  041A                     	;# 
  1830  041B                     	;# 
  1831  041C                     	;# 
  1832  041C                     	;# 
  1833  041D                     	;# 
  1834  041E                     	;# 
  1835  041F                     	;# 
  1836  048C                     	;# 
  1837  048C                     	;# 
  1838  048D                     	;# 
  1839  048E                     	;# 
  1840  048F                     	;# 
  1841  048F                     	;# 
  1842  0490                     	;# 
  1843  0491                     	;# 
  1844  0492                     	;# 
  1845  0492                     	;# 
  1846  0493                     	;# 
  1847  0494                     	;# 
  1848  0495                     	;# 
  1849  0495                     	;# 
  1850  0496                     	;# 
  1851  0497                     	;# 
  1852  0498                     	;# 
  1853  0499                     	;# 
  1854  049A                     	;# 
  1855  049B                     	;# 
  1856  049C                     	;# 
  1857  049D                     	;# 
  1858  050C                     	;# 
  1859  050C                     	;# 
  1860  050D                     	;# 
  1861  050E                     	;# 
  1862  050F                     	;# 
  1863  050F                     	;# 
  1864  0510                     	;# 
  1865  0511                     	;# 
  1866  0512                     	;# 
  1867  0512                     	;# 
  1868  0513                     	;# 
  1869  0514                     	;# 
  1870  0515                     	;# 
  1871  0515                     	;# 
  1872  0516                     	;# 
  1873  0517                     	;# 
  1874  0518                     	;# 
  1875  0519                     	;# 
  1876  051A                     	;# 
  1877  051B                     	;# 
  1878  051C                     	;# 
  1879  051D                     	;# 
  1880  058C                     	;# 
  1881  058C                     	;# 
  1882  058D                     	;# 
  1883  058E                     	;# 
  1884  058F                     	;# 
  1885  058F                     	;# 
  1886  0590                     	;# 
  1887  0591                     	;# 
  1888  0592                     	;# 
  1889  0593                     	;# 
  1890  060C                     	;# 
  1891  060D                     	;# 
  1892  060E                     	;# 
  1893  060F                     	;# 
  1894  0610                     	;# 
  1895  0611                     	;# 
  1896  0612                     	;# 
  1897  0613                     	;# 
  1898  0614                     	;# 
  1899  0616                     	;# 
  1900  0617                     	;# 
  1901  0618                     	;# 
  1902  0619                     	;# 
  1903  061A                     	;# 
  1904  061B                     	;# 
  1905  061C                     	;# 
  1906  061D                     	;# 
  1907  061E                     	;# 
  1908  068C                     	;# 
  1909  068D                     	;# 
  1910  068E                     	;# 
  1911  068F                     	;# 
  1912  0690                     	;# 
  1913  0691                     	;# 
  1914  0692                     	;# 
  1915  0693                     	;# 
  1916  0694                     	;# 
  1917  070C                     	;# 
  1918  070D                     	;# 
  1919  070E                     	;# 
  1920  070F                     	;# 
  1921  0710                     	;# 
  1922  0711                     	;# 
  1923  0712                     	;# 
  1924  0713                     	;# 
  1925  0714                     	;# 
  1926  0716                     	;# 
  1927  0717                     	;# 
  1928  0718                     	;# 
  1929  0719                     	;# 
  1930  071A                     	;# 
  1931  071B                     	;# 
  1932  071C                     	;# 
  1933  071D                     	;# 
  1934  071E                     	;# 
  1935  0796                     	;# 
  1936  0797                     	;# 
  1937  0798                     	;# 
  1938  0799                     	;# 
  1939  079A                     	;# 
  1940  079B                     	;# 
  1941  080C                     	;# 
  1942  080D                     	;# 
  1943  080E                     	;# 
  1944  080F                     	;# 
  1945  0810                     	;# 
  1946  0811                     	;# 
  1947  0812                     	;# 
  1948  0813                     	;# 
  1949  0814                     	;# 
  1950  081A                     	;# 
  1951  081B                     	;# 
  1952  081C                     	;# 
  1953  081D                     	;# 
  1954  081E                     	;# 
  1955  081F                     	;# 
  1956  088C                     	;# 
  1957  088D                     	;# 
  1958  088E                     	;# 
  1959  088F                     	;# 
  1960  0890                     	;# 
  1961  0891                     	;# 
  1962  0892                     	;# 
  1963  0893                     	;# 
  1964  0895                     	;# 
  1965  0896                     	;# 
  1966  0897                     	;# 
  1967  0898                     	;# 
  1968  0899                     	;# 
  1969  089A                     	;# 
  1970  089B                     	;# 
  1971  090C                     	;# 
  1972  090E                     	;# 
  1973  090F                     	;# 
  1974  091F                     	;# 
  1975  091F                     	;# 
  1976  098F                     	;# 
  1977  098F                     	;# 
  1978  0990                     	;# 
  1979  0991                     	;# 
  1980  0992                     	;# 
  1981  0993                     	;# 
  1982  0994                     	;# 
  1983  0995                     	;# 
  1984  0996                     	;# 
  1985  0997                     	;# 
  1986  0E0F                     	;# 
  1987  0E10                     	;# 
  1988  0E11                     	;# 
  1989  0E12                     	;# 
  1990  0E13                     	;# 
  1991  0E14                     	;# 
  1992  0E15                     	;# 
  1993  0E16                     	;# 
  1994  0E17                     	;# 
  1995  0E18                     	;# 
  1996  0E19                     	;# 
  1997  0E1A                     	;# 
  1998  0E1B                     	;# 
  1999  0E1C                     	;# 
  2000  0E1D                     	;# 
  2001  0E1E                     	;# 
  2002  0E1F                     	;# 
  2003  0E20                     	;# 
  2004  0E21                     	;# 
  2005  0E22                     	;# 
  2006  0E23                     	;# 
  2007  0E24                     	;# 
  2008  0E25                     	;# 
  2009  0E26                     	;# 
  2010  0E27                     	;# 
  2011  0E28                     	;# 
  2012  0E29                     	;# 
  2013  0E2A                     	;# 
  2014  0E2B                     	;# 
  2015  0E2C                     	;# 
  2016  0E2D                     	;# 
  2017  0E2E                     	;# 
  2018  0E2F                     	;# 
  2019  0E30                     	;# 
  2020  0E31                     	;# 
  2021  0E32                     	;# 
  2022  0E33                     	;# 
  2023  0E34                     	;# 
  2024  0E35                     	;# 
  2025  0E36                     	;# 
  2026  0E37                     	;# 
  2027  0E8F                     	;# 
  2028  0E90                     	;# 
  2029  0E91                     	;# 
  2030  0E92                     	;# 
  2031  0E93                     	;# 
  2032  0E94                     	;# 
  2033  0E95                     	;# 
  2034  0E96                     	;# 
  2035  0E97                     	;# 
  2036  0E9C                     	;# 
  2037  0E9D                     	;# 
  2038  0E9E                     	;# 
  2039  0EA1                     	;# 
  2040  0EA2                     	;# 
  2041  0EA3                     	;# 
  2042  0EA4                     	;# 
  2043  0EA5                     	;# 
  2044  0EA9                     	;# 
  2045  0EAA                     	;# 
  2046  0EAB                     	;# 
  2047  0EAC                     	;# 
  2048  0EB1                     	;# 
  2049  0EB2                     	;# 
  2050  0EB3                     	;# 
  2051  0EB8                     	;# 
  2052  0EB9                     	;# 
  2053  0EBA                     	;# 
  2054  0EBB                     	;# 
  2055  0EBC                     	;# 
  2056  0EBD                     	;# 
  2057  0EBE                     	;# 
  2058  0EC3                     	;# 
  2059  0EC5                     	;# 
  2060  0EC6                     	;# 
  2061  0EC7                     	;# 
  2062  0EC8                     	;# 
  2063  0EC9                     	;# 
  2064  0ECA                     	;# 
  2065  0ECB                     	;# 
  2066  0ECC                     	;# 
  2067  0F10                     	;# 
  2068  0F11                     	;# 
  2069  0F12                     	;# 
  2070  0F13                     	;# 
  2071  0F14                     	;# 
  2072  0F15                     	;# 
  2073  0F16                     	;# 
  2074  0F17                     	;# 
  2075  0F18                     	;# 
  2076  0F19                     	;# 
  2077  0F1A                     	;# 
  2078  0F1B                     	;# 
  2079  0F1C                     	;# 
  2080  0F1D                     	;# 
  2081  0F1E                     	;# 
  2082  0F1F                     	;# 
  2083  0F20                     	;# 
  2084  0F21                     	;# 
  2085  0F22                     	;# 
  2086  0F23                     	;# 
  2087  0F24                     	;# 
  2088  0F25                     	;# 
  2089  0F26                     	;# 
  2090  0F27                     	;# 
  2091  0F38                     	;# 
  2092  0F39                     	;# 
  2093  0F3A                     	;# 
  2094  0F3B                     	;# 
  2095  0F3C                     	;# 
  2096  0F3D                     	;# 
  2097  0F3E                     	;# 
  2098  0F3F                     	;# 
  2099  0F40                     	;# 
  2100  0F41                     	;# 
  2101  0F43                     	;# 
  2102  0F44                     	;# 
  2103  0F45                     	;# 
  2104  0F46                     	;# 
  2105  0F47                     	;# 
  2106  0F48                     	;# 
  2107  0F49                     	;# 
  2108  0F4A                     	;# 
  2109  0F4B                     	;# 
  2110  0F4C                     	;# 
  2111  0F4E                     	;# 
  2112  0F4F                     	;# 
  2113  0F50                     	;# 
  2114  0F51                     	;# 
  2115  0F52                     	;# 
  2116  0F53                     	;# 
  2117  0F54                     	;# 
  2118  0F55                     	;# 
  2119  0F56                     	;# 
  2120  0F57                     	;# 
  2121  0F65                     	;# 
  2122  0F68                     	;# 
  2123  0F69                     	;# 
  2124  0F6A                     	;# 
  2125  0F6B                     	;# 
  2126  0FE4                     	;# 
  2127  0FE5                     	;# 
  2128  0FE6                     	;# 
  2129  0FE7                     	;# 
  2130  0FE8                     	;# 
  2131  0FE9                     	;# 
  2132  0FEA                     	;# 
  2133  0FEB                     	;# 
  2134  0FED                     	;# 
  2135  0FEE                     	;# 
  2136  0FEF                     	;# 
  2137  0000                     	;# 
  2138  0001                     	;# 
  2139  0002                     	;# 
  2140  0003                     	;# 
  2141  0004                     	;# 
  2142  0005                     	;# 
  2143  0006                     	;# 
  2144  0007                     	;# 
  2145  0008                     	;# 
  2146  0009                     	;# 
  2147  000A                     	;# 
  2148  000B                     	;# 
  2149  000C                     	;# 
  2150  000D                     	;# 
  2151  000E                     	;# 
  2152  0010                     	;# 
  2153  0011                     	;# 
  2154  0012                     	;# 
  2155  0013                     	;# 
  2156  0016                     	;# 
  2157  0017                     	;# 
  2158  0018                     	;# 
  2159  001C                     	;# 
  2160  001C                     	;# 
  2161  001D                     	;# 
  2162  001D                     	;# 
  2163  001E                     	;# 
  2164  001F                     	;# 
  2165  008C                     	;# 
  2166  008C                     	;# 
  2167  008D                     	;# 
  2168  008E                     	;# 
  2169  008E                     	;# 
  2170  008F                     	;# 
  2171  0090                     	;# 
  2172  0090                     	;# 
  2173  0091                     	;# 
  2174  0093                     	;# 
  2175  0094                     	;# 
  2176  0095                     	;# 
  2177  0096                     	;# 
  2178  0097                     	;# 
  2179  0098                     	;# 
  2180  0099                     	;# 
  2181  009A                     	;# 
  2182  009B                     	;# 
  2183  009C                     	;# 
  2184  009D                     	;# 
  2185  009E                     	;# 
  2186  010C                     	;# 
  2187  010D                     	;# 
  2188  010E                     	;# 
  2189  010E                     	;# 
  2190  010F                     	;# 
  2191  0110                     	;# 
  2192  0110                     	;# 
  2193  0111                     	;# 
  2194  0112                     	;# 
  2195  0112                     	;# 
  2196  0113                     	;# 
  2197  0114                     	;# 
  2198  0114                     	;# 
  2199  0115                     	;# 
  2200  0116                     	;# 
  2201  0116                     	;# 
  2202  0117                     	;# 
  2203  0119                     	;# 
  2204  0119                     	;# 
  2205  0119                     	;# 
  2206  011A                     	;# 
  2207  011A                     	;# 
  2208  011A                     	;# 
  2209  011B                     	;# 
  2210  011B                     	;# 
  2211  011B                     	;# 
  2212  011B                     	;# 
  2213  011B                     	;# 
  2214  011C                     	;# 
  2215  011C                     	;# 
  2216  011C                     	;# 
  2217  011D                     	;# 
  2218  011D                     	;# 
  2219  011D                     	;# 
  2220  011E                     	;# 
  2221  011E                     	;# 
  2222  011E                     	;# 
  2223  011F                     	;# 
  2224  011F                     	;# 
  2225  011F                     	;# 
  2226  011F                     	;# 
  2227  011F                     	;# 
  2228  018C                     	;# 
  2229  018D                     	;# 
  2230  018E                     	;# 
  2231  018F                     	;# 
  2232  0190                     	;# 
  2233  0191                     	;# 
  2234  0192                     	;# 
  2235  0196                     	;# 
  2236  0197                     	;# 
  2237  0198                     	;# 
  2238  0199                     	;# 
  2239  019A                     	;# 
  2240  019B                     	;# 
  2241  019C                     	;# 
  2242  020C                     	;# 
  2243  020C                     	;# 
  2244  020D                     	;# 
  2245  020E                     	;# 
  2246  020F                     	;# 
  2247  020F                     	;# 
  2248  0210                     	;# 
  2249  0210                     	;# 
  2250  0211                     	;# 
  2251  0211                     	;# 
  2252  0212                     	;# 
  2253  0212                     	;# 
  2254  0213                     	;# 
  2255  0214                     	;# 
  2256  0215                     	;# 
  2257  0215                     	;# 
  2258  0216                     	;# 
  2259  0216                     	;# 
  2260  0217                     	;# 
  2261  0217                     	;# 
  2262  0218                     	;# 
  2263  0218                     	;# 
  2264  0219                     	;# 
  2265  021A                     	;# 
  2266  021B                     	;# 
  2267  021B                     	;# 
  2268  021C                     	;# 
  2269  021C                     	;# 
  2270  021D                     	;# 
  2271  021D                     	;# 
  2272  021E                     	;# 
  2273  021F                     	;# 
  2274  028C                     	;# 
  2275  028C                     	;# 
  2276  028D                     	;# 
  2277  028D                     	;# 
  2278  028E                     	;# 
  2279  028F                     	;# 
  2280  0290                     	;# 
  2281  0290                     	;# 
  2282  0291                     	;# 
  2283  0292                     	;# 
  2284  0292                     	;# 
  2285  0293                     	;# 
  2286  0293                     	;# 
  2287  0294                     	;# 
  2288  0295                     	;# 
  2289  0296                     	;# 
  2290  0296                     	;# 
  2291  0297                     	;# 
  2292  0298                     	;# 
  2293  0298                     	;# 
  2294  0299                     	;# 
  2295  0299                     	;# 
  2296  029A                     	;# 
  2297  029B                     	;# 
  2298  029C                     	;# 
  2299  029C                     	;# 
  2300  029D                     	;# 
  2301  030C                     	;# 
  2302  030C                     	;# 
  2303  030D                     	;# 
  2304  030E                     	;# 
  2305  030F                     	;# 
  2306  0310                     	;# 
  2307  0310                     	;# 
  2308  0311                     	;# 
  2309  0312                     	;# 
  2310  0313                     	;# 
  2311  0314                     	;# 
  2312  0314                     	;# 
  2313  0315                     	;# 
  2314  0316                     	;# 
  2315  0317                     	;# 
  2316  0318                     	;# 
  2317  0318                     	;# 
  2318  0319                     	;# 
  2319  031A                     	;# 
  2320  031B                     	;# 
  2321  031C                     	;# 
  2322  031C                     	;# 
  2323  031D                     	;# 
  2324  031E                     	;# 
  2325  031F                     	;# 
  2326  038C                     	;# 
  2327  038D                     	;# 
  2328  038E                     	;# 
  2329  0390                     	;# 
  2330  0391                     	;# 
  2331  0392                     	;# 
  2332  040C                     	;# 
  2333  040D                     	;# 
  2334  040E                     	;# 
  2335  040F                     	;# 
  2336  0410                     	;# 
  2337  0411                     	;# 
  2338  0416                     	;# 
  2339  0416                     	;# 
  2340  0417                     	;# 
  2341  0418                     	;# 
  2342  0418                     	;# 
  2343  0419                     	;# 
  2344  041A                     	;# 
  2345  041A                     	;# 
  2346  041B                     	;# 
  2347  041C                     	;# 
  2348  041C                     	;# 
  2349  041D                     	;# 
  2350  041E                     	;# 
  2351  041F                     	;# 
  2352  048C                     	;# 
  2353  048C                     	;# 
  2354  048D                     	;# 
  2355  048E                     	;# 
  2356  048F                     	;# 
  2357  048F                     	;# 
  2358  0490                     	;# 
  2359  0491                     	;# 
  2360  0492                     	;# 
  2361  0492                     	;# 
  2362  0493                     	;# 
  2363  0494                     	;# 
  2364  0495                     	;# 
  2365  0495                     	;# 
  2366  0496                     	;# 
  2367  0497                     	;# 
  2368  0498                     	;# 
  2369  0499                     	;# 
  2370  049A                     	;# 
  2371  049B                     	;# 
  2372  049C                     	;# 
  2373  049D                     	;# 
  2374  050C                     	;# 
  2375  050C                     	;# 
  2376  050D                     	;# 
  2377  050E                     	;# 
  2378  050F                     	;# 
  2379  050F                     	;# 
  2380  0510                     	;# 
  2381  0511                     	;# 
  2382  0512                     	;# 
  2383  0512                     	;# 
  2384  0513                     	;# 
  2385  0514                     	;# 
  2386  0515                     	;# 
  2387  0515                     	;# 
  2388  0516                     	;# 
  2389  0517                     	;# 
  2390  0518                     	;# 
  2391  0519                     	;# 
  2392  051A                     	;# 
  2393  051B                     	;# 
  2394  051C                     	;# 
  2395  051D                     	;# 
  2396  058C                     	;# 
  2397  058C                     	;# 
  2398  058D                     	;# 
  2399  058E                     	;# 
  2400  058F                     	;# 
  2401  058F                     	;# 
  2402  0590                     	;# 
  2403  0591                     	;# 
  2404  0592                     	;# 
  2405  0593                     	;# 
  2406  060C                     	;# 
  2407  060D                     	;# 
  2408  060E                     	;# 
  2409  060F                     	;# 
  2410  0610                     	;# 
  2411  0611                     	;# 
  2412  0612                     	;# 
  2413  0613                     	;# 
  2414  0614                     	;# 
  2415  0616                     	;# 
  2416  0617                     	;# 
  2417  0618                     	;# 
  2418  0619                     	;# 
  2419  061A                     	;# 
  2420  061B                     	;# 
  2421  061C                     	;# 
  2422  061D                     	;# 
  2423  061E                     	;# 
  2424  068C                     	;# 
  2425  068D                     	;# 
  2426  068E                     	;# 
  2427  068F                     	;# 
  2428  0690                     	;# 
  2429  0691                     	;# 
  2430  0692                     	;# 
  2431  0693                     	;# 
  2432  0694                     	;# 
  2433  070C                     	;# 
  2434  070D                     	;# 
  2435  070E                     	;# 
  2436  070F                     	;# 
  2437  0710                     	;# 
  2438  0711                     	;# 
  2439  0712                     	;# 
  2440  0713                     	;# 
  2441  0714                     	;# 
  2442  0716                     	;# 
  2443  0717                     	;# 
  2444  0718                     	;# 
  2445  0719                     	;# 
  2446  071A                     	;# 
  2447  071B                     	;# 
  2448  071C                     	;# 
  2449  071D                     	;# 
  2450  071E                     	;# 
  2451  0796                     	;# 
  2452  0797                     	;# 
  2453  0798                     	;# 
  2454  0799                     	;# 
  2455  079A                     	;# 
  2456  079B                     	;# 
  2457  080C                     	;# 
  2458  080D                     	;# 
  2459  080E                     	;# 
  2460  080F                     	;# 
  2461  0810                     	;# 
  2462  0811                     	;# 
  2463  0812                     	;# 
  2464  0813                     	;# 
  2465  0814                     	;# 
  2466  081A                     	;# 
  2467  081B                     	;# 
  2468  081C                     	;# 
  2469  081D                     	;# 
  2470  081E                     	;# 
  2471  081F                     	;# 
  2472  088C                     	;# 
  2473  088D                     	;# 
  2474  088E                     	;# 
  2475  088F                     	;# 
  2476  0890                     	;# 
  2477  0891                     	;# 
  2478  0892                     	;# 
  2479  0893                     	;# 
  2480  0895                     	;# 
  2481  0896                     	;# 
  2482  0897                     	;# 
  2483  0898                     	;# 
  2484  0899                     	;# 
  2485  089A                     	;# 
  2486  089B                     	;# 
  2487  090C                     	;# 
  2488  090E                     	;# 
  2489  090F                     	;# 
  2490  091F                     	;# 
  2491  091F                     	;# 
  2492  098F                     	;# 
  2493  098F                     	;# 
  2494  0990                     	;# 
  2495  0991                     	;# 
  2496  0992                     	;# 
  2497  0993                     	;# 
  2498  0994                     	;# 
  2499  0995                     	;# 
  2500  0996                     	;# 
  2501  0997                     	;# 
  2502  0E0F                     	;# 
  2503  0E10                     	;# 
  2504  0E11                     	;# 
  2505  0E12                     	;# 
  2506  0E13                     	;# 
  2507  0E14                     	;# 
  2508  0E15                     	;# 
  2509  0E16                     	;# 
  2510  0E17                     	;# 
  2511  0E18                     	;# 
  2512  0E19                     	;# 
  2513  0E1A                     	;# 
  2514  0E1B                     	;# 
  2515  0E1C                     	;# 
  2516  0E1D                     	;# 
  2517  0E1E                     	;# 
  2518  0E1F                     	;# 
  2519  0E20                     	;# 
  2520  0E21                     	;# 
  2521  0E22                     	;# 
  2522  0E23                     	;# 
  2523  0E24                     	;# 
  2524  0E25                     	;# 
  2525  0E26                     	;# 
  2526  0E27                     	;# 
  2527  0E28                     	;# 
  2528  0E29                     	;# 
  2529  0E2A                     	;# 
  2530  0E2B                     	;# 
  2531  0E2C                     	;# 
  2532  0E2D                     	;# 
  2533  0E2E                     	;# 
  2534  0E2F                     	;# 
  2535  0E30                     	;# 
  2536  0E31                     	;# 
  2537  0E32                     	;# 
  2538  0E33                     	;# 
  2539  0E34                     	;# 
  2540  0E35                     	;# 
  2541  0E36                     	;# 
  2542  0E37                     	;# 
  2543  0E8F                     	;# 
  2544  0E90                     	;# 
  2545  0E91                     	;# 
  2546  0E92                     	;# 
  2547  0E93                     	;# 
  2548  0E94                     	;# 
  2549  0E95                     	;# 
  2550  0E96                     	;# 
  2551  0E97                     	;# 
  2552  0E9C                     	;# 
  2553  0E9D                     	;# 
  2554  0E9E                     	;# 
  2555  0EA1                     	;# 
  2556  0EA2                     	;# 
  2557  0EA3                     	;# 
  2558  0EA4                     	;# 
  2559  0EA5                     	;# 
  2560  0EA9                     	;# 
  2561  0EAA                     	;# 
  2562  0EAB                     	;# 
  2563  0EAC                     	;# 
  2564  0EB1                     	;# 
  2565  0EB2                     	;# 
  2566  0EB3                     	;# 
  2567  0EB8                     	;# 
  2568  0EB9                     	;# 
  2569  0EBA                     	;# 
  2570  0EBB                     	;# 
  2571  0EBC                     	;# 
  2572  0EBD                     	;# 
  2573  0EBE                     	;# 
  2574  0EC3                     	;# 
  2575  0EC5                     	;# 
  2576  0EC6                     	;# 
  2577  0EC7                     	;# 
  2578  0EC8                     	;# 
  2579  0EC9                     	;# 
  2580  0ECA                     	;# 
  2581  0ECB                     	;# 
  2582  0ECC                     	;# 
  2583  0F10                     	;# 
  2584  0F11                     	;# 
  2585  0F12                     	;# 
  2586  0F13                     	;# 
  2587  0F14                     	;# 
  2588  0F15                     	;# 
  2589  0F16                     	;# 
  2590  0F17                     	;# 
  2591  0F18                     	;# 
  2592  0F19                     	;# 
  2593  0F1A                     	;# 
  2594  0F1B                     	;# 
  2595  0F1C                     	;# 
  2596  0F1D                     	;# 
  2597  0F1E                     	;# 
  2598  0F1F                     	;# 
  2599  0F20                     	;# 
  2600  0F21                     	;# 
  2601  0F22                     	;# 
  2602  0F23                     	;# 
  2603  0F24                     	;# 
  2604  0F25                     	;# 
  2605  0F26                     	;# 
  2606  0F27                     	;# 
  2607  0F38                     	;# 
  2608  0F39                     	;# 
  2609  0F3A                     	;# 
  2610  0F3B                     	;# 
  2611  0F3C                     	;# 
  2612  0F3D                     	;# 
  2613  0F3E                     	;# 
  2614  0F3F                     	;# 
  2615  0F40                     	;# 
  2616  0F41                     	;# 
  2617  0F43                     	;# 
  2618  0F44                     	;# 
  2619  0F45                     	;# 
  2620  0F46                     	;# 
  2621  0F47                     	;# 
  2622  0F48                     	;# 
  2623  0F49                     	;# 
  2624  0F4A                     	;# 
  2625  0F4B                     	;# 
  2626  0F4C                     	;# 
  2627  0F4E                     	;# 
  2628  0F4F                     	;# 
  2629  0F50                     	;# 
  2630  0F51                     	;# 
  2631  0F52                     	;# 
  2632  0F53                     	;# 
  2633  0F54                     	;# 
  2634  0F55                     	;# 
  2635  0F56                     	;# 
  2636  0F57                     	;# 
  2637  0F65                     	;# 
  2638  0F68                     	;# 
  2639  0F69                     	;# 
  2640  0F6A                     	;# 
  2641  0F6B                     	;# 
  2642  0FE4                     	;# 
  2643  0FE5                     	;# 
  2644  0FE6                     	;# 
  2645  0FE7                     	;# 
  2646  0FE8                     	;# 
  2647  0FE9                     	;# 
  2648  0FEA                     	;# 
  2649  0FEB                     	;# 
  2650  0FED                     	;# 
  2651  0FEE                     	;# 
  2652  0FEF                     	;# 
  2653  0000                     	;# 
  2654  0001                     	;# 
  2655  0002                     	;# 
  2656  0003                     	;# 
  2657  0004                     	;# 
  2658  0005                     	;# 
  2659  0006                     	;# 
  2660  0007                     	;# 
  2661  0008                     	;# 
  2662  0009                     	;# 
  2663  000A                     	;# 
  2664  000B                     	;# 
  2665  000C                     	;# 
  2666  000D                     	;# 
  2667  000E                     	;# 
  2668  0010                     	;# 
  2669  0011                     	;# 
  2670  0012                     	;# 
  2671  0013                     	;# 
  2672  0016                     	;# 
  2673  0017                     	;# 
  2674  0018                     	;# 
  2675  001C                     	;# 
  2676  001C                     	;# 
  2677  001D                     	;# 
  2678  001D                     	;# 
  2679  001E                     	;# 
  2680  001F                     	;# 
  2681  008C                     	;# 
  2682  008C                     	;# 
  2683  008D                     	;# 
  2684  008E                     	;# 
  2685  008E                     	;# 
  2686  008F                     	;# 
  2687  0090                     	;# 
  2688  0090                     	;# 
  2689  0091                     	;# 
  2690  0093                     	;# 
  2691  0094                     	;# 
  2692  0095                     	;# 
  2693  0096                     	;# 
  2694  0097                     	;# 
  2695  0098                     	;# 
  2696  0099                     	;# 
  2697  009A                     	;# 
  2698  009B                     	;# 
  2699  009C                     	;# 
  2700  009D                     	;# 
  2701  009E                     	;# 
  2702  010C                     	;# 
  2703  010D                     	;# 
  2704  010E                     	;# 
  2705  010E                     	;# 
  2706  010F                     	;# 
  2707  0110                     	;# 
  2708  0110                     	;# 
  2709  0111                     	;# 
  2710  0112                     	;# 
  2711  0112                     	;# 
  2712  0113                     	;# 
  2713  0114                     	;# 
  2714  0114                     	;# 
  2715  0115                     	;# 
  2716  0116                     	;# 
  2717  0116                     	;# 
  2718  0117                     	;# 
  2719  0119                     	;# 
  2720  0119                     	;# 
  2721  0119                     	;# 
  2722  011A                     	;# 
  2723  011A                     	;# 
  2724  011A                     	;# 
  2725  011B                     	;# 
  2726  011B                     	;# 
  2727  011B                     	;# 
  2728  011B                     	;# 
  2729  011B                     	;# 
  2730  011C                     	;# 
  2731  011C                     	;# 
  2732  011C                     	;# 
  2733  011D                     	;# 
  2734  011D                     	;# 
  2735  011D                     	;# 
  2736  011E                     	;# 
  2737  011E                     	;# 
  2738  011E                     	;# 
  2739  011F                     	;# 
  2740  011F                     	;# 
  2741  011F                     	;# 
  2742  011F                     	;# 
  2743  011F                     	;# 
  2744  018C                     	;# 
  2745  018D                     	;# 
  2746  018E                     	;# 
  2747  018F                     	;# 
  2748  0190                     	;# 
  2749  0191                     	;# 
  2750  0192                     	;# 
  2751  0196                     	;# 
  2752  0197                     	;# 
  2753  0198                     	;# 
  2754  0199                     	;# 
  2755  019A                     	;# 
  2756  019B                     	;# 
  2757  019C                     	;# 
  2758  020C                     	;# 
  2759  020C                     	;# 
  2760  020D                     	;# 
  2761  020E                     	;# 
  2762  020F                     	;# 
  2763  020F                     	;# 
  2764  0210                     	;# 
  2765  0210                     	;# 
  2766  0211                     	;# 
  2767  0211                     	;# 
  2768  0212                     	;# 
  2769  0212                     	;# 
  2770  0213                     	;# 
  2771  0214                     	;# 
  2772  0215                     	;# 
  2773  0215                     	;# 
  2774  0216                     	;# 
  2775  0216                     	;# 
  2776  0217                     	;# 
  2777  0217                     	;# 
  2778  0218                     	;# 
  2779  0218                     	;# 
  2780  0219                     	;# 
  2781  021A                     	;# 
  2782  021B                     	;# 
  2783  021B                     	;# 
  2784  021C                     	;# 
  2785  021C                     	;# 
  2786  021D                     	;# 
  2787  021D                     	;# 
  2788  021E                     	;# 
  2789  021F                     	;# 
  2790  028C                     	;# 
  2791  028C                     	;# 
  2792  028D                     	;# 
  2793  028D                     	;# 
  2794  028E                     	;# 
  2795  028F                     	;# 
  2796  0290                     	;# 
  2797  0290                     	;# 
  2798  0291                     	;# 
  2799  0292                     	;# 
  2800  0292                     	;# 
  2801  0293                     	;# 
  2802  0293                     	;# 
  2803  0294                     	;# 
  2804  0295                     	;# 
  2805  0296                     	;# 
  2806  0296                     	;# 
  2807  0297                     	;# 
  2808  0298                     	;# 
  2809  0298                     	;# 
  2810  0299                     	;# 
  2811  0299                     	;# 
  2812  029A                     	;# 
  2813  029B                     	;# 
  2814  029C                     	;# 
  2815  029C                     	;# 
  2816  029D                     	;# 
  2817  030C                     	;# 
  2818  030C                     	;# 
  2819  030D                     	;# 
  2820  030E                     	;# 
  2821  030F                     	;# 
  2822  0310                     	;# 
  2823  0310                     	;# 
  2824  0311                     	;# 
  2825  0312                     	;# 
  2826  0313                     	;# 
  2827  0314                     	;# 
  2828  0314                     	;# 
  2829  0315                     	;# 
  2830  0316                     	;# 
  2831  0317                     	;# 
  2832  0318                     	;# 
  2833  0318                     	;# 
  2834  0319                     	;# 
  2835  031A                     	;# 
  2836  031B                     	;# 
  2837  031C                     	;# 
  2838  031C                     	;# 
  2839  031D                     	;# 
  2840  031E                     	;# 
  2841  031F                     	;# 
  2842  038C                     	;# 
  2843  038D                     	;# 
  2844  038E                     	;# 
  2845  0390                     	;# 
  2846  0391                     	;# 
  2847  0392                     	;# 
  2848  040C                     	;# 
  2849  040D                     	;# 
  2850  040E                     	;# 
  2851  040F                     	;# 
  2852  0410                     	;# 
  2853  0411                     	;# 
  2854  0416                     	;# 
  2855  0416                     	;# 
  2856  0417                     	;# 
  2857  0418                     	;# 
  2858  0418                     	;# 
  2859  0419                     	;# 
  2860  041A                     	;# 
  2861  041A                     	;# 
  2862  041B                     	;# 
  2863  041C                     	;# 
  2864  041C                     	;# 
  2865  041D                     	;# 
  2866  041E                     	;# 
  2867  041F                     	;# 
  2868  048C                     	;# 
  2869  048C                     	;# 
  2870  048D                     	;# 
  2871  048E                     	;# 
  2872  048F                     	;# 
  2873  048F                     	;# 
  2874  0490                     	;# 
  2875  0491                     	;# 
  2876  0492                     	;# 
  2877  0492                     	;# 
  2878  0493                     	;# 
  2879  0494                     	;# 
  2880  0495                     	;# 
  2881  0495                     	;# 
  2882  0496                     	;# 
  2883  0497                     	;# 
  2884  0498                     	;# 
  2885  0499                     	;# 
  2886  049A                     	;# 
  2887  049B                     	;# 
  2888  049C                     	;# 
  2889  049D                     	;# 
  2890  050C                     	;# 
  2891  050C                     	;# 
  2892  050D                     	;# 
  2893  050E                     	;# 
  2894  050F                     	;# 
  2895  050F                     	;# 
  2896  0510                     	;# 
  2897  0511                     	;# 
  2898  0512                     	;# 
  2899  0512                     	;# 
  2900  0513                     	;# 
  2901  0514                     	;# 
  2902  0515                     	;# 
  2903  0515                     	;# 
  2904  0516                     	;# 
  2905  0517                     	;# 
  2906  0518                     	;# 
  2907  0519                     	;# 
  2908  051A                     	;# 
  2909  051B                     	;# 
  2910  051C                     	;# 
  2911  051D                     	;# 
  2912  058C                     	;# 
  2913  058C                     	;# 
  2914  058D                     	;# 
  2915  058E                     	;# 
  2916  058F                     	;# 
  2917  058F                     	;# 
  2918  0590                     	;# 
  2919  0591                     	;# 
  2920  0592                     	;# 
  2921  0593                     	;# 
  2922  060C                     	;# 
  2923  060D                     	;# 
  2924  060E                     	;# 
  2925  060F                     	;# 
  2926  0610                     	;# 
  2927  0611                     	;# 
  2928  0612                     	;# 
  2929  0613                     	;# 
  2930  0614                     	;# 
  2931  0616                     	;# 
  2932  0617                     	;# 
  2933  0618                     	;# 
  2934  0619                     	;# 
  2935  061A                     	;# 
  2936  061B                     	;# 
  2937  061C                     	;# 
  2938  061D                     	;# 
  2939  061E                     	;# 
  2940  068C                     	;# 
  2941  068D                     	;# 
  2942  068E                     	;# 
  2943  068F                     	;# 
  2944  0690                     	;# 
  2945  0691                     	;# 
  2946  0692                     	;# 
  2947  0693                     	;# 
  2948  0694                     	;# 
  2949  070C                     	;# 
  2950  070D                     	;# 
  2951  070E                     	;# 
  2952  070F                     	;# 
  2953  0710                     	;# 
  2954  0711                     	;# 
  2955  0712                     	;# 
  2956  0713                     	;# 
  2957  0714                     	;# 
  2958  0716                     	;# 
  2959  0717                     	;# 
  2960  0718                     	;# 
  2961  0719                     	;# 
  2962  071A                     	;# 
  2963  071B                     	;# 
  2964  071C                     	;# 
  2965  071D                     	;# 
  2966  071E                     	;# 
  2967  0796                     	;# 
  2968  0797                     	;# 
  2969  0798                     	;# 
  2970  0799                     	;# 
  2971  079A                     	;# 
  2972  079B                     	;# 
  2973  080C                     	;# 
  2974  080D                     	;# 
  2975  080E                     	;# 
  2976  080F                     	;# 
  2977  0810                     	;# 
  2978  0811                     	;# 
  2979  0812                     	;# 
  2980  0813                     	;# 
  2981  0814                     	;# 
  2982  081A                     	;# 
  2983  081B                     	;# 
  2984  081C                     	;# 
  2985  081D                     	;# 
  2986  081E                     	;# 
  2987  081F                     	;# 
  2988  088C                     	;# 
  2989  088D                     	;# 
  2990  088E                     	;# 
  2991  088F                     	;# 
  2992  0890                     	;# 
  2993  0891                     	;# 
  2994  0892                     	;# 
  2995  0893                     	;# 
  2996  0895                     	;# 
  2997  0896                     	;# 
  2998  0897                     	;# 
  2999  0898                     	;# 
  3000  0899                     	;# 
  3001  089A                     	;# 
  3002  089B                     	;# 
  3003  090C                     	;# 
  3004  090E                     	;# 
  3005  090F                     	;# 
  3006  091F                     	;# 
  3007  091F                     	;# 
  3008  098F                     	;# 
  3009  098F                     	;# 
  3010  0990                     	;# 
  3011  0991                     	;# 
  3012  0992                     	;# 
  3013  0993                     	;# 
  3014  0994                     	;# 
  3015  0995                     	;# 
  3016  0996                     	;# 
  3017  0997                     	;# 
  3018  0E0F                     	;# 
  3019  0E10                     	;# 
  3020  0E11                     	;# 
  3021  0E12                     	;# 
  3022  0E13                     	;# 
  3023  0E14                     	;# 
  3024  0E15                     	;# 
  3025  0E16                     	;# 
  3026  0E17                     	;# 
  3027  0E18                     	;# 
  3028  0E19                     	;# 
  3029  0E1A                     	;# 
  3030  0E1B                     	;# 
  3031  0E1C                     	;# 
  3032  0E1D                     	;# 
  3033  0E1E                     	;# 
  3034  0E1F                     	;# 
  3035  0E20                     	;# 
  3036  0E21                     	;# 
  3037  0E22                     	;# 
  3038  0E23                     	;# 
  3039  0E24                     	;# 
  3040  0E25                     	;# 
  3041  0E26                     	;# 
  3042  0E27                     	;# 
  3043  0E28                     	;# 
  3044  0E29                     	;# 
  3045  0E2A                     	;# 
  3046  0E2B                     	;# 
  3047  0E2C                     	;# 
  3048  0E2D                     	;# 
  3049  0E2E                     	;# 
  3050  0E2F                     	;# 
  3051  0E30                     	;# 
  3052  0E31                     	;# 
  3053  0E32                     	;# 
  3054  0E33                     	;# 
  3055  0E34                     	;# 
  3056  0E35                     	;# 
  3057  0E36                     	;# 
  3058  0E37                     	;# 
  3059  0E8F                     	;# 
  3060  0E90                     	;# 
  3061  0E91                     	;# 
  3062  0E92                     	;# 
  3063  0E93                     	;# 
  3064  0E94                     	;# 
  3065  0E95                     	;# 
  3066  0E96                     	;# 
  3067  0E97                     	;# 
  3068  0E9C                     	;# 
  3069  0E9D                     	;# 
  3070  0E9E                     	;# 
  3071  0EA1                     	;# 
  3072  0EA2                     	;# 
  3073  0EA3                     	;# 
  3074  0EA4                     	;# 
  3075  0EA5                     	;# 
  3076  0EA9                     	;# 
  3077  0EAA                     	;# 
  3078  0EAB                     	;# 
  3079  0EAC                     	;# 
  3080  0EB1                     	;# 
  3081  0EB2                     	;# 
  3082  0EB3                     	;# 
  3083  0EB8                     	;# 
  3084  0EB9                     	;# 
  3085  0EBA                     	;# 
  3086  0EBB                     	;# 
  3087  0EBC                     	;# 
  3088  0EBD                     	;# 
  3089  0EBE                     	;# 
  3090  0EC3                     	;# 
  3091  0EC5                     	;# 
  3092  0EC6                     	;# 
  3093  0EC7                     	;# 
  3094  0EC8                     	;# 
  3095  0EC9                     	;# 
  3096  0ECA                     	;# 
  3097  0ECB                     	;# 
  3098  0ECC                     	;# 
  3099  0F10                     	;# 
  3100  0F11                     	;# 
  3101  0F12                     	;# 
  3102  0F13                     	;# 
  3103  0F14                     	;# 
  3104  0F15                     	;# 
  3105  0F16                     	;# 
  3106  0F17                     	;# 
  3107  0F18                     	;# 
  3108  0F19                     	;# 
  3109  0F1A                     	;# 
  3110  0F1B                     	;# 
  3111  0F1C                     	;# 
  3112  0F1D                     	;# 
  3113  0F1E                     	;# 
  3114  0F1F                     	;# 
  3115  0F20                     	;# 
  3116  0F21                     	;# 
  3117  0F22                     	;# 
  3118  0F23                     	;# 
  3119  0F24                     	;# 
  3120  0F25                     	;# 
  3121  0F26                     	;# 
  3122  0F27                     	;# 
  3123  0F38                     	;# 
  3124  0F39                     	;# 
  3125  0F3A                     	;# 
  3126  0F3B                     	;# 
  3127  0F3C                     	;# 
  3128  0F3D                     	;# 
  3129  0F3E                     	;# 
  3130  0F3F                     	;# 
  3131  0F40                     	;# 
  3132  0F41                     	;# 
  3133  0F43                     	;# 
  3134  0F44                     	;# 
  3135  0F45                     	;# 
  3136  0F46                     	;# 
  3137  0F47                     	;# 
  3138  0F48                     	;# 
  3139  0F49                     	;# 
  3140  0F4A                     	;# 
  3141  0F4B                     	;# 
  3142  0F4C                     	;# 
  3143  0F4E                     	;# 
  3144  0F4F                     	;# 
  3145  0F50                     	;# 
  3146  0F51                     	;# 
  3147  0F52                     	;# 
  3148  0F53                     	;# 
  3149  0F54                     	;# 
  3150  0F55                     	;# 
  3151  0F56                     	;# 
  3152  0F57                     	;# 
  3153  0F65                     	;# 
  3154  0F68                     	;# 
  3155  0F69                     	;# 
  3156  0F6A                     	;# 
  3157  0F6B                     	;# 
  3158  0FE4                     	;# 
  3159  0FE5                     	;# 
  3160  0FE6                     	;# 
  3161  0FE7                     	;# 
  3162  0FE8                     	;# 
  3163  0FE9                     	;# 
  3164  0FEA                     	;# 
  3165  0FEB                     	;# 
  3166  0FED                     	;# 
  3167  0FEE                     	;# 
  3168  0FEF                     	;# 
  3169                           
  3170                           	psect	stringtext
  3171  02C9                     __pstringtext:	
  3172  02C9                     _dpowers:	
  3173  02C9  3401               	retlw	1
  3174  02CA  3400               	retlw	0
  3175  02CB  340A               	retlw	10
  3176  02CC  3400               	retlw	0
  3177  02CD  3464               	retlw	100
  3178  02CE  3400               	retlw	0
  3179  02CF  34E8               	retlw	232
  3180  02D0  3403               	retlw	3
  3181  02D1  3410               	retlw	16
  3182  02D2  3427               	retlw	39
  3183  02D3                     __end_of_dpowers:	
  3184  02D3                     _hexpowers:	
  3185  02D3  3401               	retlw	1
  3186  02D4  3400               	retlw	0
  3187  02D5  3410               	retlw	16
  3188  02D6  3400               	retlw	0
  3189  02D7  3400               	retlw	0
  3190  02D8  3401               	retlw	1
  3191  02D9  3400               	retlw	0
  3192  02DA  3410               	retlw	16
  3193  02DB                     __end_of_hexpowers:	
  3194  000B                     _INTCONbits	set	11
  3195  0011                     _TRISA	set	17
  3196  0013                     _TRISC	set	19
  3197  0012                     _TRISB	set	18
  3198  0018                     _LATC	set	24
  3199  0016                     _LATA	set	22
  3200  0017                     _LATB	set	23
  3201  005F                     _GIE	set	95
  3202  011A                     _TX1REG	set	282
  3203  0119                     _RC1REG	set	281
  3204  011D                     _RC1STAbits	set	285
  3205  011C                     _SP1BRGH	set	284
  3206  011B                     _SP1BRGL	set	283
  3207  011E                     _TX1STA	set	286
  3208  011D                     _RC1STA	set	285
  3209  011F                     _BAUD1CON	set	287
  3210  0196                     _SSP2BUF	set	406
  3211  019B                     _SSP2CON2bits	set	411
  3212  019A                     _SSP2CON1bits	set	410
  3213  0197                     _SSP2ADD	set	407
  3214  019C                     _SSP2CON3	set	412
  3215  019A                     _SSP2CON1	set	410
  3216  0199                     _SSP2STAT	set	409
  3217  0719                     _PIE3bits	set	1817
  3218  070F                     _PIR3bits	set	1807
  3219  0892                     _OSCTUNE	set	2194
  3220  0893                     _OSCFRQ	set	2195
  3221  0891                     _OSCEN	set	2193
  3222  088F                     _OSCCON3	set	2191
  3223  088D                     _OSCCON1	set	2189
  3224  0EC8                     _SSP2CLKPPSbits	set	3784
  3225  0EC9                     _SSP2DATPPSbits	set	3785
  3226  0E8F                     _PPSLOCKbits	set	3727
  3227  0E8F                     _PPSLOCK	set	3727
  3228  0F24                     _RC4PPS	set	3876
  3229  0F23                     _RC3PPS	set	3875
  3230  0F20                     _RC0PPS	set	3872
  3231  0F4E                     _ANSELC	set	3918
  3232  0F43                     _ANSELB	set	3907
  3233  0F38                     _ANSELA	set	3896
  3234  0F4F                     _WPUC	set	3919
  3235  0F44                     _WPUB	set	3908
  3236  0F39                     _WPUA	set	3897
  3237  0F65                     _WPUE	set	3941
  3238  02DB                     STR_1:	
  3239  02DB  344D               	retlw	77	;'M'
  3240  02DC  3469               	retlw	105	;'i'
  3241  02DD  3463               	retlw	99	;'c'
  3242  02DE  3472               	retlw	114	;'r'
  3243  02DF  346F               	retlw	111	;'o'
  3244  02E0  3463               	retlw	99	;'c'
  3245  02E1  3468               	retlw	104	;'h'
  3246  02E2  3469               	retlw	105	;'i'
  3247  02E3  3470               	retlw	112	;'p'
  3248  02E4  3420               	retlw	32	;' '
  3249  02E5  3445               	retlw	69	;'E'
  3250  02E6  344D               	retlw	77	;'M'
  3251  02E7  3443               	retlw	67	;'C'
  3252  02E8  3431               	retlw	49	;'1'
  3253  02E9  3430               	retlw	48	;'0'
  3254  02EA  3430               	retlw	48	;'0'
  3255  02EB  3431               	retlw	49	;'1'
  3256  02EC  3420               	retlw	32	;' '
  3257  02ED  3454               	retlw	84	;'T'
  3258  02EE  3465               	retlw	101	;'e'
  3259  02EF  346D               	retlw	109	;'m'
  3260  02F0  3470               	retlw	112	;'p'
  3261  02F1  3465               	retlw	101	;'e'
  3262  02F2  3472               	retlw	114	;'r'
  3263  02F3  3461               	retlw	97	;'a'
  3264  02F4  3474               	retlw	116	;'t'
  3265  02F5  3475               	retlw	117	;'u'
  3266  02F6  3472               	retlw	114	;'r'
  3267  02F7  3465               	retlw	101	;'e'
  3268  02F8  3420               	retlw	32	;' '
  3269  02F9  3453               	retlw	83	;'S'
  3270  02FA  3465               	retlw	101	;'e'
  3271  02FB  346E               	retlw	110	;'n'
  3272  02FC  3473               	retlw	115	;'s'
  3273  02FD  346F               	retlw	111	;'o'
  3274  02FE  3472               	retlw	114	;'r'
  3275  02FF  3420               	retlw	32	;' '
  3276  0300  3444               	retlw	68	;'D'
  3277  0301  3465               	retlw	101	;'e'
  3278  0302  346D               	retlw	109	;'m'
  3279  0303  346F               	retlw	111	;'o'
  3280  0304  340A               	retlw	10
  3281  0305  3400               	retlw	0
  3282  0306                     STR_11:	
  3283  0306  340A               	retlw	10
  3284  0307  3454               	retlw	84	;'T'
  3285  0308  3468               	retlw	104	;'h'
  3286  0309  3465               	retlw	101	;'e'
  3287  030A  3420               	retlw	32	;' '
  3288  030B  3474               	retlw	116	;'t'
  3289  030C  3465               	retlw	101	;'e'
  3290  030D  346D               	retlw	109	;'m'
  3291  030E  3470               	retlw	112	;'p'
  3292  030F  3465               	retlw	101	;'e'
  3293  0310  3472               	retlw	114	;'r'
  3294  0311  3461               	retlw	97	;'a'
  3295  0312  3474               	retlw	116	;'t'
  3296  0313  3475               	retlw	117	;'u'
  3297  0314  3472               	retlw	114	;'r'
  3298  0315  3465               	retlw	101	;'e'
  3299  0316  3420               	retlw	32	;' '
  3300  0317  3469               	retlw	105	;'i'
  3301  0318  3473               	retlw	115	;'s'
  3302  0319  343A               	retlw	58	;':'
  3303  031A  3420               	retlw	32	;' '
  3304  031B  3425               	retlw	37	;'%'
  3305  031C  3464               	retlw	100	;'d'
  3306  031D  342E               	retlw	46	;'.'
  3307  031E  3425               	retlw	37	;'%'
  3308  031F  3464               	retlw	100	;'d'
  3309  0320  3420               	retlw	32	;' '
  3310  0321  3443               	retlw	67	;'C'
  3311  0322  340A               	retlw	10
  3312  0323  3400               	retlw	0
  3313  0324                     STR_7:	
  3314  0324  3454               	retlw	84	;'T'
  3315  0325  3468               	retlw	104	;'h'
  3316  0326  3465               	retlw	101	;'e'
  3317  0327  3420               	retlw	32	;' '
  3318  0328  3443               	retlw	67	;'C'
  3319  0329  346F               	retlw	111	;'o'
  3320  032A  346E               	retlw	110	;'n'
  3321  032B  3476               	retlw	118	;'v'
  3322  032C  3465               	retlw	101	;'e'
  3323  032D  3472               	retlw	114	;'r'
  3324  032E  3473               	retlw	115	;'s'
  3325  032F  3469               	retlw	105	;'i'
  3326  0330  346F               	retlw	111	;'o'
  3327  0331  346E               	retlw	110	;'n'
  3328  0332  3420               	retlw	32	;' '
  3329  0333  3472               	retlw	114	;'r'
  3330  0334  3461               	retlw	97	;'a'
  3331  0335  3474               	retlw	116	;'t'
  3332  0336  3465               	retlw	101	;'e'
  3333  0337  3420               	retlw	32	;' '
  3334  0338  3469               	retlw	105	;'i'
  3335  0339  3473               	retlw	115	;'s'
  3336  033A  343A               	retlw	58	;':'
  3337  033B  3420               	retlw	32	;' '
  3338  033C  3425               	retlw	37	;'%'
  3339  033D  3478               	retlw	120	;'x'
  3340  033E  340A               	retlw	10
  3341  033F  3400               	retlw	0
  3342  0340                     STR_8:	
  3343  0340  3454               	retlw	84	;'T'
  3344  0341  3468               	retlw	104	;'h'
  3345  0342  3465               	retlw	101	;'e'
  3346  0343  3420               	retlw	32	;' '
  3347  0344  3468               	retlw	104	;'h'
  3348  0345  3469               	retlw	105	;'i'
  3349  0346  3467               	retlw	103	;'g'
  3350  0347  3468               	retlw	104	;'h'
  3351  0348  3420               	retlw	32	;' '
  3352  0349  346C               	retlw	108	;'l'
  3353  034A  3469               	retlw	105	;'i'
  3354  034B  346D               	retlw	109	;'m'
  3355  034C  3469               	retlw	105	;'i'
  3356  034D  3474               	retlw	116	;'t'
  3357  034E  3420               	retlw	32	;' '
  3358  034F  3469               	retlw	105	;'i'
  3359  0350  3473               	retlw	115	;'s'
  3360  0351  343A               	retlw	58	;':'
  3361  0352  3420               	retlw	32	;' '
  3362  0353  3425               	retlw	37	;'%'
  3363  0354  3464               	retlw	100	;'d'
  3364  0355  3420               	retlw	32	;' '
  3365  0356  3443               	retlw	67	;'C'
  3366  0357  340A               	retlw	10
  3367  0358  3400               	retlw	0
  3368  0359                     STR_9:	
  3369  0359  3454               	retlw	84	;'T'
  3370  035A  3468               	retlw	104	;'h'
  3371  035B  3465               	retlw	101	;'e'
  3372  035C  3420               	retlw	32	;' '
  3373  035D  346C               	retlw	108	;'l'
  3374  035E  346F               	retlw	111	;'o'
  3375  035F  3477               	retlw	119	;'w'
  3376  0360  3420               	retlw	32	;' '
  3377  0361  346C               	retlw	108	;'l'
  3378  0362  3469               	retlw	105	;'i'
  3379  0363  346D               	retlw	109	;'m'
  3380  0364  3469               	retlw	105	;'i'
  3381  0365  3474               	retlw	116	;'t'
  3382  0366  3420               	retlw	32	;' '
  3383  0367  3469               	retlw	105	;'i'
  3384  0368  3473               	retlw	115	;'s'
  3385  0369  343A               	retlw	58	;':'
  3386  036A  3420               	retlw	32	;' '
  3387  036B  3425               	retlw	37	;'%'
  3388  036C  3464               	retlw	100	;'d'
  3389  036D  3420               	retlw	32	;' '
  3390  036E  3443               	retlw	67	;'C'
  3391  036F  340A               	retlw	10
  3392  0370  3400               	retlw	0
  3393  0371                     STR_5:	
  3394  0371  344D               	retlw	77	;'M'
  3395  0372  3461               	retlw	97	;'a'
  3396  0373  346E               	retlw	110	;'n'
  3397  0374  3475               	retlw	117	;'u'
  3398  0375  3466               	retlw	102	;'f'
  3399  0376  3461               	retlw	97	;'a'
  3400  0377  3463               	retlw	99	;'c'
  3401  0378  3474               	retlw	116	;'t'
  3402  0379  3475               	retlw	117	;'u'
  3403  037A  3472               	retlw	114	;'r'
  3404  037B  3465               	retlw	101	;'e'
  3405  037C  3472               	retlw	114	;'r'
  3406  037D  3420               	retlw	32	;' '
  3407  037E  3449               	retlw	73	;'I'
  3408  037F  3444               	retlw	68	;'D'
  3409  0380  343A               	retlw	58	;':'
  3410  0381  3420               	retlw	32	;' '
  3411  0382  3430               	retlw	48	;'0'
  3412  0383  3478               	retlw	120	;'x'
  3413  0384  3425               	retlw	37	;'%'
  3414  0385  3458               	retlw	88	;'X'
  3415  0386  340A               	retlw	10
  3416  0387  3400               	retlw	0
  3417  0388                     STR_2:	
  3418  0388  3450               	retlw	80	;'P'
  3419  0389  3472               	retlw	114	;'r'
  3420  038A  346F               	retlw	111	;'o'
  3421  038B  3464               	retlw	100	;'d'
  3422  038C  3475               	retlw	117	;'u'
  3423  038D  3463               	retlw	99	;'c'
  3424  038E  3474               	retlw	116	;'t'
  3425  038F  3420               	retlw	32	;' '
  3426  0390  3449               	retlw	73	;'I'
  3427  0391  3444               	retlw	68	;'D'
  3428  0392  343A               	retlw	58	;':'
  3429  0393  3420               	retlw	32	;' '
  3430  0394  3445               	retlw	69	;'E'
  3431  0395  344D               	retlw	77	;'M'
  3432  0396  3443               	retlw	67	;'C'
  3433  0397  3431               	retlw	49	;'1'
  3434  0398  3430               	retlw	48	;'0'
  3435  0399  3430               	retlw	48	;'0'
  3436  039A  3431               	retlw	49	;'1'
  3437  039B  3425               	retlw	37	;'%'
  3438  039C  3473               	retlw	115	;'s'
  3439  039D  340A               	retlw	10
  3440  039E  3400               	retlw	0
  3441  039F                     STR_14:	
  3442  039F  3430               	retlw	48	;'0'
  3443  03A0  3431               	retlw	49	;'1'
  3444  03A1  3432               	retlw	50	;'2'
  3445  03A2  3433               	retlw	51	;'3'
  3446  03A3  3434               	retlw	52	;'4'
  3447  03A4  3435               	retlw	53	;'5'
  3448  03A5  3436               	retlw	54	;'6'
  3449  03A6  3437               	retlw	55	;'7'
  3450  03A7  3438               	retlw	56	;'8'
  3451  03A8  3439               	retlw	57	;'9'
  3452  03A9  3441               	retlw	65	;'A'
  3453  03AA  3442               	retlw	66	;'B'
  3454  03AB  3443               	retlw	67	;'C'
  3455  03AC  3444               	retlw	68	;'D'
  3456  03AD  3445               	retlw	69	;'E'
  3457  03AE  3446               	retlw	70	;'F'
  3458  03AF  3400               	retlw	0
  3459  03B0                     STR_15:	
  3460  03B0  3430               	retlw	48	;'0'
  3461  03B1  3431               	retlw	49	;'1'
  3462  03B2  3432               	retlw	50	;'2'
  3463  03B3  3433               	retlw	51	;'3'
  3464  03B4  3434               	retlw	52	;'4'
  3465  03B5  3435               	retlw	53	;'5'
  3466  03B6  3436               	retlw	54	;'6'
  3467  03B7  3437               	retlw	55	;'7'
  3468  03B8  3438               	retlw	56	;'8'
  3469  03B9  3439               	retlw	57	;'9'
  3470  03BA  3461               	retlw	97	;'a'
  3471  03BB  3462               	retlw	98	;'b'
  3472  03BC  3463               	retlw	99	;'c'
  3473  03BD  3464               	retlw	100	;'d'
  3474  03BE  3465               	retlw	101	;'e'
  3475  03BF  3466               	retlw	102	;'f'
  3476  03C0  3400               	retlw	0
  3477  03C1                     STR_6:	
  3478  03C1  3452               	retlw	82	;'R'
  3479  03C2  3465               	retlw	101	;'e'
  3480  03C3  3476               	retlw	118	;'v'
  3481  03C4  3469               	retlw	105	;'i'
  3482  03C5  3473               	retlw	115	;'s'
  3483  03C6  3469               	retlw	105	;'i'
  3484  03C7  346F               	retlw	111	;'o'
  3485  03C8  346E               	retlw	110	;'n'
  3486  03C9  3420               	retlw	32	;' '
  3487  03CA  343A               	retlw	58	;':'
  3488  03CB  3420               	retlw	32	;' '
  3489  03CC  3425               	retlw	37	;'%'
  3490  03CD  3464               	retlw	100	;'d'
  3491  03CE  340A               	retlw	10
  3492  03CF  3400               	retlw	0
  3493  03D0                     STR_13:	
  3494  03D0  3428               	retlw	40	;'('
  3495  03D1  346E               	retlw	110	;'n'
  3496  03D2  3475               	retlw	117	;'u'
  3497  03D3  346C               	retlw	108	;'l'
  3498  03D4  346C               	retlw	108	;'l'
  3499  03D5  3429               	retlw	41	;')'
  3500  03D6  3400               	retlw	0
  3501  03D7                     STR_3:	
  3502  03D7  342D               	retlw	45	;'-'
  3503  03D8  3431               	retlw	49	;'1'
  3504  03D9  3400               	retlw	0
  3505  03DA                     STR_12:	
  3506  03DA  340C               	retlw	12
  3507  03DB  3400               	retlw	0
  3508  0358                     
  3509                           ; #config settings
  3510  0000                     
  3511                           	psect	cinit
  3512  001D                     start_initialization:	
  3513  001D                     __initialization:	
  3514                           
  3515                           ; Clear objects allocated to COMMON
  3516  001D  01F7               	clrf	__pbssCOMMON& (0+127)
  3517  001E  01F8               	clrf	(__pbssCOMMON+1)& (0+127)
  3518  001F  01F9               	clrf	(__pbssCOMMON+2)& (0+127)
  3519  0020  01FA               	clrf	(__pbssCOMMON+3)& (0+127)
  3520  0021  01FB               	clrf	(__pbssCOMMON+4)& (0+127)
  3521  0022  01FC               	clrf	(__pbssCOMMON+5)& (0+127)
  3522                           
  3523                           ; Clear objects allocated to BANK0
  3524  0023  304A               	movlw	low __pbssBANK0
  3525  0024  0084               	movwf	4
  3526  0025  3000               	movlw	high __pbssBANK0
  3527  0026  0085               	movwf	5
  3528  0027  301B               	movlw	27
  3529  0028  3187  2733         	fcall	clear_ram0
  3530  002A                     end_of_initialization:	
  3531                           ;End of C runtime variable initialization code
  3532                           
  3533  002A                     __end_of__initialization:	
  3534  002A  107E               	bcf	int$flags,0	;clear compiler interrupt flag (level 1)
  3535  002B  0020               	movlb	0
  3536  002C  3186  2E2F         	ljmp	_main	;jump to C main() function
  3537                           
  3538                           	psect	bssCOMMON
  3539  0077                     __pbssCOMMON:	
  3540  0077                     I2C2_ISR@i2c_10bit_address_restart:	
  3541  0077                     	ds	1
  3542  0078                     I2C2_ISR@i2c_bytes_left:	
  3543  0078                     	ds	1
  3544  0079                     I2C2_ISR@pi2c_buf_ptr:	
  3545  0079                     	ds	1
  3546  007A                     _p_i2c2_current:	
  3547  007A                     	ds	1
  3548  007B                     _p_i2c2_trb_current:	
  3549  007B                     	ds	1
  3550  007C                     _i2c2_trb_count:	
  3551  007C                     	ds	1
  3552                           
  3553                           	psect	bssBANK0
  3554  004A                     __pbssBANK0:	
  3555  004A                     _i2c2_object:	
  3556  004A                     	ds	5
  3557  004F                     _i2c2_state:	
  3558  004F                     	ds	1
  3559  0050                     EMC1001_Read@trb:	
  3560  0050                     	ds	8
  3561  0058                     I2C2_MasterRead@trBlock:	
  3562  0058                     	ds	4
  3563  005C                     I2C2_MasterWrite@trBlock:	
  3564  005C                     	ds	4
  3565  0060                     _i2c2_tr_queue:	
  3566  0060                     	ds	3
  3567  0063                     I2C2_ISR@i2c_address:	
  3568  0063                     	ds	2
  3569                           
  3570                           	psect	clrtext
  3571  0733                     clear_ram0:	
  3572                           ;	Called with FSR0 containing the base address, and
  3573                           ;	WREG with the size to clear
  3574                           
  3575  0733  0064               	clrwdt	;clear the watchdog before getting into this loop
  3576  0734                     clrloop0:	
  3577  0734  0180               	clrf	0	;clear RAM location pointed to by FSR
  3578  0735  3101               	addfsr 0,1
  3579  0736  0B89               	decfsz	9,f	;Have we reached the end of clearing yet?
  3580  0737  2F34               	goto	clrloop0	;have we reached the end yet?
  3581  0738  3400               	retlw	0	;all done for this memory range, return
  3582                           
  3583                           	psect	cstackCOMMON
  3584  0070                     __pcstackCOMMON:	
  3585  0070                     ?_I2C2_Stop:	
  3586  0070                     ??_I2C2_Stop:	
  3587                           ; 1 bytes @ 0x0
  3588                           
  3589  0070                     ?_I2C2_FunctionComplete:	
  3590                           ; 1 bytes @ 0x0
  3591                           
  3592  0070                     ??_I2C2_FunctionComplete:	
  3593                           ; 1 bytes @ 0x0
  3594                           
  3595  0070                     ?_PIN_MANAGER_Initialize:	
  3596                           ; 1 bytes @ 0x0
  3597                           
  3598  0070                     ?_OSCILLATOR_Initialize:	
  3599                           ; 1 bytes @ 0x0
  3600                           
  3601  0070                     ?_EUSART_Initialize:	
  3602                           ; 1 bytes @ 0x0
  3603                           
  3604  0070                     ?_EUSART_Write:	
  3605                           ; 1 bytes @ 0x0
  3606                           
  3607  0070                     ?_putch:	
  3608                           ; 1 bytes @ 0x0
  3609                           
  3610  0070                     ?_I2C2_Initialize:	
  3611                           ; 1 bytes @ 0x0
  3612                           
  3613  0070                     ?_I2C2_ISR:	
  3614                           ; 1 bytes @ 0x0
  3615                           
  3616  0070                     ?_I2C2_BusCollisionISR:	
  3617                           ; 1 bytes @ 0x0
  3618                           
  3619  0070                     ??_I2C2_BusCollisionISR:	
  3620                           ; 1 bytes @ 0x0
  3621                           
  3622  0070                     ?_INTERRUPT_InterruptManager:	
  3623                           ; 1 bytes @ 0x0
  3624                           
  3625  0070                     ?_SYSTEM_Initialize:	
  3626                           ; 1 bytes @ 0x0
  3627                           
  3628  0070                     ?_EMC1001_PrintInfo:	
  3629                           ; 1 bytes @ 0x0
  3630                           
  3631  0070                     ?_EMC1001_PrintTemp:	
  3632                           ; 1 bytes @ 0x0
  3633                           
  3634  0070                     ?_main:	
  3635                           ; 1 bytes @ 0x0
  3636                           
  3637                           
  3638                           ; 1 bytes @ 0x0
  3639  0070                     	ds	1
  3640  0071                     I2C2_Stop@completion_code:	
  3641                           
  3642                           ; 1 bytes @ 0x1
  3643  0071                     	ds	1
  3644  0072                     ??_I2C2_ISR:	
  3645                           
  3646                           ; 1 bytes @ 0x2
  3647  0072                     	ds	4
  3648  0076                     ??_INTERRUPT_InterruptManager:	
  3649                           
  3650                           ; 1 bytes @ 0x6
  3651  0076                     	ds	1
  3652                           
  3653                           	psect	cstackBANK0
  3654  0020                     __pcstackBANK0:	
  3655  0020                     ?_I2C2_MasterWriteTRBBuild:	
  3656  0020                     ?_I2C2_MasterTRBInsert:	
  3657                           ; 1 bytes @ 0x0
  3658                           
  3659  0020                     ?_I2C2_MasterReadTRBBuild:	
  3660                           ; 1 bytes @ 0x0
  3661                           
  3662  0020                     ??_PIN_MANAGER_Initialize:	
  3663                           ; 1 bytes @ 0x0
  3664                           
  3665  0020                     ??_OSCILLATOR_Initialize:	
  3666                           ; 1 bytes @ 0x0
  3667                           
  3668  0020                     ??_EUSART_Initialize:	
  3669                           ; 1 bytes @ 0x0
  3670                           
  3671  0020                     ??_EUSART_Write:	
  3672                           ; 1 bytes @ 0x0
  3673                           
  3674  0020                     ??_I2C2_Initialize:	
  3675                           ; 1 bytes @ 0x0
  3676                           
  3677  0020                     ?___wmul:	
  3678                           ; 1 bytes @ 0x0
  3679                           
  3680  0020                     ?___lwdiv:	
  3681                           ; 2 bytes @ 0x0
  3682                           
  3683  0020                     EUSART_Write@txData:	
  3684                           ; 2 bytes @ 0x0
  3685                           
  3686  0020                     I2C2_MasterTRBInsert@ptrb_list:	
  3687                           ; 1 bytes @ 0x0
  3688                           
  3689  0020                     I2C2_MasterReadTRBBuild@pdata:	
  3690                           ; 1 bytes @ 0x0
  3691                           
  3692  0020                     I2C2_MasterWriteTRBBuild@pdata:	
  3693                           ; 1 bytes @ 0x0
  3694                           
  3695  0020                     PIN_MANAGER_Initialize@state:	
  3696                           ; 1 bytes @ 0x0
  3697                           
  3698  0020                     ___wmul@multiplier:	
  3699                           ; 1 bytes @ 0x0
  3700                           
  3701  0020                     ___lwdiv@divisor:	
  3702                           ; 2 bytes @ 0x0
  3703                           
  3704                           
  3705                           ; 2 bytes @ 0x0
  3706  0020                     	ds	1
  3707  0021                     ??_putch:	
  3708  0021                     ??_SYSTEM_Initialize:	
  3709                           ; 1 bytes @ 0x1
  3710                           
  3711  0021                     putch@txData:	
  3712                           ; 1 bytes @ 0x1
  3713                           
  3714  0021                     I2C2_MasterTRBInsert@pflag:	
  3715                           ; 1 bytes @ 0x1
  3716                           
  3717  0021                     I2C2_MasterReadTRBBuild@length:	
  3718                           ; 1 bytes @ 0x1
  3719                           
  3720  0021                     I2C2_MasterWriteTRBBuild@length:	
  3721                           ; 1 bytes @ 0x1
  3722                           
  3723                           
  3724                           ; 1 bytes @ 0x1
  3725  0021                     	ds	1
  3726  0022                     ??_I2C2_MasterTRBInsert:	
  3727  0022                     ?_cputs:	
  3728                           ; 1 bytes @ 0x2
  3729                           
  3730  0022                     I2C2_MasterReadTRBBuild@address:	
  3731                           ; 1 bytes @ 0x2
  3732                           
  3733  0022                     I2C2_MasterWriteTRBBuild@address:	
  3734                           ; 2 bytes @ 0x2
  3735                           
  3736  0022                     ___wmul@multiplicand:	
  3737                           ; 2 bytes @ 0x2
  3738                           
  3739  0022                     ___lwdiv@dividend:	
  3740                           ; 2 bytes @ 0x2
  3741                           
  3742  0022                     cputs@s:	
  3743                           ; 2 bytes @ 0x2
  3744                           
  3745                           
  3746                           ; 2 bytes @ 0x2
  3747  0022                     	ds	1
  3748  0023                     I2C2_MasterTRBInsert@count:	
  3749                           
  3750                           ; 1 bytes @ 0x3
  3751  0023                     	ds	1
  3752  0024                     ??_I2C2_MasterWriteTRBBuild:	
  3753  0024                     ??_I2C2_MasterReadTRBBuild:	
  3754                           ; 1 bytes @ 0x4
  3755                           
  3756  0024                     ??_cputs:	
  3757                           ; 1 bytes @ 0x4
  3758                           
  3759  0024                     ??___wmul:	
  3760                           ; 1 bytes @ 0x4
  3761                           
  3762  0024                     ??___lwdiv:	
  3763                           ; 1 bytes @ 0x4
  3764                           
  3765  0024                     ___wmul@product:	
  3766                           ; 1 bytes @ 0x4
  3767                           
  3768                           
  3769                           ; 2 bytes @ 0x4
  3770  0024                     	ds	1
  3771  0025                     ?_puts:	
  3772  0025                     ___lwdiv@quotient:	
  3773                           ; 2 bytes @ 0x5
  3774                           
  3775  0025                     puts@s:	
  3776                           ; 2 bytes @ 0x5
  3777                           
  3778                           
  3779                           ; 2 bytes @ 0x5
  3780  0025                     	ds	1
  3781  0026                     I2C2_MasterReadTRBBuild@ptrb:	
  3782  0026                     I2C2_MasterWriteTRBBuild@ptrb:	
  3783                           ; 1 bytes @ 0x6
  3784                           
  3785                           
  3786                           ; 1 bytes @ 0x6
  3787  0026                     	ds	1
  3788  0027                     ??_puts:	
  3789  0027                     ?_EMC1001_Read:	
  3790                           ; 1 bytes @ 0x7
  3791                           
  3792  0027                     EMC1001_Read@pData:	
  3793                           ; 1 bytes @ 0x7
  3794                           
  3795  0027                     ___lwdiv@counter:	
  3796                           ; 1 bytes @ 0x7
  3797                           
  3798                           
  3799                           ; 1 bytes @ 0x7
  3800  0027                     	ds	1
  3801  0028                     ??_EMC1001_Read:	
  3802  0028                     ?___lwmod:	
  3803                           ; 1 bytes @ 0x8
  3804                           
  3805  0028                     ___lwmod@divisor:	
  3806                           ; 2 bytes @ 0x8
  3807                           
  3808                           
  3809                           ; 2 bytes @ 0x8
  3810  0028                     	ds	2
  3811  002A                     EMC1001_Read@reg:	
  3812  002A                     ___lwmod@dividend:	
  3813                           ; 1 bytes @ 0xA
  3814                           
  3815                           
  3816                           ; 2 bytes @ 0xA
  3817  002A                     	ds	1
  3818  002B                     EMC1001_Read@status:	
  3819                           
  3820                           ; 1 bytes @ 0xB
  3821  002B                     	ds	1
  3822  002C                     ??___lwmod:	
  3823                           
  3824                           ; 1 bytes @ 0xC
  3825  002C                     	ds	1
  3826  002D                     ___lwmod@counter:	
  3827                           
  3828                           ; 1 bytes @ 0xD
  3829  002D                     	ds	1
  3830  002E                     ?_printf:	
  3831  002E                     printf@f:	
  3832                           ; 2 bytes @ 0xE
  3833                           
  3834                           
  3835                           ; 2 bytes @ 0xE
  3836  002E                     	ds	6
  3837  0034                     ??_printf:	
  3838                           
  3839                           ; 1 bytes @ 0x14
  3840  0034                     	ds	4
  3841  0038                     printf@idx:	
  3842                           
  3843                           ; 1 bytes @ 0x18
  3844  0038                     	ds	1
  3845  0039                     _printf$650:	
  3846                           
  3847                           ; 2 bytes @ 0x19
  3848  0039                     	ds	2
  3849  003B                     printf@prec:	
  3850                           
  3851                           ; 1 bytes @ 0x1B
  3852  003B                     	ds	1
  3853  003C                     printf@cp:	
  3854                           
  3855                           ; 2 bytes @ 0x1C
  3856  003C                     	ds	2
  3857  003E                     printf@ap:	
  3858                           
  3859                           ; 1 bytes @ 0x1E
  3860  003E                     	ds	1
  3861  003F                     printf@flag:	
  3862                           
  3863                           ; 1 bytes @ 0x1F
  3864  003F                     	ds	1
  3865  0040                     printf@val:	
  3866                           
  3867                           ; 2 bytes @ 0x20
  3868  0040                     	ds	2
  3869  0042                     printf@c:	
  3870                           
  3871                           ; 1 bytes @ 0x22
  3872  0042                     	ds	1
  3873  0043                     ??_EMC1001_PrintInfo:	
  3874  0043                     ??_EMC1001_PrintTemp:	
  3875                           ; 1 bytes @ 0x23
  3876                           
  3877                           
  3878                           ; 1 bytes @ 0x23
  3879  0043                     	ds	2
  3880  0045                     EMC1001_PrintTemp@temp:	
  3881  0045                     _EMC1001_PrintInfo$595:	
  3882                           ; 1 bytes @ 0x25
  3883                           
  3884                           
  3885                           ; 2 bytes @ 0x25
  3886  0045                     	ds	1
  3887  0046                     EMC1001_PrintTemp@templo:	
  3888                           
  3889                           ; 1 bytes @ 0x26
  3890  0046                     	ds	1
  3891  0047                     EMC1001_PrintInfo@data:	
  3892                           
  3893                           ; 1 bytes @ 0x27
  3894  0047                     	ds	1
  3895  0048                     ??_main:	
  3896                           
  3897                           ; 1 bytes @ 0x28
  3898  0048                     	ds	2
  3899                           
  3900                           	psect	maintext
  3901  062F                     __pmaintext:	
  3902 ;;
  3903 ;;Main: autosize = 0, tempsize = 2, incstack = 0, save=0
  3904 ;;
  3905 ;; *************** function _main *****************
  3906 ;; Defined at:
  3907 ;;		line 71 in file "main.c"
  3908 ;; Parameters:    Size  Location     Type
  3909 ;;		None
  3910 ;; Auto vars:     Size  Location     Type
  3911 ;;		None
  3912 ;; Return value:  Size  Location     Type
  3913 ;;                  1    wreg      void 
  3914 ;; Registers used:
  3915 ;;		wreg, fsr0l, fsr0h, fsr1l, fsr1h, status,2, status,0, pclath, cstack
  3916 ;; Tracked objects:
  3917 ;;		On entry : B1F/0
  3918 ;;		On exit  : 0/0
  3919 ;;		Unchanged: 0/0
  3920 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
  3921 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  3922 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  3923 ;;      Temps:          0       2       0       0       0       0       0       0       0       0       0       0       
      +0       0
  3924 ;;      Totals:         0       2       0       0       0       0       0       0       0       0       0       0       
      +0       0
  3925 ;;Total ram usage:        2 bytes
  3926 ;; Hardware stack levels required when called:    8
  3927 ;; This function calls:
  3928 ;;		_EMC1001_PrintInfo
  3929 ;;		_EMC1001_PrintTemp
  3930 ;;		_SYSTEM_Initialize
  3931 ;;		_printf
  3932 ;; This function is called by:
  3933 ;;		Startup code after reset
  3934 ;; This function uses a non-reentrant model
  3935 ;;
  3936                           
  3937                           
  3938                           ;psect for function _main
  3939  062F                     _main:	
  3940                           
  3941                           ;main.c: 74: SYSTEM_Initialize();
  3942                           
  3943                           ;incstack = 0
  3944                           ; Regs used in _main: [wreg-fsr1h+status,2+status,0+pclath+cstack]
  3945  062F  3186  26FD  3186   	fcall	_SYSTEM_Initialize
  3946                           
  3947                           ;main.c: 75: (INTCONbits.GIE = 1);
  3948  0632  178B               	bsf	11,7	;volatile
  3949                           
  3950                           ;main.c: 76: (INTCONbits.PEIE = 1);
  3951  0633  170B               	bsf	11,6	;volatile
  3952  0634                     l2171:	
  3953                           ;main.c: 78: while (1)
  3954                           
  3955                           
  3956                           ;main.c: 79: {
  3957                           ;main.c: 80: printf("\x0C");
  3958  0634  30DA               	movlw	low (STR_12| (0+32768))
  3959  0635  0020               	movlb	0	; select bank0
  3960  0636  00AE               	movwf	printf@f
  3961  0637  3083               	movlw	high (STR_12| (0+32768))
  3962  0638  00AF               	movwf	printf@f+1
  3963  0639  3180  202E  3186   	fcall	_printf
  3964                           
  3965                           ;main.c: 81: EMC1001_PrintInfo();
  3966  063C  3183  23DC  3186   	fcall	_EMC1001_PrintInfo
  3967                           
  3968                           ;main.c: 82: EMC1001_PrintTemp();
  3969  063F  3184  2496  3186   	fcall	_EMC1001_PrintTemp
  3970                           
  3971                           ;main.c: 83: _delay((unsigned long)((1000)*(1000000/4000.0)));
  3972  0642  3002               	movlw	2
  3973  0643  0020               	movlb	0	; select bank0
  3974  0644  00C9               	movwf	??_main+1
  3975  0645  3045               	movlw	69
  3976  0646  00C8               	movwf	??_main
  3977  0647  30A9               	movlw	169
  3978  0648                     u1927:	
  3979  0648  0B89               	decfsz	9,f
  3980  0649  2E48               	goto	u1927
  3981  064A  0BC8               	decfsz	??_main,f
  3982  064B  2E48               	goto	u1927
  3983  064C  0BC9               	decfsz	??_main+1,f
  3984  064D  2E48               	goto	u1927
  3985  064E  3200               	nop2
  3986  064F  2E34               	goto	l2171
  3987  0650                     __end_of_main:	
  3988                           
  3989                           	psect	text1
  3990  06FD                     __ptext1:	
  3991 ;; *************** function _SYSTEM_Initialize *****************
  3992 ;; Defined at:
  3993 ;;		line 82 in file "mcc_generated_files/mcc.c"
  3994 ;; Parameters:    Size  Location     Type
  3995 ;;		None
  3996 ;; Auto vars:     Size  Location     Type
  3997 ;;		None
  3998 ;; Return value:  Size  Location     Type
  3999 ;;                  1    wreg      void 
  4000 ;; Registers used:
  4001 ;;		wreg, status,2, status,0, pclath, cstack
  4002 ;; Tracked objects:
  4003 ;;		On entry : 0/0
  4004 ;;		On exit  : 0/0
  4005 ;;		Unchanged: 0/0
  4006 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
  4007 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  4008 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  4009 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  4010 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  4011 ;;Total ram usage:        0 bytes
  4012 ;; Hardware stack levels used:    1
  4013 ;; Hardware stack levels required when called:    4
  4014 ;; This function calls:
  4015 ;;		_EUSART_Initialize
  4016 ;;		_I2C2_Initialize
  4017 ;;		_OSCILLATOR_Initialize
  4018 ;;		_PIN_MANAGER_Initialize
  4019 ;; This function is called by:
  4020 ;;		_main
  4021 ;; This function uses a non-reentrant model
  4022 ;;
  4023                           
  4024                           
  4025                           ;psect for function _SYSTEM_Initialize
  4026  06FD                     _SYSTEM_Initialize:	
  4027                           
  4028                           ;mcc.c: 85: PIN_MANAGER_Initialize();
  4029                           
  4030                           ;incstack = 0
  4031                           ; Regs used in _SYSTEM_Initialize: [wreg+status,2+status,0+pclath+cstack]
  4032  06FD  3184  24DD  3186   	fcall	_PIN_MANAGER_Initialize
  4033                           
  4034                           ;mcc.c: 86: OSCILLATOR_Initialize();
  4035  0700  3187  272A  3186   	fcall	_OSCILLATOR_Initialize
  4036                           
  4037                           ;mcc.c: 87: I2C2_Initialize();
  4038  0703  3186  268C  3186   	fcall	_I2C2_Initialize
  4039                           
  4040                           ;mcc.c: 88: EUSART_Initialize();
  4041  0706  3187  2715         	fcall	_EUSART_Initialize
  4042  0708  0008               	return
  4043  0709                     __end_of_SYSTEM_Initialize:	
  4044                           
  4045                           	psect	text2
  4046  04DD                     __ptext2:	
  4047 ;; *************** function _PIN_MANAGER_Initialize *****************
  4048 ;; Defined at:
  4049 ;;		line 50 in file "mcc_generated_files/pin_manager.c"
  4050 ;; Parameters:    Size  Location     Type
  4051 ;;		None
  4052 ;; Auto vars:     Size  Location     Type
  4053 ;;  state           1    0[BANK0 ] unsigned char 
  4054 ;; Return value:  Size  Location     Type
  4055 ;;                  1    wreg      void 
  4056 ;; Registers used:
  4057 ;;		wreg, status,2, status,0
  4058 ;; Tracked objects:
  4059 ;;		On entry : 0/0
  4060 ;;		On exit  : 0/0
  4061 ;;		Unchanged: 0/0
  4062 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
  4063 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  4064 ;;      Locals:         0       1       0       0       0       0       0       0       0       0       0       0       
      +0       0
  4065 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  4066 ;;      Totals:         0       1       0       0       0       0       0       0       0       0       0       0       
      +0       0
  4067 ;;Total ram usage:        1 bytes
  4068 ;; Hardware stack levels used:    1
  4069 ;; Hardware stack levels required when called:    3
  4070 ;; This function calls:
  4071 ;;		Nothing
  4072 ;; This function is called by:
  4073 ;;		_SYSTEM_Initialize
  4074 ;; This function uses a non-reentrant model
  4075 ;;
  4076                           
  4077                           
  4078                           ;psect for function _PIN_MANAGER_Initialize
  4079  04DD                     _PIN_MANAGER_Initialize:	
  4080                           
  4081                           ;pin_manager.c: 52: LATB = 0x0;
  4082                           
  4083                           ;incstack = 0
  4084                           ; Regs used in _PIN_MANAGER_Initialize: [wreg+status,2+status,0]
  4085  04DD  0020               	movlb	0	; select bank0
  4086  04DE  0197               	clrf	23	;volatile
  4087                           
  4088                           ;pin_manager.c: 53: WPUE = 0x8;
  4089  04DF  3008               	movlw	8
  4090  04E0  003E               	movlb	30	; select bank30
  4091  04E1  00E5               	movwf	101	;volatile
  4092                           
  4093                           ;pin_manager.c: 54: LATA = 0x0;
  4094  04E2  0020               	movlb	0	; select bank0
  4095  04E3  0196               	clrf	22	;volatile
  4096                           
  4097                           ;pin_manager.c: 55: LATC = 0x1;
  4098  04E4  3001               	movlw	1
  4099  04E5  0098               	movwf	24	;volatile
  4100                           
  4101                           ;pin_manager.c: 56: WPUA = 0xF0;
  4102  04E6  30F0               	movlw	240
  4103  04E7  003E               	movlb	30	; select bank30
  4104  04E8  00B9               	movwf	57	;volatile
  4105                           
  4106                           ;pin_manager.c: 57: WPUB = 0xFF;
  4107  04E9  30FF               	movlw	255
  4108  04EA  00C4               	movwf	68	;volatile
  4109                           
  4110                           ;pin_manager.c: 58: WPUC = 0xE7;
  4111  04EB  30E7               	movlw	231
  4112  04EC  00CF               	movwf	79	;volatile
  4113                           
  4114                           ;pin_manager.c: 59: ANSELA = 0xFF;
  4115  04ED  30FF               	movlw	255
  4116  04EE  00B8               	movwf	56	;volatile
  4117                           
  4118                           ;pin_manager.c: 60: ANSELB = 0xFF;
  4119  04EF  30FF               	movlw	255
  4120  04F0  00C3               	movwf	67	;volatile
  4121                           
  4122                           ;pin_manager.c: 61: ANSELC = 0xE7;
  4123  04F1  30E7               	movlw	231
  4124  04F2  00CE               	movwf	78	;volatile
  4125                           
  4126                           ;pin_manager.c: 62: TRISB = 0xFF;
  4127  04F3  30FF               	movlw	255
  4128  04F4  0020               	movlb	0	; select bank0
  4129  04F5  0092               	movwf	18	;volatile
  4130                           
  4131                           ;pin_manager.c: 63: TRISC = 0xFE;
  4132  04F6  30FE               	movlw	254
  4133  04F7  0093               	movwf	19	;volatile
  4134                           
  4135                           ;pin_manager.c: 64: TRISA = 0xF0;
  4136  04F8  30F0               	movlw	240
  4137  04F9  0091               	movwf	17	;volatile
  4138                           
  4139                           ;pin_manager.c: 69: bool state = GIE;
  4140  04FA  3000               	movlw	0
  4141  04FB  1B8B               	btfsc	11,7	;volatile
  4142  04FC  3001               	movlw	1
  4143  04FD  00A0               	movwf	PIN_MANAGER_Initialize@state
  4144                           
  4145                           ;pin_manager.c: 70: GIE = 0;
  4146  04FE  138B               	bcf	11,7	;volatile
  4147                           
  4148                           ;pin_manager.c: 71: PPSLOCK = 0x55;
  4149  04FF  3055               	movlw	85
  4150  0500  003D               	movlb	29	; select bank29
  4151  0501  008F               	movwf	15	;volatile
  4152                           
  4153                           ;pin_manager.c: 72: PPSLOCK = 0xAA;
  4154  0502  30AA               	movlw	170
  4155  0503  008F               	movwf	15	;volatile
  4156                           
  4157                           ;pin_manager.c: 73: PPSLOCKbits.PPSLOCKED = 0x00;
  4158  0504  100F               	bcf	15,0	;volatile
  4159                           
  4160                           ;pin_manager.c: 75: RC0PPS = 0x10;
  4161  0505  3010               	movlw	16
  4162  0506  003E               	movlb	30	; select bank30
  4163  0507  00A0               	movwf	32	;volatile
  4164                           
  4165                           ;pin_manager.c: 76: RC3PPS = 0x17;
  4166  0508  3017               	movlw	23
  4167  0509  00A3               	movwf	35	;volatile
  4168                           
  4169                           ;pin_manager.c: 77: SSP2DATPPSbits.SSP2DATPPS = 0x13;
  4170  050A  003D               	movlb	29	; select bank29
  4171  050B  0849               	movf	73,w	;volatile
  4172  050C  39E0               	andlw	-32
  4173  050D  3813               	iorlw	19
  4174  050E  00C9               	movwf	73	;volatile
  4175                           
  4176                           ;pin_manager.c: 78: SSP2CLKPPSbits.SSP2CLKPPS = 0x14;
  4177  050F  0848               	movf	72,w	;volatile
  4178  0510  39E0               	andlw	-32
  4179  0511  3814               	iorlw	20
  4180  0512  00C8               	movwf	72	;volatile
  4181                           
  4182                           ;pin_manager.c: 79: RC4PPS = 0x16;
  4183  0513  3016               	movlw	22
  4184  0514  003E               	movlb	30	; select bank30
  4185  0515  00A4               	movwf	36	;volatile
  4186                           
  4187                           ;pin_manager.c: 81: PPSLOCK = 0x55;
  4188  0516  3055               	movlw	85
  4189  0517  003D               	movlb	29	; select bank29
  4190  0518  008F               	movwf	15	;volatile
  4191                           
  4192                           ;pin_manager.c: 82: PPSLOCK = 0xAA;
  4193  0519  30AA               	movlw	170
  4194  051A  008F               	movwf	15	;volatile
  4195                           
  4196                           ;pin_manager.c: 83: PPSLOCKbits.PPSLOCKED = 0x01;
  4197  051B  140F               	bsf	15,0	;volatile
  4198                           
  4199                           ;pin_manager.c: 85: GIE = state;
  4200  051C  0020               	movlb	0	; select bank0
  4201  051D  1C20               	btfss	PIN_MANAGER_Initialize@state,0
  4202  051E  2D21               	goto	u1610
  4203  051F  178B               	bsf	11,7	;volatile
  4204  0520  0008               	return
  4205  0521                     u1610:	
  4206  0521  138B               	bcf	11,7	;volatile
  4207  0522  0008               	return
  4208  0523                     __end_of_PIN_MANAGER_Initialize:	
  4209                           
  4210                           	psect	text3
  4211  072A                     __ptext3:	
  4212 ;; *************** function _OSCILLATOR_Initialize *****************
  4213 ;; Defined at:
  4214 ;;		line 91 in file "mcc_generated_files/mcc.c"
  4215 ;; Parameters:    Size  Location     Type
  4216 ;;		None
  4217 ;; Auto vars:     Size  Location     Type
  4218 ;;		None
  4219 ;; Return value:  Size  Location     Type
  4220 ;;                  1    wreg      void 
  4221 ;; Registers used:
  4222 ;;		wreg, status,2
  4223 ;; Tracked objects:
  4224 ;;		On entry : 0/0
  4225 ;;		On exit  : 0/0
  4226 ;;		Unchanged: 0/0
  4227 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
  4228 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  4229 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  4230 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  4231 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  4232 ;;Total ram usage:        0 bytes
  4233 ;; Hardware stack levels used:    1
  4234 ;; Hardware stack levels required when called:    3
  4235 ;; This function calls:
  4236 ;;		Nothing
  4237 ;; This function is called by:
  4238 ;;		_SYSTEM_Initialize
  4239 ;; This function uses a non-reentrant model
  4240 ;;
  4241                           
  4242                           
  4243                           ;psect for function _OSCILLATOR_Initialize
  4244  072A                     _OSCILLATOR_Initialize:	
  4245                           
  4246                           ;mcc.c: 94: OSCCON1 = 0x62;
  4247                           
  4248                           ;incstack = 0
  4249                           ; Regs used in _OSCILLATOR_Initialize: [wreg+status,2]
  4250  072A  3062               	movlw	98
  4251  072B  0031               	movlb	17	; select bank17
  4252  072C  008D               	movwf	13	;volatile
  4253                           
  4254                           ;mcc.c: 96: OSCCON3 = 0x00;
  4255  072D  018F               	clrf	15	;volatile
  4256                           
  4257                           ;mcc.c: 98: OSCEN = 0x00;
  4258  072E  0191               	clrf	17	;volatile
  4259                           
  4260                           ;mcc.c: 100: OSCFRQ = 0x02;
  4261  072F  3002               	movlw	2
  4262  0730  0093               	movwf	19	;volatile
  4263                           
  4264                           ;mcc.c: 102: OSCTUNE = 0x00;
  4265  0731  0192               	clrf	18	;volatile
  4266  0732  0008               	return
  4267  0733                     __end_of_OSCILLATOR_Initialize:	
  4268                           
  4269                           	psect	text4
  4270  068C                     __ptext4:	
  4271 ;; *************** function _I2C2_Initialize *****************
  4272 ;; Defined at:
  4273 ;;		line 198 in file "mcc_generated_files/i2c2.c"
  4274 ;; Parameters:    Size  Location     Type
  4275 ;;		None
  4276 ;; Auto vars:     Size  Location     Type
  4277 ;;		None
  4278 ;; Return value:  Size  Location     Type
  4279 ;;                  1    wreg      void 
  4280 ;; Registers used:
  4281 ;;		wreg, status,2
  4282 ;; Tracked objects:
  4283 ;;		On entry : 0/0
  4284 ;;		On exit  : 0/0
  4285 ;;		Unchanged: 0/0
  4286 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
  4287 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  4288 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  4289 ;;      Temps:          0       1       0       0       0       0       0       0       0       0       0       0       
      +0       0
  4290 ;;      Totals:         0       1       0       0       0       0       0       0       0       0       0       0       
      +0       0
  4291 ;;Total ram usage:        1 bytes
  4292 ;; Hardware stack levels used:    1
  4293 ;; Hardware stack levels required when called:    3
  4294 ;; This function calls:
  4295 ;;		Nothing
  4296 ;; This function is called by:
  4297 ;;		_SYSTEM_Initialize
  4298 ;; This function uses a non-reentrant model
  4299 ;;
  4300                           
  4301                           
  4302                           ;psect for function _I2C2_Initialize
  4303  068C                     _I2C2_Initialize:	
  4304                           
  4305                           ;i2c2.c: 200: i2c2_object.pTrHead = i2c2_tr_queue;
  4306                           
  4307                           ;incstack = 0
  4308                           ; Regs used in _I2C2_Initialize: [wreg+status,2]
  4309  068C  3060               	movlw	(low (_i2c2_tr_queue| 0))& (0+255)
  4310  068D  0020               	movlb	0	; select bank0
  4311  068E  00A0               	movwf	??_I2C2_Initialize
  4312  068F  0820               	movf	??_I2C2_Initialize,w
  4313  0690  00CB               	movwf	low ((_i2c2_object| 0+1))
  4314                           
  4315                           ;i2c2.c: 201: i2c2_object.pTrTail = i2c2_tr_queue;
  4316  0691  3060               	movlw	(low (_i2c2_tr_queue| 0))& (0+255)
  4317  0692  00A0               	movwf	??_I2C2_Initialize
  4318  0693  0820               	movf	??_I2C2_Initialize,w
  4319  0694  00CA               	movwf	_i2c2_object
  4320                           
  4321                           ;i2c2.c: 202: i2c2_object.trStatus.s.empty = 1;
  4322  0695  14CC               	bsf	_i2c2_object+2,1
  4323                           
  4324                           ;i2c2.c: 203: i2c2_object.trStatus.s.full = 0;
  4325  0696  104C               	bcf	_i2c2_object+2,0
  4326                           
  4327                           ;i2c2.c: 205: i2c2_object.i2cErrors = 0;
  4328  0697  01CE               	clrf	_i2c2_object+4
  4329                           
  4330                           ;i2c2.c: 208: SSP2STAT = 0x80;
  4331  0698  3080               	movlw	128
  4332  0699  0023               	movlb	3	; select bank3
  4333  069A  0099               	movwf	25	;volatile
  4334                           
  4335                           ;i2c2.c: 210: SSP2CON1 = 0x28;
  4336  069B  3028               	movlw	40
  4337  069C  009A               	movwf	26	;volatile
  4338                           
  4339                           ;i2c2.c: 212: SSP2CON3 = 0x00;
  4340  069D  019C               	clrf	28	;volatile
  4341                           
  4342                           ;i2c2.c: 214: SSP2ADD = 0x04;
  4343  069E  3004               	movlw	4
  4344  069F  0097               	movwf	23	;volatile
  4345                           
  4346                           ;i2c2.c: 218: PIR3bits.SSP2IF = 0;
  4347  06A0  002E               	movlb	14	; select bank14
  4348  06A1  110F               	bcf	15,2	;volatile
  4349                           
  4350                           ;i2c2.c: 220: PIE3bits.SSP2IE = 1;
  4351  06A2  1519               	bsf	25,2	;volatile
  4352  06A3  0008               	return
  4353  06A4                     __end_of_I2C2_Initialize:	
  4354                           
  4355                           	psect	text5
  4356  0715                     __ptext5:	
  4357 ;; *************** function _EUSART_Initialize *****************
  4358 ;; Defined at:
  4359 ;;		line 55 in file "mcc_generated_files/eusart.c"
  4360 ;; Parameters:    Size  Location     Type
  4361 ;;		None
  4362 ;; Auto vars:     Size  Location     Type
  4363 ;;		None
  4364 ;; Return value:  Size  Location     Type
  4365 ;;                  1    wreg      void 
  4366 ;; Registers used:
  4367 ;;		wreg, status,2
  4368 ;; Tracked objects:
  4369 ;;		On entry : 0/0
  4370 ;;		On exit  : 0/0
  4371 ;;		Unchanged: 0/0
  4372 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
  4373 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  4374 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  4375 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  4376 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  4377 ;;Total ram usage:        0 bytes
  4378 ;; Hardware stack levels used:    1
  4379 ;; Hardware stack levels required when called:    3
  4380 ;; This function calls:
  4381 ;;		Nothing
  4382 ;; This function is called by:
  4383 ;;		_SYSTEM_Initialize
  4384 ;; This function uses a non-reentrant model
  4385 ;;
  4386                           
  4387                           
  4388                           ;psect for function _EUSART_Initialize
  4389  0715                     _EUSART_Initialize:	
  4390                           
  4391                           ;eusart.c: 60: BAUD1CON = 0x08;
  4392                           
  4393                           ;incstack = 0
  4394                           ; Regs used in _EUSART_Initialize: [wreg+status,2]
  4395  0715  3008               	movlw	8
  4396  0716  0022               	movlb	2	; select bank2
  4397  0717  009F               	movwf	31	;volatile
  4398                           
  4399                           ;eusart.c: 63: RC1STA = 0x80;
  4400  0718  3080               	movlw	128
  4401  0719  009D               	movwf	29	;volatile
  4402                           
  4403                           ;eusart.c: 66: TX1STA = 0x24;
  4404  071A  3024               	movlw	36
  4405  071B  009E               	movwf	30	;volatile
  4406                           
  4407                           ;eusart.c: 69: SP1BRGL = 0x19;
  4408  071C  3019               	movlw	25
  4409  071D  009B               	movwf	27	;volatile
  4410                           
  4411                           ;eusart.c: 72: SP1BRGH = 0x00;
  4412  071E  019C               	clrf	28	;volatile
  4413  071F  0008               	return
  4414  0720                     __end_of_EUSART_Initialize:	
  4415                           
  4416                           	psect	text6
  4417  0496                     __ptext6:	
  4418 ;; *************** function _EMC1001_PrintTemp *****************
  4419 ;; Defined at:
  4420 ;;		line 56 in file "main.c"
  4421 ;; Parameters:    Size  Location     Type
  4422 ;;		None
  4423 ;; Auto vars:     Size  Location     Type
  4424 ;;  templo          1   38[BANK0 ] unsigned char 
  4425 ;;  temp            1   37[BANK0 ] char 
  4426 ;; Return value:  Size  Location     Type
  4427 ;;                  1    wreg      void 
  4428 ;; Registers used:
  4429 ;;		wreg, fsr0l, fsr0h, fsr1l, fsr1h, status,2, status,0, pclath, cstack
  4430 ;; Tracked objects:
  4431 ;;		On entry : 0/0
  4432 ;;		On exit  : 0/0
  4433 ;;		Unchanged: 0/0
  4434 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
  4435 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  4436 ;;      Locals:         0       2       0       0       0       0       0       0       0       0       0       0       
      +0       0
  4437 ;;      Temps:          0       2       0       0       0       0       0       0       0       0       0       0       
      +0       0
  4438 ;;      Totals:         0       4       0       0       0       0       0       0       0       0       0       0       
      +0       0
  4439 ;;Total ram usage:        4 bytes
  4440 ;; Hardware stack levels used:    1
  4441 ;; Hardware stack levels required when called:    6
  4442 ;; This function calls:
  4443 ;;		_EMC1001_Read
  4444 ;;		___wmul
  4445 ;;		_printf
  4446 ;; This function is called by:
  4447 ;;		_main
  4448 ;; This function uses a non-reentrant model
  4449 ;;
  4450                           
  4451                           
  4452                           ;psect for function _EMC1001_PrintTemp
  4453  0496                     _EMC1001_PrintTemp:	
  4454                           
  4455                           ;main.c: 58: int8_t temp;
  4456                           ;main.c: 59: uint8_t templo;
  4457                           ;main.c: 61: if (EMC1001_Read(0x00, (uint8_t*)&temp)) {
  4458                           
  4459                           ;incstack = 0
  4460                           ; Regs used in _EMC1001_PrintTemp: [wreg-fsr1h+status,2+status,0+pclath+cstack]
  4461  0496  3045               	movlw	(low (EMC1001_PrintTemp@temp| 0))& (0+255)
  4462  0497  0020               	movlb	0	; select bank0
  4463  0498  00C3               	movwf	??_EMC1001_PrintTemp
  4464  0499  0843               	movf	??_EMC1001_PrintTemp,w
  4465  049A  00A7               	movwf	EMC1001_Read@pData
  4466  049B  3000               	movlw	0
  4467  049C  3185  2569  3184   	fcall	_EMC1001_Read
  4468  049F  3A00               	xorlw	0
  4469  04A0  1903               	skipnz
  4470  04A1  0008               	return
  4471                           
  4472                           ;main.c: 62: EMC1001_Read(0x02, &templo);
  4473  04A2  3046               	movlw	(low (EMC1001_PrintTemp@templo| 0))& (0+255)
  4474  04A3  0020               	movlb	0	; select bank0
  4475  04A4  00C3               	movwf	??_EMC1001_PrintTemp
  4476  04A5  0843               	movf	??_EMC1001_PrintTemp,w
  4477  04A6  00A7               	movwf	EMC1001_Read@pData
  4478  04A7  3002               	movlw	2
  4479  04A8  3185  2569  3184   	fcall	_EMC1001_Read
  4480                           
  4481                           ;main.c: 63: templo = templo >> 6;
  4482  04AB  0020               	movlb	0	; select bank0
  4483  04AC  0846               	movf	EMC1001_PrintTemp@templo,w
  4484  04AD  00C3               	movwf	??_EMC1001_PrintTemp
  4485  04AE  3006               	movlw	6
  4486  04AF                     u1905:	
  4487  04AF  36C3               	lsrf	??_EMC1001_PrintTemp,f
  4488  04B0  0B89               	decfsz	9,f
  4489  04B1  2CAF               	goto	u1905
  4490  04B2  0843               	movf	??_EMC1001_PrintTemp,w
  4491  04B3  00C4               	movwf	??_EMC1001_PrintTemp+1
  4492  04B4  0844               	movf	??_EMC1001_PrintTemp+1,w
  4493  04B5  00C6               	movwf	EMC1001_PrintTemp@templo
  4494                           
  4495                           ;main.c: 64: if (temp < 0) templo = 3-templo;
  4496  04B6  1FC5               	btfss	EMC1001_PrintTemp@temp,7
  4497  04B7  2CBE               	goto	l2163
  4498  04B8  0346               	decf	EMC1001_PrintTemp@templo,w
  4499  04B9  3AFF               	xorlw	255
  4500  04BA  3E03               	addlw	3
  4501  04BB  00C3               	movwf	??_EMC1001_PrintTemp
  4502  04BC  0843               	movf	??_EMC1001_PrintTemp,w
  4503  04BD  00C6               	movwf	EMC1001_PrintTemp@templo
  4504  04BE                     l2163:	
  4505                           
  4506                           ;main.c: 65: printf("\nThe temperature is: %d.%d C\n", temp, templo*25);
  4507  04BE  3006               	movlw	low (STR_11| (0+32768))
  4508  04BF  00AE               	movwf	printf@f
  4509  04C0  3083               	movlw	high (STR_11| (0+32768))
  4510  04C1  00AF               	movwf	printf@f+1
  4511  04C2  0845               	movf	EMC1001_PrintTemp@temp,w
  4512  04C3  00B0               	movwf	?_printf+2
  4513  04C4  01B1               	clrf	?_printf+3
  4514  04C5  1BB0               	btfsc	?_printf+2,7
  4515  04C6  03B1               	decf	?_printf+3,f
  4516  04C7  0846               	movf	EMC1001_PrintTemp@templo,w
  4517  04C8  00C3               	movwf	??_EMC1001_PrintTemp
  4518  04C9  01C4               	clrf	??_EMC1001_PrintTemp+1
  4519  04CA  0843               	movf	??_EMC1001_PrintTemp,w
  4520  04CB  00A0               	movwf	___wmul@multiplier
  4521  04CC  0844               	movf	??_EMC1001_PrintTemp+1,w
  4522  04CD  00A1               	movwf	___wmul@multiplier+1
  4523  04CE  3019               	movlw	25
  4524  04CF  00A2               	movwf	___wmul@multiplicand
  4525  04D0  3000               	movlw	0
  4526  04D1  00A3               	movwf	___wmul@multiplicand+1
  4527  04D2  3186  2670  3184   	fcall	___wmul
  4528  04D5  0020               	movlb	0	; select bank0
  4529  04D6  0821               	movf	?___wmul+1,w
  4530  04D7  00B3               	movwf	?_printf+5
  4531  04D8  0820               	movf	?___wmul,w
  4532  04D9  00B2               	movwf	?_printf+4
  4533  04DA  3180  202E         	fcall	_printf
  4534  04DC  0008               	return
  4535  04DD                     __end_of_EMC1001_PrintTemp:	
  4536                           
  4537                           	psect	text7
  4538  0670                     __ptext7:	
  4539 ;; *************** function ___wmul *****************
  4540 ;; Defined at:
  4541 ;;		line 15 in file "/opt/microchip/xc8/v1.41/sources/common/Umul16.c"
  4542 ;; Parameters:    Size  Location     Type
  4543 ;;  multiplier      2    0[BANK0 ] unsigned int 
  4544 ;;  multiplicand    2    2[BANK0 ] unsigned int 
  4545 ;; Auto vars:     Size  Location     Type
  4546 ;;  product         2    4[BANK0 ] unsigned int 
  4547 ;; Return value:  Size  Location     Type
  4548 ;;                  2    0[BANK0 ] unsigned int 
  4549 ;; Registers used:
  4550 ;;		wreg, status,2, status,0
  4551 ;; Tracked objects:
  4552 ;;		On entry : 0/0
  4553 ;;		On exit  : 0/0
  4554 ;;		Unchanged: 0/0
  4555 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
  4556 ;;      Params:         0       4       0       0       0       0       0       0       0       0       0       0       
      +0       0
  4557 ;;      Locals:         0       2       0       0       0       0       0       0       0       0       0       0       
      +0       0
  4558 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  4559 ;;      Totals:         0       6       0       0       0       0       0       0       0       0       0       0       
      +0       0
  4560 ;;Total ram usage:        6 bytes
  4561 ;; Hardware stack levels used:    1
  4562 ;; Hardware stack levels required when called:    3
  4563 ;; This function calls:
  4564 ;;		Nothing
  4565 ;; This function is called by:
  4566 ;;		_EMC1001_PrintTemp
  4567 ;; This function uses a non-reentrant model
  4568 ;;
  4569                           
  4570                           
  4571                           ;psect for function ___wmul
  4572  0670                     ___wmul:	
  4573                           
  4574                           ;incstack = 0
  4575                           ; Regs used in ___wmul: [wreg+status,2+status,0]
  4576  0670  0020               	movlb	0	; select bank0
  4577  0671  01A4               	clrf	___wmul@product
  4578  0672  01A5               	clrf	___wmul@product+1
  4579  0673                     l2105:	
  4580  0673  1C20               	btfss	___wmul@multiplier,0
  4581  0674  2E79               	goto	l460
  4582  0675  0822               	movf	___wmul@multiplicand,w
  4583  0676  07A4               	addwf	___wmul@product,f
  4584  0677  0823               	movf	___wmul@multiplicand+1,w
  4585  0678  3DA5               	addwfc	___wmul@product+1,f
  4586  0679                     l460:	
  4587  0679  3001               	movlw	1
  4588  067A                     u1795:	
  4589  067A  35A2               	lslf	___wmul@multiplicand,f
  4590  067B  0DA3               	rlf	___wmul@multiplicand+1,f
  4591  067C  0B89               	decfsz	9,f
  4592  067D  2E7A               	goto	u1795
  4593  067E  3001               	movlw	1
  4594  067F                     u1805:	
  4595  067F  36A1               	lsrf	___wmul@multiplier+1,f
  4596  0680  0CA0               	rrf	___wmul@multiplier,f
  4597  0681  0B89               	decfsz	9,f
  4598  0682  2E7F               	goto	u1805
  4599  0683  0820               	movf	___wmul@multiplier,w
  4600  0684  0421               	iorwf	___wmul@multiplier+1,w
  4601  0685  1D03               	btfss	3,2
  4602  0686  2E73               	goto	l2105
  4603  0687  0825               	movf	___wmul@product+1,w
  4604  0688  00A1               	movwf	?___wmul+1
  4605  0689  0824               	movf	___wmul@product,w
  4606  068A  00A0               	movwf	?___wmul
  4607  068B  0008               	return
  4608  068C                     __end_of___wmul:	
  4609                           
  4610                           	psect	text8
  4611  03DC                     __ptext8:	
  4612 ;; *************** function _EMC1001_PrintInfo *****************
  4613 ;; Defined at:
  4614 ;;		line 41 in file "main.c"
  4615 ;; Parameters:    Size  Location     Type
  4616 ;;		None
  4617 ;; Auto vars:     Size  Location     Type
  4618 ;;  data            1   39[BANK0 ] unsigned char 
  4619 ;; Return value:  Size  Location     Type
  4620 ;;                  1    wreg      void 
  4621 ;; Registers used:
  4622 ;;		wreg, fsr0l, fsr0h, fsr1l, fsr1h, status,2, status,0, pclath, cstack
  4623 ;; Tracked objects:
  4624 ;;		On entry : 0/0
  4625 ;;		On exit  : 0/0
  4626 ;;		Unchanged: 0/0
  4627 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
  4628 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  4629 ;;      Locals:         0       3       0       0       0       0       0       0       0       0       0       0       
      +0       0
  4630 ;;      Temps:          0       2       0       0       0       0       0       0       0       0       0       0       
      +0       0
  4631 ;;      Totals:         0       5       0       0       0       0       0       0       0       0       0       0       
      +0       0
  4632 ;;Total ram usage:        5 bytes
  4633 ;; Hardware stack levels used:    1
  4634 ;; Hardware stack levels required when called:    7
  4635 ;; This function calls:
  4636 ;;		_EMC1001_Read
  4637 ;;		_printf
  4638 ;;		_puts
  4639 ;; This function is called by:
  4640 ;;		_main
  4641 ;; This function uses a non-reentrant model
  4642 ;;
  4643                           
  4644                           
  4645                           ;psect for function _EMC1001_PrintInfo
  4646  03DC                     _EMC1001_PrintInfo:	
  4647                           
  4648                           ;main.c: 43: uint8_t data;
  4649                           ;main.c: 45: puts("Microchip EMC1001 Temperature Sensor Demo\n");
  4650                           
  4651                           ;incstack = 0
  4652                           ; Regs used in _EMC1001_PrintInfo: [wreg-fsr1h+status,2+status,0+pclath+cstack]
  4653  03DC  30DB               	movlw	low (STR_1| (0+32768))
  4654  03DD  0020               	movlb	0	; select bank0
  4655  03DE  00A5               	movwf	puts@s
  4656  03DF  3082               	movlw	high (STR_1| (0+32768))
  4657  03E0  00A6               	movwf	puts@s+1
  4658  03E1  3187  2709  3183   	fcall	_puts
  4659                           
  4660                           ;main.c: 46: if (EMC1001_Read(0xfd,&data)) printf("Product ID: EMC1001%s\n", data ? "-1"
      +                           : "");
  4661  03E4  3047               	movlw	(low (EMC1001_PrintInfo@data| 0))& (0+255)
  4662  03E5  0020               	movlb	0	; select bank0
  4663  03E6  00C3               	movwf	??_EMC1001_PrintInfo
  4664  03E7  0843               	movf	??_EMC1001_PrintInfo,w
  4665  03E8  00A7               	movwf	EMC1001_Read@pData
  4666  03E9  30FD               	movlw	253
  4667  03EA  3185  2569  3183   	fcall	_EMC1001_Read
  4668  03ED  3A00               	xorlw	0
  4669  03EE  1903               	skipnz
  4670  03EF  2C07               	goto	l2131
  4671  03F0  0020               	movlb	0	; select bank0
  4672  03F1  0847               	movf	EMC1001_PrintInfo@data,w
  4673  03F2  1D03               	btfss	3,2
  4674  03F3  2BF8               	goto	l2127
  4675  03F4  3058               	movlw	low ((STR_8+24)| (0+32768))
  4676  03F5  00C5               	movwf	_EMC1001_PrintInfo$595
  4677  03F6  3083               	movlw	high ((STR_8+24)| (0+32768))
  4678  03F7  2BFB               	goto	L1
  4679  03F8                     l2127:	
  4680  03F8  30D7               	movlw	low (STR_3| (0+32768))
  4681  03F9  00C5               	movwf	_EMC1001_PrintInfo$595
  4682  03FA  3083               	movlw	high (STR_3| (0+32768))
  4683  03FB                     L1:	
  4684  03FB  00C6               	movwf	_EMC1001_PrintInfo$595+1
  4685  03FC  3088               	movlw	low (STR_2| (0+32768))
  4686  03FD  00AE               	movwf	printf@f
  4687  03FE  3083               	movlw	high (STR_2| (0+32768))
  4688  03FF  00AF               	movwf	printf@f+1
  4689  0400  0846               	movf	_EMC1001_PrintInfo$595+1,w
  4690  0401  00B1               	movwf	(low ((?_printf| 0+2))+1)
  4691  0402  0845               	movf	_EMC1001_PrintInfo$595,w
  4692  0403  00B0               	movwf	low ((?_printf| 0+2))
  4693  0404  3180  202E  3183   	fcall	_printf
  4694  0407                     l2131:	
  4695                           
  4696                           ;main.c: 47: if (EMC1001_Read(0xfe,&data)) printf("Manufacturer ID: 0x%X\n", data);
  4697  0407  3047               	movlw	(low (EMC1001_PrintInfo@data| 0))& (0+255)
  4698  0408  0020               	movlb	0	; select bank0
  4699  0409  00C3               	movwf	??_EMC1001_PrintInfo
  4700  040A  0843               	movf	??_EMC1001_PrintInfo,w
  4701  040B  00A7               	movwf	EMC1001_Read@pData
  4702  040C  30FE               	movlw	254
  4703  040D  3185  2569  3183   	fcall	_EMC1001_Read
  4704  0410  3A00               	xorlw	0
  4705  0411  1903               	skipnz
  4706  0412  2C22               	goto	l2135
  4707  0413  3071               	movlw	low (STR_5| (0+32768))
  4708  0414  0020               	movlb	0	; select bank0
  4709  0415  00AE               	movwf	printf@f
  4710  0416  3083               	movlw	high (STR_5| (0+32768))
  4711  0417  00AF               	movwf	printf@f+1
  4712  0418  0847               	movf	EMC1001_PrintInfo@data,w
  4713  0419  00C3               	movwf	??_EMC1001_PrintInfo
  4714  041A  01C4               	clrf	??_EMC1001_PrintInfo+1
  4715  041B  0843               	movf	??_EMC1001_PrintInfo,w
  4716  041C  00B0               	movwf	?_printf+2
  4717  041D  0844               	movf	??_EMC1001_PrintInfo+1,w
  4718  041E  00B1               	movwf	?_printf+3
  4719  041F  3180  202E  3183   	fcall	_printf
  4720  0422                     l2135:	
  4721                           
  4722                           ;main.c: 48: if (EMC1001_Read(0xff,&data)) printf("Revision : %d\n", data);
  4723  0422  3047               	movlw	(low (EMC1001_PrintInfo@data| 0))& (0+255)
  4724  0423  0020               	movlb	0	; select bank0
  4725  0424  00C3               	movwf	??_EMC1001_PrintInfo
  4726  0425  0843               	movf	??_EMC1001_PrintInfo,w
  4727  0426  00A7               	movwf	EMC1001_Read@pData
  4728  0427  30FF               	movlw	255
  4729  0428  3185  2569  3183   	fcall	_EMC1001_Read
  4730  042B  3A00               	xorlw	0
  4731  042C  1903               	skipnz
  4732  042D  2C3D               	goto	l2139
  4733  042E  30C1               	movlw	low (STR_6| (0+32768))
  4734  042F  0020               	movlb	0	; select bank0
  4735  0430  00AE               	movwf	printf@f
  4736  0431  3083               	movlw	high (STR_6| (0+32768))
  4737  0432  00AF               	movwf	printf@f+1
  4738  0433  0847               	movf	EMC1001_PrintInfo@data,w
  4739  0434  00C3               	movwf	??_EMC1001_PrintInfo
  4740  0435  01C4               	clrf	??_EMC1001_PrintInfo+1
  4741  0436  0843               	movf	??_EMC1001_PrintInfo,w
  4742  0437  00B0               	movwf	?_printf+2
  4743  0438  0844               	movf	??_EMC1001_PrintInfo+1,w
  4744  0439  00B1               	movwf	?_printf+3
  4745  043A  3180  202E  3183   	fcall	_printf
  4746  043D                     l2139:	
  4747                           
  4748                           ;main.c: 49: if (EMC1001_Read(0x04, &data)) printf("The Conversion rate is: %x\n", data)
      +                          ;
  4749  043D  3047               	movlw	(low (EMC1001_PrintInfo@data| 0))& (0+255)
  4750  043E  0020               	movlb	0	; select bank0
  4751  043F  00C3               	movwf	??_EMC1001_PrintInfo
  4752  0440  0843               	movf	??_EMC1001_PrintInfo,w
  4753  0441  00A7               	movwf	EMC1001_Read@pData
  4754  0442  3004               	movlw	4
  4755  0443  3185  2569  3183   	fcall	_EMC1001_Read
  4756  0446  3A00               	xorlw	0
  4757  0447  1903               	skipnz
  4758  0448  2C58               	goto	l2143
  4759  0449  3024               	movlw	low (STR_7| (0+32768))
  4760  044A  0020               	movlb	0	; select bank0
  4761  044B  00AE               	movwf	printf@f
  4762  044C  3083               	movlw	high (STR_7| (0+32768))
  4763  044D  00AF               	movwf	printf@f+1
  4764  044E  0847               	movf	EMC1001_PrintInfo@data,w
  4765  044F  00C3               	movwf	??_EMC1001_PrintInfo
  4766  0450  01C4               	clrf	??_EMC1001_PrintInfo+1
  4767  0451  0843               	movf	??_EMC1001_PrintInfo,w
  4768  0452  00B0               	movwf	?_printf+2
  4769  0453  0844               	movf	??_EMC1001_PrintInfo+1,w
  4770  0454  00B1               	movwf	?_printf+3
  4771  0455  3180  202E  3183   	fcall	_printf
  4772  0458                     l2143:	
  4773                           
  4774                           ;main.c: 50: if (EMC1001_Read(0x05, &data)) printf("The high limit is: %d C\n", data);
  4775  0458  3047               	movlw	(low (EMC1001_PrintInfo@data| 0))& (0+255)
  4776  0459  0020               	movlb	0	; select bank0
  4777  045A  00C3               	movwf	??_EMC1001_PrintInfo
  4778  045B  0843               	movf	??_EMC1001_PrintInfo,w
  4779  045C  00A7               	movwf	EMC1001_Read@pData
  4780  045D  3005               	movlw	5
  4781  045E  3185  2569  3183   	fcall	_EMC1001_Read
  4782  0461  3A00               	xorlw	0
  4783  0462  1903               	skipnz
  4784  0463  2C73               	goto	l2147
  4785  0464  3040               	movlw	low (STR_8| (0+32768))
  4786  0465  0020               	movlb	0	; select bank0
  4787  0466  00AE               	movwf	printf@f
  4788  0467  3083               	movlw	high (STR_8| (0+32768))
  4789  0468  00AF               	movwf	printf@f+1
  4790  0469  0847               	movf	EMC1001_PrintInfo@data,w
  4791  046A  00C3               	movwf	??_EMC1001_PrintInfo
  4792  046B  01C4               	clrf	??_EMC1001_PrintInfo+1
  4793  046C  0843               	movf	??_EMC1001_PrintInfo,w
  4794  046D  00B0               	movwf	?_printf+2
  4795  046E  0844               	movf	??_EMC1001_PrintInfo+1,w
  4796  046F  00B1               	movwf	?_printf+3
  4797  0470  3180  202E  3183   	fcall	_printf
  4798  0473                     l2147:	
  4799                           
  4800                           ;main.c: 51: if (EMC1001_Read(0x07, &data)) printf("The low limit is: %d C\n", data);
  4801  0473  3047               	movlw	(low (EMC1001_PrintInfo@data| 0))& (0+255)
  4802  0474  0020               	movlb	0	; select bank0
  4803  0475  00C3               	movwf	??_EMC1001_PrintInfo
  4804  0476  0843               	movf	??_EMC1001_PrintInfo,w
  4805  0477  00A7               	movwf	EMC1001_Read@pData
  4806  0478  3007               	movlw	7
  4807  0479  3185  2569  3183   	fcall	_EMC1001_Read
  4808  047C  3A00               	xorlw	0
  4809  047D  1903               	skipnz
  4810  047E  2C8E               	goto	l2151
  4811  047F  3059               	movlw	low (STR_9| (0+32768))
  4812  0480  0020               	movlb	0	; select bank0
  4813  0481  00AE               	movwf	printf@f
  4814  0482  3083               	movlw	high (STR_9| (0+32768))
  4815  0483  00AF               	movwf	printf@f+1
  4816  0484  0847               	movf	EMC1001_PrintInfo@data,w
  4817  0485  00C3               	movwf	??_EMC1001_PrintInfo
  4818  0486  01C4               	clrf	??_EMC1001_PrintInfo+1
  4819  0487  0843               	movf	??_EMC1001_PrintInfo,w
  4820  0488  00B0               	movwf	?_printf+2
  4821  0489  0844               	movf	??_EMC1001_PrintInfo+1,w
  4822  048A  00B1               	movwf	?_printf+3
  4823  048B  3180  202E  3183   	fcall	_printf
  4824  048E                     l2151:	
  4825                           
  4826                           ;main.c: 52: puts("\n");
  4827  048E  3057               	movlw	low ((STR_8+23)| (0+32768))
  4828  048F  0020               	movlb	0	; select bank0
  4829  0490  00A5               	movwf	puts@s
  4830  0491  3083               	movlw	high ((STR_8+23)| (0+32768))
  4831  0492  00A6               	movwf	puts@s+1
  4832  0493  3187  2709         	fcall	_puts
  4833  0495  0008               	return
  4834  0496                     __end_of_EMC1001_PrintInfo:	
  4835                           
  4836                           	psect	text9
  4837  0709                     __ptext9:	
  4838 ;; *************** function _puts *****************
  4839 ;; Defined at:
  4840 ;;		line 8 in file "/opt/microchip/xc8/v1.41/sources/common/puts.c"
  4841 ;; Parameters:    Size  Location     Type
  4842 ;;  s               2    5[BANK0 ] PTR const unsigned char 
  4843 ;;		 -> STR_10(2), STR_1(43), 
  4844 ;; Auto vars:     Size  Location     Type
  4845 ;;		None
  4846 ;; Return value:  Size  Location     Type
  4847 ;;                  2    5[BANK0 ] int 
  4848 ;; Registers used:
  4849 ;;		wreg, fsr0l, fsr0h, status,2, status,0, pclath, cstack
  4850 ;; Tracked objects:
  4851 ;;		On entry : 0/0
  4852 ;;		On exit  : 0/0
  4853 ;;		Unchanged: 0/0
  4854 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
  4855 ;;      Params:         0       2       0       0       0       0       0       0       0       0       0       0       
      +0       0
  4856 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  4857 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  4858 ;;      Totals:         0       2       0       0       0       0       0       0       0       0       0       0       
      +0       0
  4859 ;;Total ram usage:        2 bytes
  4860 ;; Hardware stack levels used:    1
  4861 ;; Hardware stack levels required when called:    6
  4862 ;; This function calls:
  4863 ;;		_cputs
  4864 ;;		_putch
  4865 ;; This function is called by:
  4866 ;;		_EMC1001_PrintInfo
  4867 ;; This function uses a non-reentrant model
  4868 ;;
  4869                           
  4870                           
  4871                           ;psect for function _puts
  4872  0709                     _puts:	
  4873                           
  4874                           ;incstack = 0
  4875                           ; Regs used in _puts: [wreg-fsr0h+status,2+status,0+pclath+cstack]
  4876  0709  0020               	movlb	0	; select bank0
  4877  070A  0826               	movf	puts@s+1,w
  4878  070B  00A3               	movwf	cputs@s+1
  4879  070C  0825               	movf	puts@s,w
  4880  070D  00A2               	movwf	cputs@s
  4881  070E  3186  26D4  3187   	fcall	_cputs
  4882  0711  300A               	movlw	10
  4883  0712  3187  2739         	fcall	_putch
  4884  0714  0008               	return
  4885  0715                     __end_of_puts:	
  4886                           
  4887                           	psect	text10
  4888  06D4                     __ptext10:	
  4889 ;; *************** function _cputs *****************
  4890 ;; Defined at:
  4891 ;;		line 4 in file "/opt/microchip/xc8/v1.41/sources/common/cputs.c"
  4892 ;; Parameters:    Size  Location     Type
  4893 ;;  s               2    2[BANK0 ] PTR const unsigned char 
  4894 ;;		 -> STR_10(2), STR_1(43), 
  4895 ;; Auto vars:     Size  Location     Type
  4896 ;;		None
  4897 ;; Return value:  Size  Location     Type
  4898 ;;                  1    wreg      void 
  4899 ;; Registers used:
  4900 ;;		wreg, fsr0l, fsr0h, status,2, status,0, pclath, cstack
  4901 ;; Tracked objects:
  4902 ;;		On entry : 0/0
  4903 ;;		On exit  : 0/0
  4904 ;;		Unchanged: 0/0
  4905 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
  4906 ;;      Params:         0       2       0       0       0       0       0       0       0       0       0       0       
      +0       0
  4907 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  4908 ;;      Temps:          0       1       0       0       0       0       0       0       0       0       0       0       
      +0       0
  4909 ;;      Totals:         0       3       0       0       0       0       0       0       0       0       0       0       
      +0       0
  4910 ;;Total ram usage:        3 bytes
  4911 ;; Hardware stack levels used:    1
  4912 ;; Hardware stack levels required when called:    5
  4913 ;; This function calls:
  4914 ;;		_putch
  4915 ;; This function is called by:
  4916 ;;		_puts
  4917 ;; This function uses a non-reentrant model
  4918 ;;
  4919                           
  4920                           
  4921                           ;psect for function _cputs
  4922  06D4                     _cputs:	
  4923  06D4                     l1959:	
  4924                           ;incstack = 0
  4925                           ; Regs used in _cputs: [wreg-fsr0h+status,2+status,0+pclath+cstack]
  4926                           
  4927  06D4  0020               	movlb	0	; select bank0
  4928  06D5  0822               	movf	cputs@s,w
  4929  06D6  0084               	movwf	4
  4930  06D7  0823               	movf	cputs@s+1,w
  4931  06D8  0085               	movwf	5
  4932  06D9  0012               	moviw fsr0++
  4933  06DA  1903               	btfsc	3,2
  4934  06DB  0008               	return
  4935  06DC  0020               	movlb	0	; select bank0
  4936  06DD  0822               	movf	cputs@s,w
  4937  06DE  0084               	movwf	4
  4938  06DF  0823               	movf	cputs@s+1,w
  4939  06E0  0085               	movwf	5
  4940  06E1  0800               	movf	0,w	;code access
  4941  06E2  3187  2739  3186   	fcall	_putch
  4942  06E5  3001               	movlw	1
  4943  06E6  0020               	movlb	0	; select bank0
  4944  06E7  07A2               	addwf	cputs@s,f
  4945  06E8  3000               	movlw	0
  4946  06E9  3DA3               	addwfc	cputs@s+1,f
  4947  06EA  2ED4               	goto	l1959
  4948  06EB                     __end_of_cputs:	
  4949                           
  4950                           	psect	text11
  4951  002E                     __ptext11:	
  4952 ;; *************** function _printf *****************
  4953 ;; Defined at:
  4954 ;;		line 464 in file "/opt/microchip/xc8/v1.41/sources/common/doprnt.c"
  4955 ;; Parameters:    Size  Location     Type
  4956 ;;  f               2   14[BANK0 ] PTR const unsigned char 
  4957 ;;		 -> STR_12(2), STR_11(30), STR_9(24), STR_8(25), 
  4958 ;;		 -> STR_7(28), STR_6(15), STR_5(23), STR_2(23), 
  4959 ;; Auto vars:     Size  Location     Type
  4960 ;;  idx             1   24[BANK0 ] unsigned char 
  4961 ;;  tmpval          4    0        struct .
  4962 ;;  val             2   32[BANK0 ] unsigned int 
  4963 ;;  cp              2   28[BANK0 ] PTR const unsigned char 
  4964 ;;		 -> STR_13(7), STR_4(1), STR_3(3), I2C2_ISR@i2c_address(2), 
  4965 ;;  len             2    0        unsigned int 
  4966 ;;  c               1   34[BANK0 ] char 
  4967 ;;  flag            1   31[BANK0 ] unsigned char 
  4968 ;;  ap              1   30[BANK0 ] PTR void [1]
  4969 ;;		 -> ?_printf(2), 
  4970 ;;  prec            1   27[BANK0 ] char 
  4971 ;; Return value:  Size  Location     Type
  4972 ;;                  2   14[BANK0 ] int 
  4973 ;; Registers used:
  4974 ;;		wreg, fsr0l, fsr0h, fsr1l, fsr1h, status,2, status,0, pclath, cstack
  4975 ;; Tracked objects:
  4976 ;;		On entry : 0/0
  4977 ;;		On exit  : 0/0
  4978 ;;		Unchanged: 0/0
  4979 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
  4980 ;;      Params:         0       6       0       0       0       0       0       0       0       0       0       0       
      +0       0
  4981 ;;      Locals:         0      11       0       0       0       0       0       0       0       0       0       0       
      +0       0
  4982 ;;      Temps:          0       4       0       0       0       0       0       0       0       0       0       0       
      +0       0
  4983 ;;      Totals:         0      21       0       0       0       0       0       0       0       0       0       0       
      +0       0
  4984 ;;Total ram usage:       21 bytes
  4985 ;; Hardware stack levels used:    1
  4986 ;; Hardware stack levels required when called:    5
  4987 ;; This function calls:
  4988 ;;		___lwdiv
  4989 ;;		___lwmod
  4990 ;;		_putch
  4991 ;; This function is called by:
  4992 ;;		_EMC1001_PrintInfo
  4993 ;;		_EMC1001_PrintTemp
  4994 ;;		_main
  4995 ;; This function uses a non-reentrant model
  4996 ;;
  4997                           
  4998                           
  4999                           ;psect for function _printf
  5000  002E                     _printf:	
  5001                           
  5002                           ;doprnt.c: 466: va_list ap;
  5003                           ;doprnt.c: 499: signed char c;
  5004                           ;doprnt.c: 506: signed char prec;
  5005                           ;doprnt.c: 508: unsigned char flag;
  5006                           ;doprnt.c: 523: union {
  5007                           ;doprnt.c: 524: unsigned long vd;
  5008                           ;doprnt.c: 525: double integ;
  5009                           ;doprnt.c: 526: } tmpval;
  5010                           ;doprnt.c: 528: unsigned int val;
  5011                           ;doprnt.c: 529: unsigned len;
  5012                           ;doprnt.c: 530: const char * cp;
  5013                           ;doprnt.c: 533: *ap = __va_start();
  5014                           
  5015                           ;incstack = 0
  5016                           ; Regs used in _printf: [wreg-fsr1h+status,2+status,0+pclath+cstack]
  5017  002E  3030               	movlw	(low ((?_printf| 0+2)))& (0+255)
  5018  002F  0020               	movlb	0	; select bank0
  5019  0030  00B4               	movwf	??_printf
  5020  0031  0834               	movf	??_printf,w
  5021  0032  00BE               	movwf	printf@ap
  5022  0033                     l2101:	
  5023                           ;doprnt.c: 536: while(c = *f++) {
  5024                           
  5025  0033  0020               	movlb	0	; select bank0
  5026  0034  082F               	movf	printf@f+1,w
  5027  0035  00B5               	movwf	??_printf+1
  5028  0036  082E               	movf	printf@f,w
  5029  0037  00B4               	movwf	??_printf
  5030  0038  0AAE               	incf	printf@f,f
  5031  0039  1903               	skipnz
  5032  003A  0AAF               	incf	printf@f+1,f
  5033  003B  0834               	movf	??_printf,w
  5034  003C  0084               	movwf	4
  5035  003D  0835               	movf	??_printf+1,w
  5036  003E  0085               	movwf	5
  5037  003F  0800               	movf	0,w	;code access
  5038  0040  00B6               	movwf	??_printf+2
  5039  0041  0836               	movf	??_printf+2,w
  5040  0042  00C2               	movwf	printf@c
  5041  0043  0842               	movf	printf@c,w
  5042  0044  1903               	btfsc	3,2
  5043  0045  0008               	return
  5044                           
  5045                           ;doprnt.c: 538: if(c != '%')
  5046  0046  3025               	movlw	37
  5047  0047  0642               	xorwf	printf@c,w
  5048  0048  1903               	btfsc	3,2
  5049  0049  284F               	goto	l2017
  5050                           
  5051                           ;doprnt.c: 540: {
  5052                           ;doprnt.c: 541: (putch(c) );
  5053  004A  0842               	movf	printf@c,w
  5054  004B  3187  2739  3180   	fcall	_putch
  5055                           
  5056                           ;doprnt.c: 542: continue;
  5057  004E  2833               	goto	l2101
  5058  004F                     l2017:	
  5059                           
  5060                           ;doprnt.c: 543: }
  5061                           ;doprnt.c: 548: flag = 0;
  5062  004F  0020               	movlb	0	; select bank0
  5063  0050  01BF               	clrf	printf@flag
  5064                           
  5065                           ;doprnt.c: 635: switch(c = *f++) {
  5066  0051  287D               	goto	l2035
  5067  0052                     l344:	
  5068                           ;doprnt.c: 712: case 'X':
  5069                           
  5070                           ;doprnt.c: 698: case 'i':
  5071                           ;doprnt.c: 699: break;
  5072                           
  5073                           ;doprnt.c: 697: case 'd':
  5074                           
  5075                           ;doprnt.c: 638: goto alldone;
  5076                           
  5077                           ;doprnt.c: 637: case 0:
  5078                           
  5079                           
  5080                           ;doprnt.c: 714: flag |= 0x20;
  5081  0052  16BF               	bsf	printf@flag,5
  5082  0053                     l345:	
  5083                           ;doprnt.c: 718: case 'x':
  5084                           
  5085                           
  5086                           ;doprnt.c: 721: flag |= 0x80;
  5087  0053  17BF               	bsf	printf@flag,7
  5088                           
  5089                           ;doprnt.c: 723: break;
  5090  0054  289D               	goto	l343
  5091  0055                     l2019:	
  5092                           ;doprnt.c: 728: case 's':
  5093                           
  5094                           
  5095                           ;doprnt.c: 734: cp = (*(const char * *)__va_arg((*(const char * **)ap), (const char *)0)
      +                          );
  5096  0055  083E               	movf	printf@ap,w
  5097  0056  0086               	movwf	6
  5098  0057  0187               	clrf	7
  5099  0058  3F40               	moviw [0]fsr1
  5100  0059  00BC               	movwf	printf@cp
  5101  005A  3F41               	moviw [1]fsr1
  5102  005B  00BD               	movwf	printf@cp+1
  5103  005C  3002               	movlw	2
  5104  005D  00B4               	movwf	??_printf
  5105  005E  0834               	movf	??_printf,w
  5106  005F  07BE               	addwf	printf@ap,f
  5107                           
  5108                           ;doprnt.c: 740: if(!cp)
  5109  0060  083C               	movf	printf@cp,w
  5110  0061  043D               	iorwf	printf@cp+1,w
  5111  0062  1D03               	btfss	3,2
  5112  0063  2868               	goto	l2031
  5113                           
  5114                           ;doprnt.c: 741: cp = "(null)";
  5115  0064  30D0               	movlw	low (STR_13| (0+32768))
  5116  0065  00BC               	movwf	printf@cp
  5117  0066  3083               	movlw	high (STR_13| (0+32768))
  5118  0067  00BD               	movwf	printf@cp+1
  5119  0068                     l2031:	
  5120                           ;doprnt.c: 777: while(*cp)
  5121                           
  5122  0068  083C               	movf	printf@cp,w
  5123  0069  0084               	movwf	4
  5124  006A  083D               	movf	printf@cp+1,w
  5125  006B  0085               	movwf	5
  5126  006C  0012               	moviw fsr0++
  5127  006D  1903               	btfsc	3,2
  5128  006E  2833               	goto	l2101
  5129                           
  5130                           ;doprnt.c: 778: (putch(*cp++) );
  5131  006F  083C               	movf	printf@cp,w
  5132  0070  0084               	movwf	4
  5133  0071  083D               	movf	printf@cp+1,w
  5134  0072  0085               	movwf	5
  5135  0073  0800               	movf	0,w	;code access
  5136  0074  3187  2739  3180   	fcall	_putch
  5137  0077  3001               	movlw	1
  5138  0078  0020               	movlb	0	; select bank0
  5139  0079  07BC               	addwf	printf@cp,f
  5140  007A  3000               	movlw	0
  5141  007B  3DBD               	addwfc	printf@cp+1,f
  5142  007C  2868               	goto	l2031
  5143  007D                     l2035:	
  5144                           ;doprnt.c: 822: }
  5145                           
  5146                           ;doprnt.c: 813: continue;
  5147                           
  5148                           ;doprnt.c: 802: default:
  5149                           
  5150                           ;doprnt.c: 779: continue;
  5151                           
  5152  007D  082F               	movf	printf@f+1,w
  5153  007E  00B5               	movwf	??_printf+1
  5154  007F  082E               	movf	printf@f,w
  5155  0080  00B4               	movwf	??_printf
  5156  0081  0AAE               	incf	printf@f,f
  5157  0082  1903               	skipnz
  5158  0083  0AAF               	incf	printf@f+1,f
  5159  0084  0834               	movf	??_printf,w
  5160  0085  0084               	movwf	4
  5161  0086  0835               	movf	??_printf+1,w
  5162  0087  0085               	movwf	5
  5163  0088  0800               	movf	0,w	;code access
  5164  0089  00C2               	movwf	printf@c
  5165                           
  5166                           ; Switch size 1, requested type "space"
  5167                           ; Number of cases is 6, Range of values is 0 to 120
  5168                           ; switch strategies available:
  5169                           ; Name         Instructions Cycles
  5170                           ; simple_byte           19    10 (average)
  5171                           ; direct_byte          248     6 (fixed)
  5172                           ; jumptable            260     6 (fixed)
  5173                           ;	Chosen strategy is simple_byte
  5174  008A  3A00               	xorlw	0	; case 0
  5175  008B  1903               	skipnz
  5176  008C  298E               	goto	l378
  5177  008D  3A58               	xorlw	88	; case 88
  5178  008E  1903               	skipnz
  5179  008F  2852               	goto	l344
  5180  0090  3A3C               	xorlw	60	; case 100
  5181  0091  1903               	skipnz
  5182  0092  289D               	goto	l343
  5183  0093  3A0D               	xorlw	13	; case 105
  5184  0094  1903               	skipnz
  5185  0095  289D               	goto	l343
  5186  0096  3A1A               	xorlw	26	; case 115
  5187  0097  1903               	skipnz
  5188  0098  2855               	goto	l2019
  5189  0099  3A0B               	xorlw	11	; case 120
  5190  009A  1903               	skipnz
  5191  009B  2853               	goto	l345
  5192  009C  2833               	goto	l2101
  5193  009D                     l343:	
  5194                           
  5195                           ;doprnt.c: 1251: if((flag & 0x80) == 0x00)
  5196  009D  1BBF               	btfsc	printf@flag,7
  5197  009E  28B6               	goto	l2047
  5198                           
  5199                           ;doprnt.c: 1253: {
  5200                           ;doprnt.c: 1259: val = (int)(*(int *)__va_arg((*(int **)ap), (int)0));
  5201  009F  083E               	movf	printf@ap,w
  5202  00A0  0086               	movwf	6
  5203  00A1  0187               	clrf	7
  5204  00A2  3F40               	moviw [0]fsr1
  5205  00A3  00C0               	movwf	printf@val
  5206  00A4  3F41               	moviw [1]fsr1
  5207  00A5  00C1               	movwf	printf@val+1
  5208  00A6  3002               	movlw	2
  5209  00A7  00B4               	movwf	??_printf
  5210  00A8  0834               	movf	??_printf,w
  5211  00A9  07BE               	addwf	printf@ap,f
  5212                           
  5213                           ;doprnt.c: 1261: if((int)val < 0) {
  5214  00AA  1FC1               	btfss	printf@val+1,7
  5215  00AB  2906               	goto	l2073
  5216                           
  5217                           ;doprnt.c: 1262: flag |= 0x03;
  5218  00AC  3003               	movlw	3
  5219  00AD  00B4               	movwf	??_printf
  5220  00AE  0834               	movf	??_printf,w
  5221  00AF  04BF               	iorwf	printf@flag,f
  5222                           
  5223                           ;doprnt.c: 1263: val = -val;
  5224  00B0  09C0               	comf	printf@val,f
  5225  00B1  09C1               	comf	printf@val+1,f
  5226  00B2  0AC0               	incf	printf@val,f
  5227  00B3  1903               	skipnz
  5228  00B4  0AC1               	incf	printf@val+1,f
  5229                           
  5230                           ;doprnt.c: 1264: }
  5231                           ;doprnt.c: 1266: }
  5232  00B5  2906               	goto	l2073
  5233  00B6                     l2047:	
  5234                           
  5235                           ;doprnt.c: 1268: else
  5236                           ;doprnt.c: 1273: {
  5237                           ;doprnt.c: 1286: val = (*(unsigned *)__va_arg((*(unsigned **)ap), (unsigned)0));
  5238  00B6  083E               	movf	printf@ap,w
  5239  00B7  0086               	movwf	6
  5240  00B8  0187               	clrf	7
  5241  00B9  3F40               	moviw [0]fsr1
  5242  00BA  00C0               	movwf	printf@val
  5243  00BB  3F41               	moviw [1]fsr1
  5244  00BC  00C1               	movwf	printf@val+1
  5245  00BD  3002               	movlw	2
  5246  00BE  00B4               	movwf	??_printf
  5247  00BF  0834               	movf	??_printf,w
  5248  00C0  07BE               	addwf	printf@ap,f
  5249                           
  5250                           ;doprnt.c: 1287: }
  5251                           ;doprnt.c: 1294: switch((unsigned char)(flag & 0x80)) {
  5252  00C1  2906               	goto	l2073
  5253  00C2                     l356:	
  5254                           ;doprnt.c: 1299: case 0x00:
  5255                           
  5256                           
  5257                           ;doprnt.c: 1305: for(c = 1 ; c != sizeof dpowers/sizeof dpowers[0] ; c++)
  5258  00C2  01C2               	clrf	printf@c
  5259  00C3  0AC2               	incf	printf@c,f
  5260  00C4                     L4:	
  5261  00C4  3005               	movlw	5
  5262  00C5  0642               	xorwf	printf@c,w
  5263  00C6  1903               	btfsc	3,2
  5264  00C7  290F               	goto	l2075
  5265                           
  5266                           ;doprnt.c: 1306: if(val < dpowers[c])
  5267  00C8  0842               	movf	printf@c,w
  5268  00C9  00B4               	movwf	??_printf
  5269  00CA  01B5               	clrf	??_printf+1
  5270  00CB  35B4               	lslf	??_printf,f
  5271  00CC  0DB5               	rlf	??_printf+1,f
  5272  00CD  30C9               	movlw	low (_dpowers| (0+32768))
  5273  00CE  0734               	addwf	??_printf,w
  5274  00CF  0084               	movwf	4
  5275  00D0  3082               	movlw	high (_dpowers| (0+32768))
  5276  00D1  3D35               	addwfc	??_printf+1,w
  5277  00D2  0085               	movwf	5
  5278  00D3  3F00               	moviw [0]fsr0
  5279  00D4  00B6               	movwf	??_printf+2
  5280  00D5  3F01               	moviw [1]fsr0
  5281  00D6  00B7               	movwf	??_printf+3
  5282  00D7  0837               	movf	??_printf+3,w
  5283  00D8  0241               	subwf	printf@val+1,w
  5284  00D9  1D03               	skipz
  5285  00DA  28DD               	goto	u1695
  5286  00DB  0836               	movf	??_printf+2,w
  5287  00DC  0240               	subwf	printf@val,w
  5288  00DD                     u1695:	
  5289  00DD  1C03               	btfss	3,0
  5290  00DE  290F               	goto	l2075
  5291                           
  5292                           ;doprnt.c: 1307: break;
  5293  00DF  3001               	movlw	1
  5294  00E0  00B4               	movwf	??_printf
  5295  00E1  0834               	movf	??_printf,w
  5296  00E2  07C2               	addwf	printf@c,f
  5297  00E3  28C4               	goto	L4
  5298  00E4                     l361:	
  5299                           ;doprnt.c: 1314: case 0x80:
  5300                           
  5301                           ;doprnt.c: 1309: break;
  5302                           
  5303                           
  5304                           ;doprnt.c: 1316: for(c = 1 ; c != sizeof hexpowers/sizeof hexpowers[0] ; c++)
  5305  00E4  01C2               	clrf	printf@c
  5306  00E5  0AC2               	incf	printf@c,f
  5307  00E6                     L5:	
  5308  00E6  3004               	movlw	4
  5309  00E7  0642               	xorwf	printf@c,w
  5310  00E8  1903               	btfsc	3,2
  5311  00E9  290F               	goto	l2075
  5312                           
  5313                           ;doprnt.c: 1317: if(val < hexpowers[c])
  5314  00EA  0842               	movf	printf@c,w
  5315  00EB  00B4               	movwf	??_printf
  5316  00EC  01B5               	clrf	??_printf+1
  5317  00ED  35B4               	lslf	??_printf,f
  5318  00EE  0DB5               	rlf	??_printf+1,f
  5319  00EF  30D3               	movlw	low (_hexpowers| (0+32768))
  5320  00F0  0734               	addwf	??_printf,w
  5321  00F1  0084               	movwf	4
  5322  00F2  3082               	movlw	high (_hexpowers| (0+32768))
  5323  00F3  3D35               	addwfc	??_printf+1,w
  5324  00F4  0085               	movwf	5
  5325  00F5  3F00               	moviw [0]fsr0
  5326  00F6  00B6               	movwf	??_printf+2
  5327  00F7  3F01               	moviw [1]fsr0
  5328  00F8  00B7               	movwf	??_printf+3
  5329  00F9  0837               	movf	??_printf+3,w
  5330  00FA  0241               	subwf	printf@val+1,w
  5331  00FB  1D03               	skipz
  5332  00FC  28FF               	goto	u1725
  5333  00FD  0836               	movf	??_printf+2,w
  5334  00FE  0240               	subwf	printf@val,w
  5335  00FF                     u1725:	
  5336  00FF  1C03               	btfss	3,0
  5337  0100  290F               	goto	l2075
  5338                           
  5339                           ;doprnt.c: 1318: break;
  5340  0101  3001               	movlw	1
  5341  0102  00B4               	movwf	??_printf
  5342  0103  0834               	movf	??_printf,w
  5343  0104  07C2               	addwf	printf@c,f
  5344  0105  28E6               	goto	L5
  5345  0106                     l2073:	
  5346                           ;doprnt.c: 1336: }
  5347                           
  5348                           ;doprnt.c: 1320: break;
  5349                           
  5350  0106  083F               	movf	printf@flag,w
  5351  0107  3980               	andlw	128
  5352                           
  5353                           ; Switch size 1, requested type "space"
  5354                           ; Number of cases is 2, Range of values is 0 to 128
  5355                           ; switch strategies available:
  5356                           ; Name         Instructions Cycles
  5357                           ; simple_byte            7     4 (average)
  5358                           ; jumptable            260     6 (fixed)
  5359                           ;	Chosen strategy is simple_byte
  5360  0108  3A00               	xorlw	0	; case 0
  5361  0109  1903               	skipnz
  5362  010A  28C2               	goto	l356
  5363  010B  3A80               	xorlw	128	; case 128
  5364  010C  1903               	skipnz
  5365  010D  28E4               	goto	l361
  5366  010E  290F               	goto	l2075
  5367  010F                     l2075:	
  5368                           
  5369                           ;doprnt.c: 1422: {
  5370                           ;doprnt.c: 1438: if(flag & 0x03)
  5371  010F  083F               	movf	printf@flag,w
  5372  0110  3903               	andlw	3
  5373  0111  1903               	btfsc	3,2
  5374  0112  2917               	goto	l2079
  5375                           
  5376                           ;doprnt.c: 1439: (putch('-') );
  5377  0113  302D               	movlw	45
  5378  0114  3187  2739  3180   	fcall	_putch
  5379  0117                     l2079:	
  5380                           
  5381                           ;doprnt.c: 1469: }
  5382                           ;doprnt.c: 1472: prec = c;
  5383  0117  0020               	movlb	0	; select bank0
  5384  0118  0842               	movf	printf@c,w
  5385  0119  00B4               	movwf	??_printf
  5386  011A  0834               	movf	??_printf,w
  5387  011B  00BB               	movwf	printf@prec
  5388                           
  5389                           ;doprnt.c: 1474: while(prec--) {
  5390  011C  297C               	goto	l2099
  5391  011D                     l2081:	
  5392                           ;doprnt.c: 1478: {
  5393                           ;doprnt.c: 1483: case 0x00:
  5394                           
  5395                           ;doprnt.c: 1476: switch((unsigned char)(flag & 0x80))
  5396                           
  5397                           
  5398                           ;doprnt.c: 1489: c = (val / dpowers[prec]) % 10 + '0';
  5399  011D  300A               	movlw	10
  5400  011E  00A8               	movwf	___lwmod@divisor
  5401  011F  3000               	movlw	0
  5402  0120  00A9               	movwf	___lwmod@divisor+1
  5403  0121  083B               	movf	printf@prec,w
  5404  0122  00B4               	movwf	??_printf
  5405  0123  01B5               	clrf	??_printf+1
  5406  0124  35B4               	lslf	??_printf,f
  5407  0125  0DB5               	rlf	??_printf+1,f
  5408  0126  30C9               	movlw	low (_dpowers| (0+32768))
  5409  0127  0734               	addwf	??_printf,w
  5410  0128  0084               	movwf	4
  5411  0129  3082               	movlw	high (_dpowers| (0+32768))
  5412  012A  3D35               	addwfc	??_printf+1,w
  5413  012B  0085               	movwf	5
  5414  012C  3F00               	moviw [0]fsr0
  5415  012D  00A0               	movwf	___lwdiv@divisor
  5416  012E  3F01               	moviw [1]fsr0
  5417  012F  00A1               	movwf	___lwdiv@divisor+1
  5418  0130  0841               	movf	printf@val+1,w
  5419  0131  00A3               	movwf	___lwdiv@dividend+1
  5420  0132  0840               	movf	printf@val,w
  5421  0133  00A2               	movwf	___lwdiv@dividend
  5422  0134  3185  25A5  3180   	fcall	___lwdiv
  5423  0137  0020               	movlb	0	; select bank0
  5424  0138  0821               	movf	?___lwdiv+1,w
  5425  0139  00AB               	movwf	___lwmod@dividend+1
  5426  013A  0820               	movf	?___lwdiv,w
  5427  013B  00AA               	movwf	___lwmod@dividend
  5428  013C  3185  25DA  3180   	fcall	___lwmod
  5429  013F  0020               	movlb	0	; select bank0
  5430  0140  0828               	movf	?___lwmod,w
  5431  0141  3E30               	addlw	48
  5432  0142  2975               	goto	L2
  5433  0143                     l2083:	
  5434                           ;doprnt.c: 1497: case 0x80:
  5435                           
  5436                           ;doprnt.c: 1491: break;
  5437                           
  5438                           
  5439                           ;doprnt.c: 1499: {
  5440                           ;doprnt.c: 1500: unsigned char idx = (val / hexpowers[prec]) & 0xF;
  5441  0143  083B               	movf	printf@prec,w
  5442  0144  00B4               	movwf	??_printf
  5443  0145  01B5               	clrf	??_printf+1
  5444  0146  35B4               	lslf	??_printf,f
  5445  0147  0DB5               	rlf	??_printf+1,f
  5446  0148  30D3               	movlw	low (_hexpowers| (0+32768))
  5447  0149  0734               	addwf	??_printf,w
  5448  014A  0084               	movwf	4
  5449  014B  3082               	movlw	high (_hexpowers| (0+32768))
  5450  014C  3D35               	addwfc	??_printf+1,w
  5451  014D  0085               	movwf	5
  5452  014E  3F00               	moviw [0]fsr0
  5453  014F  00A0               	movwf	___lwdiv@divisor
  5454  0150  3F01               	moviw [1]fsr0
  5455  0151  00A1               	movwf	___lwdiv@divisor+1
  5456  0152  0841               	movf	printf@val+1,w
  5457  0153  00A3               	movwf	___lwdiv@dividend+1
  5458  0154  0840               	movf	printf@val,w
  5459  0155  00A2               	movwf	___lwdiv@dividend
  5460  0156  3185  25A5  3180   	fcall	___lwdiv
  5461  0159  0020               	movlb	0	; select bank0
  5462  015A  0820               	movf	?___lwdiv,w
  5463  015B  390F               	andlw	15
  5464  015C  00B6               	movwf	??_printf+2
  5465  015D  0836               	movf	??_printf+2,w
  5466  015E  00B8               	movwf	printf@idx
  5467                           
  5468                           ;doprnt.c: 1502: c = (flag & 0x20 ? "0123456789ABCDEF" : "0123456789abcdef")[idx];
  5469  015F  1ABF               	btfsc	printf@flag,5
  5470  0160  2965               	goto	l2089
  5471  0161  30B0               	movlw	low (STR_15| (0+32768))
  5472  0162  00B9               	movwf	_printf$650
  5473  0163  3083               	movlw	high (STR_15| (0+32768))
  5474  0164  2968               	goto	L3
  5475  0165                     l2089:	
  5476  0165  309F               	movlw	low (STR_14| (0+32768))
  5477  0166  00B9               	movwf	_printf$650
  5478  0167  3083               	movlw	high (STR_14| (0+32768))
  5479  0168                     L3:	
  5480  0168  00BA               	movwf	_printf$650+1
  5481  0169  083A               	movf	_printf$650+1,w
  5482  016A  00B5               	movwf	??_printf+1
  5483  016B  0839               	movf	_printf$650,w
  5484  016C  00B4               	movwf	??_printf
  5485  016D  0838               	movf	printf@idx,w
  5486  016E  0734               	addwf	??_printf,w
  5487  016F  0084               	movwf	4
  5488  0170  0835               	movf	??_printf+1,w
  5489  0171  1803               	skipnc
  5490  0172  0A35               	incf	??_printf+1,w
  5491  0173  0085               	movwf	5
  5492  0174  0800               	movf	0,w	;code access
  5493  0175                     L2:	
  5494  0175  00B6               	movwf	??_printf+2
  5495  0176  0836               	movf	??_printf+2,w
  5496  0177  00C2               	movwf	printf@c
  5497  0178                     l2097:	
  5498                           ;doprnt.c: 1523: }
  5499                           
  5500                           ;doprnt.c: 1508: }
  5501                           ;doprnt.c: 1510: break;
  5502                           
  5503                           
  5504                           ;doprnt.c: 1524: (putch(c) );
  5505  0178  0842               	movf	printf@c,w
  5506  0179  3187  2739  3180   	fcall	_putch
  5507  017C                     l2099:	
  5508  017C  30FF               	movlw	255
  5509  017D  0020               	movlb	0	; select bank0
  5510  017E  00B4               	movwf	??_printf
  5511  017F  0834               	movf	??_printf,w
  5512  0180  07BB               	addwf	printf@prec,f
  5513  0181  0A3B               	incf	printf@prec,w
  5514  0182  1903               	btfsc	3,2
  5515  0183  2833               	goto	l2101
  5516  0184  083F               	movf	printf@flag,w
  5517  0185  3980               	andlw	128
  5518                           
  5519                           ; Switch size 1, requested type "space"
  5520                           ; Number of cases is 2, Range of values is 0 to 128
  5521                           ; switch strategies available:
  5522                           ; Name         Instructions Cycles
  5523                           ; simple_byte            7     4 (average)
  5524                           ; jumptable            260     6 (fixed)
  5525                           ;	Chosen strategy is simple_byte
  5526  0186  3A00               	xorlw	0	; case 0
  5527  0187  1903               	skipnz
  5528  0188  291D               	goto	l2081
  5529  0189  3A80               	xorlw	128	; case 128
  5530  018A  1903               	skipnz
  5531  018B  2943               	goto	l2083
  5532  018C  2978               	goto	l2097
  5533  018D  2978               	goto	l2097
  5534  018E                     l378:	
  5535                           ;doprnt.c: 1540: return 0;
  5536                           ;	Return value of _printf is never used
  5537                           
  5538                           ;doprnt.c: 1525: }
  5539                           ;doprnt.c: 1533: }
  5540                           ;doprnt.c: 1535: alldone:
  5541                           
  5542  018E  0008               	return
  5543  018F                     __end_of_printf:	
  5544                           
  5545                           	psect	text12
  5546  0739                     __ptext12:	
  5547 ;; *************** function _putch *****************
  5548 ;; Defined at:
  5549 ;;		line 111 in file "mcc_generated_files/eusart.c"
  5550 ;; Parameters:    Size  Location     Type
  5551 ;;  txData          1    wreg     unsigned char 
  5552 ;; Auto vars:     Size  Location     Type
  5553 ;;  txData          1    1[BANK0 ] unsigned char 
  5554 ;; Return value:  Size  Location     Type
  5555 ;;                  1    wreg      void 
  5556 ;; Registers used:
  5557 ;;		wreg, status,2, status,0, pclath, cstack
  5558 ;; Tracked objects:
  5559 ;;		On entry : 0/0
  5560 ;;		On exit  : 0/0
  5561 ;;		Unchanged: 0/0
  5562 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
  5563 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  5564 ;;      Locals:         0       1       0       0       0       0       0       0       0       0       0       0       
      +0       0
  5565 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  5566 ;;      Totals:         0       1       0       0       0       0       0       0       0       0       0       0       
      +0       0
  5567 ;;Total ram usage:        1 bytes
  5568 ;; Hardware stack levels used:    1
  5569 ;; Hardware stack levels required when called:    4
  5570 ;; This function calls:
  5571 ;;		_EUSART_Write
  5572 ;; This function is called by:
  5573 ;;		_printf
  5574 ;;		_puts
  5575 ;;		_cputs
  5576 ;; This function uses a non-reentrant model
  5577 ;;
  5578                           
  5579                           
  5580                           ;psect for function _putch
  5581  0739                     _putch:	
  5582                           
  5583                           ;incstack = 0
  5584                           ; Regs used in _putch: [wreg+status,2+status,0+pclath+cstack]
  5585                           ;putch@txData stored from wreg
  5586  0739  0020               	movlb	0	; select bank0
  5587  073A  00A1               	movwf	putch@txData
  5588                           
  5589                           ;eusart.c: 113: EUSART_Write(txData);
  5590  073B  0821               	movf	putch@txData,w
  5591  073C  3187  2720         	fcall	_EUSART_Write
  5592  073E  0008               	return
  5593  073F                     __end_of_putch:	
  5594                           
  5595                           	psect	text13
  5596  0720                     __ptext13:	
  5597 ;; *************** function _EUSART_Write *****************
  5598 ;; Defined at:
  5599 ;;		line 97 in file "mcc_generated_files/eusart.c"
  5600 ;; Parameters:    Size  Location     Type
  5601 ;;  txData          1    wreg     unsigned char 
  5602 ;; Auto vars:     Size  Location     Type
  5603 ;;  txData          1    0[BANK0 ] unsigned char 
  5604 ;; Return value:  Size  Location     Type
  5605 ;;                  1    wreg      void 
  5606 ;; Registers used:
  5607 ;;		wreg
  5608 ;; Tracked objects:
  5609 ;;		On entry : 0/0
  5610 ;;		On exit  : 0/0
  5611 ;;		Unchanged: 0/0
  5612 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
  5613 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  5614 ;;      Locals:         0       1       0       0       0       0       0       0       0       0       0       0       
      +0       0
  5615 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  5616 ;;      Totals:         0       1       0       0       0       0       0       0       0       0       0       0       
      +0       0
  5617 ;;Total ram usage:        1 bytes
  5618 ;; Hardware stack levels used:    1
  5619 ;; Hardware stack levels required when called:    3
  5620 ;; This function calls:
  5621 ;;		Nothing
  5622 ;; This function is called by:
  5623 ;;		_putch
  5624 ;; This function uses a non-reentrant model
  5625 ;;
  5626                           
  5627                           
  5628                           ;psect for function _EUSART_Write
  5629  0720                     _EUSART_Write:	
  5630                           
  5631                           ;incstack = 0
  5632                           ; Regs used in _EUSART_Write: [wreg]
  5633                           ;EUSART_Write@txData stored from wreg
  5634  0720  0020               	movlb	0	; select bank0
  5635  0721  00A0               	movwf	EUSART_Write@txData
  5636  0722                     l31:	
  5637                           ;eusart.c: 100: {
  5638                           
  5639                           ;eusart.c: 99: while(0 == PIR3bits.TXIF)
  5640                           
  5641  0722  002E               	movlb	14	; select bank14
  5642  0723  1E0F               	btfss	15,4	;volatile
  5643  0724  2F22               	goto	l31
  5644                           
  5645                           ;eusart.c: 101: }
  5646                           ;eusart.c: 103: TX1REG = txData;
  5647  0725  0020               	movlb	0	; select bank0
  5648  0726  0820               	movf	EUSART_Write@txData,w
  5649  0727  0022               	movlb	2	; select bank2
  5650  0728  009A               	movwf	26	;volatile
  5651  0729  0008               	return
  5652  072A                     __end_of_EUSART_Write:	
  5653                           
  5654                           	psect	text14
  5655  05DA                     __ptext14:	
  5656 ;; *************** function ___lwmod *****************
  5657 ;; Defined at:
  5658 ;;		line 6 in file "/opt/microchip/xc8/v1.41/sources/common/lwmod.c"
  5659 ;; Parameters:    Size  Location     Type
  5660 ;;  divisor         2    8[BANK0 ] unsigned int 
  5661 ;;  dividend        2   10[BANK0 ] unsigned int 
  5662 ;; Auto vars:     Size  Location     Type
  5663 ;;  counter         1   13[BANK0 ] unsigned char 
  5664 ;; Return value:  Size  Location     Type
  5665 ;;                  2    8[BANK0 ] unsigned int 
  5666 ;; Registers used:
  5667 ;;		wreg, status,2, status,0
  5668 ;; Tracked objects:
  5669 ;;		On entry : 0/0
  5670 ;;		On exit  : 0/0
  5671 ;;		Unchanged: 0/0
  5672 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
  5673 ;;      Params:         0       4       0       0       0       0       0       0       0       0       0       0       
      +0       0
  5674 ;;      Locals:         0       1       0       0       0       0       0       0       0       0       0       0       
      +0       0
  5675 ;;      Temps:          0       1       0       0       0       0       0       0       0       0       0       0       
      +0       0
  5676 ;;      Totals:         0       6       0       0       0       0       0       0       0       0       0       0       
      +0       0
  5677 ;;Total ram usage:        6 bytes
  5678 ;; Hardware stack levels used:    1
  5679 ;; Hardware stack levels required when called:    3
  5680 ;; This function calls:
  5681 ;;		Nothing
  5682 ;; This function is called by:
  5683 ;;		_printf
  5684 ;; This function uses a non-reentrant model
  5685 ;;
  5686                           
  5687                           
  5688                           ;psect for function ___lwmod
  5689  05DA                     ___lwmod:	
  5690                           
  5691                           ;incstack = 0
  5692                           ; Regs used in ___lwmod: [wreg+status,2+status,0]
  5693  05DA  0020               	movlb	0	; select bank0
  5694  05DB  0828               	movf	___lwmod@divisor,w
  5695  05DC  0429               	iorwf	___lwmod@divisor+1,w
  5696  05DD  1903               	btfsc	3,2
  5697  05DE  2E02               	goto	l1489
  5698  05DF  01AD               	clrf	___lwmod@counter
  5699  05E0  0AAD               	incf	___lwmod@counter,f
  5700  05E1                     l1479:	
  5701  05E1  1BA9               	btfsc	___lwmod@divisor+1,7
  5702  05E2  2DED               	goto	l1481
  5703  05E3  3001               	movlw	1
  5704  05E4                     u955:	
  5705  05E4  35A8               	lslf	___lwmod@divisor,f
  5706  05E5  0DA9               	rlf	___lwmod@divisor+1,f
  5707  05E6  0B89               	decfsz	9,f
  5708  05E7  2DE4               	goto	u955
  5709  05E8  3001               	movlw	1
  5710  05E9  00AC               	movwf	??___lwmod
  5711  05EA  082C               	movf	??___lwmod,w
  5712  05EB  07AD               	addwf	___lwmod@counter,f
  5713  05EC  2DE1               	goto	l1479
  5714  05ED                     l1481:	
  5715  05ED  0829               	movf	___lwmod@divisor+1,w
  5716  05EE  022B               	subwf	___lwmod@dividend+1,w
  5717  05EF  1D03               	skipz
  5718  05F0  2DF3               	goto	u975
  5719  05F1  0828               	movf	___lwmod@divisor,w
  5720  05F2  022A               	subwf	___lwmod@dividend,w
  5721  05F3                     u975:	
  5722  05F3  1C03               	skipc
  5723  05F4  2DF9               	goto	l1485
  5724  05F5  0828               	movf	___lwmod@divisor,w
  5725  05F6  02AA               	subwf	___lwmod@dividend,f
  5726  05F7  0829               	movf	___lwmod@divisor+1,w
  5727  05F8  3BAB               	subwfb	___lwmod@dividend+1,f
  5728  05F9                     l1485:	
  5729  05F9  3001               	movlw	1
  5730  05FA                     u985:	
  5731  05FA  36A9               	lsrf	___lwmod@divisor+1,f
  5732  05FB  0CA8               	rrf	___lwmod@divisor,f
  5733  05FC  0B89               	decfsz	9,f
  5734  05FD  2DFA               	goto	u985
  5735  05FE  3001               	movlw	1
  5736  05FF  02AD               	subwf	___lwmod@counter,f
  5737  0600  1D03               	btfss	3,2
  5738  0601  2DED               	goto	l1481
  5739  0602                     l1489:	
  5740  0602  082B               	movf	___lwmod@dividend+1,w
  5741  0603  00A9               	movwf	?___lwmod+1
  5742  0604  082A               	movf	___lwmod@dividend,w
  5743  0605  00A8               	movwf	?___lwmod
  5744  0606  0008               	return
  5745  0607                     __end_of___lwmod:	
  5746                           
  5747                           	psect	text15
  5748  05A5                     __ptext15:	
  5749 ;; *************** function ___lwdiv *****************
  5750 ;; Defined at:
  5751 ;;		line 6 in file "/opt/microchip/xc8/v1.41/sources/common/lwdiv.c"
  5752 ;; Parameters:    Size  Location     Type
  5753 ;;  divisor         2    0[BANK0 ] unsigned int 
  5754 ;;  dividend        2    2[BANK0 ] unsigned int 
  5755 ;; Auto vars:     Size  Location     Type
  5756 ;;  quotient        2    5[BANK0 ] unsigned int 
  5757 ;;  counter         1    7[BANK0 ] unsigned char 
  5758 ;; Return value:  Size  Location     Type
  5759 ;;                  2    0[BANK0 ] unsigned int 
  5760 ;; Registers used:
  5761 ;;		wreg, status,2, status,0
  5762 ;; Tracked objects:
  5763 ;;		On entry : 0/0
  5764 ;;		On exit  : 0/0
  5765 ;;		Unchanged: 0/0
  5766 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
  5767 ;;      Params:         0       4       0       0       0       0       0       0       0       0       0       0       
      +0       0
  5768 ;;      Locals:         0       3       0       0       0       0       0       0       0       0       0       0       
      +0       0
  5769 ;;      Temps:          0       1       0       0       0       0       0       0       0       0       0       0       
      +0       0
  5770 ;;      Totals:         0       8       0       0       0       0       0       0       0       0       0       0       
      +0       0
  5771 ;;Total ram usage:        8 bytes
  5772 ;; Hardware stack levels used:    1
  5773 ;; Hardware stack levels required when called:    3
  5774 ;; This function calls:
  5775 ;;		Nothing
  5776 ;; This function is called by:
  5777 ;;		_printf
  5778 ;; This function uses a non-reentrant model
  5779 ;;
  5780                           
  5781                           
  5782                           ;psect for function ___lwdiv
  5783  05A5                     ___lwdiv:	
  5784                           
  5785                           ;incstack = 0
  5786                           ; Regs used in ___lwdiv: [wreg+status,2+status,0]
  5787  05A5  0020               	movlb	0	; select bank0
  5788  05A6  01A5               	clrf	___lwdiv@quotient
  5789  05A7  01A6               	clrf	___lwdiv@quotient+1
  5790  05A8  0820               	movf	___lwdiv@divisor,w
  5791  05A9  0421               	iorwf	___lwdiv@divisor+1,w
  5792  05AA  1903               	btfsc	3,2
  5793  05AB  2DD5               	goto	l1467
  5794  05AC  01A7               	clrf	___lwdiv@counter
  5795  05AD  0AA7               	incf	___lwdiv@counter,f
  5796  05AE                     l1455:	
  5797  05AE  1BA1               	btfsc	___lwdiv@divisor+1,7
  5798  05AF  2DBA               	goto	l1457
  5799  05B0  3001               	movlw	1
  5800  05B1                     u885:	
  5801  05B1  35A0               	lslf	___lwdiv@divisor,f
  5802  05B2  0DA1               	rlf	___lwdiv@divisor+1,f
  5803  05B3  0B89               	decfsz	9,f
  5804  05B4  2DB1               	goto	u885
  5805  05B5  3001               	movlw	1
  5806  05B6  00A4               	movwf	??___lwdiv
  5807  05B7  0824               	movf	??___lwdiv,w
  5808  05B8  07A7               	addwf	___lwdiv@counter,f
  5809  05B9  2DAE               	goto	l1455
  5810  05BA                     l1457:	
  5811  05BA  3001               	movlw	1
  5812  05BB                     u905:	
  5813  05BB  35A5               	lslf	___lwdiv@quotient,f
  5814  05BC  0DA6               	rlf	___lwdiv@quotient+1,f
  5815  05BD  0B89               	decfsz	9,f
  5816  05BE  2DBB               	goto	u905
  5817  05BF  0821               	movf	___lwdiv@divisor+1,w
  5818  05C0  0223               	subwf	___lwdiv@dividend+1,w
  5819  05C1  1D03               	skipz
  5820  05C2  2DC5               	goto	u915
  5821  05C3  0820               	movf	___lwdiv@divisor,w
  5822  05C4  0222               	subwf	___lwdiv@dividend,w
  5823  05C5                     u915:	
  5824  05C5  1C03               	skipc
  5825  05C6  2DCC               	goto	l1463
  5826  05C7  0820               	movf	___lwdiv@divisor,w
  5827  05C8  02A2               	subwf	___lwdiv@dividend,f
  5828  05C9  0821               	movf	___lwdiv@divisor+1,w
  5829  05CA  3BA3               	subwfb	___lwdiv@dividend+1,f
  5830  05CB  1425               	bsf	___lwdiv@quotient,0
  5831  05CC                     l1463:	
  5832  05CC  3001               	movlw	1
  5833  05CD                     u925:	
  5834  05CD  36A1               	lsrf	___lwdiv@divisor+1,f
  5835  05CE  0CA0               	rrf	___lwdiv@divisor,f
  5836  05CF  0B89               	decfsz	9,f
  5837  05D0  2DCD               	goto	u925
  5838  05D1  3001               	movlw	1
  5839  05D2  02A7               	subwf	___lwdiv@counter,f
  5840  05D3  1D03               	btfss	3,2
  5841  05D4  2DBA               	goto	l1457
  5842  05D5                     l1467:	
  5843  05D5  0826               	movf	___lwdiv@quotient+1,w
  5844  05D6  00A1               	movwf	?___lwdiv+1
  5845  05D7  0825               	movf	___lwdiv@quotient,w
  5846  05D8  00A0               	movwf	?___lwdiv
  5847  05D9  0008               	return
  5848  05DA                     __end_of___lwdiv:	
  5849                           
  5850                           	psect	text16
  5851  0569                     __ptext16:	
  5852 ;; *************** function _EMC1001_Read *****************
  5853 ;; Defined at:
  5854 ;;		line 26 in file "main.c"
  5855 ;; Parameters:    Size  Location     Type
  5856 ;;  reg             1    wreg     unsigned char 
  5857 ;;  pData           1    7[BANK0 ] PTR unsigned char 
  5858 ;;		 -> EMC1001_PrintTemp@templo(1), EMC1001_PrintTemp@temp(1), EMC1001_PrintInfo@data(1), 
  5859 ;; Auto vars:     Size  Location     Type
  5860 ;;  reg             1   10[BANK0 ] unsigned char 
  5861 ;;  status          1   11[BANK0 ] enum E14334
  5862 ;; Return value:  Size  Location     Type
  5863 ;;                  1    wreg      unsigned char 
  5864 ;; Registers used:
  5865 ;;		wreg, fsr1l, fsr1h, status,2, status,0, pclath, cstack
  5866 ;; Tracked objects:
  5867 ;;		On entry : 0/0
  5868 ;;		On exit  : 0/0
  5869 ;;		Unchanged: 0/0
  5870 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
  5871 ;;      Params:         0       1       0       0       0       0       0       0       0       0       0       0       
      +0       0
  5872 ;;      Locals:         0       2       0       0       0       0       0       0       0       0       0       0       
      +0       0
  5873 ;;      Temps:          0       2       0       0       0       0       0       0       0       0       0       0       
      +0       0
  5874 ;;      Totals:         0       5       0       0       0       0       0       0       0       0       0       0       
      +0       0
  5875 ;;Total ram usage:        5 bytes
  5876 ;; Hardware stack levels used:    1
  5877 ;; Hardware stack levels required when called:    4
  5878 ;; This function calls:
  5879 ;;		_I2C2_MasterReadTRBBuild
  5880 ;;		_I2C2_MasterTRBInsert
  5881 ;;		_I2C2_MasterWriteTRBBuild
  5882 ;; This function is called by:
  5883 ;;		_EMC1001_PrintInfo
  5884 ;;		_EMC1001_PrintTemp
  5885 ;; This function uses a non-reentrant model
  5886 ;;
  5887                           
  5888                           
  5889                           ;psect for function _EMC1001_Read
  5890  0569                     _EMC1001_Read:	
  5891                           
  5892                           ;incstack = 0
  5893                           ; Regs used in _EMC1001_Read: [wreg+fsr1l+fsr1h+status,2+status,0+pclath+cstack]
  5894                           ;EMC1001_Read@reg stored from wreg
  5895  0569  0020               	movlb	0	; select bank0
  5896  056A  00AA               	movwf	EMC1001_Read@reg
  5897                           
  5898                           ;main.c: 28: I2C2_MESSAGE_STATUS status = I2C2_MESSAGE_PENDING;
  5899  056B  3002               	movlw	2
  5900  056C  00A8               	movwf	??_EMC1001_Read
  5901  056D  0828               	movf	??_EMC1001_Read,w
  5902  056E  00AB               	movwf	EMC1001_Read@status
  5903                           
  5904                           ;main.c: 29: static I2C2_TRANSACTION_REQUEST_BLOCK trb[2];
  5905                           ;main.c: 31: I2C2_MasterWriteTRBBuild(&trb[0], &reg, 1, 0x38);
  5906  056F  302A               	movlw	(low (EMC1001_Read@reg| 0))& (0+255)
  5907  0570  00A8               	movwf	??_EMC1001_Read
  5908  0571  0828               	movf	??_EMC1001_Read,w
  5909  0572  00A0               	movwf	I2C2_MasterWriteTRBBuild@pdata
  5910  0573  01A1               	clrf	I2C2_MasterWriteTRBBuild@length
  5911  0574  0AA1               	incf	I2C2_MasterWriteTRBBuild@length,f
  5912  0575  3038               	movlw	56
  5913  0576  00A2               	movwf	I2C2_MasterWriteTRBBuild@address
  5914  0577  3000               	movlw	0
  5915  0578  00A3               	movwf	I2C2_MasterWriteTRBBuild@address+1
  5916  0579  3050               	movlw	(low (EMC1001_Read@trb| 0))& (0+255)
  5917  057A  3186  2650  3185   	fcall	_I2C2_MasterWriteTRBBuild
  5918                           
  5919                           ;main.c: 32: I2C2_MasterReadTRBBuild(&trb[1], pData, 1, 0x38);
  5920  057D  0020               	movlb	0	; select bank0
  5921  057E  0827               	movf	EMC1001_Read@pData,w
  5922  057F  00A8               	movwf	??_EMC1001_Read
  5923  0580  0828               	movf	??_EMC1001_Read,w
  5924  0581  00A0               	movwf	I2C2_MasterReadTRBBuild@pdata
  5925  0582  01A1               	clrf	I2C2_MasterReadTRBBuild@length
  5926  0583  0AA1               	incf	I2C2_MasterReadTRBBuild@length,f
  5927  0584  3038               	movlw	56
  5928  0585  00A2               	movwf	I2C2_MasterReadTRBBuild@address
  5929  0586  3000               	movlw	0
  5930  0587  00A3               	movwf	I2C2_MasterReadTRBBuild@address+1
  5931  0588  3054               	movlw	(low ((EMC1001_Read@trb| 0+4)))& (0+255)
  5932  0589  3186  2607  3185   	fcall	_I2C2_MasterReadTRBBuild
  5933                           
  5934                           ;main.c: 33: I2C2_MasterTRBInsert(2, &trb[0], &status);
  5935  058C  3050               	movlw	(low (EMC1001_Read@trb| 0))& (0+255)
  5936  058D  0020               	movlb	0	; select bank0
  5937  058E  00A8               	movwf	??_EMC1001_Read
  5938  058F  0828               	movf	??_EMC1001_Read,w
  5939  0590  00A0               	movwf	I2C2_MasterTRBInsert@ptrb_list
  5940  0591  302B               	movlw	(low (EMC1001_Read@status| 0))& (0+255)
  5941  0592  00A9               	movwf	??_EMC1001_Read+1
  5942  0593  0829               	movf	??_EMC1001_Read+1,w
  5943  0594  00A1               	movwf	I2C2_MasterTRBInsert@pflag
  5944  0595  3002               	movlw	2
  5945  0596  3185  2523  3185   	fcall	_I2C2_MasterTRBInsert
  5946  0599                     l1573:	
  5947                           ;main.c: 35: while(status == I2C2_MESSAGE_PENDING);
  5948                           
  5949  0599  3002               	movlw	2
  5950  059A  0020               	movlb	0	; select bank0
  5951  059B  062B               	xorwf	EMC1001_Read@status,w
  5952  059C  1903               	btfsc	3,2
  5953  059D  2D99               	goto	l1573
  5954                           
  5955                           ;main.c: 37: return (status == I2C2_MESSAGE_COMPLETE);
  5956  059E  082B               	movf	EMC1001_Read@status,w
  5957  059F  1D03               	btfss	3,2
  5958  05A0  2DA3               	goto	u1060
  5959  05A1  3001               	movlw	1
  5960  05A2  0008               	return
  5961  05A3                     u1060:	
  5962  05A3  3000               	movlw	0
  5963  05A4  0008               	return
  5964  05A5                     __end_of_EMC1001_Read:	
  5965                           
  5966                           	psect	text17
  5967  0650                     __ptext17:	
  5968 ;; *************** function _I2C2_MasterWriteTRBBuild *****************
  5969 ;; Defined at:
  5970 ;;		line 707 in file "mcc_generated_files/i2c2.c"
  5971 ;; Parameters:    Size  Location     Type
  5972 ;;  ptrb            1    wreg     PTR struct .
  5973 ;;		 -> EMC1001_Read@trb(8), I2C2_MasterWrite@trBlock(4), 
  5974 ;;  pdata           1    0[BANK0 ] PTR unsigned char 
  5975 ;;		 -> EMC1001_Read@reg(1), 
  5976 ;;  length          1    1[BANK0 ] unsigned char 
  5977 ;;  address         2    2[BANK0 ] unsigned int 
  5978 ;; Auto vars:     Size  Location     Type
  5979 ;;  ptrb            1    6[BANK0 ] PTR struct .
  5980 ;;		 -> EMC1001_Read@trb(8), I2C2_MasterWrite@trBlock(4), 
  5981 ;; Return value:  Size  Location     Type
  5982 ;;                  1    wreg      void 
  5983 ;; Registers used:
  5984 ;;		wreg, fsr1l, fsr1h, status,2, status,0
  5985 ;; Tracked objects:
  5986 ;;		On entry : 0/0
  5987 ;;		On exit  : 0/0
  5988 ;;		Unchanged: 0/0
  5989 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
  5990 ;;      Params:         0       4       0       0       0       0       0       0       0       0       0       0       
      +0       0
  5991 ;;      Locals:         0       1       0       0       0       0       0       0       0       0       0       0       
      +0       0
  5992 ;;      Temps:          0       2       0       0       0       0       0       0       0       0       0       0       
      +0       0
  5993 ;;      Totals:         0       7       0       0       0       0       0       0       0       0       0       0       
      +0       0
  5994 ;;Total ram usage:        7 bytes
  5995 ;; Hardware stack levels used:    1
  5996 ;; Hardware stack levels required when called:    3
  5997 ;; This function calls:
  5998 ;;		Nothing
  5999 ;; This function is called by:
  6000 ;;		_EMC1001_Read
  6001 ;;		_I2C2_MasterWrite
  6002 ;; This function uses a non-reentrant model
  6003 ;;
  6004                           
  6005                           
  6006                           ;psect for function _I2C2_MasterWriteTRBBuild
  6007  0650                     _I2C2_MasterWriteTRBBuild:	
  6008                           
  6009                           ;incstack = 0
  6010                           ; Regs used in _I2C2_MasterWriteTRBBuild: [wreg+fsr1l+fsr1h+status,2+status,0]
  6011                           ;I2C2_MasterWriteTRBBuild@ptrb stored from wreg
  6012  0650  0020               	movlb	0	; select bank0
  6013  0651  00A6               	movwf	I2C2_MasterWriteTRBBuild@ptrb
  6014                           
  6015                           ;i2c2.c: 713: ptrb->address = address << 1;
  6016  0652  0823               	movf	I2C2_MasterWriteTRBBuild@address+1,w
  6017  0653  00A5               	movwf	??_I2C2_MasterWriteTRBBuild+1
  6018  0654  0822               	movf	I2C2_MasterWriteTRBBuild@address,w
  6019  0655  00A4               	movwf	??_I2C2_MasterWriteTRBBuild
  6020  0656  35A4               	lslf	??_I2C2_MasterWriteTRBBuild,f
  6021  0657  0DA5               	rlf	??_I2C2_MasterWriteTRBBuild+1,f
  6022  0658  0826               	movf	I2C2_MasterWriteTRBBuild@ptrb,w
  6023  0659  0086               	movwf	6
  6024  065A  0187               	clrf	7
  6025  065B  0824               	movf	??_I2C2_MasterWriteTRBBuild,w
  6026  065C  3FC0               	movwi [0]fsr1
  6027  065D  0825               	movf	??_I2C2_MasterWriteTRBBuild+1,w
  6028  065E  3FC1               	movwi [1]fsr1
  6029                           
  6030                           ;i2c2.c: 714: ptrb->length = length;
  6031  065F  0821               	movf	I2C2_MasterWriteTRBBuild@length,w
  6032  0660  00A4               	movwf	??_I2C2_MasterWriteTRBBuild
  6033  0661  0826               	movf	I2C2_MasterWriteTRBBuild@ptrb,w
  6034  0662  3E02               	addlw	2
  6035  0663  0086               	movwf	6
  6036  0664  0187               	clrf	7
  6037  0665  0824               	movf	??_I2C2_MasterWriteTRBBuild,w
  6038  0666  0081               	movwf	1
  6039                           
  6040                           ;i2c2.c: 715: ptrb->pbuffer = pdata;
  6041  0667  0820               	movf	I2C2_MasterWriteTRBBuild@pdata,w
  6042  0668  00A4               	movwf	??_I2C2_MasterWriteTRBBuild
  6043  0669  0826               	movf	I2C2_MasterWriteTRBBuild@ptrb,w
  6044  066A  3E03               	addlw	3
  6045  066B  0086               	movwf	6
  6046  066C  0187               	clrf	7
  6047  066D  0824               	movf	??_I2C2_MasterWriteTRBBuild,w
  6048  066E  0081               	movwf	1
  6049  066F  0008               	return
  6050  0670                     __end_of_I2C2_MasterWriteTRBBuild:	
  6051                           
  6052                           	psect	text18
  6053  0523                     __ptext18:	
  6054 ;; *************** function _I2C2_MasterTRBInsert *****************
  6055 ;; Defined at:
  6056 ;;		line 641 in file "mcc_generated_files/i2c2.c"
  6057 ;; Parameters:    Size  Location     Type
  6058 ;;  count           1    wreg     unsigned char 
  6059 ;;  ptrb_list       1    0[BANK0 ] PTR struct .
  6060 ;;		 -> EMC1001_Read@trb(8), I2C2_MasterRead@trBlock(4), I2C2_MasterWrite@trBlock(4), 
  6061 ;;  pflag           1    1[BANK0 ] PTR enum E14260
  6062 ;;		 -> EMC1001_Read@status(1), 
  6063 ;; Auto vars:     Size  Location     Type
  6064 ;;  count           1    3[BANK0 ] unsigned char 
  6065 ;; Return value:  Size  Location     Type
  6066 ;;                  1    wreg      void 
  6067 ;; Registers used:
  6068 ;;		wreg, fsr1l, fsr1h, status,2, status,0
  6069 ;; Tracked objects:
  6070 ;;		On entry : 0/0
  6071 ;;		On exit  : 0/0
  6072 ;;		Unchanged: 0/0
  6073 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
  6074 ;;      Params:         0       2       0       0       0       0       0       0       0       0       0       0       
      +0       0
  6075 ;;      Locals:         0       1       0       0       0       0       0       0       0       0       0       0       
      +0       0
  6076 ;;      Temps:          0       1       0       0       0       0       0       0       0       0       0       0       
      +0       0
  6077 ;;      Totals:         0       4       0       0       0       0       0       0       0       0       0       0       
      +0       0
  6078 ;;Total ram usage:        4 bytes
  6079 ;; Hardware stack levels used:    1
  6080 ;; Hardware stack levels required when called:    3
  6081 ;; This function calls:
  6082 ;;		Nothing
  6083 ;; This function is called by:
  6084 ;;		_EMC1001_Read
  6085 ;;		_I2C2_MasterWrite
  6086 ;;		_I2C2_MasterRead
  6087 ;; This function uses a non-reentrant model
  6088 ;;
  6089                           
  6090                           
  6091                           ;psect for function _I2C2_MasterTRBInsert
  6092  0523                     _I2C2_MasterTRBInsert:	
  6093                           
  6094                           ;incstack = 0
  6095                           ; Regs used in _I2C2_MasterTRBInsert: [wreg+fsr1l+fsr1h+status,2+status,0]
  6096                           ;I2C2_MasterTRBInsert@count stored from wreg
  6097  0523  0020               	movlb	0	; select bank0
  6098  0524  00A3               	movwf	I2C2_MasterTRBInsert@count
  6099                           
  6100                           ;i2c2.c: 648: if (i2c2_object.trStatus.s.full != 1)
  6101  0525  184C               	btfsc	_i2c2_object+2,0
  6102  0526  2D57               	goto	l1435
  6103                           
  6104                           ;i2c2.c: 649: {
  6105                           ;i2c2.c: 650: *pflag = I2C2_MESSAGE_PENDING;
  6106  0527  3002               	movlw	2
  6107  0528  00A2               	movwf	??_I2C2_MasterTRBInsert
  6108  0529  0821               	movf	I2C2_MasterTRBInsert@pflag,w
  6109  052A  0086               	movwf	6
  6110  052B  0187               	clrf	7
  6111  052C  0822               	movf	??_I2C2_MasterTRBInsert,w
  6112  052D  0081               	movwf	1
  6113                           
  6114                           ;i2c2.c: 652: i2c2_object.pTrTail->ptrb_list = ptrb_list;
  6115  052E  0820               	movf	I2C2_MasterTRBInsert@ptrb_list,w
  6116  052F  00A2               	movwf	??_I2C2_MasterTRBInsert
  6117  0530  0A4A               	incf	_i2c2_object,w
  6118  0531  0086               	movwf	6
  6119  0532  0187               	clrf	7
  6120  0533  0822               	movf	??_I2C2_MasterTRBInsert,w
  6121  0534  0081               	movwf	1
  6122                           
  6123                           ;i2c2.c: 653: i2c2_object.pTrTail->count = count;
  6124  0535  0823               	movf	I2C2_MasterTRBInsert@count,w
  6125  0536  00A2               	movwf	??_I2C2_MasterTRBInsert
  6126  0537  084A               	movf	_i2c2_object,w
  6127  0538  0086               	movwf	6
  6128  0539  0187               	clrf	7
  6129  053A  0822               	movf	??_I2C2_MasterTRBInsert,w
  6130  053B  0081               	movwf	1
  6131                           
  6132                           ;i2c2.c: 654: i2c2_object.pTrTail->pTrFlag = pflag;
  6133  053C  0821               	movf	I2C2_MasterTRBInsert@pflag,w
  6134  053D  00A2               	movwf	??_I2C2_MasterTRBInsert
  6135  053E  084A               	movf	_i2c2_object,w
  6136  053F  3E02               	addlw	2
  6137  0540  0086               	movwf	6
  6138  0541  0187               	clrf	7
  6139  0542  0822               	movf	??_I2C2_MasterTRBInsert,w
  6140  0543  0081               	movwf	1
  6141                           
  6142                           ;i2c2.c: 655: i2c2_object.pTrTail++;
  6143  0544  3003               	movlw	3
  6144  0545  00A2               	movwf	??_I2C2_MasterTRBInsert
  6145  0546  0822               	movf	??_I2C2_MasterTRBInsert,w
  6146  0547  07CA               	addwf	_i2c2_object,f
  6147                           
  6148                           ;i2c2.c: 658: if (i2c2_object.pTrTail == (i2c2_tr_queue + 1))
  6149  0548  084A               	movf	_i2c2_object,w
  6150  0549  3A63               	xorlw	(low ((_i2c2_tr_queue| 0+3)))& (0+255)
  6151  054A  1D03               	skipz
  6152  054B  2D50               	goto	l1431
  6153                           
  6154                           ;i2c2.c: 659: {
  6155                           ;i2c2.c: 661: i2c2_object.pTrTail = i2c2_tr_queue;
  6156  054C  3060               	movlw	(low (_i2c2_tr_queue| 0))& (0+255)
  6157  054D  00A2               	movwf	??_I2C2_MasterTRBInsert
  6158  054E  0822               	movf	??_I2C2_MasterTRBInsert,w
  6159  054F  00CA               	movwf	_i2c2_object
  6160  0550                     l1431:	
  6161                           
  6162                           ;i2c2.c: 662: }
  6163                           ;i2c2.c: 666: i2c2_object.trStatus.s.empty = 0;
  6164  0550  10CC               	bcf	_i2c2_object+2,1
  6165                           
  6166                           ;i2c2.c: 669: if (i2c2_object.pTrHead == i2c2_object.pTrTail)
  6167  0551  084B               	movf	low ((_i2c2_object| 0+1)),w
  6168  0552  064A               	xorwf	_i2c2_object,w
  6169  0553  1D03               	skipz
  6170  0554  2D5C               	goto	l1437
  6171                           
  6172                           ;i2c2.c: 670: {
  6173                           ;i2c2.c: 672: i2c2_object.trStatus.s.full = 1;
  6174  0555  144C               	bsf	_i2c2_object+2,0
  6175                           
  6176                           ;i2c2.c: 673: }
  6177                           ;i2c2.c: 675: }
  6178  0556  2D5C               	goto	l1437
  6179  0557                     l1435:	
  6180                           
  6181                           ;i2c2.c: 676: else
  6182                           ;i2c2.c: 677: {
  6183                           ;i2c2.c: 678: *pflag = I2C2_MESSAGE_FAIL;
  6184  0557  0821               	movf	I2C2_MasterTRBInsert@pflag,w
  6185  0558  0086               	movwf	6
  6186  0559  0187               	clrf	7
  6187  055A  0181               	clrf	1
  6188  055B  0A81               	incf	1,f
  6189  055C                     l1437:	
  6190                           
  6191                           ;i2c2.c: 679: }
  6192                           ;i2c2.c: 682: if (*pflag == I2C2_MESSAGE_PENDING)
  6193  055C  0821               	movf	I2C2_MasterTRBInsert@pflag,w
  6194  055D  0086               	movwf	6
  6195  055E  0187               	clrf	7
  6196  055F  3002               	movlw	2
  6197  0560  0601               	xorwf	1,w
  6198  0561  1D03               	btfss	3,2
  6199  0562  0008               	return
  6200  0563                     l1441:	
  6201                           ;i2c2.c: 683: {
  6202                           ;i2c2.c: 684: while(i2c2_state != S_MASTER_IDLE);
  6203                           
  6204  0563  084F               	movf	_i2c2_state,w
  6205  0564  1D03               	btfss	3,2
  6206  0565  2D63               	goto	l1441
  6207                           
  6208                           ;i2c2.c: 685: {
  6209                           ;i2c2.c: 688: PIR3bits.SSP2IF = 1;
  6210  0566  002E               	movlb	14	; select bank14
  6211  0567  150F               	bsf	15,2	;volatile
  6212  0568  0008               	return
  6213  0569                     __end_of_I2C2_MasterTRBInsert:	
  6214                           
  6215                           	psect	text19
  6216  0607                     __ptext19:	
  6217 ;; *************** function _I2C2_MasterReadTRBBuild *****************
  6218 ;; Defined at:
  6219 ;;		line 694 in file "mcc_generated_files/i2c2.c"
  6220 ;; Parameters:    Size  Location     Type
  6221 ;;  ptrb            1    wreg     PTR struct .
  6222 ;;		 -> EMC1001_Read@trb(8), I2C2_MasterRead@trBlock(4), 
  6223 ;;  pdata           1    0[BANK0 ] PTR unsigned char 
  6224 ;;		 -> EMC1001_PrintTemp@templo(1), EMC1001_PrintTemp@temp(1), EMC1001_PrintInfo@data(1), 
  6225 ;;  length          1    1[BANK0 ] unsigned char 
  6226 ;;  address         2    2[BANK0 ] unsigned int 
  6227 ;; Auto vars:     Size  Location     Type
  6228 ;;  ptrb            1    6[BANK0 ] PTR struct .
  6229 ;;		 -> EMC1001_Read@trb(8), I2C2_MasterRead@trBlock(4), 
  6230 ;; Return value:  Size  Location     Type
  6231 ;;                  1    wreg      void 
  6232 ;; Registers used:
  6233 ;;		wreg, fsr1l, fsr1h, status,2, status,0
  6234 ;; Tracked objects:
  6235 ;;		On entry : 0/0
  6236 ;;		On exit  : 0/0
  6237 ;;		Unchanged: 0/0
  6238 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
  6239 ;;      Params:         0       4       0       0       0       0       0       0       0       0       0       0       
      +0       0
  6240 ;;      Locals:         0       1       0       0       0       0       0       0       0       0       0       0       
      +0       0
  6241 ;;      Temps:          0       2       0       0       0       0       0       0       0       0       0       0       
      +0       0
  6242 ;;      Totals:         0       7       0       0       0       0       0       0       0       0       0       0       
      +0       0
  6243 ;;Total ram usage:        7 bytes
  6244 ;; Hardware stack levels used:    1
  6245 ;; Hardware stack levels required when called:    3
  6246 ;; This function calls:
  6247 ;;		Nothing
  6248 ;; This function is called by:
  6249 ;;		_EMC1001_Read
  6250 ;;		_I2C2_MasterRead
  6251 ;; This function uses a non-reentrant model
  6252 ;;
  6253                           
  6254                           
  6255                           ;psect for function _I2C2_MasterReadTRBBuild
  6256  0607                     _I2C2_MasterReadTRBBuild:	
  6257                           
  6258                           ;incstack = 0
  6259                           ; Regs used in _I2C2_MasterReadTRBBuild: [wreg+fsr1l+fsr1h+status,2+status,0]
  6260                           ;I2C2_MasterReadTRBBuild@ptrb stored from wreg
  6261  0607  0020               	movlb	0	; select bank0
  6262  0608  00A6               	movwf	I2C2_MasterReadTRBBuild@ptrb
  6263                           
  6264                           ;i2c2.c: 700: ptrb->address = address << 1;
  6265  0609  0823               	movf	I2C2_MasterReadTRBBuild@address+1,w
  6266  060A  00A5               	movwf	??_I2C2_MasterReadTRBBuild+1
  6267  060B  0822               	movf	I2C2_MasterReadTRBBuild@address,w
  6268  060C  00A4               	movwf	??_I2C2_MasterReadTRBBuild
  6269  060D  35A4               	lslf	??_I2C2_MasterReadTRBBuild,f
  6270  060E  0DA5               	rlf	??_I2C2_MasterReadTRBBuild+1,f
  6271  060F  0826               	movf	I2C2_MasterReadTRBBuild@ptrb,w
  6272  0610  0086               	movwf	6
  6273  0611  0187               	clrf	7
  6274  0612  0824               	movf	??_I2C2_MasterReadTRBBuild,w
  6275  0613  3FC0               	movwi [0]fsr1
  6276  0614  0825               	movf	??_I2C2_MasterReadTRBBuild+1,w
  6277  0615  3FC1               	movwi [1]fsr1
  6278                           
  6279                           ;i2c2.c: 702: ptrb->address |= 0x01;
  6280  0616  0826               	movf	I2C2_MasterReadTRBBuild@ptrb,w
  6281  0617  0086               	movwf	6
  6282  0618  0187               	clrf	7
  6283  0619  3001               	movlw	1
  6284  061A  0481               	iorwf	1,f
  6285  061B  3141               	addfsr 1,1
  6286  061C  3000               	movlw	0
  6287  061D  0481               	iorwf	1,f
  6288                           
  6289                           ;i2c2.c: 703: ptrb->length = length;
  6290  061E  0821               	movf	I2C2_MasterReadTRBBuild@length,w
  6291  061F  00A4               	movwf	??_I2C2_MasterReadTRBBuild
  6292  0620  0826               	movf	I2C2_MasterReadTRBBuild@ptrb,w
  6293  0621  3E02               	addlw	2
  6294  0622  0086               	movwf	6
  6295  0623  0187               	clrf	7
  6296  0624  0824               	movf	??_I2C2_MasterReadTRBBuild,w
  6297  0625  0081               	movwf	1
  6298                           
  6299                           ;i2c2.c: 704: ptrb->pbuffer = pdata;
  6300  0626  0820               	movf	I2C2_MasterReadTRBBuild@pdata,w
  6301  0627  00A4               	movwf	??_I2C2_MasterReadTRBBuild
  6302  0628  0826               	movf	I2C2_MasterReadTRBBuild@ptrb,w
  6303  0629  3E03               	addlw	3
  6304  062A  0086               	movwf	6
  6305  062B  0187               	clrf	7
  6306  062C  0824               	movf	??_I2C2_MasterReadTRBBuild,w
  6307  062D  0081               	movwf	1
  6308  062E  0008               	return
  6309  062F                     __end_of_I2C2_MasterReadTRBBuild:	
  6310                           
  6311                           	psect	intentry
  6312  0004                     __pintentry:	
  6313 ;; *************** function _INTERRUPT_InterruptManager *****************
  6314 ;; Defined at:
  6315 ;;		line 51 in file "mcc_generated_files/interrupt_manager.c"
  6316 ;; Parameters:    Size  Location     Type
  6317 ;;		None
  6318 ;; Auto vars:     Size  Location     Type
  6319 ;;		None
  6320 ;; Return value:  Size  Location     Type
  6321 ;;                  1    wreg      void 
  6322 ;; Registers used:
  6323 ;;		wreg, fsr0l, fsr0h, fsr1l, fsr1h, status,2, status,0, pclath, cstack
  6324 ;; Tracked objects:
  6325 ;;		On entry : 0/0
  6326 ;;		On exit  : 0/0
  6327 ;;		Unchanged: 0/0
  6328 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
  6329 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  6330 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  6331 ;;      Temps:          1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  6332 ;;      Totals:         1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  6333 ;;Total ram usage:        1 bytes
  6334 ;; Hardware stack levels used:    1
  6335 ;; Hardware stack levels required when called:    2
  6336 ;; This function calls:
  6337 ;;		_I2C2_BusCollisionISR
  6338 ;;		_I2C2_ISR
  6339 ;; This function is called by:
  6340 ;;		Interrupt level 1
  6341 ;; This function uses a non-reentrant model
  6342 ;;
  6343                           
  6344  0004                     _INTERRUPT_InterruptManager:	
  6345                           
  6346                           ;incstack = 0
  6347  0004  147E               	bsf	126,0	;set compiler interrupt flag (level 1)
  6348                           
  6349                           ; Regs used in _INTERRUPT_InterruptManager: [wreg-fsr1h+status,2+status,0+pclath+cstack]
  6350  0005  3180               	pagesel	$
  6351  0006  0020               	movlb	0	; select bank0
  6352  0007  087F               	movf	127,w
  6353  0008  00F6               	movwf	??_INTERRUPT_InterruptManager
  6354                           
  6355                           ;interrupt_manager.c: 54: if(PIE3bits.BCL2IE == 1 && PIR3bits.BCL2IF == 1)
  6356  0009  002E               	movlb	14	; select bank14
  6357  000A  1999               	btfsc	25,3	;volatile
  6358  000B  1D8F               	btfss	15,3	;volatile
  6359  000C  2811               	goto	i1l198
  6360                           
  6361                           ;interrupt_manager.c: 55: {
  6362                           ;interrupt_manager.c: 56: I2C2_BusCollisionISR();
  6363  000D  3187  273F  3180   	fcall	_I2C2_BusCollisionISR
  6364                           
  6365                           ;interrupt_manager.c: 57: }
  6366  0010  2816               	goto	i1l202
  6367  0011                     i1l198:	
  6368                           
  6369                           ;interrupt_manager.c: 58: else if(PIE3bits.SSP2IE == 1 && PIR3bits.SSP2IF == 1)
  6370  0011  1919               	btfsc	25,2	;volatile
  6371  0012  1D0F               	btfss	15,2	;volatile
  6372  0013  2816               	goto	i1l202
  6373                           
  6374                           ;interrupt_manager.c: 59: {
  6375                           ;interrupt_manager.c: 60: I2C2_ISR();
  6376  0014  3181  218F         	fcall	_I2C2_ISR
  6377  0016                     i1l202:	
  6378                           ;interrupt_manager.c: 62: else
  6379                           ;interrupt_manager.c: 63: {
  6380                           
  6381                           ;interrupt_manager.c: 61: }
  6382                           
  6383  0016  0876               	movf	??_INTERRUPT_InterruptManager,w
  6384  0017  0020               	movlb	0	; select bank0
  6385  0018  00FF               	movwf	127
  6386  0019  107E               	bcf	126,0	;clear compiler interrupt flag (level 1)
  6387  001A  0009               	retfie
  6388  001B                     __end_of_INTERRUPT_InterruptManager:	
  6389                           
  6390                           	psect	text21
  6391  018F                     __ptext21:	
  6392 ;; *************** function _I2C2_ISR *****************
  6393 ;; Defined at:
  6394 ;;		line 233 in file "mcc_generated_files/i2c2.c"
  6395 ;; Parameters:    Size  Location     Type
  6396 ;;		None
  6397 ;; Auto vars:     Size  Location     Type
  6398 ;;		None
  6399 ;; Return value:  Size  Location     Type
  6400 ;;                  1    wreg      void 
  6401 ;; Registers used:
  6402 ;;		wreg, fsr0l, fsr0h, fsr1l, fsr1h, status,2, status,0, pclath, cstack
  6403 ;; Tracked objects:
  6404 ;;		On entry : 0/0
  6405 ;;		On exit  : 0/0
  6406 ;;		Unchanged: 0/0
  6407 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
  6408 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  6409 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  6410 ;;      Temps:          4       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  6411 ;;      Totals:         4       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  6412 ;;Total ram usage:        4 bytes
  6413 ;; Hardware stack levels used:    1
  6414 ;; Hardware stack levels required when called:    1
  6415 ;; This function calls:
  6416 ;;		_I2C2_FunctionComplete
  6417 ;;		_I2C2_Stop
  6418 ;; This function is called by:
  6419 ;;		_INTERRUPT_InterruptManager
  6420 ;; This function uses a non-reentrant model
  6421 ;;
  6422                           
  6423                           
  6424                           ;psect for function _I2C2_ISR
  6425  018F                     _I2C2_ISR:	
  6426                           
  6427                           ;i2c2.c: 236: static uint8_t *pi2c_buf_ptr;
  6428                           ;i2c2.c: 237: static uint16_t i2c_address = 0;
  6429                           ;i2c2.c: 238: static uint8_t i2c_bytes_left = 0;
  6430                           ;i2c2.c: 239: static uint8_t i2c_10bit_address_restart = 0;
  6431                           ;i2c2.c: 241: PIR3bits.SSP2IF = 0;
  6432                           
  6433                           ;incstack = 0
  6434                           ; Regs used in _I2C2_ISR: [wreg-fsr1h+status,2+status,0+pclath+cstack]
  6435  018F  002E               	movlb	14	; select bank14
  6436  0190  110F               	bcf	15,2	;volatile
  6437                           
  6438                           ;i2c2.c: 245: if(SSP2CON1bits.WCOL)
  6439  0191  0023               	movlb	3	; select bank3
  6440  0192  1F9A               	btfss	26,7	;volatile
  6441  0193  2ABD               	goto	i1l1825
  6442                           
  6443                           ;i2c2.c: 246: {
  6444                           ;i2c2.c: 248: SSP2CON1bits.WCOL = 0;
  6445  0194  139A               	bcf	26,7	;volatile
  6446                           
  6447                           ;i2c2.c: 249: i2c2_state = S_MASTER_IDLE;
  6448  0195  0020               	movlb	0	; select bank0
  6449  0196  01CF               	clrf	_i2c2_state
  6450                           
  6451                           ;i2c2.c: 250: *(p_i2c2_current->pTrFlag) = I2C2_MESSAGE_FAIL;
  6452  0197  087A               	movf	_p_i2c2_current,w
  6453  0198  3E02               	addlw	2
  6454  0199  0086               	movwf	6
  6455  019A  0187               	clrf	7
  6456  019B  0801               	movf	1,w
  6457  019C  0086               	movwf	6
  6458  019D  0187               	clrf	7
  6459  019E  0181               	clrf	1
  6460  019F  0A81               	incf	1,f
  6461                           
  6462                           ;i2c2.c: 253: p_i2c2_current = (0);
  6463  01A0  01FA               	clrf	_p_i2c2_current
  6464                           
  6465                           ;i2c2.c: 255: return;
  6466  01A1  0008               	return
  6467  01A2                     i1l100:	
  6468                           ;i2c2.c: 260: {
  6469                           ;i2c2.c: 261: case S_MASTER_IDLE:
  6470                           
  6471                           ;i2c2.c: 256: }
  6472                           ;i2c2.c: 259: switch(i2c2_state)
  6473                           
  6474                           
  6475                           ;i2c2.c: 263: if(i2c2_object.trStatus.s.empty != 1)
  6476  01A2  18CC               	btfsc	_i2c2_object+2,1
  6477  01A3  0008               	return
  6478                           
  6479                           ;i2c2.c: 264: {
  6480                           ;i2c2.c: 266: p_i2c2_current = i2c2_object.pTrHead;
  6481  01A4  084B               	movf	low ((_i2c2_object| 0+1)),w
  6482  01A5  00F2               	movwf	??_I2C2_ISR
  6483  01A6  0872               	movf	??_I2C2_ISR,w
  6484  01A7  00FA               	movwf	_p_i2c2_current
  6485                           
  6486                           ;i2c2.c: 267: i2c2_trb_count = i2c2_object.pTrHead->count;
  6487  01A8  084B               	movf	low ((_i2c2_object| 0+1)),w
  6488  01A9  0086               	movwf	6
  6489  01AA  0187               	clrf	7
  6490  01AB  0801               	movf	1,w
  6491  01AC  00F2               	movwf	??_I2C2_ISR
  6492  01AD  0872               	movf	??_I2C2_ISR,w
  6493  01AE  00FC               	movwf	_i2c2_trb_count
  6494                           
  6495                           ;i2c2.c: 268: p_i2c2_trb_current = i2c2_object.pTrHead->ptrb_list;
  6496  01AF  084B               	movf	low ((_i2c2_object| 0+1)),w
  6497  01B0  0086               	movwf	6
  6498  01B1  0187               	clrf	7
  6499  01B2  3F41               	moviw [1]fsr1
  6500  01B3  00FB               	movwf	_p_i2c2_trb_current
  6501                           
  6502                           ;i2c2.c: 270: i2c2_object.pTrHead++;
  6503  01B4  3003               	movlw	3
  6504  01B5  00F2               	movwf	??_I2C2_ISR
  6505  01B6  0872               	movf	??_I2C2_ISR,w
  6506  01B7  07CB               	addwf	low ((_i2c2_object| 0+1)),f
  6507                           
  6508                           ;i2c2.c: 273: if(i2c2_object.pTrHead == (i2c2_tr_queue + 1))
  6509  01B8  084B               	movf	low ((_i2c2_object| 0+1)),w
  6510  01B9  3A63               	xorlw	(low ((_i2c2_tr_queue| 0+3)))& (0+255)
  6511  01BA  1D03               	skipz
  6512  01BB  29C0               	goto	i1l1713
  6513                           
  6514                           ;i2c2.c: 274: {
  6515                           ;i2c2.c: 276: i2c2_object.pTrHead = i2c2_tr_queue;
  6516  01BC  3060               	movlw	(low (_i2c2_tr_queue| 0))& (0+255)
  6517  01BD  00F2               	movwf	??_I2C2_ISR
  6518  01BE  0872               	movf	??_I2C2_ISR,w
  6519  01BF  00CB               	movwf	low ((_i2c2_object| 0+1))
  6520  01C0                     i1l1713:	
  6521                           
  6522                           ;i2c2.c: 277: }
  6523                           ;i2c2.c: 281: i2c2_object.trStatus.s.full = 0;
  6524  01C0  104C               	bcf	_i2c2_object+2,0
  6525                           
  6526                           ;i2c2.c: 284: if(i2c2_object.pTrHead == i2c2_object.pTrTail)
  6527  01C1  084B               	movf	low ((_i2c2_object| 0+1)),w
  6528  01C2  064A               	xorwf	_i2c2_object,w
  6529  01C3  1903               	btfsc	3,2
  6530                           
  6531                           ;i2c2.c: 285: {
  6532                           ;i2c2.c: 287: i2c2_object.trStatus.s.empty = 1;
  6533  01C4  14CC               	bsf	_i2c2_object+2,1
  6534                           
  6535                           ;i2c2.c: 288: }
  6536                           ;i2c2.c: 291: SSP2CON2bits.SEN = 1;
  6537  01C5  0023               	movlb	3	; select bank3
  6538  01C6  141B               	bsf	27,0	;volatile
  6539                           
  6540                           ;i2c2.c: 294: i2c2_state = S_MASTER_SEND_ADDR;
  6541  01C7  3002               	movlw	2
  6542  01C8  00F2               	movwf	??_I2C2_ISR
  6543  01C9  0872               	movf	??_I2C2_ISR,w
  6544  01CA  0020               	movlb	0	; select bank0
  6545  01CB  00CF               	movwf	_i2c2_state
  6546                           
  6547                           ;i2c2.c: 295: }
  6548                           ;i2c2.c: 297: break;
  6549  01CC  0008               	return
  6550  01CD                     i1l105:	
  6551                           ;i2c2.c: 299: case S_MASTER_RESTART:
  6552                           
  6553                           
  6554                           ;i2c2.c: 304: SSP2CON2bits.RSEN = 1;
  6555  01CD  0023               	movlb	3	; select bank3
  6556  01CE  149B               	bsf	27,1	;volatile
  6557                           
  6558                           ;i2c2.c: 307: i2c2_state = S_MASTER_SEND_ADDR;
  6559  01CF  3002               	movlw	2
  6560  01D0  00F2               	movwf	??_I2C2_ISR
  6561  01D1  0872               	movf	??_I2C2_ISR,w
  6562  01D2  0020               	movlb	0	; select bank0
  6563  01D3  00CF               	movwf	_i2c2_state
  6564                           
  6565                           ;i2c2.c: 309: break;
  6566  01D4  0008               	return
  6567  01D5                     i1l106:	
  6568                           ;i2c2.c: 311: case S_MASTER_SEND_ADDR_10BIT_LSB:
  6569                           
  6570                           
  6571                           ;i2c2.c: 313: if(SSP2CON2bits.ACKSTAT)
  6572  01D5  0023               	movlb	3	; select bank3
  6573  01D6  1F1B               	btfss	27,6	;volatile
  6574  01D7  29E1               	goto	i1l1725
  6575                           
  6576                           ;i2c2.c: 314: {
  6577                           ;i2c2.c: 315: i2c2_object.i2cErrors++;
  6578  01D8  3001               	movlw	1
  6579  01D9  00F2               	movwf	??_I2C2_ISR
  6580  01DA  0872               	movf	??_I2C2_ISR,w
  6581  01DB  0020               	movlb	0	; select bank0
  6582  01DC  07CE               	addwf	_i2c2_object+4,f
  6583                           
  6584                           ;i2c2.c: 316: I2C2_Stop(I2C2_MESSAGE_ADDRESS_NO_ACK);
  6585  01DD  3004               	movlw	4
  6586  01DE  3186  26BC         	fcall	_I2C2_Stop
  6587                           
  6588                           ;i2c2.c: 317: }
  6589  01E0  0008               	return
  6590  01E1                     i1l1725:	
  6591                           
  6592                           ;i2c2.c: 318: else
  6593                           ;i2c2.c: 319: {
  6594                           ;i2c2.c: 321: SSP2BUF = (i2c_address >> 1) & 0x00FF;
  6595  01E1  0020               	movlb	0	; select bank0
  6596  01E2  0864               	movf	I2C2_ISR@i2c_address+1,w
  6597  01E3  00F3               	movwf	??_I2C2_ISR+1
  6598  01E4  0863               	movf	I2C2_ISR@i2c_address,w
  6599  01E5  00F2               	movwf	??_I2C2_ISR
  6600  01E6  36F3               	lsrf	??_I2C2_ISR+1,f
  6601  01E7  0CF2               	rrf	??_I2C2_ISR,f
  6602  01E8  0872               	movf	??_I2C2_ISR,w
  6603  01E9  0023               	movlb	3	; select bank3
  6604  01EA  0096               	movwf	22	;volatile
  6605                           
  6606                           ;i2c2.c: 324: if(i2c_address & 0x01)
  6607  01EB  0020               	movlb	0	; select bank0
  6608  01EC  1C63               	btfss	I2C2_ISR@i2c_address,0
  6609  01ED  29F3               	goto	i1l1731
  6610                           
  6611                           ;i2c2.c: 325: {
  6612                           ;i2c2.c: 328: i2c2_state = S_MASTER_10BIT_RESTART;
  6613  01EE  300B               	movlw	11
  6614  01EF  00F2               	movwf	??_I2C2_ISR
  6615  01F0  0872               	movf	??_I2C2_ISR,w
  6616  01F1  00CF               	movwf	_i2c2_state
  6617                           
  6618                           ;i2c2.c: 329: }
  6619  01F2  0008               	return
  6620  01F3                     i1l1731:	
  6621                           
  6622                           ;i2c2.c: 330: else
  6623                           ;i2c2.c: 331: {
  6624                           ;i2c2.c: 333: i2c2_state = S_MASTER_SEND_DATA;
  6625  01F3  3003               	movlw	3
  6626  01F4  00F2               	movwf	??_I2C2_ISR
  6627  01F5  0872               	movf	??_I2C2_ISR,w
  6628  01F6  00CF               	movwf	_i2c2_state
  6629                           
  6630                           ;i2c2.c: 334: }
  6631                           ;i2c2.c: 335: }
  6632                           ;i2c2.c: 337: break;
  6633  01F7  0008               	return
  6634  01F8                     i1l111:	
  6635                           ;i2c2.c: 339: case S_MASTER_10BIT_RESTART:
  6636                           
  6637                           
  6638                           ;i2c2.c: 341: if(SSP2CON2bits.ACKSTAT)
  6639  01F8  0023               	movlb	3	; select bank3
  6640  01F9  1F1B               	btfss	27,6	;volatile
  6641  01FA  2A04               	goto	i1l112
  6642                           
  6643                           ;i2c2.c: 342: {
  6644                           ;i2c2.c: 343: i2c2_object.i2cErrors++;
  6645  01FB  3001               	movlw	1
  6646  01FC  00F2               	movwf	??_I2C2_ISR
  6647  01FD  0872               	movf	??_I2C2_ISR,w
  6648  01FE  0020               	movlb	0	; select bank0
  6649  01FF  07CE               	addwf	_i2c2_object+4,f
  6650                           
  6651                           ;i2c2.c: 344: I2C2_Stop(I2C2_MESSAGE_ADDRESS_NO_ACK);
  6652  0200  3004               	movlw	4
  6653  0201  3186  26BC         	fcall	_I2C2_Stop
  6654                           
  6655                           ;i2c2.c: 345: }
  6656  0203  0008               	return
  6657  0204                     i1l112:	
  6658                           
  6659                           ;i2c2.c: 346: else
  6660                           ;i2c2.c: 347: {
  6661                           ;i2c2.c: 350: SSP2CON2bits.RSEN = 1;
  6662  0204  149B               	bsf	27,1	;volatile
  6663                           
  6664                           ;i2c2.c: 354: i2c_address = 0x00F0 | ((i2c_address >> 8) & 0x0006);
  6665  0205  0020               	movlb	0	; select bank0
  6666  0206  0864               	movf	I2C2_ISR@i2c_address+1,w
  6667  0207  00F3               	movwf	??_I2C2_ISR+1
  6668  0208  0863               	movf	I2C2_ISR@i2c_address,w
  6669  0209  00F2               	movwf	??_I2C2_ISR
  6670  020A  0873               	movf	??_I2C2_ISR+1,w
  6671  020B  00F2               	movwf	??_I2C2_ISR
  6672  020C  01F3               	clrf	??_I2C2_ISR+1
  6673  020D  3006               	movlw	6
  6674  020E  0572               	andwf	??_I2C2_ISR,w
  6675  020F  00F4               	movwf	??_I2C2_ISR+2
  6676  0210  3000               	movlw	0
  6677  0211  0573               	andwf	??_I2C2_ISR+1,w
  6678  0212  00F5               	movwf	??_I2C2_ISR+3
  6679  0213  30F0               	movlw	240
  6680  0214  0474               	iorwf	??_I2C2_ISR+2,w
  6681  0215  00E3               	movwf	I2C2_ISR@i2c_address
  6682  0216  3000               	movlw	0
  6683  0217  0475               	iorwf	??_I2C2_ISR+3,w
  6684  0218  00E4               	movwf	I2C2_ISR@i2c_address+1
  6685                           
  6686                           ;i2c2.c: 357: i2c_address |= 0x0001;
  6687  0219  1463               	bsf	I2C2_ISR@i2c_address,0
  6688                           
  6689                           ;i2c2.c: 360: i2c_10bit_address_restart = 1;
  6690  021A  01F7               	clrf	I2C2_ISR@i2c_10bit_address_restart
  6691  021B  0AF7               	incf	I2C2_ISR@i2c_10bit_address_restart,f
  6692                           
  6693                           ;i2c2.c: 363: i2c2_state = S_MASTER_SEND_ADDR;
  6694  021C  3002               	movlw	2
  6695  021D  00F2               	movwf	??_I2C2_ISR
  6696  021E  0872               	movf	??_I2C2_ISR,w
  6697  021F  00CF               	movwf	_i2c2_state
  6698                           
  6699                           ;i2c2.c: 364: }
  6700                           ;i2c2.c: 366: break;
  6701  0220  0008               	return
  6702  0221                     i1l1745:	
  6703                           ;i2c2.c: 368: case S_MASTER_SEND_ADDR:
  6704                           
  6705                           
  6706                           ;i2c2.c: 381: if(i2c_10bit_address_restart != 1)
  6707  0221  0377               	decf	I2C2_ISR@i2c_10bit_address_restart,w
  6708  0222  1903               	btfsc	3,2
  6709  0223  2A35               	goto	i1l1765
  6710                           
  6711                           ;i2c2.c: 382: {
  6712                           ;i2c2.c: 384: i2c_address = p_i2c2_trb_current->address;
  6713  0224  087B               	movf	_p_i2c2_trb_current,w
  6714  0225  0086               	movwf	6
  6715  0226  0187               	clrf	7
  6716  0227  3F40               	moviw [0]fsr1
  6717  0228  00E3               	movwf	I2C2_ISR@i2c_address
  6718  0229  3F41               	moviw [1]fsr1
  6719  022A  00E4               	movwf	I2C2_ISR@i2c_address+1
  6720                           
  6721                           ;i2c2.c: 385: pi2c_buf_ptr = p_i2c2_trb_current->pbuffer;
  6722  022B  087B               	movf	_p_i2c2_trb_current,w
  6723  022C  0086               	movwf	6
  6724  022D  0187               	clrf	7
  6725  022E  3F43               	moviw [3]fsr1
  6726  022F  00F9               	movwf	I2C2_ISR@pi2c_buf_ptr
  6727                           
  6728                           ;i2c2.c: 386: i2c_bytes_left = p_i2c2_trb_current->length;
  6729  0230  087B               	movf	_p_i2c2_trb_current,w
  6730  0231  0086               	movwf	6
  6731  0232  0187               	clrf	7
  6732  0233  3F42               	moviw [2]fsr1
  6733  0234  00F8               	movwf	I2C2_ISR@i2c_bytes_left
  6734  0235                     i1l1765:	
  6735                           ;i2c2.c: 407: }
  6736                           ;i2c2.c: 408: }
  6737                           
  6738                           ;i2c2.c: 406: i2c_10bit_address_restart = 0;
  6739                           
  6740                           ;i2c2.c: 404: i2c2_state = S_MASTER_ACK_ADDR;
  6741                           
  6742                           ;i2c2.c: 400: else
  6743                           ;i2c2.c: 401: {
  6744                           ;i2c2.c: 403: SSP2BUF = i2c_address;
  6745                           
  6746                           ;i2c2.c: 399: }
  6747                           
  6748                           ;i2c2.c: 398: i2c2_state = S_MASTER_SEND_ADDR_10BIT_LSB;
  6749                           
  6750                           ;i2c2.c: 393: {
  6751                           ;i2c2.c: 397: SSP2BUF = 0xF0 | ((i2c_address >> 8) & 0x0006);
  6752                           
  6753                           ;i2c2.c: 391: {
  6754                           ;i2c2.c: 392: if (0 == i2c_10bit_address_restart)
  6755                           
  6756                           ;i2c2.c: 387: }
  6757                           ;i2c2.c: 390: if(!1 && (0x0 != i2c_address))
  6758                           
  6759                           
  6760                           ;i2c2.c: 409: else
  6761                           ;i2c2.c: 410: {
  6762                           ;i2c2.c: 412: SSP2BUF = i2c_address;
  6763  0235  0863               	movf	I2C2_ISR@i2c_address,w
  6764  0236  0023               	movlb	3	; select bank3
  6765  0237  0096               	movwf	22	;volatile
  6766                           
  6767                           ;i2c2.c: 413: if(i2c_address & 0x01)
  6768  0238  0020               	movlb	0	; select bank0
  6769  0239  1C63               	btfss	I2C2_ISR@i2c_address,0
  6770  023A  2A40               	goto	i1l1771
  6771                           
  6772                           ;i2c2.c: 414: {
  6773                           ;i2c2.c: 416: i2c2_state = S_MASTER_ACK_ADDR;
  6774  023B  3005               	movlw	5
  6775  023C  00F2               	movwf	??_I2C2_ISR
  6776  023D  0872               	movf	??_I2C2_ISR,w
  6777  023E  00CF               	movwf	_i2c2_state
  6778                           
  6779                           ;i2c2.c: 417: }
  6780  023F  0008               	return
  6781  0240                     i1l1771:	
  6782                           
  6783                           ;i2c2.c: 418: else
  6784                           ;i2c2.c: 419: {
  6785                           ;i2c2.c: 421: i2c2_state = S_MASTER_SEND_DATA;
  6786  0240  3003               	movlw	3
  6787  0241  00F2               	movwf	??_I2C2_ISR
  6788  0242  0872               	movf	??_I2C2_ISR,w
  6789  0243  00CF               	movwf	_i2c2_state
  6790                           
  6791                           ;i2c2.c: 422: }
  6792                           ;i2c2.c: 423: }
  6793                           ;i2c2.c: 424: break;
  6794  0244  0008               	return
  6795  0245                     i1l122:	
  6796                           ;i2c2.c: 426: case S_MASTER_SEND_DATA:
  6797                           
  6798                           
  6799                           ;i2c2.c: 429: if(SSP2CON2bits.ACKSTAT)
  6800  0245  0023               	movlb	3	; select bank3
  6801  0246  1F1B               	btfss	27,6	;volatile
  6802  0247  2A53               	goto	i1l1779
  6803                           
  6804                           ;i2c2.c: 430: {
  6805                           ;i2c2.c: 432: i2c2_object.i2cErrors++;
  6806  0248  3001               	movlw	1
  6807  0249  00F2               	movwf	??_I2C2_ISR
  6808  024A  0872               	movf	??_I2C2_ISR,w
  6809  024B  0020               	movlb	0	; select bank0
  6810  024C  07CE               	addwf	_i2c2_object+4,f
  6811                           
  6812                           ;i2c2.c: 435: SSP2CON2bits.ACKSTAT = 0;
  6813  024D  0023               	movlb	3	; select bank3
  6814  024E  131B               	bcf	27,6	;volatile
  6815                           
  6816                           ;i2c2.c: 438: I2C2_Stop(I2C2_DATA_NO_ACK);
  6817  024F  3005               	movlw	5
  6818  0250  3186  26BC         	fcall	_I2C2_Stop
  6819                           
  6820                           ;i2c2.c: 440: }
  6821  0252  0008               	return
  6822  0253                     i1l1779:	
  6823                           
  6824                           ;i2c2.c: 441: else
  6825                           ;i2c2.c: 442: {
  6826                           ;i2c2.c: 444: if(i2c_bytes_left-- == 0U)
  6827  0253  3001               	movlw	1
  6828  0254  02F8               	subwf	I2C2_ISR@i2c_bytes_left,f
  6829  0255  0A78               	incf	I2C2_ISR@i2c_bytes_left,w
  6830  0256  1D03               	btfss	3,2
  6831  0257  2A6C               	goto	i1l1787
  6832                           
  6833                           ;i2c2.c: 445: {
  6834                           ;i2c2.c: 449: p_i2c2_trb_current++;
  6835  0258  3004               	movlw	4
  6836  0259  00F2               	movwf	??_I2C2_ISR
  6837  025A  0872               	movf	??_I2C2_ISR,w
  6838  025B  07FB               	addwf	_p_i2c2_trb_current,f
  6839                           
  6840                           ;i2c2.c: 452: if(--i2c2_trb_count == 0)
  6841  025C  3001               	movlw	1
  6842  025D  02FC               	subwf	_i2c2_trb_count,f
  6843  025E  1D03               	btfss	3,2
  6844  025F  2A64               	goto	i1l126
  6845                           
  6846                           ;i2c2.c: 453: {
  6847                           ;i2c2.c: 454: I2C2_Stop(I2C2_MESSAGE_COMPLETE);
  6848  0260  3000               	movlw	0
  6849  0261  3186  26BC         	fcall	_I2C2_Stop
  6850                           
  6851                           ;i2c2.c: 455: }
  6852  0263  0008               	return
  6853  0264                     i1l126:	
  6854                           
  6855                           ;i2c2.c: 456: else
  6856                           ;i2c2.c: 457: {
  6857                           ;i2c2.c: 464: SSP2CON2bits.RSEN = 1;
  6858  0264  0023               	movlb	3	; select bank3
  6859  0265  149B               	bsf	27,1	;volatile
  6860                           
  6861                           ;i2c2.c: 467: i2c2_state = S_MASTER_SEND_ADDR;
  6862  0266  3002               	movlw	2
  6863  0267  00F2               	movwf	??_I2C2_ISR
  6864  0268  0872               	movf	??_I2C2_ISR,w
  6865  0269  0020               	movlb	0	; select bank0
  6866  026A  00CF               	movwf	_i2c2_state
  6867                           
  6868                           ;i2c2.c: 469: }
  6869                           ;i2c2.c: 470: }
  6870  026B  0008               	return
  6871  026C                     i1l1787:	
  6872                           
  6873                           ;i2c2.c: 471: else
  6874                           ;i2c2.c: 472: {
  6875                           ;i2c2.c: 474: SSP2BUF = *pi2c_buf_ptr++;
  6876  026C  0879               	movf	I2C2_ISR@pi2c_buf_ptr,w
  6877  026D  0086               	movwf	6
  6878  026E  0187               	clrf	7
  6879  026F  0801               	movf	1,w
  6880  0270  0023               	movlb	3	; select bank3
  6881  0271  0096               	movwf	22	;volatile
  6882  0272  3001               	movlw	1
  6883  0273  00F2               	movwf	??_I2C2_ISR
  6884  0274  0872               	movf	??_I2C2_ISR,w
  6885  0275  07F9               	addwf	I2C2_ISR@pi2c_buf_ptr,f
  6886                           
  6887                           ;i2c2.c: 475: }
  6888                           ;i2c2.c: 476: }
  6889                           ;i2c2.c: 477: break;
  6890  0276  0008               	return
  6891  0277                     i1l129:	
  6892                           ;i2c2.c: 479: case S_MASTER_ACK_ADDR:
  6893                           
  6894                           
  6895                           ;i2c2.c: 482: if(SSP2CON2bits.ACKSTAT)
  6896  0277  0023               	movlb	3	; select bank3
  6897  0278  1F1B               	btfss	27,6	;volatile
  6898  0279  2A85               	goto	i1l130
  6899                           
  6900                           ;i2c2.c: 483: {
  6901                           ;i2c2.c: 486: i2c2_object.i2cErrors++;
  6902  027A  3001               	movlw	1
  6903  027B  00F2               	movwf	??_I2C2_ISR
  6904  027C  0872               	movf	??_I2C2_ISR,w
  6905  027D  0020               	movlb	0	; select bank0
  6906  027E  07CE               	addwf	_i2c2_object+4,f
  6907                           
  6908                           ;i2c2.c: 489: I2C2_Stop(I2C2_MESSAGE_ADDRESS_NO_ACK);
  6909  027F  3004               	movlw	4
  6910  0280  3186  26BC         	fcall	_I2C2_Stop
  6911                           
  6912                           ;i2c2.c: 492: SSP2CON2bits.ACKSTAT = 0;
  6913  0282  0023               	movlb	3	; select bank3
  6914  0283  131B               	bcf	27,6	;volatile
  6915                           
  6916                           ;i2c2.c: 493: }
  6917  0284  0008               	return
  6918  0285                     i1l130:	
  6919                           
  6920                           ;i2c2.c: 494: else
  6921                           ;i2c2.c: 495: {
  6922                           ;i2c2.c: 496: SSP2CON2bits.RCEN = 1;
  6923  0285  159B               	bsf	27,3	;volatile
  6924                           
  6925                           ;i2c2.c: 497: i2c2_state = S_MASTER_ACK_RCV_DATA;
  6926  0286  3008               	movlw	8
  6927  0287  00F2               	movwf	??_I2C2_ISR
  6928  0288  0872               	movf	??_I2C2_ISR,w
  6929  0289  0020               	movlb	0	; select bank0
  6930  028A  00CF               	movwf	_i2c2_state
  6931                           
  6932                           ;i2c2.c: 498: }
  6933                           ;i2c2.c: 499: break;
  6934  028B  0008               	return
  6935  028C                     i1l1799:	
  6936                           ;i2c2.c: 501: case S_MASTER_RCV_DATA:
  6937                           
  6938                           
  6939                           ;i2c2.c: 506: i2c2_state = S_MASTER_ACK_RCV_DATA;
  6940  028C  3008               	movlw	8
  6941  028D  00F2               	movwf	??_I2C2_ISR
  6942  028E  0872               	movf	??_I2C2_ISR,w
  6943  028F  00CF               	movwf	_i2c2_state
  6944                           
  6945                           ;i2c2.c: 509: SSP2CON2bits.RCEN = 1;
  6946  0290  0023               	movlb	3	; select bank3
  6947  0291  159B               	bsf	27,3	;volatile
  6948                           
  6949                           ;i2c2.c: 511: break;
  6950  0292  0008               	return
  6951  0293                     i1l1803:	
  6952                           ;i2c2.c: 513: case S_MASTER_ACK_RCV_DATA:
  6953                           
  6954                           
  6955                           ;i2c2.c: 516: *pi2c_buf_ptr++ = SSP2BUF;
  6956  0293  0023               	movlb	3	; select bank3
  6957  0294  0816               	movf	22,w	;volatile
  6958  0295  00F2               	movwf	??_I2C2_ISR
  6959  0296  0879               	movf	I2C2_ISR@pi2c_buf_ptr,w
  6960  0297  0086               	movwf	6
  6961  0298  0187               	clrf	7
  6962  0299  0872               	movf	??_I2C2_ISR,w
  6963  029A  0081               	movwf	1
  6964  029B  3001               	movlw	1
  6965  029C  00F2               	movwf	??_I2C2_ISR
  6966  029D  0872               	movf	??_I2C2_ISR,w
  6967  029E  07F9               	addwf	I2C2_ISR@pi2c_buf_ptr,f
  6968                           
  6969                           ;i2c2.c: 519: if(--i2c_bytes_left)
  6970  029F  3001               	movlw	1
  6971  02A0  02F8               	subwf	I2C2_ISR@i2c_bytes_left,f
  6972  02A1  1903               	btfsc	3,2
  6973  02A2  2AAA               	goto	i1l134
  6974                           
  6975                           ;i2c2.c: 520: {
  6976                           ;i2c2.c: 526: SSP2CON2bits.ACKDT = 0;
  6977  02A3  129B               	bcf	27,5	;volatile
  6978                           
  6979                           ;i2c2.c: 529: i2c2_state = S_MASTER_RCV_DATA;
  6980  02A4  3006               	movlw	6
  6981  02A5  00F2               	movwf	??_I2C2_ISR
  6982  02A6  0872               	movf	??_I2C2_ISR,w
  6983  02A7  0020               	movlb	0	; select bank0
  6984  02A8  00CF               	movwf	_i2c2_state
  6985                           
  6986                           ;i2c2.c: 530: }
  6987  02A9  2AAD               	goto	i1l1815
  6988  02AA                     i1l134:	
  6989                           
  6990                           ;i2c2.c: 531: else
  6991                           ;i2c2.c: 532: {
  6992                           ;i2c2.c: 536: SSP2CON2bits.ACKDT = 1;
  6993  02AA  169B               	bsf	27,5	;volatile
  6994                           
  6995                           ;i2c2.c: 538: I2C2_FunctionComplete();
  6996  02AB  3186  26EB         	fcall	_I2C2_FunctionComplete
  6997  02AD                     i1l1815:	
  6998                           
  6999                           ;i2c2.c: 539: }
  7000                           ;i2c2.c: 542: SSP2CON2bits.ACKEN = 1;
  7001  02AD  0023               	movlb	3	; select bank3
  7002  02AE  161B               	bsf	27,4	;volatile
  7003                           
  7004                           ;i2c2.c: 543: break;
  7005  02AF  0008               	return
  7006  02B0                     i1l1817:	
  7007                           ;i2c2.c: 545: case S_MASTER_RCV_STOP:
  7008                           
  7009                           
  7010                           ;i2c2.c: 546: case S_MASTER_SEND_STOP:
  7011                           ;i2c2.c: 549: I2C2_Stop(I2C2_MESSAGE_COMPLETE);
  7012  02B0  3000               	movlw	0
  7013  02B1  3186  26BC         	fcall	_I2C2_Stop
  7014                           
  7015                           ;i2c2.c: 550: break;
  7016  02B3  0008               	return
  7017  02B4                     i1l1819:	
  7018                           ;i2c2.c: 552: default:
  7019                           
  7020                           
  7021                           ;i2c2.c: 556: i2c2_object.i2cErrors++;
  7022  02B4  3001               	movlw	1
  7023  02B5  00F2               	movwf	??_I2C2_ISR
  7024  02B6  0872               	movf	??_I2C2_ISR,w
  7025  02B7  0020               	movlb	0	; select bank0
  7026  02B8  07CE               	addwf	_i2c2_object+4,f
  7027                           
  7028                           ;i2c2.c: 557: I2C2_Stop(I2C2_LOST_STATE);
  7029  02B9  3006               	movlw	6
  7030  02BA  3186  26BC         	fcall	_I2C2_Stop
  7031                           
  7032                           ;i2c2.c: 560: }
  7033                           
  7034                           ;i2c2.c: 558: break;
  7035  02BC  0008               	return
  7036  02BD                     i1l1825:	
  7037  02BD  0020               	movlb	0	; select bank0
  7038  02BE  084F               	movf	_i2c2_state,w
  7039                           
  7040                           ; Switch size 1, requested type "space"
  7041                           ; Number of cases is 11, Range of values is 0 to 11
  7042                           ; switch strategies available:
  7043                           ; Name         Instructions Cycles
  7044                           ; direct_byte           30     6 (fixed)
  7045                           ; simple_byte           34    18 (average)
  7046                           ; jumptable            260     6 (fixed)
  7047                           ;	Chosen strategy is direct_byte
  7048  02BF  0084               	movwf	4
  7049  02C0  300C               	movlw	12
  7050  02C1  0204               	subwf	4,w
  7051  02C2  1803               	skipnc
  7052  02C3  2AB4               	goto	i1l1819
  7053  02C4  3186               	movlp	high i1S2209
  7054  02C5  3504               	lslf	4,w
  7055  02C6  3EA4               	addlw	low i1S2209
  7056  02C7  0082               	movwf	2
  7057  02C8  0008               	return
  7058  02C9                     __end_of_I2C2_ISR:	
  7059                           
  7060                           	psect	swtext1
  7061  06A4                     __pswtext1:	
  7062  06A4                     i1S2209:	
  7063  06A4  3181  29A2         	ljmp	i1l100
  7064  06A6  3181  29CD         	ljmp	i1l105
  7065  06A8  3182  2A21         	ljmp	i1l1745
  7066  06AA  3182  2A45         	ljmp	i1l122
  7067  06AC  3182  2AB0         	ljmp	i1l1817
  7068  06AE  3182  2A77         	ljmp	i1l129
  7069  06B0  3182  2A8C         	ljmp	i1l1799
  7070  06B2  3182  2AB0         	ljmp	i1l1817
  7071  06B4  3182  2A93         	ljmp	i1l1803
  7072  06B6  3182  2AB4         	ljmp	i1l1819
  7073  06B8  3181  29D5         	ljmp	i1l106
  7074  06BA  3181  29F8         	ljmp	i1l111
  7075                           
  7076                           	psect	text22
  7077  06BC                     __ptext22:	
  7078 ;; *************** function _I2C2_Stop *****************
  7079 ;; Defined at:
  7080 ;;		line 581 in file "mcc_generated_files/i2c2.c"
  7081 ;; Parameters:    Size  Location     Type
  7082 ;;  completion_c    1    wreg     enum E14260
  7083 ;; Auto vars:     Size  Location     Type
  7084 ;;  completion_c    1    1[COMMON] enum E14260
  7085 ;; Return value:  Size  Location     Type
  7086 ;;                  1    wreg      void 
  7087 ;; Registers used:
  7088 ;;		wreg, fsr1l, fsr1h, status,2, status,0
  7089 ;; Tracked objects:
  7090 ;;		On entry : 0/0
  7091 ;;		On exit  : 0/0
  7092 ;;		Unchanged: 0/0
  7093 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
  7094 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  7095 ;;      Locals:         1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  7096 ;;      Temps:          1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  7097 ;;      Totals:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  7098 ;;Total ram usage:        2 bytes
  7099 ;; Hardware stack levels used:    1
  7100 ;; This function calls:
  7101 ;;		Nothing
  7102 ;; This function is called by:
  7103 ;;		_I2C2_ISR
  7104 ;; This function uses a non-reentrant model
  7105 ;;
  7106                           
  7107                           
  7108                           ;psect for function _I2C2_Stop
  7109  06BC                     _I2C2_Stop:	
  7110                           
  7111                           ;incstack = 0
  7112                           ; Regs used in _I2C2_Stop: [wreg+fsr1l+fsr1h+status,2+status,0]
  7113                           ;I2C2_Stop@completion_code stored from wreg
  7114  06BC  00F1               	movwf	I2C2_Stop@completion_code
  7115                           
  7116                           ;i2c2.c: 584: SSP2CON2bits.PEN = 1;
  7117  06BD  0023               	movlb	3	; select bank3
  7118  06BE  151B               	bsf	27,2	;volatile
  7119                           
  7120                           ;i2c2.c: 587: if (p_i2c2_current->pTrFlag != (0))
  7121  06BF  087A               	movf	_p_i2c2_current,w
  7122  06C0  3E02               	addlw	2
  7123  06C1  0086               	movwf	6
  7124  06C2  0187               	clrf	7
  7125  06C3  0801               	movf	1,w
  7126  06C4  1903               	btfsc	3,2
  7127  06C5  2ED1               	goto	i1l1525
  7128                           
  7129                           ;i2c2.c: 588: {
  7130                           ;i2c2.c: 590: *(p_i2c2_current->pTrFlag) = completion_code;
  7131  06C6  0871               	movf	I2C2_Stop@completion_code,w
  7132  06C7  00F0               	movwf	??_I2C2_Stop
  7133  06C8  087A               	movf	_p_i2c2_current,w
  7134  06C9  3E02               	addlw	2
  7135  06CA  0086               	movwf	6
  7136  06CB  0187               	clrf	7
  7137  06CC  0801               	movf	1,w
  7138  06CD  0086               	movwf	6
  7139  06CE  0187               	clrf	7
  7140  06CF  0870               	movf	??_I2C2_Stop,w
  7141  06D0  0081               	movwf	1
  7142  06D1                     i1l1525:	
  7143                           
  7144                           ;i2c2.c: 591: }
  7145                           ;i2c2.c: 594: i2c2_state = S_MASTER_IDLE;
  7146  06D1  0020               	movlb	0	; select bank0
  7147  06D2  01CF               	clrf	_i2c2_state
  7148  06D3  0008               	return
  7149  06D4                     __end_of_I2C2_Stop:	
  7150                           
  7151                           	psect	text23
  7152  06EB                     __ptext23:	
  7153 ;; *************** function _I2C2_FunctionComplete *****************
  7154 ;; Defined at:
  7155 ;;		line 563 in file "mcc_generated_files/i2c2.c"
  7156 ;; Parameters:    Size  Location     Type
  7157 ;;		None
  7158 ;; Auto vars:     Size  Location     Type
  7159 ;;		None
  7160 ;; Return value:  Size  Location     Type
  7161 ;;                  1    wreg      void 
  7162 ;; Registers used:
  7163 ;;		wreg, status,2, status,0
  7164 ;; Tracked objects:
  7165 ;;		On entry : 0/0
  7166 ;;		On exit  : 0/0
  7167 ;;		Unchanged: 0/0
  7168 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
  7169 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  7170 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  7171 ;;      Temps:          1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  7172 ;;      Totals:         1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  7173 ;;Total ram usage:        1 bytes
  7174 ;; Hardware stack levels used:    1
  7175 ;; This function calls:
  7176 ;;		Nothing
  7177 ;; This function is called by:
  7178 ;;		_I2C2_ISR
  7179 ;; This function uses a non-reentrant model
  7180 ;;
  7181                           
  7182                           
  7183                           ;psect for function _I2C2_FunctionComplete
  7184  06EB                     _I2C2_FunctionComplete:	
  7185                           
  7186                           ;i2c2.c: 567: p_i2c2_trb_current++;
  7187                           
  7188                           ;incstack = 0
  7189                           ; Regs used in _I2C2_FunctionComplete: [wreg+status,2+status,0]
  7190  06EB  3004               	movlw	4
  7191  06EC  00F0               	movwf	??_I2C2_FunctionComplete
  7192  06ED  0870               	movf	??_I2C2_FunctionComplete,w
  7193  06EE  07FB               	addwf	_p_i2c2_trb_current,f
  7194                           
  7195                           ;i2c2.c: 570: if(--i2c2_trb_count == 0)
  7196  06EF  3001               	movlw	1
  7197  06F0  02FC               	subwf	_i2c2_trb_count,f
  7198  06F1  1D03               	btfss	3,2
  7199  06F2  2EF9               	goto	i1l141
  7200                           
  7201                           ;i2c2.c: 571: {
  7202                           ;i2c2.c: 572: i2c2_state = S_MASTER_SEND_STOP;
  7203  06F3  3004               	movlw	4
  7204  06F4  00F0               	movwf	??_I2C2_FunctionComplete
  7205  06F5  0870               	movf	??_I2C2_FunctionComplete,w
  7206  06F6  0020               	movlb	0	; select bank0
  7207  06F7  00CF               	movwf	_i2c2_state
  7208                           
  7209                           ;i2c2.c: 573: }
  7210  06F8  0008               	return
  7211  06F9                     i1l141:	
  7212                           
  7213                           ;i2c2.c: 574: else
  7214                           ;i2c2.c: 575: {
  7215                           ;i2c2.c: 576: i2c2_state = S_MASTER_RESTART;
  7216  06F9  0020               	movlb	0	; select bank0
  7217  06FA  01CF               	clrf	_i2c2_state
  7218  06FB  0ACF               	incf	_i2c2_state,f
  7219  06FC  0008               	return
  7220  06FD                     __end_of_I2C2_FunctionComplete:	
  7221                           
  7222                           	psect	text24
  7223  073F                     __ptext24:	
  7224 ;; *************** function _I2C2_BusCollisionISR *****************
  7225 ;; Defined at:
  7226 ;;		line 728 in file "mcc_generated_files/i2c2.c"
  7227 ;; Parameters:    Size  Location     Type
  7228 ;;		None
  7229 ;; Auto vars:     Size  Location     Type
  7230 ;;		None
  7231 ;; Return value:  Size  Location     Type
  7232 ;;                  1    wreg      void 
  7233 ;; Registers used:
  7234 ;;		None
  7235 ;; Tracked objects:
  7236 ;;		On entry : 0/0
  7237 ;;		On exit  : 0/0
  7238 ;;		Unchanged: 0/0
  7239 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
  7240 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  7241 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  7242 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  7243 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  7244 ;;Total ram usage:        0 bytes
  7245 ;; Hardware stack levels used:    1
  7246 ;; This function calls:
  7247 ;;		Nothing
  7248 ;; This function is called by:
  7249 ;;		_INTERRUPT_InterruptManager
  7250 ;; This function uses a non-reentrant model
  7251 ;;
  7252                           
  7253                           
  7254                           ;psect for function _I2C2_BusCollisionISR
  7255  073F                     _I2C2_BusCollisionISR:	
  7256                           
  7257                           ;incstack = 0
  7258                           ; Regs used in _I2C2_BusCollisionISR: []
  7259  073F  0008               	return
  7260  0740                     __end_of_I2C2_BusCollisionISR:	
  7261  007E                     btemp	set	126	;btemp
  7262  007E                     int$flags	set	126
  7263  007E                     wtemp0	set	126


Data Sizes:
    Strings     257
    Constant    18
    Data        0
    BSS         33
    Persistent  0
    Stack       0

Auto Spaces:
    Space          Size  Autos    Used
    COMMON           14      7      13
    BANK0            80     42      69
    BANK1            80      0       0
    BANK2            80      0       0
    BANK3            80      0       0
    BANK4            80      0       0
    BANK5            80      0       0
    BANK6            80      0       0
    BANK7            80      0       0
    BANK8            80      0       0
    BANK9            80      0       0
    BANK10           80      0       0
    BANK11           80      0       0
    BANK12           48      0       0

Pointer List with Targets:

    i2c2_tr_queue.ptrb_list.pbuffer	PTR unsigned char  size(1) Largest target is 1
		 -> EMC1001_PrintTemp@templo(BANK0[1]), EMC1001_PrintTemp@temp(BANK0[1]), EMC1001_PrintInfo@data(BANK0[1]), EMC1001_Read@reg(BANK0[1]), 

    EMC1001_Read@trb.pbuffer	PTR unsigned char  size(1) Largest target is 1
		 -> EMC1001_PrintTemp@templo(BANK0[1]), EMC1001_PrintTemp@temp(BANK0[1]), EMC1001_PrintInfo@data(BANK0[1]), EMC1001_Read@reg(BANK0[1]), 

    i2c2_tr_queue.pTrFlag	PTR enum E14260 size(1) Largest target is 1
		 -> EMC1001_Read@status(BANK0[1]), 

    i2c2_tr_queue.ptrb_list	PTR struct . size(1) Largest target is 10
		 -> EMC1001_Read@trb(BANK0[8]), I2C2_MasterRead@trBlock(BANK0[4]), I2C2_MasterWrite@trBlock(BANK0[4]), 

    cputs@s	PTR const unsigned char  size(2) Largest target is 43
		 -> STR_10(CODE[2]), STR_1(CODE[43]), 

    puts@s	PTR const unsigned char  size(2) Largest target is 43
		 -> STR_10(CODE[2]), STR_1(CODE[43]), 

    printf$650	PTR const unsigned char  size(2) Largest target is 17
		 -> STR_15(CODE[17]), STR_14(CODE[17]), 

    printf@f	PTR const unsigned char  size(2) Largest target is 30
		 -> STR_12(CODE[2]), STR_11(CODE[30]), STR_9(CODE[24]), STR_8(CODE[25]), 
		 -> STR_7(CODE[28]), STR_6(CODE[15]), STR_5(CODE[23]), STR_2(CODE[23]), 

    printf@cp	PTR const unsigned char  size(2) Largest target is 7
		 -> STR_13(CODE[7]), STR_4(CODE[1]), STR_3(CODE[3]), I2C2_ISR@i2c_address(BANK0[2]), 

    printf@ap	PTR void [1] size(1) Largest target is 2
		 -> ?_printf(BANK0[2]), 

    EMC1001_PrintInfo$595	PTR const unsigned char  size(2) Largest target is 3
		 -> STR_4(CODE[1]), STR_3(CODE[3]), 

    EMC1001_Read@pData	PTR unsigned char  size(1) Largest target is 1
		 -> EMC1001_PrintTemp@templo(BANK0[1]), EMC1001_PrintTemp@temp(BANK0[1]), EMC1001_PrintInfo@data(BANK0[1]), 

    I2C2_MasterWriteTRBBuild@pdata	PTR unsigned char  size(1) Largest target is 1
		 -> EMC1001_Read@reg(BANK0[1]), 

    I2C2_MasterWriteTRBBuild@ptrb.pbuffer	PTR unsigned char  size(1) Largest target is 1
		 -> EMC1001_PrintTemp@templo(BANK0[1]), EMC1001_PrintTemp@temp(BANK0[1]), EMC1001_PrintInfo@data(BANK0[1]), EMC1001_Read@reg(BANK0[1]), 

    I2C2_MasterWriteTRBBuild@ptrb	PTR struct . size(1) Largest target is 10
		 -> EMC1001_Read@trb(BANK0[8]), I2C2_MasterWrite@trBlock(BANK0[4]), 

    I2C2_MasterReadTRBBuild@pdata	PTR unsigned char  size(1) Largest target is 1
		 -> EMC1001_PrintTemp@templo(BANK0[1]), EMC1001_PrintTemp@temp(BANK0[1]), EMC1001_PrintInfo@data(BANK0[1]), 

    I2C2_MasterReadTRBBuild@ptrb.pbuffer	PTR unsigned char  size(1) Largest target is 1
		 -> EMC1001_PrintTemp@templo(BANK0[1]), EMC1001_PrintTemp@temp(BANK0[1]), EMC1001_PrintInfo@data(BANK0[1]), EMC1001_Read@reg(BANK0[1]), 

    I2C2_MasterReadTRBBuild@ptrb	PTR struct . size(1) Largest target is 10
		 -> EMC1001_Read@trb(BANK0[8]), I2C2_MasterRead@trBlock(BANK0[4]), 

    i2c2_object.pTrTail.ptrb_list.pbuffer	PTR unsigned char  size(1) Largest target is 1
		 -> EMC1001_PrintTemp@templo(BANK0[1]), EMC1001_PrintTemp@temp(BANK0[1]), EMC1001_PrintInfo@data(BANK0[1]), EMC1001_Read@reg(BANK0[1]), 

    i2c2_object.pTrTail.pTrFlag	PTR enum E14260 size(1) Largest target is 1
		 -> EMC1001_Read@status(BANK0[1]), 

    i2c2_object.pTrTail.ptrb_list	PTR struct . size(1) Largest target is 10
		 -> EMC1001_Read@trb(BANK0[8]), I2C2_MasterRead@trBlock(BANK0[4]), I2C2_MasterWrite@trBlock(BANK0[4]), 

    I2C2_MasterTRBInsert@ptrb_list	PTR struct . size(1) Largest target is 10
		 -> EMC1001_Read@trb(BANK0[8]), I2C2_MasterRead@trBlock(BANK0[4]), I2C2_MasterWrite@trBlock(BANK0[4]), 

    I2C2_MasterTRBInsert@pflag	PTR enum E14260 size(1) Largest target is 1
		 -> EMC1001_Read@status(BANK0[1]), 

    F14372.pbuffer	PTR unsigned char  size(1) Largest target is 1
		 -> EMC1001_PrintTemp@templo(BANK0[1]), EMC1001_PrintTemp@temp(BANK0[1]), EMC1001_PrintInfo@data(BANK0[1]), EMC1001_Read@reg(BANK0[1]), 

    F14367.pbuffer	PTR unsigned char  size(1) Largest target is 1
		 -> EMC1001_PrintTemp@templo(BANK0[1]), EMC1001_PrintTemp@temp(BANK0[1]), EMC1001_PrintInfo@data(BANK0[1]), EMC1001_Read@reg(BANK0[1]), 

    I2C2_ISR@pi2c_buf_ptr	PTR unsigned char  size(1) Largest target is 2
		 -> EMC1001_PrintTemp@templo(BANK0[1]), EMC1001_PrintTemp@temp(BANK0[1]), EMC1001_PrintInfo@data(BANK0[1]), EMC1001_Read@reg(BANK0[1]), 
		 -> I2C2_ISR@i2c_address(BANK0[2]), NULL(NULL[0]), 

    S87$pbuffer	PTR unsigned char  size(1) Largest target is 1
		 -> EMC1001_PrintTemp@templo(BANK0[1]), EMC1001_PrintTemp@temp(BANK0[1]), EMC1001_PrintInfo@data(BANK0[1]), EMC1001_Read@reg(BANK0[1]), 

    p_i2c2_trb_current.pbuffer	PTR unsigned char  size(1) Largest target is 1
		 -> EMC1001_PrintTemp@templo(BANK0[1]), EMC1001_PrintTemp@temp(BANK0[1]), EMC1001_PrintInfo@data(BANK0[1]), EMC1001_Read@reg(BANK0[1]), 

    p_i2c2_trb_current	PTR struct . size(1) Largest target is 10
		 -> EMC1001_Read@trb(BANK0[8]), I2C2_MasterRead@trBlock(BANK0[4]), I2C2_MasterWrite@trBlock(BANK0[4]), NULL(NULL[0]), 

    i2c2_object.pTrHead.pTrFlag	PTR enum E14260 size(1) Largest target is 1
		 -> EMC1001_Read@status(BANK0[1]), 

    i2c2_object.pTrHead.ptrb_list	PTR struct . size(1) Largest target is 10
		 -> EMC1001_Read@trb(BANK0[8]), I2C2_MasterRead@trBlock(BANK0[4]), I2C2_MasterWrite@trBlock(BANK0[4]), 

    S99$pTrFlag	PTR enum E14260 size(1) Largest target is 1
		 -> EMC1001_Read@status(BANK0[1]), 

    p_i2c2_current.pTrFlag	PTR enum E14260 size(1) Largest target is 1
		 -> EMC1001_Read@status(BANK0[1]), 

    S99$ptrb_list	PTR struct . size(1) Largest target is 10
		 -> EMC1001_Read@trb(BANK0[8]), I2C2_MasterRead@trBlock(BANK0[4]), I2C2_MasterWrite@trBlock(BANK0[4]), 

    p_i2c2_current.ptrb_list	PTR struct . size(1) Largest target is 10
		 -> EMC1001_Read@trb(BANK0[8]), I2C2_MasterRead@trBlock(BANK0[4]), I2C2_MasterWrite@trBlock(BANK0[4]), 

    p_i2c2_current	PTR struct . size(1) Largest target is 5
		 -> i2c2_tr_queue(BANK0[3]), NULL(NULL[0]), 

    S110$pTrHead	PTR struct . size(1) Largest target is 5
		 -> i2c2_tr_queue(BANK0[3]), 

    i2c2_object.pTrHead	PTR struct . size(1) Largest target is 5
		 -> i2c2_tr_queue(BANK0[3]), 

    S110$pTrTail	PTR struct . size(1) Largest target is 5
		 -> i2c2_tr_queue(BANK0[3]), 

    i2c2_object.pTrTail	PTR struct . size(1) Largest target is 5
		 -> i2c2_tr_queue(BANK0[3]), 


Critical Paths under _main in COMMON

    None.

Critical Paths under _INTERRUPT_InterruptManager in COMMON

    _INTERRUPT_InterruptManager->_I2C2_ISR
    _I2C2_ISR->_I2C2_Stop

Critical Paths under _main in BANK0

    _main->_EMC1001_PrintInfo
    _SYSTEM_Initialize->_I2C2_Initialize
    _SYSTEM_Initialize->_PIN_MANAGER_Initialize
    _EMC1001_PrintTemp->_printf
    _EMC1001_PrintInfo->_printf
    _puts->_cputs
    _cputs->_putch
    _printf->___lwmod
    _putch->_EUSART_Write
    ___lwmod->___lwdiv
    _EMC1001_Read->_I2C2_MasterReadTRBBuild
    _EMC1001_Read->_I2C2_MasterWriteTRBBuild

Critical Paths under _INTERRUPT_InterruptManager in BANK0

    None.

Critical Paths under _main in BANK1

    None.

Critical Paths under _INTERRUPT_InterruptManager in BANK1

    None.

Critical Paths under _main in BANK2

    None.

Critical Paths under _INTERRUPT_InterruptManager in BANK2

    None.

Critical Paths under _main in BANK3

    None.

Critical Paths under _INTERRUPT_InterruptManager in BANK3

    None.

Critical Paths under _main in BANK4

    None.

Critical Paths under _INTERRUPT_InterruptManager in BANK4

    None.

Critical Paths under _main in BANK5

    None.

Critical Paths under _INTERRUPT_InterruptManager in BANK5

    None.

Critical Paths under _main in BANK6

    None.

Critical Paths under _INTERRUPT_InterruptManager in BANK6

    None.

Critical Paths under _main in BANK7

    None.

Critical Paths under _INTERRUPT_InterruptManager in BANK7

    None.

Critical Paths under _main in BANK8

    None.

Critical Paths under _INTERRUPT_InterruptManager in BANK8

    None.

Critical Paths under _main in BANK9

    None.

Critical Paths under _INTERRUPT_InterruptManager in BANK9

    None.

Critical Paths under _main in BANK10

    None.

Critical Paths under _INTERRUPT_InterruptManager in BANK10

    None.

Critical Paths under _main in BANK11

    None.

Critical Paths under _INTERRUPT_InterruptManager in BANK11

    None.

Critical Paths under _main in BANK12

    None.

Critical Paths under _INTERRUPT_InterruptManager in BANK12

    None.

Call Graph Tables:

 ---------------------------------------------------------------------------------
 (Depth) Function   	        Calls       Base Space   Used Autos Params    Refs
 ---------------------------------------------------------------------------------
 (0) _main                                                 2     2      0   12487
                                             40 BANK0      2     2      0
                  _EMC1001_PrintInfo
                  _EMC1001_PrintTemp
                  _SYSTEM_Initialize
                             _printf
 ---------------------------------------------------------------------------------
 (1) _SYSTEM_Initialize                                    0     0      0      34
                  _EUSART_Initialize
                    _I2C2_Initialize
              _OSCILLATOR_Initialize
             _PIN_MANAGER_Initialize
 ---------------------------------------------------------------------------------
 (2) _PIN_MANAGER_Initialize                               1     1      0      34
                                              0 BANK0      1     1      0
 ---------------------------------------------------------------------------------
 (2) _OSCILLATOR_Initialize                                0     0      0       0
 ---------------------------------------------------------------------------------
 (2) _I2C2_Initialize                                      1     1      0       0
                                              0 BANK0      1     1      0
 ---------------------------------------------------------------------------------
 (2) _EUSART_Initialize                                    0     0      0       0
 ---------------------------------------------------------------------------------
 (1) _EMC1001_PrintTemp                                    4     4      0    4887
                                             35 BANK0      4     4      0
                       _EMC1001_Read
                             ___wmul
                             _printf
 ---------------------------------------------------------------------------------
 (2) ___wmul                                               6     2      4     266
                                              0 BANK0      6     2      4
 ---------------------------------------------------------------------------------
 (1) _EMC1001_PrintInfo                                    5     5      0    5213
                                             35 BANK0      5     5      0
                       _EMC1001_Read
                             _printf
                               _puts
 ---------------------------------------------------------------------------------
 (2) _puts                                                 2     0      2     415
                                              5 BANK0      2     0      2
                              _cputs
                              _putch
 ---------------------------------------------------------------------------------
 (3) _cputs                                                3     1      2     192
                                              2 BANK0      3     1      2
                              _putch
 ---------------------------------------------------------------------------------
 (1) _printf                                              27    21      6    2353
                                             14 BANK0     21    15      6
                            ___lwdiv
                            ___lwmod
                             ___wmul (ARG)
                              _putch
 ---------------------------------------------------------------------------------
 (2) _putch                                                1     1      0      62
                                              1 BANK0      1     1      0
                       _EUSART_Write
 ---------------------------------------------------------------------------------
 (3) _EUSART_Write                                         1     1      0      31
                                              0 BANK0      1     1      0
 ---------------------------------------------------------------------------------
 (2) ___lwmod                                              6     2      4     265
                                              8 BANK0      6     2      4
                            ___lwdiv (ARG)
 ---------------------------------------------------------------------------------
 (2) ___lwdiv                                              8     4      4     374
                                              0 BANK0      8     4      4
 ---------------------------------------------------------------------------------
 (2) _EMC1001_Read                                         5     4      1    2027
                                              7 BANK0      5     4      1
            _I2C2_MasterReadTRBBuild
               _I2C2_MasterTRBInsert
           _I2C2_MasterWriteTRBBuild
 ---------------------------------------------------------------------------------
 (3) _I2C2_MasterWriteTRBBuild                             7     3      4     504
                                              0 BANK0      7     3      4
 ---------------------------------------------------------------------------------
 (3) _I2C2_MasterTRBInsert                                 4     2      2     450
                                              0 BANK0      4     2      2
 ---------------------------------------------------------------------------------
 (3) _I2C2_MasterReadTRBBuild                              7     3      4     526
                                              0 BANK0      7     3      4
 ---------------------------------------------------------------------------------
 Estimated maximum stack depth 3
 ---------------------------------------------------------------------------------
 (Depth) Function   	        Calls       Base Space   Used Autos Params    Refs
 ---------------------------------------------------------------------------------
 (6) _INTERRUPT_InterruptManager                           1     1      0      22
                                              6 COMMON     1     1      0
               _I2C2_BusCollisionISR
                           _I2C2_ISR
 ---------------------------------------------------------------------------------
 (7) _I2C2_ISR                                             4     4      0      22
                                              2 COMMON     4     4      0
              _I2C2_FunctionComplete
                          _I2C2_Stop
 ---------------------------------------------------------------------------------
 (8) _I2C2_Stop                                            2     2      0      22
                                              0 COMMON     2     2      0
 ---------------------------------------------------------------------------------
 (8) _I2C2_FunctionComplete                                1     1      0       0
                                              0 COMMON     1     1      0
 ---------------------------------------------------------------------------------
 (7) _I2C2_BusCollisionISR                                 0     0      0       0
 ---------------------------------------------------------------------------------
 Estimated maximum stack depth 8
 ---------------------------------------------------------------------------------

 Call Graph Graphs:

 _main (ROOT)
   _EMC1001_PrintInfo
     _EMC1001_Read
       _I2C2_MasterReadTRBBuild
       _I2C2_MasterTRBInsert
       _I2C2_MasterWriteTRBBuild
     _printf
       ___lwdiv
       ___lwmod
         ___lwdiv (ARG)
       ___wmul (ARG)
       _putch (ARG)
         _EUSART_Write
     _puts
       _cputs
         _putch
           _EUSART_Write
       _putch
         _EUSART_Write
   _EMC1001_PrintTemp
     _EMC1001_Read
       _I2C2_MasterReadTRBBuild
       _I2C2_MasterTRBInsert
       _I2C2_MasterWriteTRBBuild
     ___wmul
     _printf
       ___lwdiv
       ___lwmod
         ___lwdiv (ARG)
       ___wmul (ARG)
       _putch (ARG)
         _EUSART_Write
   _SYSTEM_Initialize
     _EUSART_Initialize
     _I2C2_Initialize
     _OSCILLATOR_Initialize
     _PIN_MANAGER_Initialize
   _printf
     ___lwdiv
     ___lwmod
       ___lwdiv (ARG)
     ___wmul (ARG)
     _putch (ARG)
       _EUSART_Write

 _INTERRUPT_InterruptManager (ROOT)
   _I2C2_BusCollisionISR
   _I2C2_ISR
     _I2C2_FunctionComplete
     _I2C2_Stop

 Address spaces:
Name               Size   Autos  Total    Cost      Usage
BIGRAM             3F0      0       0       0        0.0%
EEDATA             100      0       0       0        0.0%
NULL                 0      0       0       0        0.0%
CODE                 0      0       0       0        0.0%
BITCOMMON            E      0       0       1        0.0%
BITSFR0              0      0       0       1        0.0%
SFR0                 0      0       0       1        0.0%
COMMON               E      7       D       2       92.9%
BITSFR1              0      0       0       2        0.0%
SFR1                 0      0       0       2        0.0%
BITSFR2              0      0       0       3        0.0%
SFR2                 0      0       0       3        0.0%
STACK                0      0       0       3        0.0%
BITBANK0            50      0       0       4        0.0%
BITSFR3              0      0       0       4        0.0%
SFR3                 0      0       0       4        0.0%
BANK0               50     2A      45       5       86.2%
BITSFR4              0      0       0       5        0.0%
SFR4                 0      0       0       5        0.0%
BITBANK1            50      0       0       6        0.0%
BITSFR5              0      0       0       6        0.0%
SFR5                 0      0       0       6        0.0%
BANK1               50      0       0       7        0.0%
BITSFR6              0      0       0       7        0.0%
SFR6                 0      0       0       7        0.0%
BITBANK2            50      0       0       8        0.0%
BITSFR7              0      0       0       8        0.0%
SFR7                 0      0       0       8        0.0%
BANK2               50      0       0       9        0.0%
BITSFR8              0      0       0       9        0.0%
SFR8                 0      0       0       9        0.0%
BITBANK3            50      0       0      10        0.0%
BITSFR9              0      0       0      10        0.0%
SFR9                 0      0       0      10        0.0%
BANK3               50      0       0      11        0.0%
BITSFR10             0      0       0      11        0.0%
SFR10                0      0       0      11        0.0%
BITBANK4            50      0       0      12        0.0%
BITSFR11             0      0       0      12        0.0%
SFR11                0      0       0      12        0.0%
BANK4               50      0       0      13        0.0%
BITSFR12             0      0       0      13        0.0%
SFR12                0      0       0      13        0.0%
BITBANK5            50      0       0      14        0.0%
BITSFR13             0      0       0      14        0.0%
SFR13                0      0       0      14        0.0%
BANK5               50      0       0      15        0.0%
BITSFR14             0      0       0      15        0.0%
SFR14                0      0       0      15        0.0%
BITBANK6            50      0       0      16        0.0%
BITSFR15             0      0       0      16        0.0%
SFR15                0      0       0      16        0.0%
BANK6               50      0       0      17        0.0%
BITSFR16             0      0       0      17        0.0%
SFR16                0      0       0      17        0.0%
BITBANK7            50      0       0      18        0.0%
BITSFR17             0      0       0      18        0.0%
SFR17                0      0       0      18        0.0%
BANK7               50      0       0      19        0.0%
BITSFR18             0      0       0      19        0.0%
SFR18                0      0       0      19        0.0%
BITSFR19             0      0       0      20        0.0%
SFR19                0      0       0      20        0.0%
ABS                  0      0      52      20        0.0%
BITBANK8            50      0       0      21        0.0%
BITSFR20             0      0       0      21        0.0%
SFR20                0      0       0      21        0.0%
BANK8               50      0       0      22        0.0%
BITSFR21             0      0       0      22        0.0%
SFR21                0      0       0      22        0.0%
BITBANK9            50      0       0      23        0.0%
BITSFR22             0      0       0      23        0.0%
SFR22                0      0       0      23        0.0%
BANK9               50      0       0      24        0.0%
BITSFR23             0      0       0      24        0.0%
SFR23                0      0       0      24        0.0%
BITBANK10           50      0       0      25        0.0%
BITSFR24             0      0       0      25        0.0%
SFR24                0      0       0      25        0.0%
BANK10              50      0       0      26        0.0%
BITSFR25             0      0       0      26        0.0%
SFR25                0      0       0      26        0.0%
BITBANK11           50      0       0      27        0.0%
BITSFR26             0      0       0      27        0.0%
SFR26                0      0       0      27        0.0%
BANK11              50      0       0      28        0.0%
BITSFR27             0      0       0      28        0.0%
SFR27                0      0       0      28        0.0%
BITBANK12           30      0       0      29        0.0%
BITSFR28             0      0       0      29        0.0%
SFR28                0      0       0      29        0.0%
BANK12              30      0       0      30        0.0%
BITSFR29             0      0       0      30        0.0%
SFR29                0      0       0      30        0.0%
BITSFR30             0      0       0      31        0.0%
SFR30                0      0       0      31        0.0%
DATA                 0      0      52      31        0.0%
BITSFR31             0      0       0      32        0.0%
SFR31                0      0       0      32        0.0%


Microchip Technology PIC Macro Assembler V1.41 build -162212810 
Symbol Table                                                                                   Wed Mar 22 17:40:59 2017

                                  pc 0002                          __CFG_CP$OFF 0000  
              ?_I2C2_MasterTRBInsert 0020                                   l31 0722  
                ___wmul@multiplicand 0022       I2C2_MasterReadTRBBuild@address 0022  
                        __CFG_LVP$ON 0000                          __CFG_ZCD$ON 0000  
                                l343 009D                                  l344 0052  
                                l361 00E4                                  l345 0053  
                                l356 00C2                                  l460 0679  
                                l378 018E                                  _GIE 005F  
                       __CFG_CPD$OFF 0000                    EMC1001_Read@pData 0027  
                                u905 05BB                                  u915 05C5  
                                u925 05CD                                  u955 05E4  
                                u885 05B1                                  u975 05F3  
                                u985 05FA                __size_of_EMC1001_Read 003C  
                       __CFG_BORV$LO 0000                                  wreg 0009  
                   __end_of_I2C2_ISR 02C9                                 l2101 0033  
                               l2031 0068                                 l2017 004F  
                               l2105 0673                                 l2019 0055  
                               l2035 007D                                 l2131 0407  
                               l1431 0550                                 l2047 00B6  
                               l2151 048E                                 l2143 0458  
                               l2135 0422                                 l2127 03F8  
                               l1441 0563                                 l2081 011D  
                               l2073 0106                                 l1435 0557  
                               l2083 0143                                 l2075 010F  
                               l2147 0473                                 l2139 043D  
                               l2163 04BE                                 l2171 0634  
                               l1437 055C                                 l1463 05CC  
                               l1455 05AE                                 l2079 0117  
                               l1457 05BA                                 l1481 05ED  
                               l2089 0165                                 l2097 0178  
                               l1467 05D5                                 l2099 017C  
                               l1573 0599                                 l1485 05F9  
                               l1479 05E1                                 l1489 0602  
                               l1959 06D4                                 STR_1 02DB  
                               STR_2 0388                                 STR_3 03D7  
                               STR_4 0358                                 STR_5 0371  
                               STR_6 03C1                                 STR_7 0324  
                               STR_8 0340                                 STR_9 0359  
                               u1060 05A3                                 _LATA 0016  
                               _LATB 0017                                 _LATC 0018  
                               u1610 0521                                 u1725 00FF  
                               u1805 067F                                 u1905 04AF  
                               u1695 00DD                                 u1927 0648  
                               u1795 067A                                 _WPUA 0F39  
                               _WPUB 0F44                                 _WPUC 0F4F  
                               _WPUE 0F65                         __CFG_WRT$OFF 0000  
                      __CFG_FCMEN$ON 0000                                 _main 062F  
                               fsr0h 0005                                 fsr1h 0007  
                               indf0 0000                                 fsr0l 0004  
                               indf1 0001                                 fsr1l 0006  
                               btemp 007E                                 _puts 0709  
        I2C2_MasterReadTRBBuild@ptrb 0026                        __CFG_BOREN$ON 0000  
                               start 001B                   EMC1001_Read@status 002B  
                      __CFG_CSWEN$ON 0000                        __CFG_MCLRE$ON 0000  
                       _EMC1001_Read 0569                           _i2c2_state 004F  
                      ?_EUSART_Write 0070       __size_of_OSCILLATOR_Initialize 0009  
      __end_of_OSCILLATOR_Initialize 0733              _I2C2_MasterReadTRBBuild 0607  
                              ?_main 0070                                STR_10 0357  
                              STR_11 0306                                STR_12 03DA  
                              STR_13 03D0                                STR_14 039F  
                              STR_15 03B0                        __CFG_WDTE$OFF 0000  
                  __end_of_I2C2_Stop 06D4                                ?_puts 0025  
                    __end_of___lwdiv 05DA                                i1l100 01A2  
                              i1l111 01F8                                i1l112 0204  
                              i1l105 01CD                                i1l130 0285  
                              i1l122 0245                                i1l106 01D5  
                              i1l202 0016                                i1l141 06F9  
     __size_of_I2C2_FunctionComplete 0012                                i1l134 02AA  
                              i1l126 0264                                i1l129 0277  
                    __end_of___lwmod 0607                                i1l198 0011  
      __end_of_I2C2_FunctionComplete 06FD                                _OSCEN 0891  
                              _TRISA 0011                                _TRISB 0012  
                              _TRISC 0013                      __end_of_dpowers 02D3  
                              _cputs 06D4                                _putch 0739  
       I2C2_MasterReadTRBBuild@pdata 0020                                puts@s 0025  
                              status 0003                                wtemp0 007E  
                  ??_I2C2_Initialize 0020                      __initialization 001D  
                       __end_of_main 0650               ??_I2C2_MasterTRBInsert 0022  
                       __end_of_puts 0715                       ??_EUSART_Write 0020  
        ?_INTERRUPT_InterruptManager 0070     __end_of_I2C2_MasterWriteTRBBuild 0670  
                             ??_main 0048                          _i2c2_object 004A  
                             ??_puts 0027                               ?_cputs 0022  
                             i1S2209 06A4                               _ANSELA 0F38  
                             ?_putch 0070                               _ANSELB 0F43  
                             _ANSELC 0F4E                   __CFG_RSTOSC$HFINT1 0000  
                             _RC1REG 0119                               _RC0PPS 0F20  
                             _RC1STA 011D                               _RC3PPS 0F23  
                             _RC4PPS 0F24         __end_of_I2C2_BusCollisionISR 0740  
                             i1l1525 06D1                               i1l1713 01C0  
                             i1l1803 0293                               i1l1731 01F3  
                             i1l1725 01E1                               i1l1815 02AD  
                             i1l1817 02B0                               i1l1745 0221  
                             i1l1825 02BD                               i1l1819 02B4  
                             i1l1771 0240                               i1l1765 0235  
                             i1l1787 026C                               i1l1779 0253  
                             i1l1799 028C                       __CFG_WDTCCS$SC 0000  
                             _OSCFRQ 0893                               _TX1REG 011A  
                             _TX1STA 011E                       __CFG_PWRTE$OFF 0000  
                             ___wmul 0670                       _p_i2c2_current 007A  
                     __CFG_STVREN$ON 0000            ??_I2C2_MasterReadTRBBuild 0024  
                          ??___lwdiv 0024                            ??___lwmod 002C  
                          ?_I2C2_ISR 0070             I2C2_Stop@completion_code 0071  
                             _printf 002E        I2C2_MasterReadTRBBuild@length 0021  
                             cputs@s 0022                    _SYSTEM_Initialize 06FD  
            __end_of__initialization 002A                   ?_SYSTEM_Initialize 0070  
                    EMC1001_Read@reg 002A                      EMC1001_Read@trb 0050  
            EMC1001_PrintTemp@templo 0046                       __pcstackCOMMON 0070  
                ??_SYSTEM_Initialize 0021                        __end_of_cputs 06EB  
                     _i2c2_trb_count 007C                        __end_of_putch 073F  
                         ??_I2C2_ISR 0072             _I2C2_MasterWriteTRBBuild 0650  
       I2C2_MasterWriteTRBBuild@ptrb 0026                              ??_cputs 0024  
          __end_of_SYSTEM_Initialize 0709                              ??_putch 0021  
              _EMC1001_PrintInfo$595 0045                           __pbssBANK0 004A  
               __end_of_EUSART_Write 072A                           __pmaintext 062F  
                            ?___wmul 0020                      __CFG_PPS1WAY$ON 0000  
                         __pintentry 0004                       _SSP2DATPPSbits 0EC9  
               _I2C2_BusCollisionISR 073F                              ?_printf 002E  
                            _SP1BRGH 011C                              _SP1BRGL 011B  
  I2C2_ISR@i2c_10bit_address_restart 0077                              _OSCCON1 088D  
                            _OSCCON3 088F                            _I2C2_Stop 06BC  
                     _SSP2CLKPPSbits 0EC8                              _OSCTUNE 0892  
                            _SSP2ADD 0197                              _PPSLOCK 0E8F  
                            _SSP2BUF 0196                      _I2C2_Initialize 068C  
             I2C2_MasterRead@trBlock 0058                    _EMC1001_PrintInfo 03DC  
                  _EMC1001_PrintTemp 0496                   ?_EMC1001_PrintInfo 0070  
                 ?_EMC1001_PrintTemp 0070                 __CFG_SCANE$available 0000  
                    __size_of___wmul 001C                              ___lwdiv 05A5  
                            ___lwmod 05DA                ?_I2C2_BusCollisionISR 0070  
          I2C2_MasterTRBInsert@count 0023                              __ptext1 06FD  
                            __ptext2 04DD                              __ptext3 072A  
                            __ptext4 068C                              __ptext5 0715  
                            __ptext6 0496                              __ptext7 0670  
                            __ptext8 03DC                              __ptext9 0709  
                ??_EMC1001_PrintInfo 0043            I2C2_MasterTRBInsert@pflag 0021  
                ??_EMC1001_PrintTemp 0043                      __size_of_printf 0161  
                  __end_of_hexpowers 02DB                              _dpowers 02C9  
              _OSCILLATOR_Initialize 072A             ??_PIN_MANAGER_Initialize 0020  
                         ?_I2C2_Stop 0070                _I2C2_FunctionComplete 06EB  
         __size_of_SYSTEM_Initialize 000C                              clrloop0 0734  
               end_of_initialization 002A            __end_of_EMC1001_PrintInfo 0496  
          __end_of_EMC1001_PrintTemp 04DD                    _EUSART_Initialize 0715  
                 ?_EUSART_Initialize 0070                   _p_i2c2_trb_current 007B  
                            printf@c 0042                              printf@f 002E  
             I2C2_ISR@i2c_bytes_left 0078                         __pstringtext 02C9  
                         _printf$650 0039        __size_of_I2C2_MasterTRBInsert 0046  
              __CFG_WDTCPS$WDTCPS_31 0000                  ??_EUSART_Initialize 0020  
                  __size_of_I2C2_ISR 013A              __end_of_I2C2_Initialize 06A4  
              __size_of_EUSART_Write 000A                     __CFG_FEXTOSC$OFF 0000  
          __end_of_EUSART_Initialize 0720               ??_I2C2_BusCollisionISR 0070  
         ??_I2C2_MasterWriteTRBBuild 0024                       __end_of___wmul 068C  
                       _EUSART_Write 0720               ?_OSCILLATOR_Initialize 0070  
                     __end_of_printf 018F               ?_I2C2_FunctionComplete 0070  
                start_initialization 001D                          ??_I2C2_Stop 0070  
    __size_of_PIN_MANAGER_Initialize 0046                          putch@txData 0021  
         __size_of_EMC1001_PrintInfo 00BA           __size_of_EMC1001_PrintTemp 0047  
    I2C2_MasterWriteTRBBuild@address 0022             ?_I2C2_MasterReadTRBBuild 0020  
                   __CFG_LPBOREN$OFF 0000                        ?_EMC1001_Read 0027  
                           ??___wmul 0024        I2C2_MasterWriteTRBBuild@pdata 0020  
               I2C2_ISR@pi2c_buf_ptr 0079                             ??_printf 0034  
                        __pbssCOMMON 0077                     ?_I2C2_Initialize 0070  
                          ___latbits 0002                        __pcstackBANK0 0020  
                      _i2c2_tr_queue 0060           __size_of_EUSART_Initialize 000B  
                   ___lwdiv@dividend 0022               _PIN_MANAGER_Initialize 04DD  
                     ??_EMC1001_Read 0028                             ?___lwdiv 0020  
                           ?___lwmod 0028                             _I2C2_ISR 018F  
       ??_INTERRUPT_InterruptManager 0076                            __pswtext1 06A4  
                           _BAUD1CON 011F                            _hexpowers 02D3  
                   ___lwdiv@quotient 0025                       __size_of_cputs 0017  
                     __size_of_putch 0006      __end_of_I2C2_MasterReadTRBBuild 062F  
                     ___wmul@product 0024                            clear_ram0 0733  
                           _PIE3bits 0719  __size_of_INTERRUPT_InterruptManager 0017  
                           _PIR3bits 070F                             _SSP2CON1 019A  
                           _SSP2CON3 019C                             _SSP2STAT 0199  
      I2C2_MasterTRBInsert@ptrb_list 0020                    ___wmul@multiplier 0020  
                         printf@flag 003F                           printf@prec 003B  
       __end_of_I2C2_MasterTRBInsert 0569                EMC1001_PrintInfo@data 0047  
     I2C2_MasterWriteTRBBuild@length 0021              ??_OSCILLATOR_Initialize 0020  
                   __size_of___lwdiv 0035                     __size_of___lwmod 002D  
              EMC1001_PrintTemp@temp 0045              ??_I2C2_FunctionComplete 0070  
                    ___lwdiv@divisor 0020                      ___lwdiv@counter 0027  
                           __ptext10 06D4                             __ptext11 002E  
                           __ptext12 0739                             __ptext21 018F  
                           __ptext13 0720                             __ptext22 06BC  
                           __ptext14 05DA                             __ptext23 06EB  
                           __ptext15 05A5                             __ptext24 073F  
                           __ptext16 0569                             __ptext17 0650  
                           __ptext18 0523                             __ptext19 0607  
               __end_of_EMC1001_Read 05A5                         _SSP2CON1bits 019A  
                       _SSP2CON2bits 019B                        __size_of_main 0021  
                      __size_of_puts 000C                 __CFG_WDTCWS$WDTCWS_7 0000  
                         _RC1STAbits 011D                             int$flags 007E  
 __end_of_INTERRUPT_InterruptManager 001B           _INTERRUPT_InterruptManager 0004  
                          printf@idx 0038                            printf@val 0040  
            I2C2_MasterWrite@trBlock 005C        __size_of_I2C2_BusCollisionISR 0001  
        PIN_MANAGER_Initialize@state 0020     __size_of_I2C2_MasterReadTRBBuild 0028  
                         _INTCONbits 000B    __size_of_I2C2_MasterWriteTRBBuild 0020  
          ?_I2C2_MasterWriteTRBBuild 0020                             intlevel1 0000  
                   ___lwmod@dividend 002A                  I2C2_ISR@i2c_address 0063  
            ?_PIN_MANAGER_Initialize 0070                    __CFG_CLKOUTEN$OFF 0000  
                        _PPSLOCKbits 0E8F                             printf@ap 003E  
                           printf@cp 003C                 _I2C2_MasterTRBInsert 0523  
                    ___lwmod@divisor 0028                      ___lwmod@counter 002D  
                 EUSART_Write@txData 0020       __end_of_PIN_MANAGER_Initialize 0523  
           __size_of_I2C2_Initialize 0018                   __size_of_I2C2_Stop 0018  
