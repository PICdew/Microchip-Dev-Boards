

Microchip Technology PIC LITE Macro Assembler V1.41 build -162212810 
                                                                                               Fri Mar 24 03:56:38 2017

Microchip Technology Omniscient Code Generator v1.41 (Free mode) build 201701250102
     1                           	processor	16F18855
     2                           	opt	pw 120
     3                           	opt	lm
     4                           	psect	stringtext,global,class=STRCODE,delta=2
     5                           	psect	cinit,global,class=CODE,merge=1,delta=2
     6                           	psect	bssCOMMON,global,class=COMMON,space=1,delta=1
     7                           	psect	bssBANK0,global,class=BANK0,space=1,delta=1
     8                           	psect	clrtext,global,class=CODE,delta=2
     9                           	psect	cstackCOMMON,global,class=COMMON,space=1,delta=1
    10                           	psect	cstackBANK0,global,class=BANK0,space=1,delta=1
    11                           	psect	maintext,global,class=CODE,merge=1,split=1,delta=2
    12                           	psect	text1,local,class=CODE,merge=1,delta=2
    13                           	psect	text2,local,class=CODE,merge=1,delta=2
    14                           	psect	text3,local,class=CODE,merge=1,delta=2
    15                           	psect	text4,local,class=CODE,merge=1,delta=2
    16                           	psect	text5,local,class=CODE,merge=1,delta=2
    17                           	psect	text6,local,class=CODE,merge=1,delta=2
    18                           	psect	text7,local,class=CODE,merge=1,delta=2
    19                           	psect	text8,local,class=CODE,merge=1,delta=2,group=2
    20                           	psect	text9,local,class=CODE,merge=1,delta=2,group=2
    21                           	psect	text10,local,class=CODE,merge=1,delta=2
    22                           	psect	text11,local,class=CODE,merge=1,delta=2
    23                           	psect	text12,local,class=CODE,merge=1,delta=2
    24                           	psect	text13,local,class=CODE,merge=1,delta=2,group=2
    25                           	psect	text14,local,class=CODE,merge=1,delta=2,group=2
    26                           	psect	text15,local,class=CODE,merge=1,delta=2,group=2
    27                           	psect	text16,local,class=CODE,merge=1,delta=2
    28                           	psect	text17,local,class=CODE,merge=1,delta=2
    29                           	psect	text18,local,class=CODE,merge=1,delta=2
    30                           	psect	text19,local,class=CODE,merge=1,delta=2
    31                           	psect	intentry,global,class=CODE,delta=2
    32                           	psect	text21,local,class=CODE,merge=1,delta=2
    33                           	psect	swtext1,local,class=CONST,delta=2
    34                           	psect	text22,local,class=CODE,merge=1,delta=2
    35                           	psect	text23,local,class=CODE,merge=1,delta=2
    36                           	psect	text24,local,class=CODE,merge=1,delta=2
    37                           	dabs	1,0x7E,2
    38  0000                     
    39                           ; Version 1.41
    40                           ; Generated 25/01/2017 GMT
    41                           ; 
    42                           ; Copyright Â© 2017, Microchip Technology Inc. and its subsidiaries ("Microchip")
    43                           ; All rights reserved.
    44                           ; 
    45                           ; This software is developed by Microchip Technology Inc. and its subsidiaries ("Microch
      +                          ip").
    46                           ; 
    47                           ; Redistribution and use in source and binary forms, with or without modification, are
    48                           ; permitted provided that the following conditions are met:
    49                           ; 
    50                           ;     1. Redistributions of source code must retain the above copyright notice, this lis
      +                          t of
    51                           ;        conditions and the following disclaimer.
    52                           ; 
    53                           ;     2. Redistributions in binary form must reproduce the above copyright notice, this 
      +                          list
    54                           ;        of conditions and the following disclaimer in the documentation and/or other
    55                           ;        materials provided with the distribution.
    56                           ; 
    57                           ;     3. Microchip's name may not be used to endorse or promote products derived from th
      +                          is
    58                           ;        software without specific prior written permission.
    59                           ; 
    60                           ; THIS SOFTWARE IS PROVIDED BY MICROCHIP "AS IS" AND ANY EXPRESS OR IMPLIED WARRANTIES,
    61                           ; INCLUDING, BUT NOT LIMITED TO, THE IMPLIED WARRANTIES OF MERCHANTABILITY AND FITNESS F
      +                          OR
    62                           ; PURPOSE ARE DISCLAIMED.  IN NO EVENT SHALL MICROCHIP BE LIABLE FOR ANY DIRECT, INDIREC
      +                          T,
    63                           ; INCIDENTAL, SPECIAL, EXEMPLARY, OR CONSEQUENTIAL DAMAGES (INCLUDING BUT NOT LIMITED TO
    64                           ; PROCUREMENT OF SUBSTITUTE GOODS OR SERVICES; LOSS OF USE, DATA OR PROFITS; OR BUSINESS
    65                           ; INTERRUPTION) HOWSOEVER CAUSED AND ON ANY THEORY OF LIABILITY, WHETHER IN CONTRACT, ST
      +                          RICT
    66                           ; LIABILITY, OR TORT (INCLUDING NEGLIGENCE OR OTHERWISE) ARISING IN ANY WAY OUT OF THE U
      +                          SE OF
    67                           ; THIS SOFTWARE, EVEN IF ADVISED OF THE POSSIBILITY OF SUCH DAMAGE.
    68                           ; 
    69                           ; 
    70                           ; Code-generator required, PIC16F18855 Definitions
    71                           ; 
    72                           ; SFR Addresses
    73  0000                     	;# 
    74  0001                     	;# 
    75  0002                     	;# 
    76  0003                     	;# 
    77  0004                     	;# 
    78  0005                     	;# 
    79  0006                     	;# 
    80  0007                     	;# 
    81  0008                     	;# 
    82  0009                     	;# 
    83  000A                     	;# 
    84  000B                     	;# 
    85  000C                     	;# 
    86  000D                     	;# 
    87  000E                     	;# 
    88  0010                     	;# 
    89  0011                     	;# 
    90  0012                     	;# 
    91  0013                     	;# 
    92  0016                     	;# 
    93  0017                     	;# 
    94  0018                     	;# 
    95  001C                     	;# 
    96  001C                     	;# 
    97  001D                     	;# 
    98  001D                     	;# 
    99  001E                     	;# 
   100  001F                     	;# 
   101  008C                     	;# 
   102  008C                     	;# 
   103  008D                     	;# 
   104  008E                     	;# 
   105  008E                     	;# 
   106  008F                     	;# 
   107  0090                     	;# 
   108  0090                     	;# 
   109  0091                     	;# 
   110  0093                     	;# 
   111  0094                     	;# 
   112  0095                     	;# 
   113  0096                     	;# 
   114  0097                     	;# 
   115  0098                     	;# 
   116  0099                     	;# 
   117  009A                     	;# 
   118  009B                     	;# 
   119  009C                     	;# 
   120  009D                     	;# 
   121  009E                     	;# 
   122  010C                     	;# 
   123  010D                     	;# 
   124  010E                     	;# 
   125  010E                     	;# 
   126  010F                     	;# 
   127  0110                     	;# 
   128  0110                     	;# 
   129  0111                     	;# 
   130  0112                     	;# 
   131  0112                     	;# 
   132  0113                     	;# 
   133  0114                     	;# 
   134  0114                     	;# 
   135  0115                     	;# 
   136  0116                     	;# 
   137  0116                     	;# 
   138  0117                     	;# 
   139  0119                     	;# 
   140  0119                     	;# 
   141  0119                     	;# 
   142  011A                     	;# 
   143  011A                     	;# 
   144  011A                     	;# 
   145  011B                     	;# 
   146  011B                     	;# 
   147  011B                     	;# 
   148  011B                     	;# 
   149  011B                     	;# 
   150  011C                     	;# 
   151  011C                     	;# 
   152  011C                     	;# 
   153  011D                     	;# 
   154  011D                     	;# 
   155  011D                     	;# 
   156  011E                     	;# 
   157  011E                     	;# 
   158  011E                     	;# 
   159  011F                     	;# 
   160  011F                     	;# 
   161  011F                     	;# 
   162  011F                     	;# 
   163  011F                     	;# 
   164  018C                     	;# 
   165  018D                     	;# 
   166  018E                     	;# 
   167  018F                     	;# 
   168  0190                     	;# 
   169  0191                     	;# 
   170  0192                     	;# 
   171  0196                     	;# 
   172  0197                     	;# 
   173  0198                     	;# 
   174  0199                     	;# 
   175  019A                     	;# 
   176  019B                     	;# 
   177  019C                     	;# 
   178  020C                     	;# 
   179  020C                     	;# 
   180  020D                     	;# 
   181  020E                     	;# 
   182  020F                     	;# 
   183  020F                     	;# 
   184  0210                     	;# 
   185  0210                     	;# 
   186  0211                     	;# 
   187  0211                     	;# 
   188  0212                     	;# 
   189  0212                     	;# 
   190  0213                     	;# 
   191  0214                     	;# 
   192  0215                     	;# 
   193  0215                     	;# 
   194  0216                     	;# 
   195  0216                     	;# 
   196  0217                     	;# 
   197  0217                     	;# 
   198  0218                     	;# 
   199  0218                     	;# 
   200  0219                     	;# 
   201  021A                     	;# 
   202  021B                     	;# 
   203  021B                     	;# 
   204  021C                     	;# 
   205  021C                     	;# 
   206  021D                     	;# 
   207  021D                     	;# 
   208  021E                     	;# 
   209  021F                     	;# 
   210  028C                     	;# 
   211  028C                     	;# 
   212  028D                     	;# 
   213  028D                     	;# 
   214  028E                     	;# 
   215  028F                     	;# 
   216  0290                     	;# 
   217  0290                     	;# 
   218  0291                     	;# 
   219  0292                     	;# 
   220  0292                     	;# 
   221  0293                     	;# 
   222  0293                     	;# 
   223  0294                     	;# 
   224  0295                     	;# 
   225  0296                     	;# 
   226  0296                     	;# 
   227  0297                     	;# 
   228  0298                     	;# 
   229  0298                     	;# 
   230  0299                     	;# 
   231  0299                     	;# 
   232  029A                     	;# 
   233  029B                     	;# 
   234  029C                     	;# 
   235  029C                     	;# 
   236  029D                     	;# 
   237  030C                     	;# 
   238  030C                     	;# 
   239  030D                     	;# 
   240  030E                     	;# 
   241  030F                     	;# 
   242  0310                     	;# 
   243  0310                     	;# 
   244  0311                     	;# 
   245  0312                     	;# 
   246  0313                     	;# 
   247  0314                     	;# 
   248  0314                     	;# 
   249  0315                     	;# 
   250  0316                     	;# 
   251  0317                     	;# 
   252  0318                     	;# 
   253  0318                     	;# 
   254  0319                     	;# 
   255  031A                     	;# 
   256  031B                     	;# 
   257  031C                     	;# 
   258  031C                     	;# 
   259  031D                     	;# 
   260  031E                     	;# 
   261  031F                     	;# 
   262  038C                     	;# 
   263  038D                     	;# 
   264  038E                     	;# 
   265  0390                     	;# 
   266  0391                     	;# 
   267  0392                     	;# 
   268  040C                     	;# 
   269  040D                     	;# 
   270  040E                     	;# 
   271  040F                     	;# 
   272  0410                     	;# 
   273  0411                     	;# 
   274  0416                     	;# 
   275  0416                     	;# 
   276  0417                     	;# 
   277  0418                     	;# 
   278  0418                     	;# 
   279  0419                     	;# 
   280  041A                     	;# 
   281  041A                     	;# 
   282  041B                     	;# 
   283  041C                     	;# 
   284  041C                     	;# 
   285  041D                     	;# 
   286  041E                     	;# 
   287  041F                     	;# 
   288  048C                     	;# 
   289  048C                     	;# 
   290  048D                     	;# 
   291  048E                     	;# 
   292  048F                     	;# 
   293  048F                     	;# 
   294  0490                     	;# 
   295  0491                     	;# 
   296  0492                     	;# 
   297  0492                     	;# 
   298  0493                     	;# 
   299  0494                     	;# 
   300  0495                     	;# 
   301  0495                     	;# 
   302  0496                     	;# 
   303  0497                     	;# 
   304  0498                     	;# 
   305  0499                     	;# 
   306  049A                     	;# 
   307  049B                     	;# 
   308  049C                     	;# 
   309  049D                     	;# 
   310  050C                     	;# 
   311  050C                     	;# 
   312  050D                     	;# 
   313  050E                     	;# 
   314  050F                     	;# 
   315  050F                     	;# 
   316  0510                     	;# 
   317  0511                     	;# 
   318  0512                     	;# 
   319  0512                     	;# 
   320  0513                     	;# 
   321  0514                     	;# 
   322  0515                     	;# 
   323  0515                     	;# 
   324  0516                     	;# 
   325  0517                     	;# 
   326  0518                     	;# 
   327  0519                     	;# 
   328  051A                     	;# 
   329  051B                     	;# 
   330  051C                     	;# 
   331  051D                     	;# 
   332  058C                     	;# 
   333  058C                     	;# 
   334  058D                     	;# 
   335  058E                     	;# 
   336  058F                     	;# 
   337  058F                     	;# 
   338  0590                     	;# 
   339  0591                     	;# 
   340  0592                     	;# 
   341  0593                     	;# 
   342  060C                     	;# 
   343  060D                     	;# 
   344  060E                     	;# 
   345  060F                     	;# 
   346  0610                     	;# 
   347  0611                     	;# 
   348  0612                     	;# 
   349  0613                     	;# 
   350  0614                     	;# 
   351  0616                     	;# 
   352  0617                     	;# 
   353  0618                     	;# 
   354  0619                     	;# 
   355  061A                     	;# 
   356  061B                     	;# 
   357  061C                     	;# 
   358  061D                     	;# 
   359  061E                     	;# 
   360  068C                     	;# 
   361  068D                     	;# 
   362  068E                     	;# 
   363  068F                     	;# 
   364  0690                     	;# 
   365  0691                     	;# 
   366  0692                     	;# 
   367  0693                     	;# 
   368  0694                     	;# 
   369  070C                     	;# 
   370  070D                     	;# 
   371  070E                     	;# 
   372  070F                     	;# 
   373  0710                     	;# 
   374  0711                     	;# 
   375  0712                     	;# 
   376  0713                     	;# 
   377  0714                     	;# 
   378  0716                     	;# 
   379  0717                     	;# 
   380  0718                     	;# 
   381  0719                     	;# 
   382  071A                     	;# 
   383  071B                     	;# 
   384  071C                     	;# 
   385  071D                     	;# 
   386  071E                     	;# 
   387  0796                     	;# 
   388  0797                     	;# 
   389  0798                     	;# 
   390  0799                     	;# 
   391  079A                     	;# 
   392  079B                     	;# 
   393  080C                     	;# 
   394  080D                     	;# 
   395  080E                     	;# 
   396  080F                     	;# 
   397  0810                     	;# 
   398  0811                     	;# 
   399  0812                     	;# 
   400  0813                     	;# 
   401  0814                     	;# 
   402  081A                     	;# 
   403  081B                     	;# 
   404  081C                     	;# 
   405  081D                     	;# 
   406  081E                     	;# 
   407  081F                     	;# 
   408  088C                     	;# 
   409  088D                     	;# 
   410  088E                     	;# 
   411  088F                     	;# 
   412  0890                     	;# 
   413  0891                     	;# 
   414  0892                     	;# 
   415  0893                     	;# 
   416  0895                     	;# 
   417  0896                     	;# 
   418  0897                     	;# 
   419  0898                     	;# 
   420  0899                     	;# 
   421  089A                     	;# 
   422  089B                     	;# 
   423  090C                     	;# 
   424  090E                     	;# 
   425  090F                     	;# 
   426  091F                     	;# 
   427  091F                     	;# 
   428  098F                     	;# 
   429  098F                     	;# 
   430  0990                     	;# 
   431  0991                     	;# 
   432  0992                     	;# 
   433  0993                     	;# 
   434  0994                     	;# 
   435  0995                     	;# 
   436  0996                     	;# 
   437  0997                     	;# 
   438  0E0F                     	;# 
   439  0E10                     	;# 
   440  0E11                     	;# 
   441  0E12                     	;# 
   442  0E13                     	;# 
   443  0E14                     	;# 
   444  0E15                     	;# 
   445  0E16                     	;# 
   446  0E17                     	;# 
   447  0E18                     	;# 
   448  0E19                     	;# 
   449  0E1A                     	;# 
   450  0E1B                     	;# 
   451  0E1C                     	;# 
   452  0E1D                     	;# 
   453  0E1E                     	;# 
   454  0E1F                     	;# 
   455  0E20                     	;# 
   456  0E21                     	;# 
   457  0E22                     	;# 
   458  0E23                     	;# 
   459  0E24                     	;# 
   460  0E25                     	;# 
   461  0E26                     	;# 
   462  0E27                     	;# 
   463  0E28                     	;# 
   464  0E29                     	;# 
   465  0E2A                     	;# 
   466  0E2B                     	;# 
   467  0E2C                     	;# 
   468  0E2D                     	;# 
   469  0E2E                     	;# 
   470  0E2F                     	;# 
   471  0E30                     	;# 
   472  0E31                     	;# 
   473  0E32                     	;# 
   474  0E33                     	;# 
   475  0E34                     	;# 
   476  0E35                     	;# 
   477  0E36                     	;# 
   478  0E37                     	;# 
   479  0E8F                     	;# 
   480  0E90                     	;# 
   481  0E91                     	;# 
   482  0E92                     	;# 
   483  0E93                     	;# 
   484  0E94                     	;# 
   485  0E95                     	;# 
   486  0E96                     	;# 
   487  0E97                     	;# 
   488  0E9C                     	;# 
   489  0E9D                     	;# 
   490  0E9E                     	;# 
   491  0EA1                     	;# 
   492  0EA2                     	;# 
   493  0EA3                     	;# 
   494  0EA4                     	;# 
   495  0EA5                     	;# 
   496  0EA9                     	;# 
   497  0EAA                     	;# 
   498  0EAB                     	;# 
   499  0EAC                     	;# 
   500  0EB1                     	;# 
   501  0EB2                     	;# 
   502  0EB3                     	;# 
   503  0EB8                     	;# 
   504  0EB9                     	;# 
   505  0EBA                     	;# 
   506  0EBB                     	;# 
   507  0EBC                     	;# 
   508  0EBD                     	;# 
   509  0EBE                     	;# 
   510  0EC3                     	;# 
   511  0EC5                     	;# 
   512  0EC6                     	;# 
   513  0EC7                     	;# 
   514  0EC8                     	;# 
   515  0EC9                     	;# 
   516  0ECA                     	;# 
   517  0ECB                     	;# 
   518  0ECC                     	;# 
   519  0F10                     	;# 
   520  0F11                     	;# 
   521  0F12                     	;# 
   522  0F13                     	;# 
   523  0F14                     	;# 
   524  0F15                     	;# 
   525  0F16                     	;# 
   526  0F17                     	;# 
   527  0F18                     	;# 
   528  0F19                     	;# 
   529  0F1A                     	;# 
   530  0F1B                     	;# 
   531  0F1C                     	;# 
   532  0F1D                     	;# 
   533  0F1E                     	;# 
   534  0F1F                     	;# 
   535  0F20                     	;# 
   536  0F21                     	;# 
   537  0F22                     	;# 
   538  0F23                     	;# 
   539  0F24                     	;# 
   540  0F25                     	;# 
   541  0F26                     	;# 
   542  0F27                     	;# 
   543  0F38                     	;# 
   544  0F39                     	;# 
   545  0F3A                     	;# 
   546  0F3B                     	;# 
   547  0F3C                     	;# 
   548  0F3D                     	;# 
   549  0F3E                     	;# 
   550  0F3F                     	;# 
   551  0F40                     	;# 
   552  0F41                     	;# 
   553  0F43                     	;# 
   554  0F44                     	;# 
   555  0F45                     	;# 
   556  0F46                     	;# 
   557  0F47                     	;# 
   558  0F48                     	;# 
   559  0F49                     	;# 
   560  0F4A                     	;# 
   561  0F4B                     	;# 
   562  0F4C                     	;# 
   563  0F4E                     	;# 
   564  0F4F                     	;# 
   565  0F50                     	;# 
   566  0F51                     	;# 
   567  0F52                     	;# 
   568  0F53                     	;# 
   569  0F54                     	;# 
   570  0F55                     	;# 
   571  0F56                     	;# 
   572  0F57                     	;# 
   573  0F65                     	;# 
   574  0F68                     	;# 
   575  0F69                     	;# 
   576  0F6A                     	;# 
   577  0F6B                     	;# 
   578  0FE4                     	;# 
   579  0FE5                     	;# 
   580  0FE6                     	;# 
   581  0FE7                     	;# 
   582  0FE8                     	;# 
   583  0FE9                     	;# 
   584  0FEA                     	;# 
   585  0FEB                     	;# 
   586  0FED                     	;# 
   587  0FEE                     	;# 
   588  0FEF                     	;# 
   589  0000                     	;# 
   590  0001                     	;# 
   591  0002                     	;# 
   592  0003                     	;# 
   593  0004                     	;# 
   594  0005                     	;# 
   595  0006                     	;# 
   596  0007                     	;# 
   597  0008                     	;# 
   598  0009                     	;# 
   599  000A                     	;# 
   600  000B                     	;# 
   601  000C                     	;# 
   602  000D                     	;# 
   603  000E                     	;# 
   604  0010                     	;# 
   605  0011                     	;# 
   606  0012                     	;# 
   607  0013                     	;# 
   608  0016                     	;# 
   609  0017                     	;# 
   610  0018                     	;# 
   611  001C                     	;# 
   612  001C                     	;# 
   613  001D                     	;# 
   614  001D                     	;# 
   615  001E                     	;# 
   616  001F                     	;# 
   617  008C                     	;# 
   618  008C                     	;# 
   619  008D                     	;# 
   620  008E                     	;# 
   621  008E                     	;# 
   622  008F                     	;# 
   623  0090                     	;# 
   624  0090                     	;# 
   625  0091                     	;# 
   626  0093                     	;# 
   627  0094                     	;# 
   628  0095                     	;# 
   629  0096                     	;# 
   630  0097                     	;# 
   631  0098                     	;# 
   632  0099                     	;# 
   633  009A                     	;# 
   634  009B                     	;# 
   635  009C                     	;# 
   636  009D                     	;# 
   637  009E                     	;# 
   638  010C                     	;# 
   639  010D                     	;# 
   640  010E                     	;# 
   641  010E                     	;# 
   642  010F                     	;# 
   643  0110                     	;# 
   644  0110                     	;# 
   645  0111                     	;# 
   646  0112                     	;# 
   647  0112                     	;# 
   648  0113                     	;# 
   649  0114                     	;# 
   650  0114                     	;# 
   651  0115                     	;# 
   652  0116                     	;# 
   653  0116                     	;# 
   654  0117                     	;# 
   655  0119                     	;# 
   656  0119                     	;# 
   657  0119                     	;# 
   658  011A                     	;# 
   659  011A                     	;# 
   660  011A                     	;# 
   661  011B                     	;# 
   662  011B                     	;# 
   663  011B                     	;# 
   664  011B                     	;# 
   665  011B                     	;# 
   666  011C                     	;# 
   667  011C                     	;# 
   668  011C                     	;# 
   669  011D                     	;# 
   670  011D                     	;# 
   671  011D                     	;# 
   672  011E                     	;# 
   673  011E                     	;# 
   674  011E                     	;# 
   675  011F                     	;# 
   676  011F                     	;# 
   677  011F                     	;# 
   678  011F                     	;# 
   679  011F                     	;# 
   680  018C                     	;# 
   681  018D                     	;# 
   682  018E                     	;# 
   683  018F                     	;# 
   684  0190                     	;# 
   685  0191                     	;# 
   686  0192                     	;# 
   687  0196                     	;# 
   688  0197                     	;# 
   689  0198                     	;# 
   690  0199                     	;# 
   691  019A                     	;# 
   692  019B                     	;# 
   693  019C                     	;# 
   694  020C                     	;# 
   695  020C                     	;# 
   696  020D                     	;# 
   697  020E                     	;# 
   698  020F                     	;# 
   699  020F                     	;# 
   700  0210                     	;# 
   701  0210                     	;# 
   702  0211                     	;# 
   703  0211                     	;# 
   704  0212                     	;# 
   705  0212                     	;# 
   706  0213                     	;# 
   707  0214                     	;# 
   708  0215                     	;# 
   709  0215                     	;# 
   710  0216                     	;# 
   711  0216                     	;# 
   712  0217                     	;# 
   713  0217                     	;# 
   714  0218                     	;# 
   715  0218                     	;# 
   716  0219                     	;# 
   717  021A                     	;# 
   718  021B                     	;# 
   719  021B                     	;# 
   720  021C                     	;# 
   721  021C                     	;# 
   722  021D                     	;# 
   723  021D                     	;# 
   724  021E                     	;# 
   725  021F                     	;# 
   726  028C                     	;# 
   727  028C                     	;# 
   728  028D                     	;# 
   729  028D                     	;# 
   730  028E                     	;# 
   731  028F                     	;# 
   732  0290                     	;# 
   733  0290                     	;# 
   734  0291                     	;# 
   735  0292                     	;# 
   736  0292                     	;# 
   737  0293                     	;# 
   738  0293                     	;# 
   739  0294                     	;# 
   740  0295                     	;# 
   741  0296                     	;# 
   742  0296                     	;# 
   743  0297                     	;# 
   744  0298                     	;# 
   745  0298                     	;# 
   746  0299                     	;# 
   747  0299                     	;# 
   748  029A                     	;# 
   749  029B                     	;# 
   750  029C                     	;# 
   751  029C                     	;# 
   752  029D                     	;# 
   753  030C                     	;# 
   754  030C                     	;# 
   755  030D                     	;# 
   756  030E                     	;# 
   757  030F                     	;# 
   758  0310                     	;# 
   759  0310                     	;# 
   760  0311                     	;# 
   761  0312                     	;# 
   762  0313                     	;# 
   763  0314                     	;# 
   764  0314                     	;# 
   765  0315                     	;# 
   766  0316                     	;# 
   767  0317                     	;# 
   768  0318                     	;# 
   769  0318                     	;# 
   770  0319                     	;# 
   771  031A                     	;# 
   772  031B                     	;# 
   773  031C                     	;# 
   774  031C                     	;# 
   775  031D                     	;# 
   776  031E                     	;# 
   777  031F                     	;# 
   778  038C                     	;# 
   779  038D                     	;# 
   780  038E                     	;# 
   781  0390                     	;# 
   782  0391                     	;# 
   783  0392                     	;# 
   784  040C                     	;# 
   785  040D                     	;# 
   786  040E                     	;# 
   787  040F                     	;# 
   788  0410                     	;# 
   789  0411                     	;# 
   790  0416                     	;# 
   791  0416                     	;# 
   792  0417                     	;# 
   793  0418                     	;# 
   794  0418                     	;# 
   795  0419                     	;# 
   796  041A                     	;# 
   797  041A                     	;# 
   798  041B                     	;# 
   799  041C                     	;# 
   800  041C                     	;# 
   801  041D                     	;# 
   802  041E                     	;# 
   803  041F                     	;# 
   804  048C                     	;# 
   805  048C                     	;# 
   806  048D                     	;# 
   807  048E                     	;# 
   808  048F                     	;# 
   809  048F                     	;# 
   810  0490                     	;# 
   811  0491                     	;# 
   812  0492                     	;# 
   813  0492                     	;# 
   814  0493                     	;# 
   815  0494                     	;# 
   816  0495                     	;# 
   817  0495                     	;# 
   818  0496                     	;# 
   819  0497                     	;# 
   820  0498                     	;# 
   821  0499                     	;# 
   822  049A                     	;# 
   823  049B                     	;# 
   824  049C                     	;# 
   825  049D                     	;# 
   826  050C                     	;# 
   827  050C                     	;# 
   828  050D                     	;# 
   829  050E                     	;# 
   830  050F                     	;# 
   831  050F                     	;# 
   832  0510                     	;# 
   833  0511                     	;# 
   834  0512                     	;# 
   835  0512                     	;# 
   836  0513                     	;# 
   837  0514                     	;# 
   838  0515                     	;# 
   839  0515                     	;# 
   840  0516                     	;# 
   841  0517                     	;# 
   842  0518                     	;# 
   843  0519                     	;# 
   844  051A                     	;# 
   845  051B                     	;# 
   846  051C                     	;# 
   847  051D                     	;# 
   848  058C                     	;# 
   849  058C                     	;# 
   850  058D                     	;# 
   851  058E                     	;# 
   852  058F                     	;# 
   853  058F                     	;# 
   854  0590                     	;# 
   855  0591                     	;# 
   856  0592                     	;# 
   857  0593                     	;# 
   858  060C                     	;# 
   859  060D                     	;# 
   860  060E                     	;# 
   861  060F                     	;# 
   862  0610                     	;# 
   863  0611                     	;# 
   864  0612                     	;# 
   865  0613                     	;# 
   866  0614                     	;# 
   867  0616                     	;# 
   868  0617                     	;# 
   869  0618                     	;# 
   870  0619                     	;# 
   871  061A                     	;# 
   872  061B                     	;# 
   873  061C                     	;# 
   874  061D                     	;# 
   875  061E                     	;# 
   876  068C                     	;# 
   877  068D                     	;# 
   878  068E                     	;# 
   879  068F                     	;# 
   880  0690                     	;# 
   881  0691                     	;# 
   882  0692                     	;# 
   883  0693                     	;# 
   884  0694                     	;# 
   885  070C                     	;# 
   886  070D                     	;# 
   887  070E                     	;# 
   888  070F                     	;# 
   889  0710                     	;# 
   890  0711                     	;# 
   891  0712                     	;# 
   892  0713                     	;# 
   893  0714                     	;# 
   894  0716                     	;# 
   895  0717                     	;# 
   896  0718                     	;# 
   897  0719                     	;# 
   898  071A                     	;# 
   899  071B                     	;# 
   900  071C                     	;# 
   901  071D                     	;# 
   902  071E                     	;# 
   903  0796                     	;# 
   904  0797                     	;# 
   905  0798                     	;# 
   906  0799                     	;# 
   907  079A                     	;# 
   908  079B                     	;# 
   909  080C                     	;# 
   910  080D                     	;# 
   911  080E                     	;# 
   912  080F                     	;# 
   913  0810                     	;# 
   914  0811                     	;# 
   915  0812                     	;# 
   916  0813                     	;# 
   917  0814                     	;# 
   918  081A                     	;# 
   919  081B                     	;# 
   920  081C                     	;# 
   921  081D                     	;# 
   922  081E                     	;# 
   923  081F                     	;# 
   924  088C                     	;# 
   925  088D                     	;# 
   926  088E                     	;# 
   927  088F                     	;# 
   928  0890                     	;# 
   929  0891                     	;# 
   930  0892                     	;# 
   931  0893                     	;# 
   932  0895                     	;# 
   933  0896                     	;# 
   934  0897                     	;# 
   935  0898                     	;# 
   936  0899                     	;# 
   937  089A                     	;# 
   938  089B                     	;# 
   939  090C                     	;# 
   940  090E                     	;# 
   941  090F                     	;# 
   942  091F                     	;# 
   943  091F                     	;# 
   944  098F                     	;# 
   945  098F                     	;# 
   946  0990                     	;# 
   947  0991                     	;# 
   948  0992                     	;# 
   949  0993                     	;# 
   950  0994                     	;# 
   951  0995                     	;# 
   952  0996                     	;# 
   953  0997                     	;# 
   954  0E0F                     	;# 
   955  0E10                     	;# 
   956  0E11                     	;# 
   957  0E12                     	;# 
   958  0E13                     	;# 
   959  0E14                     	;# 
   960  0E15                     	;# 
   961  0E16                     	;# 
   962  0E17                     	;# 
   963  0E18                     	;# 
   964  0E19                     	;# 
   965  0E1A                     	;# 
   966  0E1B                     	;# 
   967  0E1C                     	;# 
   968  0E1D                     	;# 
   969  0E1E                     	;# 
   970  0E1F                     	;# 
   971  0E20                     	;# 
   972  0E21                     	;# 
   973  0E22                     	;# 
   974  0E23                     	;# 
   975  0E24                     	;# 
   976  0E25                     	;# 
   977  0E26                     	;# 
   978  0E27                     	;# 
   979  0E28                     	;# 
   980  0E29                     	;# 
   981  0E2A                     	;# 
   982  0E2B                     	;# 
   983  0E2C                     	;# 
   984  0E2D                     	;# 
   985  0E2E                     	;# 
   986  0E2F                     	;# 
   987  0E30                     	;# 
   988  0E31                     	;# 
   989  0E32                     	;# 
   990  0E33                     	;# 
   991  0E34                     	;# 
   992  0E35                     	;# 
   993  0E36                     	;# 
   994  0E37                     	;# 
   995  0E8F                     	;# 
   996  0E90                     	;# 
   997  0E91                     	;# 
   998  0E92                     	;# 
   999  0E93                     	;# 
  1000  0E94                     	;# 
  1001  0E95                     	;# 
  1002  0E96                     	;# 
  1003  0E97                     	;# 
  1004  0E9C                     	;# 
  1005  0E9D                     	;# 
  1006  0E9E                     	;# 
  1007  0EA1                     	;# 
  1008  0EA2                     	;# 
  1009  0EA3                     	;# 
  1010  0EA4                     	;# 
  1011  0EA5                     	;# 
  1012  0EA9                     	;# 
  1013  0EAA                     	;# 
  1014  0EAB                     	;# 
  1015  0EAC                     	;# 
  1016  0EB1                     	;# 
  1017  0EB2                     	;# 
  1018  0EB3                     	;# 
  1019  0EB8                     	;# 
  1020  0EB9                     	;# 
  1021  0EBA                     	;# 
  1022  0EBB                     	;# 
  1023  0EBC                     	;# 
  1024  0EBD                     	;# 
  1025  0EBE                     	;# 
  1026  0EC3                     	;# 
  1027  0EC5                     	;# 
  1028  0EC6                     	;# 
  1029  0EC7                     	;# 
  1030  0EC8                     	;# 
  1031  0EC9                     	;# 
  1032  0ECA                     	;# 
  1033  0ECB                     	;# 
  1034  0ECC                     	;# 
  1035  0F10                     	;# 
  1036  0F11                     	;# 
  1037  0F12                     	;# 
  1038  0F13                     	;# 
  1039  0F14                     	;# 
  1040  0F15                     	;# 
  1041  0F16                     	;# 
  1042  0F17                     	;# 
  1043  0F18                     	;# 
  1044  0F19                     	;# 
  1045  0F1A                     	;# 
  1046  0F1B                     	;# 
  1047  0F1C                     	;# 
  1048  0F1D                     	;# 
  1049  0F1E                     	;# 
  1050  0F1F                     	;# 
  1051  0F20                     	;# 
  1052  0F21                     	;# 
  1053  0F22                     	;# 
  1054  0F23                     	;# 
  1055  0F24                     	;# 
  1056  0F25                     	;# 
  1057  0F26                     	;# 
  1058  0F27                     	;# 
  1059  0F38                     	;# 
  1060  0F39                     	;# 
  1061  0F3A                     	;# 
  1062  0F3B                     	;# 
  1063  0F3C                     	;# 
  1064  0F3D                     	;# 
  1065  0F3E                     	;# 
  1066  0F3F                     	;# 
  1067  0F40                     	;# 
  1068  0F41                     	;# 
  1069  0F43                     	;# 
  1070  0F44                     	;# 
  1071  0F45                     	;# 
  1072  0F46                     	;# 
  1073  0F47                     	;# 
  1074  0F48                     	;# 
  1075  0F49                     	;# 
  1076  0F4A                     	;# 
  1077  0F4B                     	;# 
  1078  0F4C                     	;# 
  1079  0F4E                     	;# 
  1080  0F4F                     	;# 
  1081  0F50                     	;# 
  1082  0F51                     	;# 
  1083  0F52                     	;# 
  1084  0F53                     	;# 
  1085  0F54                     	;# 
  1086  0F55                     	;# 
  1087  0F56                     	;# 
  1088  0F57                     	;# 
  1089  0F65                     	;# 
  1090  0F68                     	;# 
  1091  0F69                     	;# 
  1092  0F6A                     	;# 
  1093  0F6B                     	;# 
  1094  0FE4                     	;# 
  1095  0FE5                     	;# 
  1096  0FE6                     	;# 
  1097  0FE7                     	;# 
  1098  0FE8                     	;# 
  1099  0FE9                     	;# 
  1100  0FEA                     	;# 
  1101  0FEB                     	;# 
  1102  0FED                     	;# 
  1103  0FEE                     	;# 
  1104  0FEF                     	;# 
  1105  0000                     	;# 
  1106  0001                     	;# 
  1107  0002                     	;# 
  1108  0003                     	;# 
  1109  0004                     	;# 
  1110  0005                     	;# 
  1111  0006                     	;# 
  1112  0007                     	;# 
  1113  0008                     	;# 
  1114  0009                     	;# 
  1115  000A                     	;# 
  1116  000B                     	;# 
  1117  000C                     	;# 
  1118  000D                     	;# 
  1119  000E                     	;# 
  1120  0010                     	;# 
  1121  0011                     	;# 
  1122  0012                     	;# 
  1123  0013                     	;# 
  1124  0016                     	;# 
  1125  0017                     	;# 
  1126  0018                     	;# 
  1127  001C                     	;# 
  1128  001C                     	;# 
  1129  001D                     	;# 
  1130  001D                     	;# 
  1131  001E                     	;# 
  1132  001F                     	;# 
  1133  008C                     	;# 
  1134  008C                     	;# 
  1135  008D                     	;# 
  1136  008E                     	;# 
  1137  008E                     	;# 
  1138  008F                     	;# 
  1139  0090                     	;# 
  1140  0090                     	;# 
  1141  0091                     	;# 
  1142  0093                     	;# 
  1143  0094                     	;# 
  1144  0095                     	;# 
  1145  0096                     	;# 
  1146  0097                     	;# 
  1147  0098                     	;# 
  1148  0099                     	;# 
  1149  009A                     	;# 
  1150  009B                     	;# 
  1151  009C                     	;# 
  1152  009D                     	;# 
  1153  009E                     	;# 
  1154  010C                     	;# 
  1155  010D                     	;# 
  1156  010E                     	;# 
  1157  010E                     	;# 
  1158  010F                     	;# 
  1159  0110                     	;# 
  1160  0110                     	;# 
  1161  0111                     	;# 
  1162  0112                     	;# 
  1163  0112                     	;# 
  1164  0113                     	;# 
  1165  0114                     	;# 
  1166  0114                     	;# 
  1167  0115                     	;# 
  1168  0116                     	;# 
  1169  0116                     	;# 
  1170  0117                     	;# 
  1171  0119                     	;# 
  1172  0119                     	;# 
  1173  0119                     	;# 
  1174  011A                     	;# 
  1175  011A                     	;# 
  1176  011A                     	;# 
  1177  011B                     	;# 
  1178  011B                     	;# 
  1179  011B                     	;# 
  1180  011B                     	;# 
  1181  011B                     	;# 
  1182  011C                     	;# 
  1183  011C                     	;# 
  1184  011C                     	;# 
  1185  011D                     	;# 
  1186  011D                     	;# 
  1187  011D                     	;# 
  1188  011E                     	;# 
  1189  011E                     	;# 
  1190  011E                     	;# 
  1191  011F                     	;# 
  1192  011F                     	;# 
  1193  011F                     	;# 
  1194  011F                     	;# 
  1195  011F                     	;# 
  1196  018C                     	;# 
  1197  018D                     	;# 
  1198  018E                     	;# 
  1199  018F                     	;# 
  1200  0190                     	;# 
  1201  0191                     	;# 
  1202  0192                     	;# 
  1203  0196                     	;# 
  1204  0197                     	;# 
  1205  0198                     	;# 
  1206  0199                     	;# 
  1207  019A                     	;# 
  1208  019B                     	;# 
  1209  019C                     	;# 
  1210  020C                     	;# 
  1211  020C                     	;# 
  1212  020D                     	;# 
  1213  020E                     	;# 
  1214  020F                     	;# 
  1215  020F                     	;# 
  1216  0210                     	;# 
  1217  0210                     	;# 
  1218  0211                     	;# 
  1219  0211                     	;# 
  1220  0212                     	;# 
  1221  0212                     	;# 
  1222  0213                     	;# 
  1223  0214                     	;# 
  1224  0215                     	;# 
  1225  0215                     	;# 
  1226  0216                     	;# 
  1227  0216                     	;# 
  1228  0217                     	;# 
  1229  0217                     	;# 
  1230  0218                     	;# 
  1231  0218                     	;# 
  1232  0219                     	;# 
  1233  021A                     	;# 
  1234  021B                     	;# 
  1235  021B                     	;# 
  1236  021C                     	;# 
  1237  021C                     	;# 
  1238  021D                     	;# 
  1239  021D                     	;# 
  1240  021E                     	;# 
  1241  021F                     	;# 
  1242  028C                     	;# 
  1243  028C                     	;# 
  1244  028D                     	;# 
  1245  028D                     	;# 
  1246  028E                     	;# 
  1247  028F                     	;# 
  1248  0290                     	;# 
  1249  0290                     	;# 
  1250  0291                     	;# 
  1251  0292                     	;# 
  1252  0292                     	;# 
  1253  0293                     	;# 
  1254  0293                     	;# 
  1255  0294                     	;# 
  1256  0295                     	;# 
  1257  0296                     	;# 
  1258  0296                     	;# 
  1259  0297                     	;# 
  1260  0298                     	;# 
  1261  0298                     	;# 
  1262  0299                     	;# 
  1263  0299                     	;# 
  1264  029A                     	;# 
  1265  029B                     	;# 
  1266  029C                     	;# 
  1267  029C                     	;# 
  1268  029D                     	;# 
  1269  030C                     	;# 
  1270  030C                     	;# 
  1271  030D                     	;# 
  1272  030E                     	;# 
  1273  030F                     	;# 
  1274  0310                     	;# 
  1275  0310                     	;# 
  1276  0311                     	;# 
  1277  0312                     	;# 
  1278  0313                     	;# 
  1279  0314                     	;# 
  1280  0314                     	;# 
  1281  0315                     	;# 
  1282  0316                     	;# 
  1283  0317                     	;# 
  1284  0318                     	;# 
  1285  0318                     	;# 
  1286  0319                     	;# 
  1287  031A                     	;# 
  1288  031B                     	;# 
  1289  031C                     	;# 
  1290  031C                     	;# 
  1291  031D                     	;# 
  1292  031E                     	;# 
  1293  031F                     	;# 
  1294  038C                     	;# 
  1295  038D                     	;# 
  1296  038E                     	;# 
  1297  0390                     	;# 
  1298  0391                     	;# 
  1299  0392                     	;# 
  1300  040C                     	;# 
  1301  040D                     	;# 
  1302  040E                     	;# 
  1303  040F                     	;# 
  1304  0410                     	;# 
  1305  0411                     	;# 
  1306  0416                     	;# 
  1307  0416                     	;# 
  1308  0417                     	;# 
  1309  0418                     	;# 
  1310  0418                     	;# 
  1311  0419                     	;# 
  1312  041A                     	;# 
  1313  041A                     	;# 
  1314  041B                     	;# 
  1315  041C                     	;# 
  1316  041C                     	;# 
  1317  041D                     	;# 
  1318  041E                     	;# 
  1319  041F                     	;# 
  1320  048C                     	;# 
  1321  048C                     	;# 
  1322  048D                     	;# 
  1323  048E                     	;# 
  1324  048F                     	;# 
  1325  048F                     	;# 
  1326  0490                     	;# 
  1327  0491                     	;# 
  1328  0492                     	;# 
  1329  0492                     	;# 
  1330  0493                     	;# 
  1331  0494                     	;# 
  1332  0495                     	;# 
  1333  0495                     	;# 
  1334  0496                     	;# 
  1335  0497                     	;# 
  1336  0498                     	;# 
  1337  0499                     	;# 
  1338  049A                     	;# 
  1339  049B                     	;# 
  1340  049C                     	;# 
  1341  049D                     	;# 
  1342  050C                     	;# 
  1343  050C                     	;# 
  1344  050D                     	;# 
  1345  050E                     	;# 
  1346  050F                     	;# 
  1347  050F                     	;# 
  1348  0510                     	;# 
  1349  0511                     	;# 
  1350  0512                     	;# 
  1351  0512                     	;# 
  1352  0513                     	;# 
  1353  0514                     	;# 
  1354  0515                     	;# 
  1355  0515                     	;# 
  1356  0516                     	;# 
  1357  0517                     	;# 
  1358  0518                     	;# 
  1359  0519                     	;# 
  1360  051A                     	;# 
  1361  051B                     	;# 
  1362  051C                     	;# 
  1363  051D                     	;# 
  1364  058C                     	;# 
  1365  058C                     	;# 
  1366  058D                     	;# 
  1367  058E                     	;# 
  1368  058F                     	;# 
  1369  058F                     	;# 
  1370  0590                     	;# 
  1371  0591                     	;# 
  1372  0592                     	;# 
  1373  0593                     	;# 
  1374  060C                     	;# 
  1375  060D                     	;# 
  1376  060E                     	;# 
  1377  060F                     	;# 
  1378  0610                     	;# 
  1379  0611                     	;# 
  1380  0612                     	;# 
  1381  0613                     	;# 
  1382  0614                     	;# 
  1383  0616                     	;# 
  1384  0617                     	;# 
  1385  0618                     	;# 
  1386  0619                     	;# 
  1387  061A                     	;# 
  1388  061B                     	;# 
  1389  061C                     	;# 
  1390  061D                     	;# 
  1391  061E                     	;# 
  1392  068C                     	;# 
  1393  068D                     	;# 
  1394  068E                     	;# 
  1395  068F                     	;# 
  1396  0690                     	;# 
  1397  0691                     	;# 
  1398  0692                     	;# 
  1399  0693                     	;# 
  1400  0694                     	;# 
  1401  070C                     	;# 
  1402  070D                     	;# 
  1403  070E                     	;# 
  1404  070F                     	;# 
  1405  0710                     	;# 
  1406  0711                     	;# 
  1407  0712                     	;# 
  1408  0713                     	;# 
  1409  0714                     	;# 
  1410  0716                     	;# 
  1411  0717                     	;# 
  1412  0718                     	;# 
  1413  0719                     	;# 
  1414  071A                     	;# 
  1415  071B                     	;# 
  1416  071C                     	;# 
  1417  071D                     	;# 
  1418  071E                     	;# 
  1419  0796                     	;# 
  1420  0797                     	;# 
  1421  0798                     	;# 
  1422  0799                     	;# 
  1423  079A                     	;# 
  1424  079B                     	;# 
  1425  080C                     	;# 
  1426  080D                     	;# 
  1427  080E                     	;# 
  1428  080F                     	;# 
  1429  0810                     	;# 
  1430  0811                     	;# 
  1431  0812                     	;# 
  1432  0813                     	;# 
  1433  0814                     	;# 
  1434  081A                     	;# 
  1435  081B                     	;# 
  1436  081C                     	;# 
  1437  081D                     	;# 
  1438  081E                     	;# 
  1439  081F                     	;# 
  1440  088C                     	;# 
  1441  088D                     	;# 
  1442  088E                     	;# 
  1443  088F                     	;# 
  1444  0890                     	;# 
  1445  0891                     	;# 
  1446  0892                     	;# 
  1447  0893                     	;# 
  1448  0895                     	;# 
  1449  0896                     	;# 
  1450  0897                     	;# 
  1451  0898                     	;# 
  1452  0899                     	;# 
  1453  089A                     	;# 
  1454  089B                     	;# 
  1455  090C                     	;# 
  1456  090E                     	;# 
  1457  090F                     	;# 
  1458  091F                     	;# 
  1459  091F                     	;# 
  1460  098F                     	;# 
  1461  098F                     	;# 
  1462  0990                     	;# 
  1463  0991                     	;# 
  1464  0992                     	;# 
  1465  0993                     	;# 
  1466  0994                     	;# 
  1467  0995                     	;# 
  1468  0996                     	;# 
  1469  0997                     	;# 
  1470  0E0F                     	;# 
  1471  0E10                     	;# 
  1472  0E11                     	;# 
  1473  0E12                     	;# 
  1474  0E13                     	;# 
  1475  0E14                     	;# 
  1476  0E15                     	;# 
  1477  0E16                     	;# 
  1478  0E17                     	;# 
  1479  0E18                     	;# 
  1480  0E19                     	;# 
  1481  0E1A                     	;# 
  1482  0E1B                     	;# 
  1483  0E1C                     	;# 
  1484  0E1D                     	;# 
  1485  0E1E                     	;# 
  1486  0E1F                     	;# 
  1487  0E20                     	;# 
  1488  0E21                     	;# 
  1489  0E22                     	;# 
  1490  0E23                     	;# 
  1491  0E24                     	;# 
  1492  0E25                     	;# 
  1493  0E26                     	;# 
  1494  0E27                     	;# 
  1495  0E28                     	;# 
  1496  0E29                     	;# 
  1497  0E2A                     	;# 
  1498  0E2B                     	;# 
  1499  0E2C                     	;# 
  1500  0E2D                     	;# 
  1501  0E2E                     	;# 
  1502  0E2F                     	;# 
  1503  0E30                     	;# 
  1504  0E31                     	;# 
  1505  0E32                     	;# 
  1506  0E33                     	;# 
  1507  0E34                     	;# 
  1508  0E35                     	;# 
  1509  0E36                     	;# 
  1510  0E37                     	;# 
  1511  0E8F                     	;# 
  1512  0E90                     	;# 
  1513  0E91                     	;# 
  1514  0E92                     	;# 
  1515  0E93                     	;# 
  1516  0E94                     	;# 
  1517  0E95                     	;# 
  1518  0E96                     	;# 
  1519  0E97                     	;# 
  1520  0E9C                     	;# 
  1521  0E9D                     	;# 
  1522  0E9E                     	;# 
  1523  0EA1                     	;# 
  1524  0EA2                     	;# 
  1525  0EA3                     	;# 
  1526  0EA4                     	;# 
  1527  0EA5                     	;# 
  1528  0EA9                     	;# 
  1529  0EAA                     	;# 
  1530  0EAB                     	;# 
  1531  0EAC                     	;# 
  1532  0EB1                     	;# 
  1533  0EB2                     	;# 
  1534  0EB3                     	;# 
  1535  0EB8                     	;# 
  1536  0EB9                     	;# 
  1537  0EBA                     	;# 
  1538  0EBB                     	;# 
  1539  0EBC                     	;# 
  1540  0EBD                     	;# 
  1541  0EBE                     	;# 
  1542  0EC3                     	;# 
  1543  0EC5                     	;# 
  1544  0EC6                     	;# 
  1545  0EC7                     	;# 
  1546  0EC8                     	;# 
  1547  0EC9                     	;# 
  1548  0ECA                     	;# 
  1549  0ECB                     	;# 
  1550  0ECC                     	;# 
  1551  0F10                     	;# 
  1552  0F11                     	;# 
  1553  0F12                     	;# 
  1554  0F13                     	;# 
  1555  0F14                     	;# 
  1556  0F15                     	;# 
  1557  0F16                     	;# 
  1558  0F17                     	;# 
  1559  0F18                     	;# 
  1560  0F19                     	;# 
  1561  0F1A                     	;# 
  1562  0F1B                     	;# 
  1563  0F1C                     	;# 
  1564  0F1D                     	;# 
  1565  0F1E                     	;# 
  1566  0F1F                     	;# 
  1567  0F20                     	;# 
  1568  0F21                     	;# 
  1569  0F22                     	;# 
  1570  0F23                     	;# 
  1571  0F24                     	;# 
  1572  0F25                     	;# 
  1573  0F26                     	;# 
  1574  0F27                     	;# 
  1575  0F38                     	;# 
  1576  0F39                     	;# 
  1577  0F3A                     	;# 
  1578  0F3B                     	;# 
  1579  0F3C                     	;# 
  1580  0F3D                     	;# 
  1581  0F3E                     	;# 
  1582  0F3F                     	;# 
  1583  0F40                     	;# 
  1584  0F41                     	;# 
  1585  0F43                     	;# 
  1586  0F44                     	;# 
  1587  0F45                     	;# 
  1588  0F46                     	;# 
  1589  0F47                     	;# 
  1590  0F48                     	;# 
  1591  0F49                     	;# 
  1592  0F4A                     	;# 
  1593  0F4B                     	;# 
  1594  0F4C                     	;# 
  1595  0F4E                     	;# 
  1596  0F4F                     	;# 
  1597  0F50                     	;# 
  1598  0F51                     	;# 
  1599  0F52                     	;# 
  1600  0F53                     	;# 
  1601  0F54                     	;# 
  1602  0F55                     	;# 
  1603  0F56                     	;# 
  1604  0F57                     	;# 
  1605  0F65                     	;# 
  1606  0F68                     	;# 
  1607  0F69                     	;# 
  1608  0F6A                     	;# 
  1609  0F6B                     	;# 
  1610  0FE4                     	;# 
  1611  0FE5                     	;# 
  1612  0FE6                     	;# 
  1613  0FE7                     	;# 
  1614  0FE8                     	;# 
  1615  0FE9                     	;# 
  1616  0FEA                     	;# 
  1617  0FEB                     	;# 
  1618  0FED                     	;# 
  1619  0FEE                     	;# 
  1620  0FEF                     	;# 
  1621  0000                     	;# 
  1622  0001                     	;# 
  1623  0002                     	;# 
  1624  0003                     	;# 
  1625  0004                     	;# 
  1626  0005                     	;# 
  1627  0006                     	;# 
  1628  0007                     	;# 
  1629  0008                     	;# 
  1630  0009                     	;# 
  1631  000A                     	;# 
  1632  000B                     	;# 
  1633  000C                     	;# 
  1634  000D                     	;# 
  1635  000E                     	;# 
  1636  0010                     	;# 
  1637  0011                     	;# 
  1638  0012                     	;# 
  1639  0013                     	;# 
  1640  0016                     	;# 
  1641  0017                     	;# 
  1642  0018                     	;# 
  1643  001C                     	;# 
  1644  001C                     	;# 
  1645  001D                     	;# 
  1646  001D                     	;# 
  1647  001E                     	;# 
  1648  001F                     	;# 
  1649  008C                     	;# 
  1650  008C                     	;# 
  1651  008D                     	;# 
  1652  008E                     	;# 
  1653  008E                     	;# 
  1654  008F                     	;# 
  1655  0090                     	;# 
  1656  0090                     	;# 
  1657  0091                     	;# 
  1658  0093                     	;# 
  1659  0094                     	;# 
  1660  0095                     	;# 
  1661  0096                     	;# 
  1662  0097                     	;# 
  1663  0098                     	;# 
  1664  0099                     	;# 
  1665  009A                     	;# 
  1666  009B                     	;# 
  1667  009C                     	;# 
  1668  009D                     	;# 
  1669  009E                     	;# 
  1670  010C                     	;# 
  1671  010D                     	;# 
  1672  010E                     	;# 
  1673  010E                     	;# 
  1674  010F                     	;# 
  1675  0110                     	;# 
  1676  0110                     	;# 
  1677  0111                     	;# 
  1678  0112                     	;# 
  1679  0112                     	;# 
  1680  0113                     	;# 
  1681  0114                     	;# 
  1682  0114                     	;# 
  1683  0115                     	;# 
  1684  0116                     	;# 
  1685  0116                     	;# 
  1686  0117                     	;# 
  1687  0119                     	;# 
  1688  0119                     	;# 
  1689  0119                     	;# 
  1690  011A                     	;# 
  1691  011A                     	;# 
  1692  011A                     	;# 
  1693  011B                     	;# 
  1694  011B                     	;# 
  1695  011B                     	;# 
  1696  011B                     	;# 
  1697  011B                     	;# 
  1698  011C                     	;# 
  1699  011C                     	;# 
  1700  011C                     	;# 
  1701  011D                     	;# 
  1702  011D                     	;# 
  1703  011D                     	;# 
  1704  011E                     	;# 
  1705  011E                     	;# 
  1706  011E                     	;# 
  1707  011F                     	;# 
  1708  011F                     	;# 
  1709  011F                     	;# 
  1710  011F                     	;# 
  1711  011F                     	;# 
  1712  018C                     	;# 
  1713  018D                     	;# 
  1714  018E                     	;# 
  1715  018F                     	;# 
  1716  0190                     	;# 
  1717  0191                     	;# 
  1718  0192                     	;# 
  1719  0196                     	;# 
  1720  0197                     	;# 
  1721  0198                     	;# 
  1722  0199                     	;# 
  1723  019A                     	;# 
  1724  019B                     	;# 
  1725  019C                     	;# 
  1726  020C                     	;# 
  1727  020C                     	;# 
  1728  020D                     	;# 
  1729  020E                     	;# 
  1730  020F                     	;# 
  1731  020F                     	;# 
  1732  0210                     	;# 
  1733  0210                     	;# 
  1734  0211                     	;# 
  1735  0211                     	;# 
  1736  0212                     	;# 
  1737  0212                     	;# 
  1738  0213                     	;# 
  1739  0214                     	;# 
  1740  0215                     	;# 
  1741  0215                     	;# 
  1742  0216                     	;# 
  1743  0216                     	;# 
  1744  0217                     	;# 
  1745  0217                     	;# 
  1746  0218                     	;# 
  1747  0218                     	;# 
  1748  0219                     	;# 
  1749  021A                     	;# 
  1750  021B                     	;# 
  1751  021B                     	;# 
  1752  021C                     	;# 
  1753  021C                     	;# 
  1754  021D                     	;# 
  1755  021D                     	;# 
  1756  021E                     	;# 
  1757  021F                     	;# 
  1758  028C                     	;# 
  1759  028C                     	;# 
  1760  028D                     	;# 
  1761  028D                     	;# 
  1762  028E                     	;# 
  1763  028F                     	;# 
  1764  0290                     	;# 
  1765  0290                     	;# 
  1766  0291                     	;# 
  1767  0292                     	;# 
  1768  0292                     	;# 
  1769  0293                     	;# 
  1770  0293                     	;# 
  1771  0294                     	;# 
  1772  0295                     	;# 
  1773  0296                     	;# 
  1774  0296                     	;# 
  1775  0297                     	;# 
  1776  0298                     	;# 
  1777  0298                     	;# 
  1778  0299                     	;# 
  1779  0299                     	;# 
  1780  029A                     	;# 
  1781  029B                     	;# 
  1782  029C                     	;# 
  1783  029C                     	;# 
  1784  029D                     	;# 
  1785  030C                     	;# 
  1786  030C                     	;# 
  1787  030D                     	;# 
  1788  030E                     	;# 
  1789  030F                     	;# 
  1790  0310                     	;# 
  1791  0310                     	;# 
  1792  0311                     	;# 
  1793  0312                     	;# 
  1794  0313                     	;# 
  1795  0314                     	;# 
  1796  0314                     	;# 
  1797  0315                     	;# 
  1798  0316                     	;# 
  1799  0317                     	;# 
  1800  0318                     	;# 
  1801  0318                     	;# 
  1802  0319                     	;# 
  1803  031A                     	;# 
  1804  031B                     	;# 
  1805  031C                     	;# 
  1806  031C                     	;# 
  1807  031D                     	;# 
  1808  031E                     	;# 
  1809  031F                     	;# 
  1810  038C                     	;# 
  1811  038D                     	;# 
  1812  038E                     	;# 
  1813  0390                     	;# 
  1814  0391                     	;# 
  1815  0392                     	;# 
  1816  040C                     	;# 
  1817  040D                     	;# 
  1818  040E                     	;# 
  1819  040F                     	;# 
  1820  0410                     	;# 
  1821  0411                     	;# 
  1822  0416                     	;# 
  1823  0416                     	;# 
  1824  0417                     	;# 
  1825  0418                     	;# 
  1826  0418                     	;# 
  1827  0419                     	;# 
  1828  041A                     	;# 
  1829  041A                     	;# 
  1830  041B                     	;# 
  1831  041C                     	;# 
  1832  041C                     	;# 
  1833  041D                     	;# 
  1834  041E                     	;# 
  1835  041F                     	;# 
  1836  048C                     	;# 
  1837  048C                     	;# 
  1838  048D                     	;# 
  1839  048E                     	;# 
  1840  048F                     	;# 
  1841  048F                     	;# 
  1842  0490                     	;# 
  1843  0491                     	;# 
  1844  0492                     	;# 
  1845  0492                     	;# 
  1846  0493                     	;# 
  1847  0494                     	;# 
  1848  0495                     	;# 
  1849  0495                     	;# 
  1850  0496                     	;# 
  1851  0497                     	;# 
  1852  0498                     	;# 
  1853  0499                     	;# 
  1854  049A                     	;# 
  1855  049B                     	;# 
  1856  049C                     	;# 
  1857  049D                     	;# 
  1858  050C                     	;# 
  1859  050C                     	;# 
  1860  050D                     	;# 
  1861  050E                     	;# 
  1862  050F                     	;# 
  1863  050F                     	;# 
  1864  0510                     	;# 
  1865  0511                     	;# 
  1866  0512                     	;# 
  1867  0512                     	;# 
  1868  0513                     	;# 
  1869  0514                     	;# 
  1870  0515                     	;# 
  1871  0515                     	;# 
  1872  0516                     	;# 
  1873  0517                     	;# 
  1874  0518                     	;# 
  1875  0519                     	;# 
  1876  051A                     	;# 
  1877  051B                     	;# 
  1878  051C                     	;# 
  1879  051D                     	;# 
  1880  058C                     	;# 
  1881  058C                     	;# 
  1882  058D                     	;# 
  1883  058E                     	;# 
  1884  058F                     	;# 
  1885  058F                     	;# 
  1886  0590                     	;# 
  1887  0591                     	;# 
  1888  0592                     	;# 
  1889  0593                     	;# 
  1890  060C                     	;# 
  1891  060D                     	;# 
  1892  060E                     	;# 
  1893  060F                     	;# 
  1894  0610                     	;# 
  1895  0611                     	;# 
  1896  0612                     	;# 
  1897  0613                     	;# 
  1898  0614                     	;# 
  1899  0616                     	;# 
  1900  0617                     	;# 
  1901  0618                     	;# 
  1902  0619                     	;# 
  1903  061A                     	;# 
  1904  061B                     	;# 
  1905  061C                     	;# 
  1906  061D                     	;# 
  1907  061E                     	;# 
  1908  068C                     	;# 
  1909  068D                     	;# 
  1910  068E                     	;# 
  1911  068F                     	;# 
  1912  0690                     	;# 
  1913  0691                     	;# 
  1914  0692                     	;# 
  1915  0693                     	;# 
  1916  0694                     	;# 
  1917  070C                     	;# 
  1918  070D                     	;# 
  1919  070E                     	;# 
  1920  070F                     	;# 
  1921  0710                     	;# 
  1922  0711                     	;# 
  1923  0712                     	;# 
  1924  0713                     	;# 
  1925  0714                     	;# 
  1926  0716                     	;# 
  1927  0717                     	;# 
  1928  0718                     	;# 
  1929  0719                     	;# 
  1930  071A                     	;# 
  1931  071B                     	;# 
  1932  071C                     	;# 
  1933  071D                     	;# 
  1934  071E                     	;# 
  1935  0796                     	;# 
  1936  0797                     	;# 
  1937  0798                     	;# 
  1938  0799                     	;# 
  1939  079A                     	;# 
  1940  079B                     	;# 
  1941  080C                     	;# 
  1942  080D                     	;# 
  1943  080E                     	;# 
  1944  080F                     	;# 
  1945  0810                     	;# 
  1946  0811                     	;# 
  1947  0812                     	;# 
  1948  0813                     	;# 
  1949  0814                     	;# 
  1950  081A                     	;# 
  1951  081B                     	;# 
  1952  081C                     	;# 
  1953  081D                     	;# 
  1954  081E                     	;# 
  1955  081F                     	;# 
  1956  088C                     	;# 
  1957  088D                     	;# 
  1958  088E                     	;# 
  1959  088F                     	;# 
  1960  0890                     	;# 
  1961  0891                     	;# 
  1962  0892                     	;# 
  1963  0893                     	;# 
  1964  0895                     	;# 
  1965  0896                     	;# 
  1966  0897                     	;# 
  1967  0898                     	;# 
  1968  0899                     	;# 
  1969  089A                     	;# 
  1970  089B                     	;# 
  1971  090C                     	;# 
  1972  090E                     	;# 
  1973  090F                     	;# 
  1974  091F                     	;# 
  1975  091F                     	;# 
  1976  098F                     	;# 
  1977  098F                     	;# 
  1978  0990                     	;# 
  1979  0991                     	;# 
  1980  0992                     	;# 
  1981  0993                     	;# 
  1982  0994                     	;# 
  1983  0995                     	;# 
  1984  0996                     	;# 
  1985  0997                     	;# 
  1986  0E0F                     	;# 
  1987  0E10                     	;# 
  1988  0E11                     	;# 
  1989  0E12                     	;# 
  1990  0E13                     	;# 
  1991  0E14                     	;# 
  1992  0E15                     	;# 
  1993  0E16                     	;# 
  1994  0E17                     	;# 
  1995  0E18                     	;# 
  1996  0E19                     	;# 
  1997  0E1A                     	;# 
  1998  0E1B                     	;# 
  1999  0E1C                     	;# 
  2000  0E1D                     	;# 
  2001  0E1E                     	;# 
  2002  0E1F                     	;# 
  2003  0E20                     	;# 
  2004  0E21                     	;# 
  2005  0E22                     	;# 
  2006  0E23                     	;# 
  2007  0E24                     	;# 
  2008  0E25                     	;# 
  2009  0E26                     	;# 
  2010  0E27                     	;# 
  2011  0E28                     	;# 
  2012  0E29                     	;# 
  2013  0E2A                     	;# 
  2014  0E2B                     	;# 
  2015  0E2C                     	;# 
  2016  0E2D                     	;# 
  2017  0E2E                     	;# 
  2018  0E2F                     	;# 
  2019  0E30                     	;# 
  2020  0E31                     	;# 
  2021  0E32                     	;# 
  2022  0E33                     	;# 
  2023  0E34                     	;# 
  2024  0E35                     	;# 
  2025  0E36                     	;# 
  2026  0E37                     	;# 
  2027  0E8F                     	;# 
  2028  0E90                     	;# 
  2029  0E91                     	;# 
  2030  0E92                     	;# 
  2031  0E93                     	;# 
  2032  0E94                     	;# 
  2033  0E95                     	;# 
  2034  0E96                     	;# 
  2035  0E97                     	;# 
  2036  0E9C                     	;# 
  2037  0E9D                     	;# 
  2038  0E9E                     	;# 
  2039  0EA1                     	;# 
  2040  0EA2                     	;# 
  2041  0EA3                     	;# 
  2042  0EA4                     	;# 
  2043  0EA5                     	;# 
  2044  0EA9                     	;# 
  2045  0EAA                     	;# 
  2046  0EAB                     	;# 
  2047  0EAC                     	;# 
  2048  0EB1                     	;# 
  2049  0EB2                     	;# 
  2050  0EB3                     	;# 
  2051  0EB8                     	;# 
  2052  0EB9                     	;# 
  2053  0EBA                     	;# 
  2054  0EBB                     	;# 
  2055  0EBC                     	;# 
  2056  0EBD                     	;# 
  2057  0EBE                     	;# 
  2058  0EC3                     	;# 
  2059  0EC5                     	;# 
  2060  0EC6                     	;# 
  2061  0EC7                     	;# 
  2062  0EC8                     	;# 
  2063  0EC9                     	;# 
  2064  0ECA                     	;# 
  2065  0ECB                     	;# 
  2066  0ECC                     	;# 
  2067  0F10                     	;# 
  2068  0F11                     	;# 
  2069  0F12                     	;# 
  2070  0F13                     	;# 
  2071  0F14                     	;# 
  2072  0F15                     	;# 
  2073  0F16                     	;# 
  2074  0F17                     	;# 
  2075  0F18                     	;# 
  2076  0F19                     	;# 
  2077  0F1A                     	;# 
  2078  0F1B                     	;# 
  2079  0F1C                     	;# 
  2080  0F1D                     	;# 
  2081  0F1E                     	;# 
  2082  0F1F                     	;# 
  2083  0F20                     	;# 
  2084  0F21                     	;# 
  2085  0F22                     	;# 
  2086  0F23                     	;# 
  2087  0F24                     	;# 
  2088  0F25                     	;# 
  2089  0F26                     	;# 
  2090  0F27                     	;# 
  2091  0F38                     	;# 
  2092  0F39                     	;# 
  2093  0F3A                     	;# 
  2094  0F3B                     	;# 
  2095  0F3C                     	;# 
  2096  0F3D                     	;# 
  2097  0F3E                     	;# 
  2098  0F3F                     	;# 
  2099  0F40                     	;# 
  2100  0F41                     	;# 
  2101  0F43                     	;# 
  2102  0F44                     	;# 
  2103  0F45                     	;# 
  2104  0F46                     	;# 
  2105  0F47                     	;# 
  2106  0F48                     	;# 
  2107  0F49                     	;# 
  2108  0F4A                     	;# 
  2109  0F4B                     	;# 
  2110  0F4C                     	;# 
  2111  0F4E                     	;# 
  2112  0F4F                     	;# 
  2113  0F50                     	;# 
  2114  0F51                     	;# 
  2115  0F52                     	;# 
  2116  0F53                     	;# 
  2117  0F54                     	;# 
  2118  0F55                     	;# 
  2119  0F56                     	;# 
  2120  0F57                     	;# 
  2121  0F65                     	;# 
  2122  0F68                     	;# 
  2123  0F69                     	;# 
  2124  0F6A                     	;# 
  2125  0F6B                     	;# 
  2126  0FE4                     	;# 
  2127  0FE5                     	;# 
  2128  0FE6                     	;# 
  2129  0FE7                     	;# 
  2130  0FE8                     	;# 
  2131  0FE9                     	;# 
  2132  0FEA                     	;# 
  2133  0FEB                     	;# 
  2134  0FED                     	;# 
  2135  0FEE                     	;# 
  2136  0FEF                     	;# 
  2137  0000                     	;# 
  2138  0001                     	;# 
  2139  0002                     	;# 
  2140  0003                     	;# 
  2141  0004                     	;# 
  2142  0005                     	;# 
  2143  0006                     	;# 
  2144  0007                     	;# 
  2145  0008                     	;# 
  2146  0009                     	;# 
  2147  000A                     	;# 
  2148  000B                     	;# 
  2149  000C                     	;# 
  2150  000D                     	;# 
  2151  000E                     	;# 
  2152  0010                     	;# 
  2153  0011                     	;# 
  2154  0012                     	;# 
  2155  0013                     	;# 
  2156  0016                     	;# 
  2157  0017                     	;# 
  2158  0018                     	;# 
  2159  001C                     	;# 
  2160  001C                     	;# 
  2161  001D                     	;# 
  2162  001D                     	;# 
  2163  001E                     	;# 
  2164  001F                     	;# 
  2165  008C                     	;# 
  2166  008C                     	;# 
  2167  008D                     	;# 
  2168  008E                     	;# 
  2169  008E                     	;# 
  2170  008F                     	;# 
  2171  0090                     	;# 
  2172  0090                     	;# 
  2173  0091                     	;# 
  2174  0093                     	;# 
  2175  0094                     	;# 
  2176  0095                     	;# 
  2177  0096                     	;# 
  2178  0097                     	;# 
  2179  0098                     	;# 
  2180  0099                     	;# 
  2181  009A                     	;# 
  2182  009B                     	;# 
  2183  009C                     	;# 
  2184  009D                     	;# 
  2185  009E                     	;# 
  2186  010C                     	;# 
  2187  010D                     	;# 
  2188  010E                     	;# 
  2189  010E                     	;# 
  2190  010F                     	;# 
  2191  0110                     	;# 
  2192  0110                     	;# 
  2193  0111                     	;# 
  2194  0112                     	;# 
  2195  0112                     	;# 
  2196  0113                     	;# 
  2197  0114                     	;# 
  2198  0114                     	;# 
  2199  0115                     	;# 
  2200  0116                     	;# 
  2201  0116                     	;# 
  2202  0117                     	;# 
  2203  0119                     	;# 
  2204  0119                     	;# 
  2205  0119                     	;# 
  2206  011A                     	;# 
  2207  011A                     	;# 
  2208  011A                     	;# 
  2209  011B                     	;# 
  2210  011B                     	;# 
  2211  011B                     	;# 
  2212  011B                     	;# 
  2213  011B                     	;# 
  2214  011C                     	;# 
  2215  011C                     	;# 
  2216  011C                     	;# 
  2217  011D                     	;# 
  2218  011D                     	;# 
  2219  011D                     	;# 
  2220  011E                     	;# 
  2221  011E                     	;# 
  2222  011E                     	;# 
  2223  011F                     	;# 
  2224  011F                     	;# 
  2225  011F                     	;# 
  2226  011F                     	;# 
  2227  011F                     	;# 
  2228  018C                     	;# 
  2229  018D                     	;# 
  2230  018E                     	;# 
  2231  018F                     	;# 
  2232  0190                     	;# 
  2233  0191                     	;# 
  2234  0192                     	;# 
  2235  0196                     	;# 
  2236  0197                     	;# 
  2237  0198                     	;# 
  2238  0199                     	;# 
  2239  019A                     	;# 
  2240  019B                     	;# 
  2241  019C                     	;# 
  2242  020C                     	;# 
  2243  020C                     	;# 
  2244  020D                     	;# 
  2245  020E                     	;# 
  2246  020F                     	;# 
  2247  020F                     	;# 
  2248  0210                     	;# 
  2249  0210                     	;# 
  2250  0211                     	;# 
  2251  0211                     	;# 
  2252  0212                     	;# 
  2253  0212                     	;# 
  2254  0213                     	;# 
  2255  0214                     	;# 
  2256  0215                     	;# 
  2257  0215                     	;# 
  2258  0216                     	;# 
  2259  0216                     	;# 
  2260  0217                     	;# 
  2261  0217                     	;# 
  2262  0218                     	;# 
  2263  0218                     	;# 
  2264  0219                     	;# 
  2265  021A                     	;# 
  2266  021B                     	;# 
  2267  021B                     	;# 
  2268  021C                     	;# 
  2269  021C                     	;# 
  2270  021D                     	;# 
  2271  021D                     	;# 
  2272  021E                     	;# 
  2273  021F                     	;# 
  2274  028C                     	;# 
  2275  028C                     	;# 
  2276  028D                     	;# 
  2277  028D                     	;# 
  2278  028E                     	;# 
  2279  028F                     	;# 
  2280  0290                     	;# 
  2281  0290                     	;# 
  2282  0291                     	;# 
  2283  0292                     	;# 
  2284  0292                     	;# 
  2285  0293                     	;# 
  2286  0293                     	;# 
  2287  0294                     	;# 
  2288  0295                     	;# 
  2289  0296                     	;# 
  2290  0296                     	;# 
  2291  0297                     	;# 
  2292  0298                     	;# 
  2293  0298                     	;# 
  2294  0299                     	;# 
  2295  0299                     	;# 
  2296  029A                     	;# 
  2297  029B                     	;# 
  2298  029C                     	;# 
  2299  029C                     	;# 
  2300  029D                     	;# 
  2301  030C                     	;# 
  2302  030C                     	;# 
  2303  030D                     	;# 
  2304  030E                     	;# 
  2305  030F                     	;# 
  2306  0310                     	;# 
  2307  0310                     	;# 
  2308  0311                     	;# 
  2309  0312                     	;# 
  2310  0313                     	;# 
  2311  0314                     	;# 
  2312  0314                     	;# 
  2313  0315                     	;# 
  2314  0316                     	;# 
  2315  0317                     	;# 
  2316  0318                     	;# 
  2317  0318                     	;# 
  2318  0319                     	;# 
  2319  031A                     	;# 
  2320  031B                     	;# 
  2321  031C                     	;# 
  2322  031C                     	;# 
  2323  031D                     	;# 
  2324  031E                     	;# 
  2325  031F                     	;# 
  2326  038C                     	;# 
  2327  038D                     	;# 
  2328  038E                     	;# 
  2329  0390                     	;# 
  2330  0391                     	;# 
  2331  0392                     	;# 
  2332  040C                     	;# 
  2333  040D                     	;# 
  2334  040E                     	;# 
  2335  040F                     	;# 
  2336  0410                     	;# 
  2337  0411                     	;# 
  2338  0416                     	;# 
  2339  0416                     	;# 
  2340  0417                     	;# 
  2341  0418                     	;# 
  2342  0418                     	;# 
  2343  0419                     	;# 
  2344  041A                     	;# 
  2345  041A                     	;# 
  2346  041B                     	;# 
  2347  041C                     	;# 
  2348  041C                     	;# 
  2349  041D                     	;# 
  2350  041E                     	;# 
  2351  041F                     	;# 
  2352  048C                     	;# 
  2353  048C                     	;# 
  2354  048D                     	;# 
  2355  048E                     	;# 
  2356  048F                     	;# 
  2357  048F                     	;# 
  2358  0490                     	;# 
  2359  0491                     	;# 
  2360  0492                     	;# 
  2361  0492                     	;# 
  2362  0493                     	;# 
  2363  0494                     	;# 
  2364  0495                     	;# 
  2365  0495                     	;# 
  2366  0496                     	;# 
  2367  0497                     	;# 
  2368  0498                     	;# 
  2369  0499                     	;# 
  2370  049A                     	;# 
  2371  049B                     	;# 
  2372  049C                     	;# 
  2373  049D                     	;# 
  2374  050C                     	;# 
  2375  050C                     	;# 
  2376  050D                     	;# 
  2377  050E                     	;# 
  2378  050F                     	;# 
  2379  050F                     	;# 
  2380  0510                     	;# 
  2381  0511                     	;# 
  2382  0512                     	;# 
  2383  0512                     	;# 
  2384  0513                     	;# 
  2385  0514                     	;# 
  2386  0515                     	;# 
  2387  0515                     	;# 
  2388  0516                     	;# 
  2389  0517                     	;# 
  2390  0518                     	;# 
  2391  0519                     	;# 
  2392  051A                     	;# 
  2393  051B                     	;# 
  2394  051C                     	;# 
  2395  051D                     	;# 
  2396  058C                     	;# 
  2397  058C                     	;# 
  2398  058D                     	;# 
  2399  058E                     	;# 
  2400  058F                     	;# 
  2401  058F                     	;# 
  2402  0590                     	;# 
  2403  0591                     	;# 
  2404  0592                     	;# 
  2405  0593                     	;# 
  2406  060C                     	;# 
  2407  060D                     	;# 
  2408  060E                     	;# 
  2409  060F                     	;# 
  2410  0610                     	;# 
  2411  0611                     	;# 
  2412  0612                     	;# 
  2413  0613                     	;# 
  2414  0614                     	;# 
  2415  0616                     	;# 
  2416  0617                     	;# 
  2417  0618                     	;# 
  2418  0619                     	;# 
  2419  061A                     	;# 
  2420  061B                     	;# 
  2421  061C                     	;# 
  2422  061D                     	;# 
  2423  061E                     	;# 
  2424  068C                     	;# 
  2425  068D                     	;# 
  2426  068E                     	;# 
  2427  068F                     	;# 
  2428  0690                     	;# 
  2429  0691                     	;# 
  2430  0692                     	;# 
  2431  0693                     	;# 
  2432  0694                     	;# 
  2433  070C                     	;# 
  2434  070D                     	;# 
  2435  070E                     	;# 
  2436  070F                     	;# 
  2437  0710                     	;# 
  2438  0711                     	;# 
  2439  0712                     	;# 
  2440  0713                     	;# 
  2441  0714                     	;# 
  2442  0716                     	;# 
  2443  0717                     	;# 
  2444  0718                     	;# 
  2445  0719                     	;# 
  2446  071A                     	;# 
  2447  071B                     	;# 
  2448  071C                     	;# 
  2449  071D                     	;# 
  2450  071E                     	;# 
  2451  0796                     	;# 
  2452  0797                     	;# 
  2453  0798                     	;# 
  2454  0799                     	;# 
  2455  079A                     	;# 
  2456  079B                     	;# 
  2457  080C                     	;# 
  2458  080D                     	;# 
  2459  080E                     	;# 
  2460  080F                     	;# 
  2461  0810                     	;# 
  2462  0811                     	;# 
  2463  0812                     	;# 
  2464  0813                     	;# 
  2465  0814                     	;# 
  2466  081A                     	;# 
  2467  081B                     	;# 
  2468  081C                     	;# 
  2469  081D                     	;# 
  2470  081E                     	;# 
  2471  081F                     	;# 
  2472  088C                     	;# 
  2473  088D                     	;# 
  2474  088E                     	;# 
  2475  088F                     	;# 
  2476  0890                     	;# 
  2477  0891                     	;# 
  2478  0892                     	;# 
  2479  0893                     	;# 
  2480  0895                     	;# 
  2481  0896                     	;# 
  2482  0897                     	;# 
  2483  0898                     	;# 
  2484  0899                     	;# 
  2485  089A                     	;# 
  2486  089B                     	;# 
  2487  090C                     	;# 
  2488  090E                     	;# 
  2489  090F                     	;# 
  2490  091F                     	;# 
  2491  091F                     	;# 
  2492  098F                     	;# 
  2493  098F                     	;# 
  2494  0990                     	;# 
  2495  0991                     	;# 
  2496  0992                     	;# 
  2497  0993                     	;# 
  2498  0994                     	;# 
  2499  0995                     	;# 
  2500  0996                     	;# 
  2501  0997                     	;# 
  2502  0E0F                     	;# 
  2503  0E10                     	;# 
  2504  0E11                     	;# 
  2505  0E12                     	;# 
  2506  0E13                     	;# 
  2507  0E14                     	;# 
  2508  0E15                     	;# 
  2509  0E16                     	;# 
  2510  0E17                     	;# 
  2511  0E18                     	;# 
  2512  0E19                     	;# 
  2513  0E1A                     	;# 
  2514  0E1B                     	;# 
  2515  0E1C                     	;# 
  2516  0E1D                     	;# 
  2517  0E1E                     	;# 
  2518  0E1F                     	;# 
  2519  0E20                     	;# 
  2520  0E21                     	;# 
  2521  0E22                     	;# 
  2522  0E23                     	;# 
  2523  0E24                     	;# 
  2524  0E25                     	;# 
  2525  0E26                     	;# 
  2526  0E27                     	;# 
  2527  0E28                     	;# 
  2528  0E29                     	;# 
  2529  0E2A                     	;# 
  2530  0E2B                     	;# 
  2531  0E2C                     	;# 
  2532  0E2D                     	;# 
  2533  0E2E                     	;# 
  2534  0E2F                     	;# 
  2535  0E30                     	;# 
  2536  0E31                     	;# 
  2537  0E32                     	;# 
  2538  0E33                     	;# 
  2539  0E34                     	;# 
  2540  0E35                     	;# 
  2541  0E36                     	;# 
  2542  0E37                     	;# 
  2543  0E8F                     	;# 
  2544  0E90                     	;# 
  2545  0E91                     	;# 
  2546  0E92                     	;# 
  2547  0E93                     	;# 
  2548  0E94                     	;# 
  2549  0E95                     	;# 
  2550  0E96                     	;# 
  2551  0E97                     	;# 
  2552  0E9C                     	;# 
  2553  0E9D                     	;# 
  2554  0E9E                     	;# 
  2555  0EA1                     	;# 
  2556  0EA2                     	;# 
  2557  0EA3                     	;# 
  2558  0EA4                     	;# 
  2559  0EA5                     	;# 
  2560  0EA9                     	;# 
  2561  0EAA                     	;# 
  2562  0EAB                     	;# 
  2563  0EAC                     	;# 
  2564  0EB1                     	;# 
  2565  0EB2                     	;# 
  2566  0EB3                     	;# 
  2567  0EB8                     	;# 
  2568  0EB9                     	;# 
  2569  0EBA                     	;# 
  2570  0EBB                     	;# 
  2571  0EBC                     	;# 
  2572  0EBD                     	;# 
  2573  0EBE                     	;# 
  2574  0EC3                     	;# 
  2575  0EC5                     	;# 
  2576  0EC6                     	;# 
  2577  0EC7                     	;# 
  2578  0EC8                     	;# 
  2579  0EC9                     	;# 
  2580  0ECA                     	;# 
  2581  0ECB                     	;# 
  2582  0ECC                     	;# 
  2583  0F10                     	;# 
  2584  0F11                     	;# 
  2585  0F12                     	;# 
  2586  0F13                     	;# 
  2587  0F14                     	;# 
  2588  0F15                     	;# 
  2589  0F16                     	;# 
  2590  0F17                     	;# 
  2591  0F18                     	;# 
  2592  0F19                     	;# 
  2593  0F1A                     	;# 
  2594  0F1B                     	;# 
  2595  0F1C                     	;# 
  2596  0F1D                     	;# 
  2597  0F1E                     	;# 
  2598  0F1F                     	;# 
  2599  0F20                     	;# 
  2600  0F21                     	;# 
  2601  0F22                     	;# 
  2602  0F23                     	;# 
  2603  0F24                     	;# 
  2604  0F25                     	;# 
  2605  0F26                     	;# 
  2606  0F27                     	;# 
  2607  0F38                     	;# 
  2608  0F39                     	;# 
  2609  0F3A                     	;# 
  2610  0F3B                     	;# 
  2611  0F3C                     	;# 
  2612  0F3D                     	;# 
  2613  0F3E                     	;# 
  2614  0F3F                     	;# 
  2615  0F40                     	;# 
  2616  0F41                     	;# 
  2617  0F43                     	;# 
  2618  0F44                     	;# 
  2619  0F45                     	;# 
  2620  0F46                     	;# 
  2621  0F47                     	;# 
  2622  0F48                     	;# 
  2623  0F49                     	;# 
  2624  0F4A                     	;# 
  2625  0F4B                     	;# 
  2626  0F4C                     	;# 
  2627  0F4E                     	;# 
  2628  0F4F                     	;# 
  2629  0F50                     	;# 
  2630  0F51                     	;# 
  2631  0F52                     	;# 
  2632  0F53                     	;# 
  2633  0F54                     	;# 
  2634  0F55                     	;# 
  2635  0F56                     	;# 
  2636  0F57                     	;# 
  2637  0F65                     	;# 
  2638  0F68                     	;# 
  2639  0F69                     	;# 
  2640  0F6A                     	;# 
  2641  0F6B                     	;# 
  2642  0FE4                     	;# 
  2643  0FE5                     	;# 
  2644  0FE6                     	;# 
  2645  0FE7                     	;# 
  2646  0FE8                     	;# 
  2647  0FE9                     	;# 
  2648  0FEA                     	;# 
  2649  0FEB                     	;# 
  2650  0FED                     	;# 
  2651  0FEE                     	;# 
  2652  0FEF                     	;# 
  2653  0000                     	;# 
  2654  0001                     	;# 
  2655  0002                     	;# 
  2656  0003                     	;# 
  2657  0004                     	;# 
  2658  0005                     	;# 
  2659  0006                     	;# 
  2660  0007                     	;# 
  2661  0008                     	;# 
  2662  0009                     	;# 
  2663  000A                     	;# 
  2664  000B                     	;# 
  2665  000C                     	;# 
  2666  000D                     	;# 
  2667  000E                     	;# 
  2668  0010                     	;# 
  2669  0011                     	;# 
  2670  0012                     	;# 
  2671  0013                     	;# 
  2672  0016                     	;# 
  2673  0017                     	;# 
  2674  0018                     	;# 
  2675  001C                     	;# 
  2676  001C                     	;# 
  2677  001D                     	;# 
  2678  001D                     	;# 
  2679  001E                     	;# 
  2680  001F                     	;# 
  2681  008C                     	;# 
  2682  008C                     	;# 
  2683  008D                     	;# 
  2684  008E                     	;# 
  2685  008E                     	;# 
  2686  008F                     	;# 
  2687  0090                     	;# 
  2688  0090                     	;# 
  2689  0091                     	;# 
  2690  0093                     	;# 
  2691  0094                     	;# 
  2692  0095                     	;# 
  2693  0096                     	;# 
  2694  0097                     	;# 
  2695  0098                     	;# 
  2696  0099                     	;# 
  2697  009A                     	;# 
  2698  009B                     	;# 
  2699  009C                     	;# 
  2700  009D                     	;# 
  2701  009E                     	;# 
  2702  010C                     	;# 
  2703  010D                     	;# 
  2704  010E                     	;# 
  2705  010E                     	;# 
  2706  010F                     	;# 
  2707  0110                     	;# 
  2708  0110                     	;# 
  2709  0111                     	;# 
  2710  0112                     	;# 
  2711  0112                     	;# 
  2712  0113                     	;# 
  2713  0114                     	;# 
  2714  0114                     	;# 
  2715  0115                     	;# 
  2716  0116                     	;# 
  2717  0116                     	;# 
  2718  0117                     	;# 
  2719  0119                     	;# 
  2720  0119                     	;# 
  2721  0119                     	;# 
  2722  011A                     	;# 
  2723  011A                     	;# 
  2724  011A                     	;# 
  2725  011B                     	;# 
  2726  011B                     	;# 
  2727  011B                     	;# 
  2728  011B                     	;# 
  2729  011B                     	;# 
  2730  011C                     	;# 
  2731  011C                     	;# 
  2732  011C                     	;# 
  2733  011D                     	;# 
  2734  011D                     	;# 
  2735  011D                     	;# 
  2736  011E                     	;# 
  2737  011E                     	;# 
  2738  011E                     	;# 
  2739  011F                     	;# 
  2740  011F                     	;# 
  2741  011F                     	;# 
  2742  011F                     	;# 
  2743  011F                     	;# 
  2744  018C                     	;# 
  2745  018D                     	;# 
  2746  018E                     	;# 
  2747  018F                     	;# 
  2748  0190                     	;# 
  2749  0191                     	;# 
  2750  0192                     	;# 
  2751  0196                     	;# 
  2752  0197                     	;# 
  2753  0198                     	;# 
  2754  0199                     	;# 
  2755  019A                     	;# 
  2756  019B                     	;# 
  2757  019C                     	;# 
  2758  020C                     	;# 
  2759  020C                     	;# 
  2760  020D                     	;# 
  2761  020E                     	;# 
  2762  020F                     	;# 
  2763  020F                     	;# 
  2764  0210                     	;# 
  2765  0210                     	;# 
  2766  0211                     	;# 
  2767  0211                     	;# 
  2768  0212                     	;# 
  2769  0212                     	;# 
  2770  0213                     	;# 
  2771  0214                     	;# 
  2772  0215                     	;# 
  2773  0215                     	;# 
  2774  0216                     	;# 
  2775  0216                     	;# 
  2776  0217                     	;# 
  2777  0217                     	;# 
  2778  0218                     	;# 
  2779  0218                     	;# 
  2780  0219                     	;# 
  2781  021A                     	;# 
  2782  021B                     	;# 
  2783  021B                     	;# 
  2784  021C                     	;# 
  2785  021C                     	;# 
  2786  021D                     	;# 
  2787  021D                     	;# 
  2788  021E                     	;# 
  2789  021F                     	;# 
  2790  028C                     	;# 
  2791  028C                     	;# 
  2792  028D                     	;# 
  2793  028D                     	;# 
  2794  028E                     	;# 
  2795  028F                     	;# 
  2796  0290                     	;# 
  2797  0290                     	;# 
  2798  0291                     	;# 
  2799  0292                     	;# 
  2800  0292                     	;# 
  2801  0293                     	;# 
  2802  0293                     	;# 
  2803  0294                     	;# 
  2804  0295                     	;# 
  2805  0296                     	;# 
  2806  0296                     	;# 
  2807  0297                     	;# 
  2808  0298                     	;# 
  2809  0298                     	;# 
  2810  0299                     	;# 
  2811  0299                     	;# 
  2812  029A                     	;# 
  2813  029B                     	;# 
  2814  029C                     	;# 
  2815  029C                     	;# 
  2816  029D                     	;# 
  2817  030C                     	;# 
  2818  030C                     	;# 
  2819  030D                     	;# 
  2820  030E                     	;# 
  2821  030F                     	;# 
  2822  0310                     	;# 
  2823  0310                     	;# 
  2824  0311                     	;# 
  2825  0312                     	;# 
  2826  0313                     	;# 
  2827  0314                     	;# 
  2828  0314                     	;# 
  2829  0315                     	;# 
  2830  0316                     	;# 
  2831  0317                     	;# 
  2832  0318                     	;# 
  2833  0318                     	;# 
  2834  0319                     	;# 
  2835  031A                     	;# 
  2836  031B                     	;# 
  2837  031C                     	;# 
  2838  031C                     	;# 
  2839  031D                     	;# 
  2840  031E                     	;# 
  2841  031F                     	;# 
  2842  038C                     	;# 
  2843  038D                     	;# 
  2844  038E                     	;# 
  2845  0390                     	;# 
  2846  0391                     	;# 
  2847  0392                     	;# 
  2848  040C                     	;# 
  2849  040D                     	;# 
  2850  040E                     	;# 
  2851  040F                     	;# 
  2852  0410                     	;# 
  2853  0411                     	;# 
  2854  0416                     	;# 
  2855  0416                     	;# 
  2856  0417                     	;# 
  2857  0418                     	;# 
  2858  0418                     	;# 
  2859  0419                     	;# 
  2860  041A                     	;# 
  2861  041A                     	;# 
  2862  041B                     	;# 
  2863  041C                     	;# 
  2864  041C                     	;# 
  2865  041D                     	;# 
  2866  041E                     	;# 
  2867  041F                     	;# 
  2868  048C                     	;# 
  2869  048C                     	;# 
  2870  048D                     	;# 
  2871  048E                     	;# 
  2872  048F                     	;# 
  2873  048F                     	;# 
  2874  0490                     	;# 
  2875  0491                     	;# 
  2876  0492                     	;# 
  2877  0492                     	;# 
  2878  0493                     	;# 
  2879  0494                     	;# 
  2880  0495                     	;# 
  2881  0495                     	;# 
  2882  0496                     	;# 
  2883  0497                     	;# 
  2884  0498                     	;# 
  2885  0499                     	;# 
  2886  049A                     	;# 
  2887  049B                     	;# 
  2888  049C                     	;# 
  2889  049D                     	;# 
  2890  050C                     	;# 
  2891  050C                     	;# 
  2892  050D                     	;# 
  2893  050E                     	;# 
  2894  050F                     	;# 
  2895  050F                     	;# 
  2896  0510                     	;# 
  2897  0511                     	;# 
  2898  0512                     	;# 
  2899  0512                     	;# 
  2900  0513                     	;# 
  2901  0514                     	;# 
  2902  0515                     	;# 
  2903  0515                     	;# 
  2904  0516                     	;# 
  2905  0517                     	;# 
  2906  0518                     	;# 
  2907  0519                     	;# 
  2908  051A                     	;# 
  2909  051B                     	;# 
  2910  051C                     	;# 
  2911  051D                     	;# 
  2912  058C                     	;# 
  2913  058C                     	;# 
  2914  058D                     	;# 
  2915  058E                     	;# 
  2916  058F                     	;# 
  2917  058F                     	;# 
  2918  0590                     	;# 
  2919  0591                     	;# 
  2920  0592                     	;# 
  2921  0593                     	;# 
  2922  060C                     	;# 
  2923  060D                     	;# 
  2924  060E                     	;# 
  2925  060F                     	;# 
  2926  0610                     	;# 
  2927  0611                     	;# 
  2928  0612                     	;# 
  2929  0613                     	;# 
  2930  0614                     	;# 
  2931  0616                     	;# 
  2932  0617                     	;# 
  2933  0618                     	;# 
  2934  0619                     	;# 
  2935  061A                     	;# 
  2936  061B                     	;# 
  2937  061C                     	;# 
  2938  061D                     	;# 
  2939  061E                     	;# 
  2940  068C                     	;# 
  2941  068D                     	;# 
  2942  068E                     	;# 
  2943  068F                     	;# 
  2944  0690                     	;# 
  2945  0691                     	;# 
  2946  0692                     	;# 
  2947  0693                     	;# 
  2948  0694                     	;# 
  2949  070C                     	;# 
  2950  070D                     	;# 
  2951  070E                     	;# 
  2952  070F                     	;# 
  2953  0710                     	;# 
  2954  0711                     	;# 
  2955  0712                     	;# 
  2956  0713                     	;# 
  2957  0714                     	;# 
  2958  0716                     	;# 
  2959  0717                     	;# 
  2960  0718                     	;# 
  2961  0719                     	;# 
  2962  071A                     	;# 
  2963  071B                     	;# 
  2964  071C                     	;# 
  2965  071D                     	;# 
  2966  071E                     	;# 
  2967  0796                     	;# 
  2968  0797                     	;# 
  2969  0798                     	;# 
  2970  0799                     	;# 
  2971  079A                     	;# 
  2972  079B                     	;# 
  2973  080C                     	;# 
  2974  080D                     	;# 
  2975  080E                     	;# 
  2976  080F                     	;# 
  2977  0810                     	;# 
  2978  0811                     	;# 
  2979  0812                     	;# 
  2980  0813                     	;# 
  2981  0814                     	;# 
  2982  081A                     	;# 
  2983  081B                     	;# 
  2984  081C                     	;# 
  2985  081D                     	;# 
  2986  081E                     	;# 
  2987  081F                     	;# 
  2988  088C                     	;# 
  2989  088D                     	;# 
  2990  088E                     	;# 
  2991  088F                     	;# 
  2992  0890                     	;# 
  2993  0891                     	;# 
  2994  0892                     	;# 
  2995  0893                     	;# 
  2996  0895                     	;# 
  2997  0896                     	;# 
  2998  0897                     	;# 
  2999  0898                     	;# 
  3000  0899                     	;# 
  3001  089A                     	;# 
  3002  089B                     	;# 
  3003  090C                     	;# 
  3004  090E                     	;# 
  3005  090F                     	;# 
  3006  091F                     	;# 
  3007  091F                     	;# 
  3008  098F                     	;# 
  3009  098F                     	;# 
  3010  0990                     	;# 
  3011  0991                     	;# 
  3012  0992                     	;# 
  3013  0993                     	;# 
  3014  0994                     	;# 
  3015  0995                     	;# 
  3016  0996                     	;# 
  3017  0997                     	;# 
  3018  0E0F                     	;# 
  3019  0E10                     	;# 
  3020  0E11                     	;# 
  3021  0E12                     	;# 
  3022  0E13                     	;# 
  3023  0E14                     	;# 
  3024  0E15                     	;# 
  3025  0E16                     	;# 
  3026  0E17                     	;# 
  3027  0E18                     	;# 
  3028  0E19                     	;# 
  3029  0E1A                     	;# 
  3030  0E1B                     	;# 
  3031  0E1C                     	;# 
  3032  0E1D                     	;# 
  3033  0E1E                     	;# 
  3034  0E1F                     	;# 
  3035  0E20                     	;# 
  3036  0E21                     	;# 
  3037  0E22                     	;# 
  3038  0E23                     	;# 
  3039  0E24                     	;# 
  3040  0E25                     	;# 
  3041  0E26                     	;# 
  3042  0E27                     	;# 
  3043  0E28                     	;# 
  3044  0E29                     	;# 
  3045  0E2A                     	;# 
  3046  0E2B                     	;# 
  3047  0E2C                     	;# 
  3048  0E2D                     	;# 
  3049  0E2E                     	;# 
  3050  0E2F                     	;# 
  3051  0E30                     	;# 
  3052  0E31                     	;# 
  3053  0E32                     	;# 
  3054  0E33                     	;# 
  3055  0E34                     	;# 
  3056  0E35                     	;# 
  3057  0E36                     	;# 
  3058  0E37                     	;# 
  3059  0E8F                     	;# 
  3060  0E90                     	;# 
  3061  0E91                     	;# 
  3062  0E92                     	;# 
  3063  0E93                     	;# 
  3064  0E94                     	;# 
  3065  0E95                     	;# 
  3066  0E96                     	;# 
  3067  0E97                     	;# 
  3068  0E9C                     	;# 
  3069  0E9D                     	;# 
  3070  0E9E                     	;# 
  3071  0EA1                     	;# 
  3072  0EA2                     	;# 
  3073  0EA3                     	;# 
  3074  0EA4                     	;# 
  3075  0EA5                     	;# 
  3076  0EA9                     	;# 
  3077  0EAA                     	;# 
  3078  0EAB                     	;# 
  3079  0EAC                     	;# 
  3080  0EB1                     	;# 
  3081  0EB2                     	;# 
  3082  0EB3                     	;# 
  3083  0EB8                     	;# 
  3084  0EB9                     	;# 
  3085  0EBA                     	;# 
  3086  0EBB                     	;# 
  3087  0EBC                     	;# 
  3088  0EBD                     	;# 
  3089  0EBE                     	;# 
  3090  0EC3                     	;# 
  3091  0EC5                     	;# 
  3092  0EC6                     	;# 
  3093  0EC7                     	;# 
  3094  0EC8                     	;# 
  3095  0EC9                     	;# 
  3096  0ECA                     	;# 
  3097  0ECB                     	;# 
  3098  0ECC                     	;# 
  3099  0F10                     	;# 
  3100  0F11                     	;# 
  3101  0F12                     	;# 
  3102  0F13                     	;# 
  3103  0F14                     	;# 
  3104  0F15                     	;# 
  3105  0F16                     	;# 
  3106  0F17                     	;# 
  3107  0F18                     	;# 
  3108  0F19                     	;# 
  3109  0F1A                     	;# 
  3110  0F1B                     	;# 
  3111  0F1C                     	;# 
  3112  0F1D                     	;# 
  3113  0F1E                     	;# 
  3114  0F1F                     	;# 
  3115  0F20                     	;# 
  3116  0F21                     	;# 
  3117  0F22                     	;# 
  3118  0F23                     	;# 
  3119  0F24                     	;# 
  3120  0F25                     	;# 
  3121  0F26                     	;# 
  3122  0F27                     	;# 
  3123  0F38                     	;# 
  3124  0F39                     	;# 
  3125  0F3A                     	;# 
  3126  0F3B                     	;# 
  3127  0F3C                     	;# 
  3128  0F3D                     	;# 
  3129  0F3E                     	;# 
  3130  0F3F                     	;# 
  3131  0F40                     	;# 
  3132  0F41                     	;# 
  3133  0F43                     	;# 
  3134  0F44                     	;# 
  3135  0F45                     	;# 
  3136  0F46                     	;# 
  3137  0F47                     	;# 
  3138  0F48                     	;# 
  3139  0F49                     	;# 
  3140  0F4A                     	;# 
  3141  0F4B                     	;# 
  3142  0F4C                     	;# 
  3143  0F4E                     	;# 
  3144  0F4F                     	;# 
  3145  0F50                     	;# 
  3146  0F51                     	;# 
  3147  0F52                     	;# 
  3148  0F53                     	;# 
  3149  0F54                     	;# 
  3150  0F55                     	;# 
  3151  0F56                     	;# 
  3152  0F57                     	;# 
  3153  0F65                     	;# 
  3154  0F68                     	;# 
  3155  0F69                     	;# 
  3156  0F6A                     	;# 
  3157  0F6B                     	;# 
  3158  0FE4                     	;# 
  3159  0FE5                     	;# 
  3160  0FE6                     	;# 
  3161  0FE7                     	;# 
  3162  0FE8                     	;# 
  3163  0FE9                     	;# 
  3164  0FEA                     	;# 
  3165  0FEB                     	;# 
  3166  0FED                     	;# 
  3167  0FEE                     	;# 
  3168  0FEF                     	;# 
  3169  0000                     	;# 
  3170  0001                     	;# 
  3171  0002                     	;# 
  3172  0003                     	;# 
  3173  0004                     	;# 
  3174  0005                     	;# 
  3175  0006                     	;# 
  3176  0007                     	;# 
  3177  0008                     	;# 
  3178  0009                     	;# 
  3179  000A                     	;# 
  3180  000B                     	;# 
  3181  000C                     	;# 
  3182  000D                     	;# 
  3183  000E                     	;# 
  3184  0010                     	;# 
  3185  0011                     	;# 
  3186  0012                     	;# 
  3187  0013                     	;# 
  3188  0016                     	;# 
  3189  0017                     	;# 
  3190  0018                     	;# 
  3191  001C                     	;# 
  3192  001C                     	;# 
  3193  001D                     	;# 
  3194  001D                     	;# 
  3195  001E                     	;# 
  3196  001F                     	;# 
  3197  008C                     	;# 
  3198  008C                     	;# 
  3199  008D                     	;# 
  3200  008E                     	;# 
  3201  008E                     	;# 
  3202  008F                     	;# 
  3203  0090                     	;# 
  3204  0090                     	;# 
  3205  0091                     	;# 
  3206  0093                     	;# 
  3207  0094                     	;# 
  3208  0095                     	;# 
  3209  0096                     	;# 
  3210  0097                     	;# 
  3211  0098                     	;# 
  3212  0099                     	;# 
  3213  009A                     	;# 
  3214  009B                     	;# 
  3215  009C                     	;# 
  3216  009D                     	;# 
  3217  009E                     	;# 
  3218  010C                     	;# 
  3219  010D                     	;# 
  3220  010E                     	;# 
  3221  010E                     	;# 
  3222  010F                     	;# 
  3223  0110                     	;# 
  3224  0110                     	;# 
  3225  0111                     	;# 
  3226  0112                     	;# 
  3227  0112                     	;# 
  3228  0113                     	;# 
  3229  0114                     	;# 
  3230  0114                     	;# 
  3231  0115                     	;# 
  3232  0116                     	;# 
  3233  0116                     	;# 
  3234  0117                     	;# 
  3235  0119                     	;# 
  3236  0119                     	;# 
  3237  0119                     	;# 
  3238  011A                     	;# 
  3239  011A                     	;# 
  3240  011A                     	;# 
  3241  011B                     	;# 
  3242  011B                     	;# 
  3243  011B                     	;# 
  3244  011B                     	;# 
  3245  011B                     	;# 
  3246  011C                     	;# 
  3247  011C                     	;# 
  3248  011C                     	;# 
  3249  011D                     	;# 
  3250  011D                     	;# 
  3251  011D                     	;# 
  3252  011E                     	;# 
  3253  011E                     	;# 
  3254  011E                     	;# 
  3255  011F                     	;# 
  3256  011F                     	;# 
  3257  011F                     	;# 
  3258  011F                     	;# 
  3259  011F                     	;# 
  3260  018C                     	;# 
  3261  018D                     	;# 
  3262  018E                     	;# 
  3263  018F                     	;# 
  3264  0190                     	;# 
  3265  0191                     	;# 
  3266  0192                     	;# 
  3267  0196                     	;# 
  3268  0197                     	;# 
  3269  0198                     	;# 
  3270  0199                     	;# 
  3271  019A                     	;# 
  3272  019B                     	;# 
  3273  019C                     	;# 
  3274  020C                     	;# 
  3275  020C                     	;# 
  3276  020D                     	;# 
  3277  020E                     	;# 
  3278  020F                     	;# 
  3279  020F                     	;# 
  3280  0210                     	;# 
  3281  0210                     	;# 
  3282  0211                     	;# 
  3283  0211                     	;# 
  3284  0212                     	;# 
  3285  0212                     	;# 
  3286  0213                     	;# 
  3287  0214                     	;# 
  3288  0215                     	;# 
  3289  0215                     	;# 
  3290  0216                     	;# 
  3291  0216                     	;# 
  3292  0217                     	;# 
  3293  0217                     	;# 
  3294  0218                     	;# 
  3295  0218                     	;# 
  3296  0219                     	;# 
  3297  021A                     	;# 
  3298  021B                     	;# 
  3299  021B                     	;# 
  3300  021C                     	;# 
  3301  021C                     	;# 
  3302  021D                     	;# 
  3303  021D                     	;# 
  3304  021E                     	;# 
  3305  021F                     	;# 
  3306  028C                     	;# 
  3307  028C                     	;# 
  3308  028D                     	;# 
  3309  028D                     	;# 
  3310  028E                     	;# 
  3311  028F                     	;# 
  3312  0290                     	;# 
  3313  0290                     	;# 
  3314  0291                     	;# 
  3315  0292                     	;# 
  3316  0292                     	;# 
  3317  0293                     	;# 
  3318  0293                     	;# 
  3319  0294                     	;# 
  3320  0295                     	;# 
  3321  0296                     	;# 
  3322  0296                     	;# 
  3323  0297                     	;# 
  3324  0298                     	;# 
  3325  0298                     	;# 
  3326  0299                     	;# 
  3327  0299                     	;# 
  3328  029A                     	;# 
  3329  029B                     	;# 
  3330  029C                     	;# 
  3331  029C                     	;# 
  3332  029D                     	;# 
  3333  030C                     	;# 
  3334  030C                     	;# 
  3335  030D                     	;# 
  3336  030E                     	;# 
  3337  030F                     	;# 
  3338  0310                     	;# 
  3339  0310                     	;# 
  3340  0311                     	;# 
  3341  0312                     	;# 
  3342  0313                     	;# 
  3343  0314                     	;# 
  3344  0314                     	;# 
  3345  0315                     	;# 
  3346  0316                     	;# 
  3347  0317                     	;# 
  3348  0318                     	;# 
  3349  0318                     	;# 
  3350  0319                     	;# 
  3351  031A                     	;# 
  3352  031B                     	;# 
  3353  031C                     	;# 
  3354  031C                     	;# 
  3355  031D                     	;# 
  3356  031E                     	;# 
  3357  031F                     	;# 
  3358  038C                     	;# 
  3359  038D                     	;# 
  3360  038E                     	;# 
  3361  0390                     	;# 
  3362  0391                     	;# 
  3363  0392                     	;# 
  3364  040C                     	;# 
  3365  040D                     	;# 
  3366  040E                     	;# 
  3367  040F                     	;# 
  3368  0410                     	;# 
  3369  0411                     	;# 
  3370  0416                     	;# 
  3371  0416                     	;# 
  3372  0417                     	;# 
  3373  0418                     	;# 
  3374  0418                     	;# 
  3375  0419                     	;# 
  3376  041A                     	;# 
  3377  041A                     	;# 
  3378  041B                     	;# 
  3379  041C                     	;# 
  3380  041C                     	;# 
  3381  041D                     	;# 
  3382  041E                     	;# 
  3383  041F                     	;# 
  3384  048C                     	;# 
  3385  048C                     	;# 
  3386  048D                     	;# 
  3387  048E                     	;# 
  3388  048F                     	;# 
  3389  048F                     	;# 
  3390  0490                     	;# 
  3391  0491                     	;# 
  3392  0492                     	;# 
  3393  0492                     	;# 
  3394  0493                     	;# 
  3395  0494                     	;# 
  3396  0495                     	;# 
  3397  0495                     	;# 
  3398  0496                     	;# 
  3399  0497                     	;# 
  3400  0498                     	;# 
  3401  0499                     	;# 
  3402  049A                     	;# 
  3403  049B                     	;# 
  3404  049C                     	;# 
  3405  049D                     	;# 
  3406  050C                     	;# 
  3407  050C                     	;# 
  3408  050D                     	;# 
  3409  050E                     	;# 
  3410  050F                     	;# 
  3411  050F                     	;# 
  3412  0510                     	;# 
  3413  0511                     	;# 
  3414  0512                     	;# 
  3415  0512                     	;# 
  3416  0513                     	;# 
  3417  0514                     	;# 
  3418  0515                     	;# 
  3419  0515                     	;# 
  3420  0516                     	;# 
  3421  0517                     	;# 
  3422  0518                     	;# 
  3423  0519                     	;# 
  3424  051A                     	;# 
  3425  051B                     	;# 
  3426  051C                     	;# 
  3427  051D                     	;# 
  3428  058C                     	;# 
  3429  058C                     	;# 
  3430  058D                     	;# 
  3431  058E                     	;# 
  3432  058F                     	;# 
  3433  058F                     	;# 
  3434  0590                     	;# 
  3435  0591                     	;# 
  3436  0592                     	;# 
  3437  0593                     	;# 
  3438  060C                     	;# 
  3439  060D                     	;# 
  3440  060E                     	;# 
  3441  060F                     	;# 
  3442  0610                     	;# 
  3443  0611                     	;# 
  3444  0612                     	;# 
  3445  0613                     	;# 
  3446  0614                     	;# 
  3447  0616                     	;# 
  3448  0617                     	;# 
  3449  0618                     	;# 
  3450  0619                     	;# 
  3451  061A                     	;# 
  3452  061B                     	;# 
  3453  061C                     	;# 
  3454  061D                     	;# 
  3455  061E                     	;# 
  3456  068C                     	;# 
  3457  068D                     	;# 
  3458  068E                     	;# 
  3459  068F                     	;# 
  3460  0690                     	;# 
  3461  0691                     	;# 
  3462  0692                     	;# 
  3463  0693                     	;# 
  3464  0694                     	;# 
  3465  070C                     	;# 
  3466  070D                     	;# 
  3467  070E                     	;# 
  3468  070F                     	;# 
  3469  0710                     	;# 
  3470  0711                     	;# 
  3471  0712                     	;# 
  3472  0713                     	;# 
  3473  0714                     	;# 
  3474  0716                     	;# 
  3475  0717                     	;# 
  3476  0718                     	;# 
  3477  0719                     	;# 
  3478  071A                     	;# 
  3479  071B                     	;# 
  3480  071C                     	;# 
  3481  071D                     	;# 
  3482  071E                     	;# 
  3483  0796                     	;# 
  3484  0797                     	;# 
  3485  0798                     	;# 
  3486  0799                     	;# 
  3487  079A                     	;# 
  3488  079B                     	;# 
  3489  080C                     	;# 
  3490  080D                     	;# 
  3491  080E                     	;# 
  3492  080F                     	;# 
  3493  0810                     	;# 
  3494  0811                     	;# 
  3495  0812                     	;# 
  3496  0813                     	;# 
  3497  0814                     	;# 
  3498  081A                     	;# 
  3499  081B                     	;# 
  3500  081C                     	;# 
  3501  081D                     	;# 
  3502  081E                     	;# 
  3503  081F                     	;# 
  3504  088C                     	;# 
  3505  088D                     	;# 
  3506  088E                     	;# 
  3507  088F                     	;# 
  3508  0890                     	;# 
  3509  0891                     	;# 
  3510  0892                     	;# 
  3511  0893                     	;# 
  3512  0895                     	;# 
  3513  0896                     	;# 
  3514  0897                     	;# 
  3515  0898                     	;# 
  3516  0899                     	;# 
  3517  089A                     	;# 
  3518  089B                     	;# 
  3519  090C                     	;# 
  3520  090E                     	;# 
  3521  090F                     	;# 
  3522  091F                     	;# 
  3523  091F                     	;# 
  3524  098F                     	;# 
  3525  098F                     	;# 
  3526  0990                     	;# 
  3527  0991                     	;# 
  3528  0992                     	;# 
  3529  0993                     	;# 
  3530  0994                     	;# 
  3531  0995                     	;# 
  3532  0996                     	;# 
  3533  0997                     	;# 
  3534  0E0F                     	;# 
  3535  0E10                     	;# 
  3536  0E11                     	;# 
  3537  0E12                     	;# 
  3538  0E13                     	;# 
  3539  0E14                     	;# 
  3540  0E15                     	;# 
  3541  0E16                     	;# 
  3542  0E17                     	;# 
  3543  0E18                     	;# 
  3544  0E19                     	;# 
  3545  0E1A                     	;# 
  3546  0E1B                     	;# 
  3547  0E1C                     	;# 
  3548  0E1D                     	;# 
  3549  0E1E                     	;# 
  3550  0E1F                     	;# 
  3551  0E20                     	;# 
  3552  0E21                     	;# 
  3553  0E22                     	;# 
  3554  0E23                     	;# 
  3555  0E24                     	;# 
  3556  0E25                     	;# 
  3557  0E26                     	;# 
  3558  0E27                     	;# 
  3559  0E28                     	;# 
  3560  0E29                     	;# 
  3561  0E2A                     	;# 
  3562  0E2B                     	;# 
  3563  0E2C                     	;# 
  3564  0E2D                     	;# 
  3565  0E2E                     	;# 
  3566  0E2F                     	;# 
  3567  0E30                     	;# 
  3568  0E31                     	;# 
  3569  0E32                     	;# 
  3570  0E33                     	;# 
  3571  0E34                     	;# 
  3572  0E35                     	;# 
  3573  0E36                     	;# 
  3574  0E37                     	;# 
  3575  0E8F                     	;# 
  3576  0E90                     	;# 
  3577  0E91                     	;# 
  3578  0E92                     	;# 
  3579  0E93                     	;# 
  3580  0E94                     	;# 
  3581  0E95                     	;# 
  3582  0E96                     	;# 
  3583  0E97                     	;# 
  3584  0E9C                     	;# 
  3585  0E9D                     	;# 
  3586  0E9E                     	;# 
  3587  0EA1                     	;# 
  3588  0EA2                     	;# 
  3589  0EA3                     	;# 
  3590  0EA4                     	;# 
  3591  0EA5                     	;# 
  3592  0EA9                     	;# 
  3593  0EAA                     	;# 
  3594  0EAB                     	;# 
  3595  0EAC                     	;# 
  3596  0EB1                     	;# 
  3597  0EB2                     	;# 
  3598  0EB3                     	;# 
  3599  0EB8                     	;# 
  3600  0EB9                     	;# 
  3601  0EBA                     	;# 
  3602  0EBB                     	;# 
  3603  0EBC                     	;# 
  3604  0EBD                     	;# 
  3605  0EBE                     	;# 
  3606  0EC3                     	;# 
  3607  0EC5                     	;# 
  3608  0EC6                     	;# 
  3609  0EC7                     	;# 
  3610  0EC8                     	;# 
  3611  0EC9                     	;# 
  3612  0ECA                     	;# 
  3613  0ECB                     	;# 
  3614  0ECC                     	;# 
  3615  0F10                     	;# 
  3616  0F11                     	;# 
  3617  0F12                     	;# 
  3618  0F13                     	;# 
  3619  0F14                     	;# 
  3620  0F15                     	;# 
  3621  0F16                     	;# 
  3622  0F17                     	;# 
  3623  0F18                     	;# 
  3624  0F19                     	;# 
  3625  0F1A                     	;# 
  3626  0F1B                     	;# 
  3627  0F1C                     	;# 
  3628  0F1D                     	;# 
  3629  0F1E                     	;# 
  3630  0F1F                     	;# 
  3631  0F20                     	;# 
  3632  0F21                     	;# 
  3633  0F22                     	;# 
  3634  0F23                     	;# 
  3635  0F24                     	;# 
  3636  0F25                     	;# 
  3637  0F26                     	;# 
  3638  0F27                     	;# 
  3639  0F38                     	;# 
  3640  0F39                     	;# 
  3641  0F3A                     	;# 
  3642  0F3B                     	;# 
  3643  0F3C                     	;# 
  3644  0F3D                     	;# 
  3645  0F3E                     	;# 
  3646  0F3F                     	;# 
  3647  0F40                     	;# 
  3648  0F41                     	;# 
  3649  0F43                     	;# 
  3650  0F44                     	;# 
  3651  0F45                     	;# 
  3652  0F46                     	;# 
  3653  0F47                     	;# 
  3654  0F48                     	;# 
  3655  0F49                     	;# 
  3656  0F4A                     	;# 
  3657  0F4B                     	;# 
  3658  0F4C                     	;# 
  3659  0F4E                     	;# 
  3660  0F4F                     	;# 
  3661  0F50                     	;# 
  3662  0F51                     	;# 
  3663  0F52                     	;# 
  3664  0F53                     	;# 
  3665  0F54                     	;# 
  3666  0F55                     	;# 
  3667  0F56                     	;# 
  3668  0F57                     	;# 
  3669  0F65                     	;# 
  3670  0F68                     	;# 
  3671  0F69                     	;# 
  3672  0F6A                     	;# 
  3673  0F6B                     	;# 
  3674  0FE4                     	;# 
  3675  0FE5                     	;# 
  3676  0FE6                     	;# 
  3677  0FE7                     	;# 
  3678  0FE8                     	;# 
  3679  0FE9                     	;# 
  3680  0FEA                     	;# 
  3681  0FEB                     	;# 
  3682  0FED                     	;# 
  3683  0FEE                     	;# 
  3684  0FEF                     	;# 
  3685                           
  3686                           	psect	stringtext
  3687  02DF                     __pstringtext:	
  3688  02DF                     _dpowers:	
  3689  02DF  3401               	retlw	1
  3690  02E0  3400               	retlw	0
  3691  02E1  340A               	retlw	10
  3692  02E2  3400               	retlw	0
  3693  02E3  3464               	retlw	100
  3694  02E4  3400               	retlw	0
  3695  02E5  34E8               	retlw	232
  3696  02E6  3403               	retlw	3
  3697  02E7  3410               	retlw	16
  3698  02E8  3427               	retlw	39
  3699  02E9                     __end_of_dpowers:	
  3700  02E9                     _hexpowers:	
  3701  02E9  3401               	retlw	1
  3702  02EA  3400               	retlw	0
  3703  02EB  3410               	retlw	16
  3704  02EC  3400               	retlw	0
  3705  02ED  3400               	retlw	0
  3706  02EE  3401               	retlw	1
  3707  02EF  3400               	retlw	0
  3708  02F0  3410               	retlw	16
  3709  02F1                     __end_of_hexpowers:	
  3710  000B                     _INTCONbits	set	11
  3711  0011                     _TRISA	set	17
  3712  0013                     _TRISC	set	19
  3713  0012                     _TRISB	set	18
  3714  0018                     _LATC	set	24
  3715  0016                     _LATA	set	22
  3716  0017                     _LATB	set	23
  3717  005F                     _GIE	set	95
  3718  011A                     _TX1REG	set	282
  3719  0119                     _RC1REG	set	281
  3720  011D                     _RC1STAbits	set	285
  3721  011C                     _SP1BRGH	set	284
  3722  011B                     _SP1BRGL	set	283
  3723  011E                     _TX1STA	set	286
  3724  011D                     _RC1STA	set	285
  3725  011F                     _BAUD1CON	set	287
  3726  0196                     _SSP2BUF	set	406
  3727  019B                     _SSP2CON2bits	set	411
  3728  019A                     _SSP2CON1bits	set	410
  3729  0197                     _SSP2ADD	set	407
  3730  019C                     _SSP2CON3	set	412
  3731  019A                     _SSP2CON1	set	410
  3732  0199                     _SSP2STAT	set	409
  3733  0719                     _PIE3bits	set	1817
  3734  070F                     _PIR3bits	set	1807
  3735  0892                     _OSCTUNE	set	2194
  3736  0893                     _OSCFRQ	set	2195
  3737  0891                     _OSCEN	set	2193
  3738  088F                     _OSCCON3	set	2191
  3739  088D                     _OSCCON1	set	2189
  3740  0EC8                     _SSP2CLKPPSbits	set	3784
  3741  0EC9                     _SSP2DATPPSbits	set	3785
  3742  0E8F                     _PPSLOCKbits	set	3727
  3743  0E8F                     _PPSLOCK	set	3727
  3744  0F24                     _RC4PPS	set	3876
  3745  0F23                     _RC3PPS	set	3875
  3746  0F20                     _RC0PPS	set	3872
  3747  0F4E                     _ANSELC	set	3918
  3748  0F43                     _ANSELB	set	3907
  3749  0F38                     _ANSELA	set	3896
  3750  0F4F                     _WPUC	set	3919
  3751  0F44                     _WPUB	set	3908
  3752  0F39                     _WPUA	set	3897
  3753  0F65                     _WPUE	set	3941
  3754  02F1                     STR_2:	
  3755  02F1  344D               	retlw	77	;'M'
  3756  02F2  3469               	retlw	105	;'i'
  3757  02F3  3463               	retlw	99	;'c'
  3758  02F4  3472               	retlw	114	;'r'
  3759  02F5  346F               	retlw	111	;'o'
  3760  02F6  3463               	retlw	99	;'c'
  3761  02F7  3468               	retlw	104	;'h'
  3762  02F8  3469               	retlw	105	;'i'
  3763  02F9  3470               	retlw	112	;'p'
  3764  02FA  3420               	retlw	32	;' '
  3765  02FB  3445               	retlw	69	;'E'
  3766  02FC  344D               	retlw	77	;'M'
  3767  02FD  3443               	retlw	67	;'C'
  3768  02FE  3431               	retlw	49	;'1'
  3769  02FF  3430               	retlw	48	;'0'
  3770  0300  3430               	retlw	48	;'0'
  3771  0301  3431               	retlw	49	;'1'
  3772  0302  3420               	retlw	32	;' '
  3773  0303  3454               	retlw	84	;'T'
  3774  0304  3465               	retlw	101	;'e'
  3775  0305  346D               	retlw	109	;'m'
  3776  0306  3470               	retlw	112	;'p'
  3777  0307  3465               	retlw	101	;'e'
  3778  0308  3472               	retlw	114	;'r'
  3779  0309  3461               	retlw	97	;'a'
  3780  030A  3474               	retlw	116	;'t'
  3781  030B  3475               	retlw	117	;'u'
  3782  030C  3472               	retlw	114	;'r'
  3783  030D  3465               	retlw	101	;'e'
  3784  030E  3420               	retlw	32	;' '
  3785  030F  3453               	retlw	83	;'S'
  3786  0310  3465               	retlw	101	;'e'
  3787  0311  346E               	retlw	110	;'n'
  3788  0312  3473               	retlw	115	;'s'
  3789  0313  346F               	retlw	111	;'o'
  3790  0314  3472               	retlw	114	;'r'
  3791  0315  3420               	retlw	32	;' '
  3792  0316  3444               	retlw	68	;'D'
  3793  0317  3465               	retlw	101	;'e'
  3794  0318  346D               	retlw	109	;'m'
  3795  0319  346F               	retlw	111	;'o'
  3796  031A  340A               	retlw	10
  3797  031B  3400               	retlw	0
  3798  031C                     STR_10:	
  3799  031C  3454               	retlw	84	;'T'
  3800  031D  3465               	retlw	101	;'e'
  3801  031E  346D               	retlw	109	;'m'
  3802  031F  3470               	retlw	112	;'p'
  3803  0320  3465               	retlw	101	;'e'
  3804  0321  3472               	retlw	114	;'r'
  3805  0322  3461               	retlw	97	;'a'
  3806  0323  3474               	retlw	116	;'t'
  3807  0324  3475               	retlw	117	;'u'
  3808  0325  3472               	retlw	114	;'r'
  3809  0326  3465               	retlw	101	;'e'
  3810  0327  3420               	retlw	32	;' '
  3811  0328  3468               	retlw	104	;'h'
  3812  0329  3469               	retlw	105	;'i'
  3813  032A  3467               	retlw	103	;'g'
  3814  032B  3468               	retlw	104	;'h'
  3815  032C  3420               	retlw	32	;' '
  3816  032D  346C               	retlw	108	;'l'
  3817  032E  3469               	retlw	105	;'i'
  3818  032F  346D               	retlw	109	;'m'
  3819  0330  3469               	retlw	105	;'i'
  3820  0331  3474               	retlw	116	;'t'
  3821  0332  343A               	retlw	58	;':'
  3822  0333  3409               	retlw	9
  3823  0334  3425               	retlw	37	;'%'
  3824  0335  3464               	retlw	100	;'d'
  3825  0336  342E               	retlw	46	;'.'
  3826  0337  3425               	retlw	37	;'%'
  3827  0338  3464               	retlw	100	;'d'
  3828  0339  3420               	retlw	32	;' '
  3829  033A  3443               	retlw	67	;'C'
  3830  033B  340A               	retlw	10
  3831  033C  3400               	retlw	0
  3832  033D                     STR_11:	
  3833  033D  3454               	retlw	84	;'T'
  3834  033E  3465               	retlw	101	;'e'
  3835  033F  346D               	retlw	109	;'m'
  3836  0340  3470               	retlw	112	;'p'
  3837  0341  3465               	retlw	101	;'e'
  3838  0342  3472               	retlw	114	;'r'
  3839  0343  3461               	retlw	97	;'a'
  3840  0344  3474               	retlw	116	;'t'
  3841  0345  3475               	retlw	117	;'u'
  3842  0346  3472               	retlw	114	;'r'
  3843  0347  3465               	retlw	101	;'e'
  3844  0348  3420               	retlw	32	;' '
  3845  0349  346C               	retlw	108	;'l'
  3846  034A  346F               	retlw	111	;'o'
  3847  034B  3477               	retlw	119	;'w'
  3848  034C  3420               	retlw	32	;' '
  3849  034D  346C               	retlw	108	;'l'
  3850  034E  3469               	retlw	105	;'i'
  3851  034F  346D               	retlw	109	;'m'
  3852  0350  3469               	retlw	105	;'i'
  3853  0351  3474               	retlw	116	;'t'
  3854  0352  343A               	retlw	58	;':'
  3855  0353  3409               	retlw	9
  3856  0354  3425               	retlw	37	;'%'
  3857  0355  3464               	retlw	100	;'d'
  3858  0356  342E               	retlw	46	;'.'
  3859  0357  3425               	retlw	37	;'%'
  3860  0358  3464               	retlw	100	;'d'
  3861  0359  3420               	retlw	32	;' '
  3862  035A  3443               	retlw	67	;'C'
  3863  035B  340A               	retlw	10
  3864  035C  3400               	retlw	0
  3865  035D                     STR_15:	
  3866  035D  3443               	retlw	67	;'C'
  3867  035E  3475               	retlw	117	;'u'
  3868  035F  3472               	retlw	114	;'r'
  3869  0360  3472               	retlw	114	;'r'
  3870  0361  3465               	retlw	101	;'e'
  3871  0362  346E               	retlw	110	;'n'
  3872  0363  3474               	retlw	116	;'t'
  3873  0364  3420               	retlw	32	;' '
  3874  0365  3454               	retlw	84	;'T'
  3875  0366  3465               	retlw	101	;'e'
  3876  0367  346D               	retlw	109	;'m'
  3877  0368  3470               	retlw	112	;'p'
  3878  0369  3465               	retlw	101	;'e'
  3879  036A  3472               	retlw	114	;'r'
  3880  036B  3461               	retlw	97	;'a'
  3881  036C  3474               	retlw	116	;'t'
  3882  036D  3475               	retlw	117	;'u'
  3883  036E  3472               	retlw	114	;'r'
  3884  036F  3465               	retlw	101	;'e'
  3885  0370  343A               	retlw	58	;':'
  3886  0371  3409               	retlw	9
  3887  0372  3425               	retlw	37	;'%'
  3888  0373  3464               	retlw	100	;'d'
  3889  0374  342E               	retlw	46	;'.'
  3890  0375  3425               	retlw	37	;'%'
  3891  0376  3464               	retlw	100	;'d'
  3892  0377  3420               	retlw	32	;' '
  3893  0378  3443               	retlw	67	;'C'
  3894  0379  340A               	retlw	10
  3895  037A  3400               	retlw	0
  3896  037B                     STR_13:	
  3897  037B  3454               	retlw	84	;'T'
  3898  037C  3468               	retlw	104	;'h'
  3899  037D  3465               	retlw	101	;'e'
  3900  037E  3472               	retlw	114	;'r'
  3901  037F  346D               	retlw	109	;'m'
  3902  0380  3461               	retlw	97	;'a'
  3903  0381  346C               	retlw	108	;'l'
  3904  0382  3420               	retlw	32	;' '
  3905  0383  3468               	retlw	104	;'h'
  3906  0384  3479               	retlw	121	;'y'
  3907  0385  3473               	retlw	115	;'s'
  3908  0386  3474               	retlw	116	;'t'
  3909  0387  3465               	retlw	101	;'e'
  3910  0388  3472               	retlw	114	;'r'
  3911  0389  3465               	retlw	101	;'e'
  3912  038A  3473               	retlw	115	;'s'
  3913  038B  3469               	retlw	105	;'i'
  3914  038C  3473               	retlw	115	;'s'
  3915  038D  343A               	retlw	58	;':'
  3916  038E  3409               	retlw	9
  3917  038F  3425               	retlw	37	;'%'
  3918  0390  3464               	retlw	100	;'d'
  3919  0391  3420               	retlw	32	;' '
  3920  0392  3443               	retlw	67	;'C'
  3921  0393  340A               	retlw	10
  3922  0394  3400               	retlw	0
  3923  0395                     STR_3:	
  3924  0395  3450               	retlw	80	;'P'
  3925  0396  3472               	retlw	114	;'r'
  3926  0397  346F               	retlw	111	;'o'
  3927  0398  3464               	retlw	100	;'d'
  3928  0399  3475               	retlw	117	;'u'
  3929  039A  3463               	retlw	99	;'c'
  3930  039B  3474               	retlw	116	;'t'
  3931  039C  3420               	retlw	32	;' '
  3932  039D  3449               	retlw	73	;'I'
  3933  039E  3444               	retlw	68	;'D'
  3934  039F  343A               	retlw	58	;':'
  3935  03A0  3409               	retlw	9
  3936  03A1  3409               	retlw	9
  3937  03A2  3445               	retlw	69	;'E'
  3938  03A3  344D               	retlw	77	;'M'
  3939  03A4  3443               	retlw	67	;'C'
  3940  03A5  3431               	retlw	49	;'1'
  3941  03A6  3430               	retlw	48	;'0'
  3942  03A7  3430               	retlw	48	;'0'
  3943  03A8  3431               	retlw	49	;'1'
  3944  03A9  3425               	retlw	37	;'%'
  3945  03AA  3473               	retlw	115	;'s'
  3946  03AB  340A               	retlw	10
  3947  03AC  3400               	retlw	0
  3948  03AD                     STR_6:	
  3949  03AD  344D               	retlw	77	;'M'
  3950  03AE  3461               	retlw	97	;'a'
  3951  03AF  346E               	retlw	110	;'n'
  3952  03B0  3475               	retlw	117	;'u'
  3953  03B1  3466               	retlw	102	;'f'
  3954  03B2  3461               	retlw	97	;'a'
  3955  03B3  3463               	retlw	99	;'c'
  3956  03B4  3474               	retlw	116	;'t'
  3957  03B5  3475               	retlw	117	;'u'
  3958  03B6  3472               	retlw	114	;'r'
  3959  03B7  3465               	retlw	101	;'e'
  3960  03B8  3472               	retlw	114	;'r'
  3961  03B9  3420               	retlw	32	;' '
  3962  03BA  3449               	retlw	73	;'I'
  3963  03BB  3444               	retlw	68	;'D'
  3964  03BC  343A               	retlw	58	;':'
  3965  03BD  3409               	retlw	9
  3966  03BE  3430               	retlw	48	;'0'
  3967  03BF  3478               	retlw	120	;'x'
  3968  03C0  3425               	retlw	37	;'%'
  3969  03C1  3458               	retlw	88	;'X'
  3970  03C2  340A               	retlw	10
  3971  03C3  3400               	retlw	0
  3972  03C4                     STR_12:	
  3973  03C4  3454               	retlw	84	;'T'
  3974  03C5  3468               	retlw	104	;'h'
  3975  03C6  3465               	retlw	101	;'e'
  3976  03C7  3472               	retlw	114	;'r'
  3977  03C8  346D               	retlw	109	;'m'
  3978  03C9  3461               	retlw	97	;'a'
  3979  03CA  346C               	retlw	108	;'l'
  3980  03CB  3420               	retlw	32	;' '
  3981  03CC  346C               	retlw	108	;'l'
  3982  03CD  3469               	retlw	105	;'i'
  3983  03CE  346D               	retlw	109	;'m'
  3984  03CF  3469               	retlw	105	;'i'
  3985  03D0  3474               	retlw	116	;'t'
  3986  03D1  343A               	retlw	58	;':'
  3987  03D2  3409               	retlw	9
  3988  03D3  3409               	retlw	9
  3989  03D4  3425               	retlw	37	;'%'
  3990  03D5  3464               	retlw	100	;'d'
  3991  03D6  3420               	retlw	32	;' '
  3992  03D7  3443               	retlw	67	;'C'
  3993  03D8  340A               	retlw	10
  3994  03D9  3400               	retlw	0
  3995  03DA                     STR_9:	
  3996  03DA  3443               	retlw	67	;'C'
  3997  03DB  346F               	retlw	111	;'o'
  3998  03DC  346E               	retlw	110	;'n'
  3999  03DD  3476               	retlw	118	;'v'
  4000  03DE  3465               	retlw	101	;'e'
  4001  03DF  3472               	retlw	114	;'r'
  4002  03E0  3473               	retlw	115	;'s'
  4003  03E1  3469               	retlw	105	;'i'
  4004  03E2  346F               	retlw	111	;'o'
  4005  03E3  346E               	retlw	110	;'n'
  4006  03E4  3420               	retlw	32	;' '
  4007  03E5  3472               	retlw	114	;'r'
  4008  03E6  3461               	retlw	97	;'a'
  4009  03E7  3474               	retlw	116	;'t'
  4010  03E8  3465               	retlw	101	;'e'
  4011  03E9  343A               	retlw	58	;':'
  4012  03EA  3409               	retlw	9
  4013  03EB  3425               	retlw	37	;'%'
  4014  03EC  3478               	retlw	120	;'x'
  4015  03ED  340A               	retlw	10
  4016  03EE  3400               	retlw	0
  4017  03EF                     STR_17:	
  4018  03EF  3430               	retlw	48	;'0'
  4019  03F0  3431               	retlw	49	;'1'
  4020  03F1  3432               	retlw	50	;'2'
  4021  03F2  3433               	retlw	51	;'3'
  4022  03F3  3434               	retlw	52	;'4'
  4023  03F4  3435               	retlw	53	;'5'
  4024  03F5  3436               	retlw	54	;'6'
  4025  03F6  3437               	retlw	55	;'7'
  4026  03F7  3438               	retlw	56	;'8'
  4027  03F8  3439               	retlw	57	;'9'
  4028  03F9  3441               	retlw	65	;'A'
  4029  03FA  3442               	retlw	66	;'B'
  4030  03FB  3443               	retlw	67	;'C'
  4031  03FC  3444               	retlw	68	;'D'
  4032  03FD  3445               	retlw	69	;'E'
  4033  03FE  3446               	retlw	70	;'F'
  4034  03FF  3400               	retlw	0
  4035  0400                     STR_18:	
  4036  0400  3430               	retlw	48	;'0'
  4037  0401  3431               	retlw	49	;'1'
  4038  0402  3432               	retlw	50	;'2'
  4039  0403  3433               	retlw	51	;'3'
  4040  0404  3434               	retlw	52	;'4'
  4041  0405  3435               	retlw	53	;'5'
  4042  0406  3436               	retlw	54	;'6'
  4043  0407  3437               	retlw	55	;'7'
  4044  0408  3438               	retlw	56	;'8'
  4045  0409  3439               	retlw	57	;'9'
  4046  040A  3461               	retlw	97	;'a'
  4047  040B  3462               	retlw	98	;'b'
  4048  040C  3463               	retlw	99	;'c'
  4049  040D  3464               	retlw	100	;'d'
  4050  040E  3465               	retlw	101	;'e'
  4051  040F  3466               	retlw	102	;'f'
  4052  0410  3400               	retlw	0
  4053  0411                     STR_7:	
  4054  0411  3452               	retlw	82	;'R'
  4055  0412  3465               	retlw	101	;'e'
  4056  0413  3476               	retlw	118	;'v'
  4057  0414  3469               	retlw	105	;'i'
  4058  0415  3473               	retlw	115	;'s'
  4059  0416  3469               	retlw	105	;'i'
  4060  0417  346F               	retlw	111	;'o'
  4061  0418  346E               	retlw	110	;'n'
  4062  0419  3420               	retlw	32	;' '
  4063  041A  343A               	retlw	58	;':'
  4064  041B  3409               	retlw	9
  4065  041C  3409               	retlw	9
  4066  041D  3425               	retlw	37	;'%'
  4067  041E  3464               	retlw	100	;'d'
  4068  041F  340A               	retlw	10
  4069  0420  3400               	retlw	0
  4070  0421                     STR_16:	
  4071  0421  3428               	retlw	40	;'('
  4072  0422  346E               	retlw	110	;'n'
  4073  0423  3475               	retlw	117	;'u'
  4074  0424  346C               	retlw	108	;'l'
  4075  0425  346C               	retlw	108	;'l'
  4076  0426  3429               	retlw	41	;')'
  4077  0427  3400               	retlw	0
  4078  0428                     STR_4:	
  4079  0428  342D               	retlw	45	;'-'
  4080  0429  3431               	retlw	49	;'1'
  4081  042A  3400               	retlw	0
  4082  042B                     STR_1:	
  4083  042B  340C               	retlw	12
  4084  042C  3400               	retlw	0
  4085  03D9                     
  4086                           ; #config settings
  4087  0000                     
  4088                           	psect	cinit
  4089  001D                     start_initialization:	
  4090  001D                     __initialization:	
  4091                           
  4092                           ; Clear objects allocated to COMMON
  4093  001D  01F7               	clrf	__pbssCOMMON& (0+127)
  4094  001E  01F8               	clrf	(__pbssCOMMON+1)& (0+127)
  4095  001F  01F9               	clrf	(__pbssCOMMON+2)& (0+127)
  4096  0020  01FA               	clrf	(__pbssCOMMON+3)& (0+127)
  4097  0021  01FB               	clrf	(__pbssCOMMON+4)& (0+127)
  4098  0022  01FC               	clrf	(__pbssCOMMON+5)& (0+127)
  4099                           
  4100                           ; Clear objects allocated to BANK0
  4101  0023  304C               	movlw	low __pbssBANK0
  4102  0024  0084               	movwf	4
  4103  0025  3000               	movlw	high __pbssBANK0
  4104  0026  0085               	movwf	5
  4105  0027  301B               	movlw	27
  4106  0028  318F  27F1         	fcall	clear_ram0
  4107  002A                     end_of_initialization:	
  4108                           ;End of C runtime variable initialization code
  4109                           
  4110  002A                     __end_of__initialization:	
  4111  002A  107E               	bcf	int$flags,0	;clear compiler interrupt flag (level 1)
  4112  002B  0020               	movlb	0
  4113  002C  3187  2F00         	ljmp	_main	;jump to C main() function
  4114                           
  4115                           	psect	bssCOMMON
  4116  0077                     __pbssCOMMON:	
  4117  0077                     I2C2_ISR@i2c_10bit_address_restart:	
  4118  0077                     	ds	1
  4119  0078                     I2C2_ISR@i2c_bytes_left:	
  4120  0078                     	ds	1
  4121  0079                     I2C2_ISR@pi2c_buf_ptr:	
  4122  0079                     	ds	1
  4123  007A                     _p_i2c2_current:	
  4124  007A                     	ds	1
  4125  007B                     _p_i2c2_trb_current:	
  4126  007B                     	ds	1
  4127  007C                     _i2c2_trb_count:	
  4128  007C                     	ds	1
  4129                           
  4130                           	psect	bssBANK0
  4131  004C                     __pbssBANK0:	
  4132  004C                     _i2c2_object:	
  4133  004C                     	ds	5
  4134  0051                     _i2c2_state:	
  4135  0051                     	ds	1
  4136  0052                     EMC1001_Read@trb:	
  4137  0052                     	ds	8
  4138  005A                     I2C2_MasterRead@trBlock:	
  4139  005A                     	ds	4
  4140  005E                     I2C2_MasterWrite@trBlock:	
  4141  005E                     	ds	4
  4142  0062                     _i2c2_tr_queue:	
  4143  0062                     	ds	3
  4144  0065                     I2C2_ISR@i2c_address:	
  4145  0065                     	ds	2
  4146                           
  4147                           	psect	clrtext
  4148  0FF1                     clear_ram0:	
  4149                           ;	Called with FSR0 containing the base address, and
  4150                           ;	WREG with the size to clear
  4151                           
  4152  0FF1  0064               	clrwdt	;clear the watchdog before getting into this loop
  4153  0FF2                     clrloop0:	
  4154  0FF2  0180               	clrf	0	;clear RAM location pointed to by FSR
  4155  0FF3  3101               	addfsr 0,1
  4156  0FF4  0B89               	decfsz	9,f	;Have we reached the end of clearing yet?
  4157  0FF5  2FF2               	goto	clrloop0	;have we reached the end yet?
  4158  0FF6  3400               	retlw	0	;all done for this memory range, return
  4159                           
  4160                           	psect	cstackCOMMON
  4161  0070                     __pcstackCOMMON:	
  4162  0070                     ?_I2C2_Stop:	
  4163  0070                     ??_I2C2_Stop:	
  4164                           ; 1 bytes @ 0x0
  4165                           
  4166  0070                     ?_I2C2_FunctionComplete:	
  4167                           ; 1 bytes @ 0x0
  4168                           
  4169  0070                     ??_I2C2_FunctionComplete:	
  4170                           ; 1 bytes @ 0x0
  4171                           
  4172  0070                     ?_PIN_MANAGER_Initialize:	
  4173                           ; 1 bytes @ 0x0
  4174                           
  4175  0070                     ?_OSCILLATOR_Initialize:	
  4176                           ; 1 bytes @ 0x0
  4177                           
  4178  0070                     ?_EMC1001_PrintInfo:	
  4179                           ; 1 bytes @ 0x0
  4180                           
  4181  0070                     ?_EMC1001_PrintTemp:	
  4182                           ; 1 bytes @ 0x0
  4183                           
  4184  0070                     ?_EUSART_Initialize:	
  4185                           ; 1 bytes @ 0x0
  4186                           
  4187  0070                     ?_EUSART_Write:	
  4188                           ; 1 bytes @ 0x0
  4189                           
  4190  0070                     ?_putch:	
  4191                           ; 1 bytes @ 0x0
  4192                           
  4193  0070                     ?_I2C2_Initialize:	
  4194                           ; 1 bytes @ 0x0
  4195                           
  4196  0070                     ?_I2C2_ISR:	
  4197                           ; 1 bytes @ 0x0
  4198                           
  4199  0070                     ?_I2C2_BusCollisionISR:	
  4200                           ; 1 bytes @ 0x0
  4201                           
  4202  0070                     ??_I2C2_BusCollisionISR:	
  4203                           ; 1 bytes @ 0x0
  4204                           
  4205  0070                     ?_INTERRUPT_InterruptManager:	
  4206                           ; 1 bytes @ 0x0
  4207                           
  4208  0070                     ?_SYSTEM_Initialize:	
  4209                           ; 1 bytes @ 0x0
  4210                           
  4211  0070                     ?_main:	
  4212                           ; 1 bytes @ 0x0
  4213                           
  4214                           
  4215                           ; 1 bytes @ 0x0
  4216  0070                     	ds	1
  4217  0071                     I2C2_Stop@completion_code:	
  4218                           
  4219                           ; 1 bytes @ 0x1
  4220  0071                     	ds	1
  4221  0072                     ??_I2C2_ISR:	
  4222                           
  4223                           ; 1 bytes @ 0x2
  4224  0072                     	ds	4
  4225  0076                     ??_INTERRUPT_InterruptManager:	
  4226                           
  4227                           ; 1 bytes @ 0x6
  4228  0076                     	ds	1
  4229                           
  4230                           	psect	cstackBANK0
  4231  0020                     __pcstackBANK0:	
  4232  0020                     ?_I2C2_MasterWriteTRBBuild:	
  4233  0020                     ?_I2C2_MasterTRBInsert:	
  4234                           ; 1 bytes @ 0x0
  4235                           
  4236  0020                     ?_I2C2_MasterReadTRBBuild:	
  4237                           ; 1 bytes @ 0x0
  4238                           
  4239  0020                     ??_PIN_MANAGER_Initialize:	
  4240                           ; 1 bytes @ 0x0
  4241                           
  4242  0020                     ??_OSCILLATOR_Initialize:	
  4243                           ; 1 bytes @ 0x0
  4244                           
  4245  0020                     ??_EUSART_Initialize:	
  4246                           ; 1 bytes @ 0x0
  4247                           
  4248  0020                     ??_EUSART_Write:	
  4249                           ; 1 bytes @ 0x0
  4250                           
  4251  0020                     ??_I2C2_Initialize:	
  4252                           ; 1 bytes @ 0x0
  4253                           
  4254  0020                     ?___wmul:	
  4255                           ; 1 bytes @ 0x0
  4256                           
  4257  0020                     ?___lwdiv:	
  4258                           ; 2 bytes @ 0x0
  4259                           
  4260  0020                     EUSART_Write@txData:	
  4261                           ; 2 bytes @ 0x0
  4262                           
  4263  0020                     I2C2_MasterTRBInsert@ptrb_list:	
  4264                           ; 1 bytes @ 0x0
  4265                           
  4266  0020                     I2C2_MasterReadTRBBuild@pdata:	
  4267                           ; 1 bytes @ 0x0
  4268                           
  4269  0020                     I2C2_MasterWriteTRBBuild@pdata:	
  4270                           ; 1 bytes @ 0x0
  4271                           
  4272  0020                     PIN_MANAGER_Initialize@state:	
  4273                           ; 1 bytes @ 0x0
  4274                           
  4275  0020                     ___wmul@multiplier:	
  4276                           ; 1 bytes @ 0x0
  4277                           
  4278  0020                     ___lwdiv@divisor:	
  4279                           ; 2 bytes @ 0x0
  4280                           
  4281                           
  4282                           ; 2 bytes @ 0x0
  4283  0020                     	ds	1
  4284  0021                     ??_putch:	
  4285  0021                     ??_SYSTEM_Initialize:	
  4286                           ; 1 bytes @ 0x1
  4287                           
  4288  0021                     putch@txData:	
  4289                           ; 1 bytes @ 0x1
  4290                           
  4291  0021                     I2C2_MasterTRBInsert@pflag:	
  4292                           ; 1 bytes @ 0x1
  4293                           
  4294  0021                     I2C2_MasterReadTRBBuild@length:	
  4295                           ; 1 bytes @ 0x1
  4296                           
  4297  0021                     I2C2_MasterWriteTRBBuild@length:	
  4298                           ; 1 bytes @ 0x1
  4299                           
  4300                           
  4301                           ; 1 bytes @ 0x1
  4302  0021                     	ds	1
  4303  0022                     ??_I2C2_MasterTRBInsert:	
  4304  0022                     ?_cputs:	
  4305                           ; 1 bytes @ 0x2
  4306                           
  4307  0022                     I2C2_MasterReadTRBBuild@address:	
  4308                           ; 1 bytes @ 0x2
  4309                           
  4310  0022                     I2C2_MasterWriteTRBBuild@address:	
  4311                           ; 2 bytes @ 0x2
  4312                           
  4313  0022                     ___wmul@multiplicand:	
  4314                           ; 2 bytes @ 0x2
  4315                           
  4316  0022                     ___lwdiv@dividend:	
  4317                           ; 2 bytes @ 0x2
  4318                           
  4319  0022                     cputs@s:	
  4320                           ; 2 bytes @ 0x2
  4321                           
  4322                           
  4323                           ; 2 bytes @ 0x2
  4324  0022                     	ds	1
  4325  0023                     I2C2_MasterTRBInsert@count:	
  4326                           
  4327                           ; 1 bytes @ 0x3
  4328  0023                     	ds	1
  4329  0024                     ??_I2C2_MasterWriteTRBBuild:	
  4330  0024                     ??_I2C2_MasterReadTRBBuild:	
  4331                           ; 1 bytes @ 0x4
  4332                           
  4333  0024                     ??_cputs:	
  4334                           ; 1 bytes @ 0x4
  4335                           
  4336  0024                     ??___wmul:	
  4337                           ; 1 bytes @ 0x4
  4338                           
  4339  0024                     ??___lwdiv:	
  4340                           ; 1 bytes @ 0x4
  4341                           
  4342  0024                     ___wmul@product:	
  4343                           ; 1 bytes @ 0x4
  4344                           
  4345                           
  4346                           ; 2 bytes @ 0x4
  4347  0024                     	ds	1
  4348  0025                     ?_puts:	
  4349  0025                     ___lwdiv@quotient:	
  4350                           ; 2 bytes @ 0x5
  4351                           
  4352  0025                     puts@s:	
  4353                           ; 2 bytes @ 0x5
  4354                           
  4355                           
  4356                           ; 2 bytes @ 0x5
  4357  0025                     	ds	1
  4358  0026                     I2C2_MasterReadTRBBuild@ptrb:	
  4359  0026                     I2C2_MasterWriteTRBBuild@ptrb:	
  4360                           ; 1 bytes @ 0x6
  4361                           
  4362                           
  4363                           ; 1 bytes @ 0x6
  4364  0026                     	ds	1
  4365  0027                     ??_puts:	
  4366  0027                     ?_EMC1001_Read:	
  4367                           ; 1 bytes @ 0x7
  4368                           
  4369  0027                     EMC1001_Read@pData:	
  4370                           ; 1 bytes @ 0x7
  4371                           
  4372  0027                     ___lwdiv@counter:	
  4373                           ; 1 bytes @ 0x7
  4374                           
  4375                           
  4376                           ; 1 bytes @ 0x7
  4377  0027                     	ds	1
  4378  0028                     ??_EMC1001_Read:	
  4379  0028                     ?___lwmod:	
  4380                           ; 1 bytes @ 0x8
  4381                           
  4382  0028                     ___lwmod@divisor:	
  4383                           ; 2 bytes @ 0x8
  4384                           
  4385                           
  4386                           ; 2 bytes @ 0x8
  4387  0028                     	ds	2
  4388  002A                     EMC1001_Read@reg:	
  4389  002A                     ___lwmod@dividend:	
  4390                           ; 1 bytes @ 0xA
  4391                           
  4392                           
  4393                           ; 2 bytes @ 0xA
  4394  002A                     	ds	1
  4395  002B                     EMC1001_Read@status:	
  4396                           
  4397                           ; 1 bytes @ 0xB
  4398  002B                     	ds	1
  4399  002C                     ??___lwmod:	
  4400                           
  4401                           ; 1 bytes @ 0xC
  4402  002C                     	ds	1
  4403  002D                     ___lwmod@counter:	
  4404                           
  4405                           ; 1 bytes @ 0xD
  4406  002D                     	ds	1
  4407  002E                     ?_printf:	
  4408  002E                     printf@f:	
  4409                           ; 2 bytes @ 0xE
  4410                           
  4411                           
  4412                           ; 2 bytes @ 0xE
  4413  002E                     	ds	6
  4414  0034                     ??_printf:	
  4415                           
  4416                           ; 1 bytes @ 0x14
  4417  0034                     	ds	4
  4418  0038                     printf@idx:	
  4419                           
  4420                           ; 1 bytes @ 0x18
  4421  0038                     	ds	1
  4422  0039                     _printf$662:	
  4423                           
  4424                           ; 2 bytes @ 0x19
  4425  0039                     	ds	2
  4426  003B                     printf@prec:	
  4427                           
  4428                           ; 1 bytes @ 0x1B
  4429  003B                     	ds	1
  4430  003C                     printf@cp:	
  4431                           
  4432                           ; 2 bytes @ 0x1C
  4433  003C                     	ds	2
  4434  003E                     printf@ap:	
  4435                           
  4436                           ; 1 bytes @ 0x1E
  4437  003E                     	ds	1
  4438  003F                     printf@flag:	
  4439                           
  4440                           ; 1 bytes @ 0x1F
  4441  003F                     	ds	1
  4442  0040                     printf@val:	
  4443                           
  4444                           ; 2 bytes @ 0x20
  4445  0040                     	ds	2
  4446  0042                     printf@c:	
  4447                           
  4448                           ; 1 bytes @ 0x22
  4449  0042                     	ds	1
  4450  0043                     ??_EMC1001_PrintInfo:	
  4451  0043                     ??_EMC1001_PrintTemp:	
  4452                           ; 1 bytes @ 0x23
  4453                           
  4454                           
  4455                           ; 1 bytes @ 0x23
  4456  0043                     	ds	2
  4457  0045                     EMC1001_PrintTemp@temp:	
  4458  0045                     _EMC1001_PrintInfo$613:	
  4459                           ; 1 bytes @ 0x25
  4460                           
  4461                           
  4462                           ; 2 bytes @ 0x25
  4463  0045                     	ds	1
  4464  0046                     EMC1001_PrintTemp@templo:	
  4465                           
  4466                           ; 1 bytes @ 0x26
  4467  0046                     	ds	1
  4468  0047                     EMC1001_PrintInfo@temp:	
  4469                           
  4470                           ; 1 bytes @ 0x27
  4471  0047                     	ds	1
  4472  0048                     EMC1001_PrintInfo@templo:	
  4473                           
  4474                           ; 1 bytes @ 0x28
  4475  0048                     	ds	1
  4476  0049                     EMC1001_PrintInfo@data:	
  4477                           
  4478                           ; 1 bytes @ 0x29
  4479  0049                     	ds	1
  4480  004A                     ??_main:	
  4481                           
  4482                           ; 1 bytes @ 0x2A
  4483  004A                     	ds	2
  4484                           
  4485                           	psect	maintext
  4486  0700                     __pmaintext:	
  4487 ;;
  4488 ;;Main: autosize = 0, tempsize = 2, incstack = 0, save=0
  4489 ;;
  4490 ;; *************** function _main *****************
  4491 ;; Defined at:
  4492 ;;		line 6 in file "main.c"
  4493 ;; Parameters:    Size  Location     Type
  4494 ;;		None
  4495 ;; Auto vars:     Size  Location     Type
  4496 ;;		None
  4497 ;; Return value:  Size  Location     Type
  4498 ;;                  1    wreg      void 
  4499 ;; Registers used:
  4500 ;;		wreg, fsr0l, fsr0h, fsr1l, fsr1h, status,2, status,0, pclath, cstack
  4501 ;; Tracked objects:
  4502 ;;		On entry : B1F/0
  4503 ;;		On exit  : 0/0
  4504 ;;		Unchanged: 0/0
  4505 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
  4506 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  4507 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  4508 ;;      Temps:          0       2       0       0       0       0       0       0       0       0       0       0       
      +0       0
  4509 ;;      Totals:         0       2       0       0       0       0       0       0       0       0       0       0       
      +0       0
  4510 ;;Total ram usage:        2 bytes
  4511 ;; Hardware stack levels required when called:    8
  4512 ;; This function calls:
  4513 ;;		_EMC1001_PrintInfo
  4514 ;;		_EMC1001_PrintTemp
  4515 ;;		_SYSTEM_Initialize
  4516 ;;		_printf
  4517 ;; This function is called by:
  4518 ;;		Startup code after reset
  4519 ;; This function uses a non-reentrant model
  4520 ;;
  4521                           
  4522                           
  4523                           ;psect for function _main
  4524  0700                     _main:	
  4525                           
  4526                           ;main.c: 9: SYSTEM_Initialize();
  4527                           
  4528                           ;incstack = 0
  4529                           ; Regs used in _main: [wreg-fsr1h+status,2+status,0+pclath+cstack]
  4530  0700  3187  27CE  3187   	fcall	_SYSTEM_Initialize
  4531                           
  4532                           ;main.c: 10: (INTCONbits.GIE = 1);
  4533  0703  178B               	bsf	11,7	;volatile
  4534                           
  4535                           ;main.c: 11: (INTCONbits.PEIE = 1);
  4536  0704  170B               	bsf	11,6	;volatile
  4537  0705                     l2259:	
  4538                           ;main.c: 13: while (1)
  4539                           
  4540                           
  4541                           ;main.c: 14: {
  4542                           ;main.c: 15: printf("\x0C");
  4543  0705  302B               	movlw	low (STR_1| (0+32768))
  4544  0706  0020               	movlb	0	; select bank0
  4545  0707  00AE               	movwf	printf@f
  4546  0708  3084               	movlw	high (STR_1| (0+32768))
  4547  0709  00AF               	movwf	printf@f+1
  4548  070A  3180  202E  3187   	fcall	_printf
  4549                           
  4550                           ;main.c: 16: EMC1001_PrintInfo();
  4551  070D  3181  218F  3187   	fcall	_EMC1001_PrintInfo
  4552                           
  4553                           ;main.c: 17: EMC1001_PrintTemp();
  4554  0710  3185  2567  3187   	fcall	_EMC1001_PrintTemp
  4555                           
  4556                           ;main.c: 18: _delay((unsigned long)((1000)*(1000000/4000.0)));
  4557  0713  3002               	movlw	2
  4558  0714  0020               	movlb	0	; select bank0
  4559  0715  00CB               	movwf	??_main+1
  4560  0716  3045               	movlw	69
  4561  0717  00CA               	movwf	??_main
  4562  0718  30A9               	movlw	169
  4563  0719                     u2107:	
  4564  0719  0B89               	decfsz	9,f
  4565  071A  2F19               	goto	u2107
  4566  071B  0BCA               	decfsz	??_main,f
  4567  071C  2F19               	goto	u2107
  4568  071D  0BCB               	decfsz	??_main+1,f
  4569  071E  2F19               	goto	u2107
  4570  071F  3200               	nop2
  4571  0720  2F05               	goto	l2259
  4572  0721                     __end_of_main:	
  4573                           
  4574                           	psect	text1
  4575  07CE                     __ptext1:	
  4576 ;; *************** function _SYSTEM_Initialize *****************
  4577 ;; Defined at:
  4578 ;;		line 82 in file "mcc_generated_files/mcc.c"
  4579 ;; Parameters:    Size  Location     Type
  4580 ;;		None
  4581 ;; Auto vars:     Size  Location     Type
  4582 ;;		None
  4583 ;; Return value:  Size  Location     Type
  4584 ;;                  1    wreg      void 
  4585 ;; Registers used:
  4586 ;;		wreg, status,2, status,0, pclath, cstack
  4587 ;; Tracked objects:
  4588 ;;		On entry : 0/0
  4589 ;;		On exit  : 0/0
  4590 ;;		Unchanged: 0/0
  4591 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
  4592 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  4593 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  4594 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  4595 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  4596 ;;Total ram usage:        0 bytes
  4597 ;; Hardware stack levels used:    1
  4598 ;; Hardware stack levels required when called:    4
  4599 ;; This function calls:
  4600 ;;		_EUSART_Initialize
  4601 ;;		_I2C2_Initialize
  4602 ;;		_OSCILLATOR_Initialize
  4603 ;;		_PIN_MANAGER_Initialize
  4604 ;; This function is called by:
  4605 ;;		_main
  4606 ;; This function uses a non-reentrant model
  4607 ;;
  4608                           
  4609                           
  4610                           ;psect for function _SYSTEM_Initialize
  4611  07CE                     _SYSTEM_Initialize:	
  4612                           
  4613                           ;mcc.c: 85: PIN_MANAGER_Initialize();
  4614                           
  4615                           ;incstack = 0
  4616                           ; Regs used in _SYSTEM_Initialize: [wreg+status,2+status,0+pclath+cstack]
  4617  07CE  3185  25AE  3187   	fcall	_PIN_MANAGER_Initialize
  4618                           
  4619                           ;mcc.c: 86: OSCILLATOR_Initialize();
  4620  07D1  318F  27F7  3187   	fcall	_OSCILLATOR_Initialize
  4621                           
  4622                           ;mcc.c: 87: I2C2_Initialize();
  4623  07D4  3187  275D  3187   	fcall	_I2C2_Initialize
  4624                           
  4625                           ;mcc.c: 88: EUSART_Initialize();
  4626  07D7  3187  27E6         	fcall	_EUSART_Initialize
  4627  07D9  0008               	return
  4628  07DA                     __end_of_SYSTEM_Initialize:	
  4629                           
  4630                           	psect	text2
  4631  05AE                     __ptext2:	
  4632 ;; *************** function _PIN_MANAGER_Initialize *****************
  4633 ;; Defined at:
  4634 ;;		line 50 in file "mcc_generated_files/pin_manager.c"
  4635 ;; Parameters:    Size  Location     Type
  4636 ;;		None
  4637 ;; Auto vars:     Size  Location     Type
  4638 ;;  state           1    0[BANK0 ] unsigned char 
  4639 ;; Return value:  Size  Location     Type
  4640 ;;                  1    wreg      void 
  4641 ;; Registers used:
  4642 ;;		wreg, status,2, status,0
  4643 ;; Tracked objects:
  4644 ;;		On entry : 0/0
  4645 ;;		On exit  : 0/0
  4646 ;;		Unchanged: 0/0
  4647 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
  4648 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  4649 ;;      Locals:         0       1       0       0       0       0       0       0       0       0       0       0       
      +0       0
  4650 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  4651 ;;      Totals:         0       1       0       0       0       0       0       0       0       0       0       0       
      +0       0
  4652 ;;Total ram usage:        1 bytes
  4653 ;; Hardware stack levels used:    1
  4654 ;; Hardware stack levels required when called:    3
  4655 ;; This function calls:
  4656 ;;		Nothing
  4657 ;; This function is called by:
  4658 ;;		_SYSTEM_Initialize
  4659 ;; This function uses a non-reentrant model
  4660 ;;
  4661                           
  4662                           
  4663                           ;psect for function _PIN_MANAGER_Initialize
  4664  05AE                     _PIN_MANAGER_Initialize:	
  4665                           
  4666                           ;pin_manager.c: 52: LATB = 0x0;
  4667                           
  4668                           ;incstack = 0
  4669                           ; Regs used in _PIN_MANAGER_Initialize: [wreg+status,2+status,0]
  4670  05AE  0020               	movlb	0	; select bank0
  4671  05AF  0197               	clrf	23	;volatile
  4672                           
  4673                           ;pin_manager.c: 53: WPUE = 0x8;
  4674  05B0  3008               	movlw	8
  4675  05B1  003E               	movlb	30	; select bank30
  4676  05B2  00E5               	movwf	101	;volatile
  4677                           
  4678                           ;pin_manager.c: 54: LATA = 0x0;
  4679  05B3  0020               	movlb	0	; select bank0
  4680  05B4  0196               	clrf	22	;volatile
  4681                           
  4682                           ;pin_manager.c: 55: LATC = 0x1;
  4683  05B5  3001               	movlw	1
  4684  05B6  0098               	movwf	24	;volatile
  4685                           
  4686                           ;pin_manager.c: 56: WPUA = 0xF0;
  4687  05B7  30F0               	movlw	240
  4688  05B8  003E               	movlb	30	; select bank30
  4689  05B9  00B9               	movwf	57	;volatile
  4690                           
  4691                           ;pin_manager.c: 57: WPUB = 0xFF;
  4692  05BA  30FF               	movlw	255
  4693  05BB  00C4               	movwf	68	;volatile
  4694                           
  4695                           ;pin_manager.c: 58: WPUC = 0xE7;
  4696  05BC  30E7               	movlw	231
  4697  05BD  00CF               	movwf	79	;volatile
  4698                           
  4699                           ;pin_manager.c: 59: ANSELA = 0xFF;
  4700  05BE  30FF               	movlw	255
  4701  05BF  00B8               	movwf	56	;volatile
  4702                           
  4703                           ;pin_manager.c: 60: ANSELB = 0xFF;
  4704  05C0  30FF               	movlw	255
  4705  05C1  00C3               	movwf	67	;volatile
  4706                           
  4707                           ;pin_manager.c: 61: ANSELC = 0xE7;
  4708  05C2  30E7               	movlw	231
  4709  05C3  00CE               	movwf	78	;volatile
  4710                           
  4711                           ;pin_manager.c: 62: TRISB = 0xFF;
  4712  05C4  30FF               	movlw	255
  4713  05C5  0020               	movlb	0	; select bank0
  4714  05C6  0092               	movwf	18	;volatile
  4715                           
  4716                           ;pin_manager.c: 63: TRISC = 0xFE;
  4717  05C7  30FE               	movlw	254
  4718  05C8  0093               	movwf	19	;volatile
  4719                           
  4720                           ;pin_manager.c: 64: TRISA = 0xF0;
  4721  05C9  30F0               	movlw	240
  4722  05CA  0091               	movwf	17	;volatile
  4723                           
  4724                           ;pin_manager.c: 69: bool state = GIE;
  4725  05CB  3000               	movlw	0
  4726  05CC  1B8B               	btfsc	11,7	;volatile
  4727  05CD  3001               	movlw	1
  4728  05CE  00A0               	movwf	PIN_MANAGER_Initialize@state
  4729                           
  4730                           ;pin_manager.c: 70: GIE = 0;
  4731  05CF  138B               	bcf	11,7	;volatile
  4732                           
  4733                           ;pin_manager.c: 71: PPSLOCK = 0x55;
  4734  05D0  3055               	movlw	85
  4735  05D1  003D               	movlb	29	; select bank29
  4736  05D2  008F               	movwf	15	;volatile
  4737                           
  4738                           ;pin_manager.c: 72: PPSLOCK = 0xAA;
  4739  05D3  30AA               	movlw	170
  4740  05D4  008F               	movwf	15	;volatile
  4741                           
  4742                           ;pin_manager.c: 73: PPSLOCKbits.PPSLOCKED = 0x00;
  4743  05D5  100F               	bcf	15,0	;volatile
  4744                           
  4745                           ;pin_manager.c: 75: RC0PPS = 0x10;
  4746  05D6  3010               	movlw	16
  4747  05D7  003E               	movlb	30	; select bank30
  4748  05D8  00A0               	movwf	32	;volatile
  4749                           
  4750                           ;pin_manager.c: 76: RC3PPS = 0x17;
  4751  05D9  3017               	movlw	23
  4752  05DA  00A3               	movwf	35	;volatile
  4753                           
  4754                           ;pin_manager.c: 77: SSP2DATPPSbits.SSP2DATPPS = 0x13;
  4755  05DB  003D               	movlb	29	; select bank29
  4756  05DC  0849               	movf	73,w	;volatile
  4757  05DD  39E0               	andlw	-32
  4758  05DE  3813               	iorlw	19
  4759  05DF  00C9               	movwf	73	;volatile
  4760                           
  4761                           ;pin_manager.c: 78: SSP2CLKPPSbits.SSP2CLKPPS = 0x14;
  4762  05E0  0848               	movf	72,w	;volatile
  4763  05E1  39E0               	andlw	-32
  4764  05E2  3814               	iorlw	20
  4765  05E3  00C8               	movwf	72	;volatile
  4766                           
  4767                           ;pin_manager.c: 79: RC4PPS = 0x16;
  4768  05E4  3016               	movlw	22
  4769  05E5  003E               	movlb	30	; select bank30
  4770  05E6  00A4               	movwf	36	;volatile
  4771                           
  4772                           ;pin_manager.c: 81: PPSLOCK = 0x55;
  4773  05E7  3055               	movlw	85
  4774  05E8  003D               	movlb	29	; select bank29
  4775  05E9  008F               	movwf	15	;volatile
  4776                           
  4777                           ;pin_manager.c: 82: PPSLOCK = 0xAA;
  4778  05EA  30AA               	movlw	170
  4779  05EB  008F               	movwf	15	;volatile
  4780                           
  4781                           ;pin_manager.c: 83: PPSLOCKbits.PPSLOCKED = 0x01;
  4782  05EC  140F               	bsf	15,0	;volatile
  4783                           
  4784                           ;pin_manager.c: 85: GIE = state;
  4785  05ED  0020               	movlb	0	; select bank0
  4786  05EE  1C20               	btfss	PIN_MANAGER_Initialize@state,0
  4787  05EF  2DF2               	goto	u1730
  4788  05F0  178B               	bsf	11,7	;volatile
  4789  05F1  0008               	return
  4790  05F2                     u1730:	
  4791  05F2  138B               	bcf	11,7	;volatile
  4792  05F3  0008               	return
  4793  05F4                     __end_of_PIN_MANAGER_Initialize:	
  4794                           
  4795                           	psect	text3
  4796  0FF7                     __ptext3:	
  4797 ;; *************** function _OSCILLATOR_Initialize *****************
  4798 ;; Defined at:
  4799 ;;		line 91 in file "mcc_generated_files/mcc.c"
  4800 ;; Parameters:    Size  Location     Type
  4801 ;;		None
  4802 ;; Auto vars:     Size  Location     Type
  4803 ;;		None
  4804 ;; Return value:  Size  Location     Type
  4805 ;;                  1    wreg      void 
  4806 ;; Registers used:
  4807 ;;		wreg, status,2
  4808 ;; Tracked objects:
  4809 ;;		On entry : 0/0
  4810 ;;		On exit  : 0/0
  4811 ;;		Unchanged: 0/0
  4812 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
  4813 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  4814 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  4815 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  4816 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  4817 ;;Total ram usage:        0 bytes
  4818 ;; Hardware stack levels used:    1
  4819 ;; Hardware stack levels required when called:    3
  4820 ;; This function calls:
  4821 ;;		Nothing
  4822 ;; This function is called by:
  4823 ;;		_SYSTEM_Initialize
  4824 ;; This function uses a non-reentrant model
  4825 ;;
  4826                           
  4827                           
  4828                           ;psect for function _OSCILLATOR_Initialize
  4829  0FF7                     _OSCILLATOR_Initialize:	
  4830                           
  4831                           ;mcc.c: 94: OSCCON1 = 0x62;
  4832                           
  4833                           ;incstack = 0
  4834                           ; Regs used in _OSCILLATOR_Initialize: [wreg+status,2]
  4835  0FF7  3062               	movlw	98
  4836  0FF8  0031               	movlb	17	; select bank17
  4837  0FF9  008D               	movwf	13	;volatile
  4838                           
  4839                           ;mcc.c: 96: OSCCON3 = 0x00;
  4840  0FFA  018F               	clrf	15	;volatile
  4841                           
  4842                           ;mcc.c: 98: OSCEN = 0x00;
  4843  0FFB  0191               	clrf	17	;volatile
  4844                           
  4845                           ;mcc.c: 100: OSCFRQ = 0x02;
  4846  0FFC  3002               	movlw	2
  4847  0FFD  0093               	movwf	19	;volatile
  4848                           
  4849                           ;mcc.c: 102: OSCTUNE = 0x00;
  4850  0FFE  0192               	clrf	18	;volatile
  4851  0FFF  0008               	return
  4852  1000                     __end_of_OSCILLATOR_Initialize:	
  4853                           
  4854                           	psect	text4
  4855  075D                     __ptext4:	
  4856 ;; *************** function _I2C2_Initialize *****************
  4857 ;; Defined at:
  4858 ;;		line 198 in file "mcc_generated_files/i2c2.c"
  4859 ;; Parameters:    Size  Location     Type
  4860 ;;		None
  4861 ;; Auto vars:     Size  Location     Type
  4862 ;;		None
  4863 ;; Return value:  Size  Location     Type
  4864 ;;                  1    wreg      void 
  4865 ;; Registers used:
  4866 ;;		wreg, status,2
  4867 ;; Tracked objects:
  4868 ;;		On entry : 0/0
  4869 ;;		On exit  : 0/0
  4870 ;;		Unchanged: 0/0
  4871 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
  4872 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  4873 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  4874 ;;      Temps:          0       1       0       0       0       0       0       0       0       0       0       0       
      +0       0
  4875 ;;      Totals:         0       1       0       0       0       0       0       0       0       0       0       0       
      +0       0
  4876 ;;Total ram usage:        1 bytes
  4877 ;; Hardware stack levels used:    1
  4878 ;; Hardware stack levels required when called:    3
  4879 ;; This function calls:
  4880 ;;		Nothing
  4881 ;; This function is called by:
  4882 ;;		_SYSTEM_Initialize
  4883 ;; This function uses a non-reentrant model
  4884 ;;
  4885                           
  4886                           
  4887                           ;psect for function _I2C2_Initialize
  4888  075D                     _I2C2_Initialize:	
  4889                           
  4890                           ;i2c2.c: 200: i2c2_object.pTrHead = i2c2_tr_queue;
  4891                           
  4892                           ;incstack = 0
  4893                           ; Regs used in _I2C2_Initialize: [wreg+status,2]
  4894  075D  3062               	movlw	(low (_i2c2_tr_queue| 0))& (0+255)
  4895  075E  0020               	movlb	0	; select bank0
  4896  075F  00A0               	movwf	??_I2C2_Initialize
  4897  0760  0820               	movf	??_I2C2_Initialize,w
  4898  0761  00CD               	movwf	low ((_i2c2_object| 0+1))
  4899                           
  4900                           ;i2c2.c: 201: i2c2_object.pTrTail = i2c2_tr_queue;
  4901  0762  3062               	movlw	(low (_i2c2_tr_queue| 0))& (0+255)
  4902  0763  00A0               	movwf	??_I2C2_Initialize
  4903  0764  0820               	movf	??_I2C2_Initialize,w
  4904  0765  00CC               	movwf	_i2c2_object
  4905                           
  4906                           ;i2c2.c: 202: i2c2_object.trStatus.s.empty = 1;
  4907  0766  14CE               	bsf	_i2c2_object+2,1
  4908                           
  4909                           ;i2c2.c: 203: i2c2_object.trStatus.s.full = 0;
  4910  0767  104E               	bcf	_i2c2_object+2,0
  4911                           
  4912                           ;i2c2.c: 205: i2c2_object.i2cErrors = 0;
  4913  0768  01D0               	clrf	_i2c2_object+4
  4914                           
  4915                           ;i2c2.c: 208: SSP2STAT = 0x80;
  4916  0769  3080               	movlw	128
  4917  076A  0023               	movlb	3	; select bank3
  4918  076B  0099               	movwf	25	;volatile
  4919                           
  4920                           ;i2c2.c: 210: SSP2CON1 = 0x28;
  4921  076C  3028               	movlw	40
  4922  076D  009A               	movwf	26	;volatile
  4923                           
  4924                           ;i2c2.c: 212: SSP2CON3 = 0x00;
  4925  076E  019C               	clrf	28	;volatile
  4926                           
  4927                           ;i2c2.c: 214: SSP2ADD = 0x04;
  4928  076F  3004               	movlw	4
  4929  0770  0097               	movwf	23	;volatile
  4930                           
  4931                           ;i2c2.c: 218: PIR3bits.SSP2IF = 0;
  4932  0771  002E               	movlb	14	; select bank14
  4933  0772  110F               	bcf	15,2	;volatile
  4934                           
  4935                           ;i2c2.c: 220: PIE3bits.SSP2IE = 1;
  4936  0773  1519               	bsf	25,2	;volatile
  4937  0774  0008               	return
  4938  0775                     __end_of_I2C2_Initialize:	
  4939                           
  4940                           	psect	text5
  4941  07E6                     __ptext5:	
  4942 ;; *************** function _EUSART_Initialize *****************
  4943 ;; Defined at:
  4944 ;;		line 55 in file "mcc_generated_files/eusart.c"
  4945 ;; Parameters:    Size  Location     Type
  4946 ;;		None
  4947 ;; Auto vars:     Size  Location     Type
  4948 ;;		None
  4949 ;; Return value:  Size  Location     Type
  4950 ;;                  1    wreg      void 
  4951 ;; Registers used:
  4952 ;;		wreg, status,2
  4953 ;; Tracked objects:
  4954 ;;		On entry : 0/0
  4955 ;;		On exit  : 0/0
  4956 ;;		Unchanged: 0/0
  4957 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
  4958 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  4959 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  4960 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  4961 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  4962 ;;Total ram usage:        0 bytes
  4963 ;; Hardware stack levels used:    1
  4964 ;; Hardware stack levels required when called:    3
  4965 ;; This function calls:
  4966 ;;		Nothing
  4967 ;; This function is called by:
  4968 ;;		_SYSTEM_Initialize
  4969 ;; This function uses a non-reentrant model
  4970 ;;
  4971                           
  4972                           
  4973                           ;psect for function _EUSART_Initialize
  4974  07E6                     _EUSART_Initialize:	
  4975                           
  4976                           ;eusart.c: 60: BAUD1CON = 0x08;
  4977                           
  4978                           ;incstack = 0
  4979                           ; Regs used in _EUSART_Initialize: [wreg+status,2]
  4980  07E6  3008               	movlw	8
  4981  07E7  0022               	movlb	2	; select bank2
  4982  07E8  009F               	movwf	31	;volatile
  4983                           
  4984                           ;eusart.c: 63: RC1STA = 0x80;
  4985  07E9  3080               	movlw	128
  4986  07EA  009D               	movwf	29	;volatile
  4987                           
  4988                           ;eusart.c: 66: TX1STA = 0x24;
  4989  07EB  3024               	movlw	36
  4990  07EC  009E               	movwf	30	;volatile
  4991                           
  4992                           ;eusart.c: 69: SP1BRGL = 0x19;
  4993  07ED  3019               	movlw	25
  4994  07EE  009B               	movwf	27	;volatile
  4995                           
  4996                           ;eusart.c: 72: SP1BRGH = 0x00;
  4997  07EF  019C               	clrf	28	;volatile
  4998  07F0  0008               	return
  4999  07F1                     __end_of_EUSART_Initialize:	
  5000                           
  5001                           	psect	text6
  5002  0567                     __ptext6:	
  5003 ;; *************** function _EMC1001_PrintTemp *****************
  5004 ;; Defined at:
  5005 ;;		line 59 in file "EMC1001.c"
  5006 ;; Parameters:    Size  Location     Type
  5007 ;;		None
  5008 ;; Auto vars:     Size  Location     Type
  5009 ;;  templo          1   38[BANK0 ] unsigned char 
  5010 ;;  temp            1   37[BANK0 ] char 
  5011 ;; Return value:  Size  Location     Type
  5012 ;;                  1    wreg      void 
  5013 ;; Registers used:
  5014 ;;		wreg, fsr0l, fsr0h, fsr1l, fsr1h, status,2, status,0, pclath, cstack
  5015 ;; Tracked objects:
  5016 ;;		On entry : 0/0
  5017 ;;		On exit  : 0/0
  5018 ;;		Unchanged: 0/0
  5019 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
  5020 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  5021 ;;      Locals:         0       2       0       0       0       0       0       0       0       0       0       0       
      +0       0
  5022 ;;      Temps:          0       2       0       0       0       0       0       0       0       0       0       0       
      +0       0
  5023 ;;      Totals:         0       4       0       0       0       0       0       0       0       0       0       0       
      +0       0
  5024 ;;Total ram usage:        4 bytes
  5025 ;; Hardware stack levels used:    1
  5026 ;; Hardware stack levels required when called:    6
  5027 ;; This function calls:
  5028 ;;		_EMC1001_Read
  5029 ;;		___wmul
  5030 ;;		_printf
  5031 ;; This function is called by:
  5032 ;;		_main
  5033 ;; This function uses a non-reentrant model
  5034 ;;
  5035                           
  5036                           
  5037                           ;psect for function _EMC1001_PrintTemp
  5038  0567                     _EMC1001_PrintTemp:	
  5039                           
  5040                           ;EMC1001.c: 61: int8_t temp;
  5041                           ;EMC1001.c: 62: uint8_t templo;
  5042                           ;EMC1001.c: 64: if (EMC1001_Read(0x00, (uint8_t*)&temp)) {
  5043                           
  5044                           ;incstack = 0
  5045                           ; Regs used in _EMC1001_PrintTemp: [wreg-fsr1h+status,2+status,0+pclath+cstack]
  5046  0567  3045               	movlw	(low (EMC1001_PrintTemp@temp| 0))& (0+255)
  5047  0568  0020               	movlb	0	; select bank0
  5048  0569  00C3               	movwf	??_EMC1001_PrintTemp
  5049  056A  0843               	movf	??_EMC1001_PrintTemp,w
  5050  056B  00A7               	movwf	EMC1001_Read@pData
  5051  056C  3000               	movlw	0
  5052  056D  3186  263A  3185   	fcall	_EMC1001_Read
  5053  0570  3A00               	xorlw	0
  5054  0571  1903               	skipnz
  5055  0572  0008               	return
  5056                           
  5057                           ;EMC1001.c: 65: EMC1001_Read(0x02, &templo);
  5058  0573  3046               	movlw	(low (EMC1001_PrintTemp@templo| 0))& (0+255)
  5059  0574  0020               	movlb	0	; select bank0
  5060  0575  00C3               	movwf	??_EMC1001_PrintTemp
  5061  0576  0843               	movf	??_EMC1001_PrintTemp,w
  5062  0577  00A7               	movwf	EMC1001_Read@pData
  5063  0578  3002               	movlw	2
  5064  0579  3186  263A  3185   	fcall	_EMC1001_Read
  5065                           
  5066                           ;EMC1001.c: 66: templo = templo >> 6;
  5067  057C  0020               	movlb	0	; select bank0
  5068  057D  0846               	movf	EMC1001_PrintTemp@templo,w
  5069  057E  00C3               	movwf	??_EMC1001_PrintTemp
  5070  057F  3006               	movlw	6
  5071  0580                     u2085:	
  5072  0580  36C3               	lsrf	??_EMC1001_PrintTemp,f
  5073  0581  0B89               	decfsz	9,f
  5074  0582  2D80               	goto	u2085
  5075  0583  0843               	movf	??_EMC1001_PrintTemp,w
  5076  0584  00C4               	movwf	??_EMC1001_PrintTemp+1
  5077  0585  0844               	movf	??_EMC1001_PrintTemp+1,w
  5078  0586  00C6               	movwf	EMC1001_PrintTemp@templo
  5079                           
  5080                           ;EMC1001.c: 67: if (temp < 0) templo = 3-templo;
  5081  0587  1FC5               	btfss	EMC1001_PrintTemp@temp,7
  5082  0588  2D8F               	goto	l2251
  5083  0589  0346               	decf	EMC1001_PrintTemp@templo,w
  5084  058A  3AFF               	xorlw	255
  5085  058B  3E03               	addlw	3
  5086  058C  00C3               	movwf	??_EMC1001_PrintTemp
  5087  058D  0843               	movf	??_EMC1001_PrintTemp,w
  5088  058E  00C6               	movwf	EMC1001_PrintTemp@templo
  5089  058F                     l2251:	
  5090                           
  5091                           ;EMC1001.c: 68: printf("Current Temperature:\t%d.%d C\n", temp, templo*25);
  5092  058F  305D               	movlw	low (STR_15| (0+32768))
  5093  0590  00AE               	movwf	printf@f
  5094  0591  3083               	movlw	high (STR_15| (0+32768))
  5095  0592  00AF               	movwf	printf@f+1
  5096  0593  0845               	movf	EMC1001_PrintTemp@temp,w
  5097  0594  00B0               	movwf	?_printf+2
  5098  0595  01B1               	clrf	?_printf+3
  5099  0596  1BB0               	btfsc	?_printf+2,7
  5100  0597  03B1               	decf	?_printf+3,f
  5101  0598  0846               	movf	EMC1001_PrintTemp@templo,w
  5102  0599  00C3               	movwf	??_EMC1001_PrintTemp
  5103  059A  01C4               	clrf	??_EMC1001_PrintTemp+1
  5104  059B  0843               	movf	??_EMC1001_PrintTemp,w
  5105  059C  00A0               	movwf	___wmul@multiplier
  5106  059D  0844               	movf	??_EMC1001_PrintTemp+1,w
  5107  059E  00A1               	movwf	___wmul@multiplier+1
  5108  059F  3019               	movlw	25
  5109  05A0  00A2               	movwf	___wmul@multiplicand
  5110  05A1  3000               	movlw	0
  5111  05A2  00A3               	movwf	___wmul@multiplicand+1
  5112  05A3  3187  2741  3185   	fcall	___wmul
  5113  05A6  0020               	movlb	0	; select bank0
  5114  05A7  0821               	movf	?___wmul+1,w
  5115  05A8  00B3               	movwf	?_printf+5
  5116  05A9  0820               	movf	?___wmul,w
  5117  05AA  00B2               	movwf	?_printf+4
  5118  05AB  3180  202E         	fcall	_printf
  5119  05AD  0008               	return
  5120  05AE                     __end_of_EMC1001_PrintTemp:	
  5121                           
  5122                           	psect	text7
  5123  018F                     __ptext7:	
  5124 ;; *************** function _EMC1001_PrintInfo *****************
  5125 ;; Defined at:
  5126 ;;		line 21 in file "EMC1001.c"
  5127 ;; Parameters:    Size  Location     Type
  5128 ;;		None
  5129 ;; Auto vars:     Size  Location     Type
  5130 ;;  data            1   41[BANK0 ] unsigned char 
  5131 ;;  templo          1   40[BANK0 ] unsigned char 
  5132 ;;  temp            1   39[BANK0 ] char 
  5133 ;; Return value:  Size  Location     Type
  5134 ;;                  1    wreg      void 
  5135 ;; Registers used:
  5136 ;;		wreg, fsr0l, fsr0h, fsr1l, fsr1h, status,2, status,0, pclath, cstack
  5137 ;; Tracked objects:
  5138 ;;		On entry : 0/0
  5139 ;;		On exit  : 0/0
  5140 ;;		Unchanged: 0/0
  5141 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
  5142 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  5143 ;;      Locals:         0       5       0       0       0       0       0       0       0       0       0       0       
      +0       0
  5144 ;;      Temps:          0       2       0       0       0       0       0       0       0       0       0       0       
      +0       0
  5145 ;;      Totals:         0       7       0       0       0       0       0       0       0       0       0       0       
      +0       0
  5146 ;;Total ram usage:        7 bytes
  5147 ;; Hardware stack levels used:    1
  5148 ;; Hardware stack levels required when called:    7
  5149 ;; This function calls:
  5150 ;;		_EMC1001_Read
  5151 ;;		___wmul
  5152 ;;		_printf
  5153 ;;		_puts
  5154 ;; This function is called by:
  5155 ;;		_main
  5156 ;; This function uses a non-reentrant model
  5157 ;;
  5158                           
  5159                           
  5160                           ;psect for function _EMC1001_PrintInfo
  5161  018F                     _EMC1001_PrintInfo:	
  5162                           
  5163                           ;EMC1001.c: 23: uint8_t data;
  5164                           ;EMC1001.c: 24: int8_t temp;
  5165                           ;EMC1001.c: 25: uint8_t templo;
  5166                           ;EMC1001.c: 27: puts("Microchip EMC1001 Temperature Sensor Demo\n");
  5167                           
  5168                           ;incstack = 0
  5169                           ; Regs used in _EMC1001_PrintInfo: [wreg-fsr1h+status,2+status,0+pclath+cstack]
  5170  018F  30F1               	movlw	low (STR_2| (0+32768))
  5171  0190  0020               	movlb	0	; select bank0
  5172  0191  00A5               	movwf	puts@s
  5173  0192  3082               	movlw	high (STR_2| (0+32768))
  5174  0193  00A6               	movwf	puts@s+1
  5175  0194  3187  27DA  3181   	fcall	_puts
  5176                           
  5177                           ;EMC1001.c: 29: if (EMC1001_Read(0xfd,&data)) printf("Product ID:\t\tEMC1001%s\n", data 
      +                          ? "-1" : "");
  5178  0197  3049               	movlw	(low (EMC1001_PrintInfo@data| 0))& (0+255)
  5179  0198  0020               	movlb	0	; select bank0
  5180  0199  00C3               	movwf	??_EMC1001_PrintInfo
  5181  019A  0843               	movf	??_EMC1001_PrintInfo,w
  5182  019B  00A7               	movwf	EMC1001_Read@pData
  5183  019C  30FD               	movlw	253
  5184  019D  3186  263A  3181   	fcall	_EMC1001_Read
  5185  01A0  3A00               	xorlw	0
  5186  01A1  1903               	skipnz
  5187  01A2  29BA               	goto	l2193
  5188  01A3  0020               	movlb	0	; select bank0
  5189  01A4  0849               	movf	EMC1001_PrintInfo@data,w
  5190  01A5  1D03               	btfss	3,2
  5191  01A6  29AB               	goto	l2189
  5192  01A7  30D9               	movlw	low ((STR_12+21)| (0+32768))
  5193  01A8  00C5               	movwf	_EMC1001_PrintInfo$613
  5194  01A9  3083               	movlw	high ((STR_12+21)| (0+32768))
  5195  01AA  29AE               	goto	L1
  5196  01AB                     l2189:	
  5197  01AB  3028               	movlw	low (STR_4| (0+32768))
  5198  01AC  00C5               	movwf	_EMC1001_PrintInfo$613
  5199  01AD  3084               	movlw	high (STR_4| (0+32768))
  5200  01AE                     L1:	
  5201  01AE  00C6               	movwf	_EMC1001_PrintInfo$613+1
  5202  01AF  3095               	movlw	low (STR_3| (0+32768))
  5203  01B0  00AE               	movwf	printf@f
  5204  01B1  3083               	movlw	high (STR_3| (0+32768))
  5205  01B2  00AF               	movwf	printf@f+1
  5206  01B3  0846               	movf	_EMC1001_PrintInfo$613+1,w
  5207  01B4  00B1               	movwf	(low ((?_printf| 0+2))+1)
  5208  01B5  0845               	movf	_EMC1001_PrintInfo$613,w
  5209  01B6  00B0               	movwf	low ((?_printf| 0+2))
  5210  01B7  3180  202E  3181   	fcall	_printf
  5211  01BA                     l2193:	
  5212                           
  5213                           ;EMC1001.c: 30: if (EMC1001_Read(0xfe,&data)) printf("Manufacturer ID:\t0x%X\n", data);
  5214  01BA  3049               	movlw	(low (EMC1001_PrintInfo@data| 0))& (0+255)
  5215  01BB  0020               	movlb	0	; select bank0
  5216  01BC  00C3               	movwf	??_EMC1001_PrintInfo
  5217  01BD  0843               	movf	??_EMC1001_PrintInfo,w
  5218  01BE  00A7               	movwf	EMC1001_Read@pData
  5219  01BF  30FE               	movlw	254
  5220  01C0  3186  263A  3181   	fcall	_EMC1001_Read
  5221  01C3  3A00               	xorlw	0
  5222  01C4  1903               	skipnz
  5223  01C5  29D5               	goto	l2197
  5224  01C6  30AD               	movlw	low (STR_6| (0+32768))
  5225  01C7  0020               	movlb	0	; select bank0
  5226  01C8  00AE               	movwf	printf@f
  5227  01C9  3083               	movlw	high (STR_6| (0+32768))
  5228  01CA  00AF               	movwf	printf@f+1
  5229  01CB  0849               	movf	EMC1001_PrintInfo@data,w
  5230  01CC  00C3               	movwf	??_EMC1001_PrintInfo
  5231  01CD  01C4               	clrf	??_EMC1001_PrintInfo+1
  5232  01CE  0843               	movf	??_EMC1001_PrintInfo,w
  5233  01CF  00B0               	movwf	?_printf+2
  5234  01D0  0844               	movf	??_EMC1001_PrintInfo+1,w
  5235  01D1  00B1               	movwf	?_printf+3
  5236  01D2  3180  202E  3181   	fcall	_printf
  5237  01D5                     l2197:	
  5238                           
  5239                           ;EMC1001.c: 31: if (EMC1001_Read(0xff,&data)) printf("Revision :\t\t%d\n", data);
  5240  01D5  3049               	movlw	(low (EMC1001_PrintInfo@data| 0))& (0+255)
  5241  01D6  0020               	movlb	0	; select bank0
  5242  01D7  00C3               	movwf	??_EMC1001_PrintInfo
  5243  01D8  0843               	movf	??_EMC1001_PrintInfo,w
  5244  01D9  00A7               	movwf	EMC1001_Read@pData
  5245  01DA  30FF               	movlw	255
  5246  01DB  3186  263A  3181   	fcall	_EMC1001_Read
  5247  01DE  3A00               	xorlw	0
  5248  01DF  1903               	skipnz
  5249  01E0  29F0               	goto	l2201
  5250  01E1  3011               	movlw	low (STR_7| (0+32768))
  5251  01E2  0020               	movlb	0	; select bank0
  5252  01E3  00AE               	movwf	printf@f
  5253  01E4  3084               	movlw	high (STR_7| (0+32768))
  5254  01E5  00AF               	movwf	printf@f+1
  5255  01E6  0849               	movf	EMC1001_PrintInfo@data,w
  5256  01E7  00C3               	movwf	??_EMC1001_PrintInfo
  5257  01E8  01C4               	clrf	??_EMC1001_PrintInfo+1
  5258  01E9  0843               	movf	??_EMC1001_PrintInfo,w
  5259  01EA  00B0               	movwf	?_printf+2
  5260  01EB  0844               	movf	??_EMC1001_PrintInfo+1,w
  5261  01EC  00B1               	movwf	?_printf+3
  5262  01ED  3180  202E  3181   	fcall	_printf
  5263  01F0                     l2201:	
  5264                           
  5265                           ;EMC1001.c: 33: puts("\n");
  5266  01F0  30D8               	movlw	low ((STR_12+20)| (0+32768))
  5267  01F1  0020               	movlb	0	; select bank0
  5268  01F2  00A5               	movwf	puts@s
  5269  01F3  3083               	movlw	high ((STR_12+20)| (0+32768))
  5270  01F4  00A6               	movwf	puts@s+1
  5271  01F5  3187  27DA  3181   	fcall	_puts
  5272                           
  5273                           ;EMC1001.c: 35: if (EMC1001_Read(0x04, &data)) printf("Conversion rate:\t%x\n", data);
  5274  01F8  3049               	movlw	(low (EMC1001_PrintInfo@data| 0))& (0+255)
  5275  01F9  0020               	movlb	0	; select bank0
  5276  01FA  00C3               	movwf	??_EMC1001_PrintInfo
  5277  01FB  0843               	movf	??_EMC1001_PrintInfo,w
  5278  01FC  00A7               	movwf	EMC1001_Read@pData
  5279  01FD  3004               	movlw	4
  5280  01FE  3186  263A  3181   	fcall	_EMC1001_Read
  5281  0201  3A00               	xorlw	0
  5282  0202  1903               	skipnz
  5283  0203  2A13               	goto	l2207
  5284  0204  30DA               	movlw	low (STR_9| (0+32768))
  5285  0205  0020               	movlb	0	; select bank0
  5286  0206  00AE               	movwf	printf@f
  5287  0207  3083               	movlw	high (STR_9| (0+32768))
  5288  0208  00AF               	movwf	printf@f+1
  5289  0209  0849               	movf	EMC1001_PrintInfo@data,w
  5290  020A  00C3               	movwf	??_EMC1001_PrintInfo
  5291  020B  01C4               	clrf	??_EMC1001_PrintInfo+1
  5292  020C  0843               	movf	??_EMC1001_PrintInfo,w
  5293  020D  00B0               	movwf	?_printf+2
  5294  020E  0844               	movf	??_EMC1001_PrintInfo+1,w
  5295  020F  00B1               	movwf	?_printf+3
  5296  0210  3180  202E  3181   	fcall	_printf
  5297  0213                     l2207:	
  5298                           
  5299                           ;EMC1001.c: 37: if (EMC1001_Read(0x05, (uint8_t*)&temp)) {
  5300  0213  3047               	movlw	(low (EMC1001_PrintInfo@temp| 0))& (0+255)
  5301  0214  0020               	movlb	0	; select bank0
  5302  0215  00C3               	movwf	??_EMC1001_PrintInfo
  5303  0216  0843               	movf	??_EMC1001_PrintInfo,w
  5304  0217  00A7               	movwf	EMC1001_Read@pData
  5305  0218  3005               	movlw	5
  5306  0219  3186  263A  3181   	fcall	_EMC1001_Read
  5307  021C  3A00               	xorlw	0
  5308  021D  1903               	skipnz
  5309  021E  2A5A               	goto	l2219
  5310                           
  5311                           ;EMC1001.c: 38: EMC1001_Read(0x06, &templo);
  5312  021F  3048               	movlw	(low (EMC1001_PrintInfo@templo| 0))& (0+255)
  5313  0220  0020               	movlb	0	; select bank0
  5314  0221  00C3               	movwf	??_EMC1001_PrintInfo
  5315  0222  0843               	movf	??_EMC1001_PrintInfo,w
  5316  0223  00A7               	movwf	EMC1001_Read@pData
  5317  0224  3006               	movlw	6
  5318  0225  3186  263A  3181   	fcall	_EMC1001_Read
  5319                           
  5320                           ;EMC1001.c: 39: templo = templo >> 6;
  5321  0228  0020               	movlb	0	; select bank0
  5322  0229  0848               	movf	EMC1001_PrintInfo@templo,w
  5323  022A  00C3               	movwf	??_EMC1001_PrintInfo
  5324  022B  3006               	movlw	6
  5325  022C                     u2005:	
  5326  022C  36C3               	lsrf	??_EMC1001_PrintInfo,f
  5327  022D  0B89               	decfsz	9,f
  5328  022E  2A2C               	goto	u2005
  5329  022F  0843               	movf	??_EMC1001_PrintInfo,w
  5330  0230  00C4               	movwf	??_EMC1001_PrintInfo+1
  5331  0231  0844               	movf	??_EMC1001_PrintInfo+1,w
  5332  0232  00C8               	movwf	EMC1001_PrintInfo@templo
  5333                           
  5334                           ;EMC1001.c: 40: if (temp < 0) templo = 3-templo;
  5335  0233  1FC7               	btfss	EMC1001_PrintInfo@temp,7
  5336  0234  2A3B               	goto	l2217
  5337  0235  0348               	decf	EMC1001_PrintInfo@templo,w
  5338  0236  3AFF               	xorlw	255
  5339  0237  3E03               	addlw	3
  5340  0238  00C3               	movwf	??_EMC1001_PrintInfo
  5341  0239  0843               	movf	??_EMC1001_PrintInfo,w
  5342  023A  00C8               	movwf	EMC1001_PrintInfo@templo
  5343  023B                     l2217:	
  5344                           
  5345                           ;EMC1001.c: 41: printf("Temperature high limit:\t%d.%d C\n", temp, templo*25);
  5346  023B  301C               	movlw	low (STR_10| (0+32768))
  5347  023C  00AE               	movwf	printf@f
  5348  023D  3083               	movlw	high (STR_10| (0+32768))
  5349  023E  00AF               	movwf	printf@f+1
  5350  023F  0847               	movf	EMC1001_PrintInfo@temp,w
  5351  0240  00B0               	movwf	?_printf+2
  5352  0241  01B1               	clrf	?_printf+3
  5353  0242  1BB0               	btfsc	?_printf+2,7
  5354  0243  03B1               	decf	?_printf+3,f
  5355  0244  0848               	movf	EMC1001_PrintInfo@templo,w
  5356  0245  00C3               	movwf	??_EMC1001_PrintInfo
  5357  0246  01C4               	clrf	??_EMC1001_PrintInfo+1
  5358  0247  0843               	movf	??_EMC1001_PrintInfo,w
  5359  0248  00A0               	movwf	___wmul@multiplier
  5360  0249  0844               	movf	??_EMC1001_PrintInfo+1,w
  5361  024A  00A1               	movwf	___wmul@multiplier+1
  5362  024B  3019               	movlw	25
  5363  024C  00A2               	movwf	___wmul@multiplicand
  5364  024D  3000               	movlw	0
  5365  024E  00A3               	movwf	___wmul@multiplicand+1
  5366  024F  3187  2741  3181   	fcall	___wmul
  5367  0252  0020               	movlb	0	; select bank0
  5368  0253  0821               	movf	?___wmul+1,w
  5369  0254  00B3               	movwf	?_printf+5
  5370  0255  0820               	movf	?___wmul,w
  5371  0256  00B2               	movwf	?_printf+4
  5372  0257  3180  202E  3181   	fcall	_printf
  5373  025A                     l2219:	
  5374                           
  5375                           ;EMC1001.c: 42: }
  5376                           ;EMC1001.c: 44: if (EMC1001_Read(0x07, (uint8_t*)&temp)) {
  5377  025A  3047               	movlw	(low (EMC1001_PrintInfo@temp| 0))& (0+255)
  5378  025B  0020               	movlb	0	; select bank0
  5379  025C  00C3               	movwf	??_EMC1001_PrintInfo
  5380  025D  0843               	movf	??_EMC1001_PrintInfo,w
  5381  025E  00A7               	movwf	EMC1001_Read@pData
  5382  025F  3007               	movlw	7
  5383  0260  3186  263A  3181   	fcall	_EMC1001_Read
  5384  0263  3A00               	xorlw	0
  5385  0264  1903               	skipnz
  5386  0265  2AA1               	goto	l2231
  5387                           
  5388                           ;EMC1001.c: 45: EMC1001_Read(0x08, &templo);
  5389  0266  3048               	movlw	(low (EMC1001_PrintInfo@templo| 0))& (0+255)
  5390  0267  0020               	movlb	0	; select bank0
  5391  0268  00C3               	movwf	??_EMC1001_PrintInfo
  5392  0269  0843               	movf	??_EMC1001_PrintInfo,w
  5393  026A  00A7               	movwf	EMC1001_Read@pData
  5394  026B  3008               	movlw	8
  5395  026C  3186  263A  3181   	fcall	_EMC1001_Read
  5396                           
  5397                           ;EMC1001.c: 46: templo = templo >> 6;
  5398  026F  0020               	movlb	0	; select bank0
  5399  0270  0848               	movf	EMC1001_PrintInfo@templo,w
  5400  0271  00C3               	movwf	??_EMC1001_PrintInfo
  5401  0272  3006               	movlw	6
  5402  0273                     u2035:	
  5403  0273  36C3               	lsrf	??_EMC1001_PrintInfo,f
  5404  0274  0B89               	decfsz	9,f
  5405  0275  2A73               	goto	u2035
  5406  0276  0843               	movf	??_EMC1001_PrintInfo,w
  5407  0277  00C4               	movwf	??_EMC1001_PrintInfo+1
  5408  0278  0844               	movf	??_EMC1001_PrintInfo+1,w
  5409  0279  00C8               	movwf	EMC1001_PrintInfo@templo
  5410                           
  5411                           ;EMC1001.c: 47: if (temp < 0) templo = 3-templo;
  5412  027A  1FC7               	btfss	EMC1001_PrintInfo@temp,7
  5413  027B  2A82               	goto	l2229
  5414  027C  0348               	decf	EMC1001_PrintInfo@templo,w
  5415  027D  3AFF               	xorlw	255
  5416  027E  3E03               	addlw	3
  5417  027F  00C3               	movwf	??_EMC1001_PrintInfo
  5418  0280  0843               	movf	??_EMC1001_PrintInfo,w
  5419  0281  00C8               	movwf	EMC1001_PrintInfo@templo
  5420  0282                     l2229:	
  5421                           
  5422                           ;EMC1001.c: 48: printf("Temperature low limit:\t%d.%d C\n", temp, templo*25);
  5423  0282  303D               	movlw	low (STR_11| (0+32768))
  5424  0283  00AE               	movwf	printf@f
  5425  0284  3083               	movlw	high (STR_11| (0+32768))
  5426  0285  00AF               	movwf	printf@f+1
  5427  0286  0847               	movf	EMC1001_PrintInfo@temp,w
  5428  0287  00B0               	movwf	?_printf+2
  5429  0288  01B1               	clrf	?_printf+3
  5430  0289  1BB0               	btfsc	?_printf+2,7
  5431  028A  03B1               	decf	?_printf+3,f
  5432  028B  0848               	movf	EMC1001_PrintInfo@templo,w
  5433  028C  00C3               	movwf	??_EMC1001_PrintInfo
  5434  028D  01C4               	clrf	??_EMC1001_PrintInfo+1
  5435  028E  0843               	movf	??_EMC1001_PrintInfo,w
  5436  028F  00A0               	movwf	___wmul@multiplier
  5437  0290  0844               	movf	??_EMC1001_PrintInfo+1,w
  5438  0291  00A1               	movwf	___wmul@multiplier+1
  5439  0292  3019               	movlw	25
  5440  0293  00A2               	movwf	___wmul@multiplicand
  5441  0294  3000               	movlw	0
  5442  0295  00A3               	movwf	___wmul@multiplicand+1
  5443  0296  3187  2741  3181   	fcall	___wmul
  5444  0299  0020               	movlb	0	; select bank0
  5445  029A  0821               	movf	?___wmul+1,w
  5446  029B  00B3               	movwf	?_printf+5
  5447  029C  0820               	movf	?___wmul,w
  5448  029D  00B2               	movwf	?_printf+4
  5449  029E  3180  202E  3181   	fcall	_printf
  5450  02A1                     l2231:	
  5451                           
  5452                           ;EMC1001.c: 49: }
  5453                           ;EMC1001.c: 52: if (EMC1001_Read(0x20, &data)) printf("Thermal limit:\t\t%d C\n", data);
  5454  02A1  3049               	movlw	(low (EMC1001_PrintInfo@data| 0))& (0+255)
  5455  02A2  0020               	movlb	0	; select bank0
  5456  02A3  00C3               	movwf	??_EMC1001_PrintInfo
  5457  02A4  0843               	movf	??_EMC1001_PrintInfo,w
  5458  02A5  00A7               	movwf	EMC1001_Read@pData
  5459  02A6  3020               	movlw	32
  5460  02A7  3186  263A  3181   	fcall	_EMC1001_Read
  5461  02AA  3A00               	xorlw	0
  5462  02AB  1903               	skipnz
  5463  02AC  2ABC               	goto	l2235
  5464  02AD  30C4               	movlw	low (STR_12| (0+32768))
  5465  02AE  0020               	movlb	0	; select bank0
  5466  02AF  00AE               	movwf	printf@f
  5467  02B0  3083               	movlw	high (STR_12| (0+32768))
  5468  02B1  00AF               	movwf	printf@f+1
  5469  02B2  0849               	movf	EMC1001_PrintInfo@data,w
  5470  02B3  00C3               	movwf	??_EMC1001_PrintInfo
  5471  02B4  01C4               	clrf	??_EMC1001_PrintInfo+1
  5472  02B5  0843               	movf	??_EMC1001_PrintInfo,w
  5473  02B6  00B0               	movwf	?_printf+2
  5474  02B7  0844               	movf	??_EMC1001_PrintInfo+1,w
  5475  02B8  00B1               	movwf	?_printf+3
  5476  02B9  3180  202E  3181   	fcall	_printf
  5477  02BC                     l2235:	
  5478                           
  5479                           ;EMC1001.c: 53: if (EMC1001_Read(0x21, &data)) printf("Thermal hysteresis:\t%d C\n", dat
      +                          a);
  5480  02BC  3049               	movlw	(low (EMC1001_PrintInfo@data| 0))& (0+255)
  5481  02BD  0020               	movlb	0	; select bank0
  5482  02BE  00C3               	movwf	??_EMC1001_PrintInfo
  5483  02BF  0843               	movf	??_EMC1001_PrintInfo,w
  5484  02C0  00A7               	movwf	EMC1001_Read@pData
  5485  02C1  3021               	movlw	33
  5486  02C2  3186  263A  3181   	fcall	_EMC1001_Read
  5487  02C5  3A00               	xorlw	0
  5488  02C6  1903               	skipnz
  5489  02C7  2AD7               	goto	l2239
  5490  02C8  307B               	movlw	low (STR_13| (0+32768))
  5491  02C9  0020               	movlb	0	; select bank0
  5492  02CA  00AE               	movwf	printf@f
  5493  02CB  3083               	movlw	high (STR_13| (0+32768))
  5494  02CC  00AF               	movwf	printf@f+1
  5495  02CD  0849               	movf	EMC1001_PrintInfo@data,w
  5496  02CE  00C3               	movwf	??_EMC1001_PrintInfo
  5497  02CF  01C4               	clrf	??_EMC1001_PrintInfo+1
  5498  02D0  0843               	movf	??_EMC1001_PrintInfo,w
  5499  02D1  00B0               	movwf	?_printf+2
  5500  02D2  0844               	movf	??_EMC1001_PrintInfo+1,w
  5501  02D3  00B1               	movwf	?_printf+3
  5502  02D4  3180  202E  3181   	fcall	_printf
  5503  02D7                     l2239:	
  5504                           
  5505                           ;EMC1001.c: 55: puts("\n");
  5506  02D7  30D8               	movlw	low ((STR_12+20)| (0+32768))
  5507  02D8  0020               	movlb	0	; select bank0
  5508  02D9  00A5               	movwf	puts@s
  5509  02DA  3083               	movlw	high ((STR_12+20)| (0+32768))
  5510  02DB  00A6               	movwf	puts@s+1
  5511  02DC  3187  27DA         	fcall	_puts
  5512  02DE  0008               	return
  5513  02DF                     __end_of_EMC1001_PrintInfo:	
  5514                           
  5515                           	psect	text8
  5516  07DA                     __ptext8:	
  5517 ;; *************** function _puts *****************
  5518 ;; Defined at:
  5519 ;;		line 8 in file "/opt/microchip/xc8/v1.41/sources/common/puts.c"
  5520 ;; Parameters:    Size  Location     Type
  5521 ;;  s               2    5[BANK0 ] PTR const unsigned char 
  5522 ;;		 -> STR_14(2), STR_8(2), STR_2(43), 
  5523 ;; Auto vars:     Size  Location     Type
  5524 ;;		None
  5525 ;; Return value:  Size  Location     Type
  5526 ;;                  2    5[BANK0 ] int 
  5527 ;; Registers used:
  5528 ;;		wreg, fsr0l, fsr0h, status,2, status,0, pclath, cstack
  5529 ;; Tracked objects:
  5530 ;;		On entry : 0/0
  5531 ;;		On exit  : 0/0
  5532 ;;		Unchanged: 0/0
  5533 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
  5534 ;;      Params:         0       2       0       0       0       0       0       0       0       0       0       0       
      +0       0
  5535 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  5536 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  5537 ;;      Totals:         0       2       0       0       0       0       0       0       0       0       0       0       
      +0       0
  5538 ;;Total ram usage:        2 bytes
  5539 ;; Hardware stack levels used:    1
  5540 ;; Hardware stack levels required when called:    6
  5541 ;; This function calls:
  5542 ;;		_cputs
  5543 ;;		_putch
  5544 ;; This function is called by:
  5545 ;;		_EMC1001_PrintInfo
  5546 ;; This function uses a non-reentrant model
  5547 ;;
  5548                           
  5549                           
  5550                           ;psect for function _puts
  5551  07DA                     _puts:	
  5552                           
  5553                           ;incstack = 0
  5554                           ; Regs used in _puts: [wreg-fsr0h+status,2+status,0+pclath+cstack]
  5555  07DA  0020               	movlb	0	; select bank0
  5556  07DB  0826               	movf	puts@s+1,w
  5557  07DC  00A3               	movwf	cputs@s+1
  5558  07DD  0825               	movf	puts@s,w
  5559  07DE  00A2               	movwf	cputs@s
  5560  07DF  3187  27A5  3187   	fcall	_cputs
  5561  07E2  300A               	movlw	10
  5562  07E3  318F  27EB         	fcall	_putch
  5563  07E5  0008               	return
  5564  07E6                     __end_of_puts:	
  5565                           
  5566                           	psect	text9
  5567  07A5                     __ptext9:	
  5568 ;; *************** function _cputs *****************
  5569 ;; Defined at:
  5570 ;;		line 4 in file "/opt/microchip/xc8/v1.41/sources/common/cputs.c"
  5571 ;; Parameters:    Size  Location     Type
  5572 ;;  s               2    2[BANK0 ] PTR const unsigned char 
  5573 ;;		 -> STR_14(2), STR_8(2), STR_2(43), 
  5574 ;; Auto vars:     Size  Location     Type
  5575 ;;		None
  5576 ;; Return value:  Size  Location     Type
  5577 ;;                  1    wreg      void 
  5578 ;; Registers used:
  5579 ;;		wreg, fsr0l, fsr0h, status,2, status,0, pclath, cstack
  5580 ;; Tracked objects:
  5581 ;;		On entry : 0/0
  5582 ;;		On exit  : 0/0
  5583 ;;		Unchanged: 0/0
  5584 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
  5585 ;;      Params:         0       2       0       0       0       0       0       0       0       0       0       0       
      +0       0
  5586 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  5587 ;;      Temps:          0       1       0       0       0       0       0       0       0       0       0       0       
      +0       0
  5588 ;;      Totals:         0       3       0       0       0       0       0       0       0       0       0       0       
      +0       0
  5589 ;;Total ram usage:        3 bytes
  5590 ;; Hardware stack levels used:    1
  5591 ;; Hardware stack levels required when called:    5
  5592 ;; This function calls:
  5593 ;;		_putch
  5594 ;; This function is called by:
  5595 ;;		_puts
  5596 ;; This function uses a non-reentrant model
  5597 ;;
  5598                           
  5599                           
  5600                           ;psect for function _cputs
  5601  07A5                     _cputs:	
  5602  07A5                     l2021:	
  5603                           ;incstack = 0
  5604                           ; Regs used in _cputs: [wreg-fsr0h+status,2+status,0+pclath+cstack]
  5605                           
  5606  07A5  0020               	movlb	0	; select bank0
  5607  07A6  0822               	movf	cputs@s,w
  5608  07A7  0084               	movwf	4
  5609  07A8  0823               	movf	cputs@s+1,w
  5610  07A9  0085               	movwf	5
  5611  07AA  0012               	moviw fsr0++
  5612  07AB  1903               	btfsc	3,2
  5613  07AC  0008               	return
  5614  07AD  0020               	movlb	0	; select bank0
  5615  07AE  0822               	movf	cputs@s,w
  5616  07AF  0084               	movwf	4
  5617  07B0  0823               	movf	cputs@s+1,w
  5618  07B1  0085               	movwf	5
  5619  07B2  0800               	movf	0,w	;code access
  5620  07B3  318F  27EB  3187   	fcall	_putch
  5621  07B6  3001               	movlw	1
  5622  07B7  0020               	movlb	0	; select bank0
  5623  07B8  07A2               	addwf	cputs@s,f
  5624  07B9  3000               	movlw	0
  5625  07BA  3DA3               	addwfc	cputs@s+1,f
  5626  07BB  2FA5               	goto	l2021
  5627  07BC                     __end_of_cputs:	
  5628                           
  5629                           	psect	text10
  5630  002E                     __ptext10:	
  5631 ;; *************** function _printf *****************
  5632 ;; Defined at:
  5633 ;;		line 464 in file "/opt/microchip/xc8/v1.41/sources/common/doprnt.c"
  5634 ;; Parameters:    Size  Location     Type
  5635 ;;  f               2   14[BANK0 ] PTR const unsigned char 
  5636 ;;		 -> STR_15(30), STR_13(26), STR_12(22), STR_11(32), 
  5637 ;;		 -> STR_10(33), STR_9(21), STR_7(16), STR_6(23), 
  5638 ;;		 -> STR_3(24), STR_1(2), 
  5639 ;; Auto vars:     Size  Location     Type
  5640 ;;  idx             1   24[BANK0 ] unsigned char 
  5641 ;;  tmpval          4    0        struct .
  5642 ;;  val             2   32[BANK0 ] unsigned int 
  5643 ;;  cp              2   28[BANK0 ] PTR const unsigned char 
  5644 ;;		 -> STR_16(7), STR_5(1), STR_4(3), I2C2_ISR@i2c_address(2), 
  5645 ;;  len             2    0        unsigned int 
  5646 ;;  c               1   34[BANK0 ] char 
  5647 ;;  flag            1   31[BANK0 ] unsigned char 
  5648 ;;  ap              1   30[BANK0 ] PTR void [1]
  5649 ;;		 -> ?_printf(2), 
  5650 ;;  prec            1   27[BANK0 ] char 
  5651 ;; Return value:  Size  Location     Type
  5652 ;;                  2   14[BANK0 ] int 
  5653 ;; Registers used:
  5654 ;;		wreg, fsr0l, fsr0h, fsr1l, fsr1h, status,2, status,0, pclath, cstack
  5655 ;; Tracked objects:
  5656 ;;		On entry : 0/0
  5657 ;;		On exit  : 0/0
  5658 ;;		Unchanged: 0/0
  5659 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
  5660 ;;      Params:         0       6       0       0       0       0       0       0       0       0       0       0       
      +0       0
  5661 ;;      Locals:         0      11       0       0       0       0       0       0       0       0       0       0       
      +0       0
  5662 ;;      Temps:          0       4       0       0       0       0       0       0       0       0       0       0       
      +0       0
  5663 ;;      Totals:         0      21       0       0       0       0       0       0       0       0       0       0       
      +0       0
  5664 ;;Total ram usage:       21 bytes
  5665 ;; Hardware stack levels used:    1
  5666 ;; Hardware stack levels required when called:    5
  5667 ;; This function calls:
  5668 ;;		___lwdiv
  5669 ;;		___lwmod
  5670 ;;		_putch
  5671 ;; This function is called by:
  5672 ;;		_main
  5673 ;;		_EMC1001_PrintInfo
  5674 ;;		_EMC1001_PrintTemp
  5675 ;; This function uses a non-reentrant model
  5676 ;;
  5677                           
  5678                           
  5679                           ;psect for function _printf
  5680  002E                     _printf:	
  5681                           
  5682                           ;doprnt.c: 466: va_list ap;
  5683                           ;doprnt.c: 499: signed char c;
  5684                           ;doprnt.c: 506: signed char prec;
  5685                           ;doprnt.c: 508: unsigned char flag;
  5686                           ;doprnt.c: 523: union {
  5687                           ;doprnt.c: 524: unsigned long vd;
  5688                           ;doprnt.c: 525: double integ;
  5689                           ;doprnt.c: 526: } tmpval;
  5690                           ;doprnt.c: 528: unsigned int val;
  5691                           ;doprnt.c: 529: unsigned len;
  5692                           ;doprnt.c: 530: const char * cp;
  5693                           ;doprnt.c: 533: *ap = __va_start();
  5694                           
  5695                           ;incstack = 0
  5696                           ; Regs used in _printf: [wreg-fsr1h+status,2+status,0+pclath+cstack]
  5697  002E  3030               	movlw	(low ((?_printf| 0+2)))& (0+255)
  5698  002F  0020               	movlb	0	; select bank0
  5699  0030  00B4               	movwf	??_printf
  5700  0031  0834               	movf	??_printf,w
  5701  0032  00BE               	movwf	printf@ap
  5702  0033                     l2159:	
  5703                           ;doprnt.c: 536: while(c = *f++) {
  5704                           
  5705  0033  0020               	movlb	0	; select bank0
  5706  0034  082F               	movf	printf@f+1,w
  5707  0035  00B5               	movwf	??_printf+1
  5708  0036  082E               	movf	printf@f,w
  5709  0037  00B4               	movwf	??_printf
  5710  0038  0AAE               	incf	printf@f,f
  5711  0039  1903               	skipnz
  5712  003A  0AAF               	incf	printf@f+1,f
  5713  003B  0834               	movf	??_printf,w
  5714  003C  0084               	movwf	4
  5715  003D  0835               	movf	??_printf+1,w
  5716  003E  0085               	movwf	5
  5717  003F  0800               	movf	0,w	;code access
  5718  0040  00B6               	movwf	??_printf+2
  5719  0041  0836               	movf	??_printf+2,w
  5720  0042  00C2               	movwf	printf@c
  5721  0043  0842               	movf	printf@c,w
  5722  0044  1903               	btfsc	3,2
  5723  0045  0008               	return
  5724                           
  5725                           ;doprnt.c: 538: if(c != '%')
  5726  0046  3025               	movlw	37
  5727  0047  0642               	xorwf	printf@c,w
  5728  0048  1903               	btfsc	3,2
  5729  0049  284F               	goto	l2075
  5730                           
  5731                           ;doprnt.c: 540: {
  5732                           ;doprnt.c: 541: (putch(c) );
  5733  004A  0842               	movf	printf@c,w
  5734  004B  318F  27EB  3180   	fcall	_putch
  5735                           
  5736                           ;doprnt.c: 542: continue;
  5737  004E  2833               	goto	l2159
  5738  004F                     l2075:	
  5739                           
  5740                           ;doprnt.c: 543: }
  5741                           ;doprnt.c: 548: flag = 0;
  5742  004F  0020               	movlb	0	; select bank0
  5743  0050  01BF               	clrf	printf@flag
  5744                           
  5745                           ;doprnt.c: 635: switch(c = *f++) {
  5746  0051  287D               	goto	l2093
  5747  0052                     l354:	
  5748                           ;doprnt.c: 712: case 'X':
  5749                           
  5750                           ;doprnt.c: 698: case 'i':
  5751                           ;doprnt.c: 699: break;
  5752                           
  5753                           ;doprnt.c: 697: case 'd':
  5754                           
  5755                           ;doprnt.c: 638: goto alldone;
  5756                           
  5757                           ;doprnt.c: 637: case 0:
  5758                           
  5759                           
  5760                           ;doprnt.c: 714: flag |= 0x20;
  5761  0052  16BF               	bsf	printf@flag,5
  5762  0053                     l355:	
  5763                           ;doprnt.c: 718: case 'x':
  5764                           
  5765                           
  5766                           ;doprnt.c: 721: flag |= 0x80;
  5767  0053  17BF               	bsf	printf@flag,7
  5768                           
  5769                           ;doprnt.c: 723: break;
  5770  0054  289D               	goto	l353
  5771  0055                     l2077:	
  5772                           ;doprnt.c: 728: case 's':
  5773                           
  5774                           
  5775                           ;doprnt.c: 734: cp = (*(const char * *)__va_arg((*(const char * **)ap), (const char *)0)
      +                          );
  5776  0055  083E               	movf	printf@ap,w
  5777  0056  0086               	movwf	6
  5778  0057  0187               	clrf	7
  5779  0058  3F40               	moviw [0]fsr1
  5780  0059  00BC               	movwf	printf@cp
  5781  005A  3F41               	moviw [1]fsr1
  5782  005B  00BD               	movwf	printf@cp+1
  5783  005C  3002               	movlw	2
  5784  005D  00B4               	movwf	??_printf
  5785  005E  0834               	movf	??_printf,w
  5786  005F  07BE               	addwf	printf@ap,f
  5787                           
  5788                           ;doprnt.c: 740: if(!cp)
  5789  0060  083C               	movf	printf@cp,w
  5790  0061  043D               	iorwf	printf@cp+1,w
  5791  0062  1D03               	btfss	3,2
  5792  0063  2868               	goto	l2089
  5793                           
  5794                           ;doprnt.c: 741: cp = "(null)";
  5795  0064  3021               	movlw	low (STR_16| (0+32768))
  5796  0065  00BC               	movwf	printf@cp
  5797  0066  3084               	movlw	high (STR_16| (0+32768))
  5798  0067  00BD               	movwf	printf@cp+1
  5799  0068                     l2089:	
  5800                           ;doprnt.c: 777: while(*cp)
  5801                           
  5802  0068  083C               	movf	printf@cp,w
  5803  0069  0084               	movwf	4
  5804  006A  083D               	movf	printf@cp+1,w
  5805  006B  0085               	movwf	5
  5806  006C  0012               	moviw fsr0++
  5807  006D  1903               	btfsc	3,2
  5808  006E  2833               	goto	l2159
  5809                           
  5810                           ;doprnt.c: 778: (putch(*cp++) );
  5811  006F  083C               	movf	printf@cp,w
  5812  0070  0084               	movwf	4
  5813  0071  083D               	movf	printf@cp+1,w
  5814  0072  0085               	movwf	5
  5815  0073  0800               	movf	0,w	;code access
  5816  0074  318F  27EB  3180   	fcall	_putch
  5817  0077  3001               	movlw	1
  5818  0078  0020               	movlb	0	; select bank0
  5819  0079  07BC               	addwf	printf@cp,f
  5820  007A  3000               	movlw	0
  5821  007B  3DBD               	addwfc	printf@cp+1,f
  5822  007C  2868               	goto	l2089
  5823  007D                     l2093:	
  5824                           ;doprnt.c: 822: }
  5825                           
  5826                           ;doprnt.c: 813: continue;
  5827                           
  5828                           ;doprnt.c: 802: default:
  5829                           
  5830                           ;doprnt.c: 779: continue;
  5831                           
  5832  007D  082F               	movf	printf@f+1,w
  5833  007E  00B5               	movwf	??_printf+1
  5834  007F  082E               	movf	printf@f,w
  5835  0080  00B4               	movwf	??_printf
  5836  0081  0AAE               	incf	printf@f,f
  5837  0082  1903               	skipnz
  5838  0083  0AAF               	incf	printf@f+1,f
  5839  0084  0834               	movf	??_printf,w
  5840  0085  0084               	movwf	4
  5841  0086  0835               	movf	??_printf+1,w
  5842  0087  0085               	movwf	5
  5843  0088  0800               	movf	0,w	;code access
  5844  0089  00C2               	movwf	printf@c
  5845                           
  5846                           ; Switch size 1, requested type "space"
  5847                           ; Number of cases is 6, Range of values is 0 to 120
  5848                           ; switch strategies available:
  5849                           ; Name         Instructions Cycles
  5850                           ; simple_byte           19    10 (average)
  5851                           ; direct_byte          248     6 (fixed)
  5852                           ; jumptable            260     6 (fixed)
  5853                           ;	Chosen strategy is simple_byte
  5854  008A  3A00               	xorlw	0	; case 0
  5855  008B  1903               	skipnz
  5856  008C  298E               	goto	l388
  5857  008D  3A58               	xorlw	88	; case 88
  5858  008E  1903               	skipnz
  5859  008F  2852               	goto	l354
  5860  0090  3A3C               	xorlw	60	; case 100
  5861  0091  1903               	skipnz
  5862  0092  289D               	goto	l353
  5863  0093  3A0D               	xorlw	13	; case 105
  5864  0094  1903               	skipnz
  5865  0095  289D               	goto	l353
  5866  0096  3A1A               	xorlw	26	; case 115
  5867  0097  1903               	skipnz
  5868  0098  2855               	goto	l2077
  5869  0099  3A0B               	xorlw	11	; case 120
  5870  009A  1903               	skipnz
  5871  009B  2853               	goto	l355
  5872  009C  2833               	goto	l2159
  5873  009D                     l353:	
  5874                           
  5875                           ;doprnt.c: 1251: if((flag & 0x80) == 0x00)
  5876  009D  1BBF               	btfsc	printf@flag,7
  5877  009E  28B6               	goto	l2105
  5878                           
  5879                           ;doprnt.c: 1253: {
  5880                           ;doprnt.c: 1259: val = (int)(*(int *)__va_arg((*(int **)ap), (int)0));
  5881  009F  083E               	movf	printf@ap,w
  5882  00A0  0086               	movwf	6
  5883  00A1  0187               	clrf	7
  5884  00A2  3F40               	moviw [0]fsr1
  5885  00A3  00C0               	movwf	printf@val
  5886  00A4  3F41               	moviw [1]fsr1
  5887  00A5  00C1               	movwf	printf@val+1
  5888  00A6  3002               	movlw	2
  5889  00A7  00B4               	movwf	??_printf
  5890  00A8  0834               	movf	??_printf,w
  5891  00A9  07BE               	addwf	printf@ap,f
  5892                           
  5893                           ;doprnt.c: 1261: if((int)val < 0) {
  5894  00AA  1FC1               	btfss	printf@val+1,7
  5895  00AB  2906               	goto	l2131
  5896                           
  5897                           ;doprnt.c: 1262: flag |= 0x03;
  5898  00AC  3003               	movlw	3
  5899  00AD  00B4               	movwf	??_printf
  5900  00AE  0834               	movf	??_printf,w
  5901  00AF  04BF               	iorwf	printf@flag,f
  5902                           
  5903                           ;doprnt.c: 1263: val = -val;
  5904  00B0  09C0               	comf	printf@val,f
  5905  00B1  09C1               	comf	printf@val+1,f
  5906  00B2  0AC0               	incf	printf@val,f
  5907  00B3  1903               	skipnz
  5908  00B4  0AC1               	incf	printf@val+1,f
  5909                           
  5910                           ;doprnt.c: 1264: }
  5911                           ;doprnt.c: 1266: }
  5912  00B5  2906               	goto	l2131
  5913  00B6                     l2105:	
  5914                           
  5915                           ;doprnt.c: 1268: else
  5916                           ;doprnt.c: 1273: {
  5917                           ;doprnt.c: 1286: val = (*(unsigned *)__va_arg((*(unsigned **)ap), (unsigned)0));
  5918  00B6  083E               	movf	printf@ap,w
  5919  00B7  0086               	movwf	6
  5920  00B8  0187               	clrf	7
  5921  00B9  3F40               	moviw [0]fsr1
  5922  00BA  00C0               	movwf	printf@val
  5923  00BB  3F41               	moviw [1]fsr1
  5924  00BC  00C1               	movwf	printf@val+1
  5925  00BD  3002               	movlw	2
  5926  00BE  00B4               	movwf	??_printf
  5927  00BF  0834               	movf	??_printf,w
  5928  00C0  07BE               	addwf	printf@ap,f
  5929                           
  5930                           ;doprnt.c: 1287: }
  5931                           ;doprnt.c: 1294: switch((unsigned char)(flag & 0x80)) {
  5932  00C1  2906               	goto	l2131
  5933  00C2                     l366:	
  5934                           ;doprnt.c: 1299: case 0x00:
  5935                           
  5936                           
  5937                           ;doprnt.c: 1305: for(c = 1 ; c != sizeof dpowers/sizeof dpowers[0] ; c++)
  5938  00C2  01C2               	clrf	printf@c
  5939  00C3  0AC2               	incf	printf@c,f
  5940  00C4                     L4:	
  5941  00C4  3005               	movlw	5
  5942  00C5  0642               	xorwf	printf@c,w
  5943  00C6  1903               	btfsc	3,2
  5944  00C7  290F               	goto	l2133
  5945                           
  5946                           ;doprnt.c: 1306: if(val < dpowers[c])
  5947  00C8  0842               	movf	printf@c,w
  5948  00C9  00B4               	movwf	??_printf
  5949  00CA  01B5               	clrf	??_printf+1
  5950  00CB  35B4               	lslf	??_printf,f
  5951  00CC  0DB5               	rlf	??_printf+1,f
  5952  00CD  30DF               	movlw	low (_dpowers| (0+32768))
  5953  00CE  0734               	addwf	??_printf,w
  5954  00CF  0084               	movwf	4
  5955  00D0  3082               	movlw	high (_dpowers| (0+32768))
  5956  00D1  3D35               	addwfc	??_printf+1,w
  5957  00D2  0085               	movwf	5
  5958  00D3  3F00               	moviw [0]fsr0
  5959  00D4  00B6               	movwf	??_printf+2
  5960  00D5  3F01               	moviw [1]fsr0
  5961  00D6  00B7               	movwf	??_printf+3
  5962  00D7  0837               	movf	??_printf+3,w
  5963  00D8  0241               	subwf	printf@val+1,w
  5964  00D9  1D03               	skipz
  5965  00DA  28DD               	goto	u1815
  5966  00DB  0836               	movf	??_printf+2,w
  5967  00DC  0240               	subwf	printf@val,w
  5968  00DD                     u1815:	
  5969  00DD  1C03               	btfss	3,0
  5970  00DE  290F               	goto	l2133
  5971                           
  5972                           ;doprnt.c: 1307: break;
  5973  00DF  3001               	movlw	1
  5974  00E0  00B4               	movwf	??_printf
  5975  00E1  0834               	movf	??_printf,w
  5976  00E2  07C2               	addwf	printf@c,f
  5977  00E3  28C4               	goto	L4
  5978  00E4                     l371:	
  5979                           ;doprnt.c: 1314: case 0x80:
  5980                           
  5981                           ;doprnt.c: 1309: break;
  5982                           
  5983                           
  5984                           ;doprnt.c: 1316: for(c = 1 ; c != sizeof hexpowers/sizeof hexpowers[0] ; c++)
  5985  00E4  01C2               	clrf	printf@c
  5986  00E5  0AC2               	incf	printf@c,f
  5987  00E6                     L5:	
  5988  00E6  3004               	movlw	4
  5989  00E7  0642               	xorwf	printf@c,w
  5990  00E8  1903               	btfsc	3,2
  5991  00E9  290F               	goto	l2133
  5992                           
  5993                           ;doprnt.c: 1317: if(val < hexpowers[c])
  5994  00EA  0842               	movf	printf@c,w
  5995  00EB  00B4               	movwf	??_printf
  5996  00EC  01B5               	clrf	??_printf+1
  5997  00ED  35B4               	lslf	??_printf,f
  5998  00EE  0DB5               	rlf	??_printf+1,f
  5999  00EF  30E9               	movlw	low (_hexpowers| (0+32768))
  6000  00F0  0734               	addwf	??_printf,w
  6001  00F1  0084               	movwf	4
  6002  00F2  3082               	movlw	high (_hexpowers| (0+32768))
  6003  00F3  3D35               	addwfc	??_printf+1,w
  6004  00F4  0085               	movwf	5
  6005  00F5  3F00               	moviw [0]fsr0
  6006  00F6  00B6               	movwf	??_printf+2
  6007  00F7  3F01               	moviw [1]fsr0
  6008  00F8  00B7               	movwf	??_printf+3
  6009  00F9  0837               	movf	??_printf+3,w
  6010  00FA  0241               	subwf	printf@val+1,w
  6011  00FB  1D03               	skipz
  6012  00FC  28FF               	goto	u1845
  6013  00FD  0836               	movf	??_printf+2,w
  6014  00FE  0240               	subwf	printf@val,w
  6015  00FF                     u1845:	
  6016  00FF  1C03               	btfss	3,0
  6017  0100  290F               	goto	l2133
  6018                           
  6019                           ;doprnt.c: 1318: break;
  6020  0101  3001               	movlw	1
  6021  0102  00B4               	movwf	??_printf
  6022  0103  0834               	movf	??_printf,w
  6023  0104  07C2               	addwf	printf@c,f
  6024  0105  28E6               	goto	L5
  6025  0106                     l2131:	
  6026                           ;doprnt.c: 1336: }
  6027                           
  6028                           ;doprnt.c: 1320: break;
  6029                           
  6030  0106  083F               	movf	printf@flag,w
  6031  0107  3980               	andlw	128
  6032                           
  6033                           ; Switch size 1, requested type "space"
  6034                           ; Number of cases is 2, Range of values is 0 to 128
  6035                           ; switch strategies available:
  6036                           ; Name         Instructions Cycles
  6037                           ; simple_byte            7     4 (average)
  6038                           ; jumptable            260     6 (fixed)
  6039                           ;	Chosen strategy is simple_byte
  6040  0108  3A00               	xorlw	0	; case 0
  6041  0109  1903               	skipnz
  6042  010A  28C2               	goto	l366
  6043  010B  3A80               	xorlw	128	; case 128
  6044  010C  1903               	skipnz
  6045  010D  28E4               	goto	l371
  6046  010E  290F               	goto	l2133
  6047  010F                     l2133:	
  6048                           
  6049                           ;doprnt.c: 1422: {
  6050                           ;doprnt.c: 1438: if(flag & 0x03)
  6051  010F  083F               	movf	printf@flag,w
  6052  0110  3903               	andlw	3
  6053  0111  1903               	btfsc	3,2
  6054  0112  2917               	goto	l2137
  6055                           
  6056                           ;doprnt.c: 1439: (putch('-') );
  6057  0113  302D               	movlw	45
  6058  0114  318F  27EB  3180   	fcall	_putch
  6059  0117                     l2137:	
  6060                           
  6061                           ;doprnt.c: 1469: }
  6062                           ;doprnt.c: 1472: prec = c;
  6063  0117  0020               	movlb	0	; select bank0
  6064  0118  0842               	movf	printf@c,w
  6065  0119  00B4               	movwf	??_printf
  6066  011A  0834               	movf	??_printf,w
  6067  011B  00BB               	movwf	printf@prec
  6068                           
  6069                           ;doprnt.c: 1474: while(prec--) {
  6070  011C  297C               	goto	l2157
  6071  011D                     l2139:	
  6072                           ;doprnt.c: 1478: {
  6073                           ;doprnt.c: 1483: case 0x00:
  6074                           
  6075                           ;doprnt.c: 1476: switch((unsigned char)(flag & 0x80))
  6076                           
  6077                           
  6078                           ;doprnt.c: 1489: c = (val / dpowers[prec]) % 10 + '0';
  6079  011D  300A               	movlw	10
  6080  011E  00A8               	movwf	___lwmod@divisor
  6081  011F  3000               	movlw	0
  6082  0120  00A9               	movwf	___lwmod@divisor+1
  6083  0121  083B               	movf	printf@prec,w
  6084  0122  00B4               	movwf	??_printf
  6085  0123  01B5               	clrf	??_printf+1
  6086  0124  35B4               	lslf	??_printf,f
  6087  0125  0DB5               	rlf	??_printf+1,f
  6088  0126  30DF               	movlw	low (_dpowers| (0+32768))
  6089  0127  0734               	addwf	??_printf,w
  6090  0128  0084               	movwf	4
  6091  0129  3082               	movlw	high (_dpowers| (0+32768))
  6092  012A  3D35               	addwfc	??_printf+1,w
  6093  012B  0085               	movwf	5
  6094  012C  3F00               	moviw [0]fsr0
  6095  012D  00A0               	movwf	___lwdiv@divisor
  6096  012E  3F01               	moviw [1]fsr0
  6097  012F  00A1               	movwf	___lwdiv@divisor+1
  6098  0130  0841               	movf	printf@val+1,w
  6099  0131  00A3               	movwf	___lwdiv@dividend+1
  6100  0132  0840               	movf	printf@val,w
  6101  0133  00A2               	movwf	___lwdiv@dividend
  6102  0134  3186  2676  3180   	fcall	___lwdiv
  6103  0137  0020               	movlb	0	; select bank0
  6104  0138  0821               	movf	?___lwdiv+1,w
  6105  0139  00AB               	movwf	___lwmod@dividend+1
  6106  013A  0820               	movf	?___lwdiv,w
  6107  013B  00AA               	movwf	___lwmod@dividend
  6108  013C  3186  26AB  3180   	fcall	___lwmod
  6109  013F  0020               	movlb	0	; select bank0
  6110  0140  0828               	movf	?___lwmod,w
  6111  0141  3E30               	addlw	48
  6112  0142  2975               	goto	L2
  6113  0143                     l2141:	
  6114                           ;doprnt.c: 1497: case 0x80:
  6115                           
  6116                           ;doprnt.c: 1491: break;
  6117                           
  6118                           
  6119                           ;doprnt.c: 1499: {
  6120                           ;doprnt.c: 1500: unsigned char idx = (val / hexpowers[prec]) & 0xF;
  6121  0143  083B               	movf	printf@prec,w
  6122  0144  00B4               	movwf	??_printf
  6123  0145  01B5               	clrf	??_printf+1
  6124  0146  35B4               	lslf	??_printf,f
  6125  0147  0DB5               	rlf	??_printf+1,f
  6126  0148  30E9               	movlw	low (_hexpowers| (0+32768))
  6127  0149  0734               	addwf	??_printf,w
  6128  014A  0084               	movwf	4
  6129  014B  3082               	movlw	high (_hexpowers| (0+32768))
  6130  014C  3D35               	addwfc	??_printf+1,w
  6131  014D  0085               	movwf	5
  6132  014E  3F00               	moviw [0]fsr0
  6133  014F  00A0               	movwf	___lwdiv@divisor
  6134  0150  3F01               	moviw [1]fsr0
  6135  0151  00A1               	movwf	___lwdiv@divisor+1
  6136  0152  0841               	movf	printf@val+1,w
  6137  0153  00A3               	movwf	___lwdiv@dividend+1
  6138  0154  0840               	movf	printf@val,w
  6139  0155  00A2               	movwf	___lwdiv@dividend
  6140  0156  3186  2676  3180   	fcall	___lwdiv
  6141  0159  0020               	movlb	0	; select bank0
  6142  015A  0820               	movf	?___lwdiv,w
  6143  015B  390F               	andlw	15
  6144  015C  00B6               	movwf	??_printf+2
  6145  015D  0836               	movf	??_printf+2,w
  6146  015E  00B8               	movwf	printf@idx
  6147                           
  6148                           ;doprnt.c: 1502: c = (flag & 0x20 ? "0123456789ABCDEF" : "0123456789abcdef")[idx];
  6149  015F  1ABF               	btfsc	printf@flag,5
  6150  0160  2965               	goto	l2147
  6151  0161  3000               	movlw	low (STR_18| (0+32768))
  6152  0162  00B9               	movwf	_printf$662
  6153  0163  3084               	movlw	high (STR_18| (0+32768))
  6154  0164  2968               	goto	L3
  6155  0165                     l2147:	
  6156  0165  30EF               	movlw	low (STR_17| (0+32768))
  6157  0166  00B9               	movwf	_printf$662
  6158  0167  3083               	movlw	high (STR_17| (0+32768))
  6159  0168                     L3:	
  6160  0168  00BA               	movwf	_printf$662+1
  6161  0169  083A               	movf	_printf$662+1,w
  6162  016A  00B5               	movwf	??_printf+1
  6163  016B  0839               	movf	_printf$662,w
  6164  016C  00B4               	movwf	??_printf
  6165  016D  0838               	movf	printf@idx,w
  6166  016E  0734               	addwf	??_printf,w
  6167  016F  0084               	movwf	4
  6168  0170  0835               	movf	??_printf+1,w
  6169  0171  1803               	skipnc
  6170  0172  0A35               	incf	??_printf+1,w
  6171  0173  0085               	movwf	5
  6172  0174  0800               	movf	0,w	;code access
  6173  0175                     L2:	
  6174  0175  00B6               	movwf	??_printf+2
  6175  0176  0836               	movf	??_printf+2,w
  6176  0177  00C2               	movwf	printf@c
  6177  0178                     l2155:	
  6178                           ;doprnt.c: 1523: }
  6179                           
  6180                           ;doprnt.c: 1508: }
  6181                           ;doprnt.c: 1510: break;
  6182                           
  6183                           
  6184                           ;doprnt.c: 1524: (putch(c) );
  6185  0178  0842               	movf	printf@c,w
  6186  0179  318F  27EB  3180   	fcall	_putch
  6187  017C                     l2157:	
  6188  017C  30FF               	movlw	255
  6189  017D  0020               	movlb	0	; select bank0
  6190  017E  00B4               	movwf	??_printf
  6191  017F  0834               	movf	??_printf,w
  6192  0180  07BB               	addwf	printf@prec,f
  6193  0181  0A3B               	incf	printf@prec,w
  6194  0182  1903               	btfsc	3,2
  6195  0183  2833               	goto	l2159
  6196  0184  083F               	movf	printf@flag,w
  6197  0185  3980               	andlw	128
  6198                           
  6199                           ; Switch size 1, requested type "space"
  6200                           ; Number of cases is 2, Range of values is 0 to 128
  6201                           ; switch strategies available:
  6202                           ; Name         Instructions Cycles
  6203                           ; simple_byte            7     4 (average)
  6204                           ; jumptable            260     6 (fixed)
  6205                           ;	Chosen strategy is simple_byte
  6206  0186  3A00               	xorlw	0	; case 0
  6207  0187  1903               	skipnz
  6208  0188  291D               	goto	l2139
  6209  0189  3A80               	xorlw	128	; case 128
  6210  018A  1903               	skipnz
  6211  018B  2943               	goto	l2141
  6212  018C  2978               	goto	l2155
  6213  018D  2978               	goto	l2155
  6214  018E                     l388:	
  6215                           ;doprnt.c: 1540: return 0;
  6216                           ;	Return value of _printf is never used
  6217                           
  6218                           ;doprnt.c: 1525: }
  6219                           ;doprnt.c: 1533: }
  6220                           ;doprnt.c: 1535: alldone:
  6221                           
  6222  018E  0008               	return
  6223  018F                     __end_of_printf:	
  6224                           
  6225                           	psect	text11
  6226  0FEB                     __ptext11:	
  6227 ;; *************** function _putch *****************
  6228 ;; Defined at:
  6229 ;;		line 111 in file "mcc_generated_files/eusart.c"
  6230 ;; Parameters:    Size  Location     Type
  6231 ;;  txData          1    wreg     unsigned char 
  6232 ;; Auto vars:     Size  Location     Type
  6233 ;;  txData          1    1[BANK0 ] unsigned char 
  6234 ;; Return value:  Size  Location     Type
  6235 ;;                  1    wreg      void 
  6236 ;; Registers used:
  6237 ;;		wreg, status,2, status,0, pclath, cstack
  6238 ;; Tracked objects:
  6239 ;;		On entry : 0/0
  6240 ;;		On exit  : 0/0
  6241 ;;		Unchanged: 0/0
  6242 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
  6243 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  6244 ;;      Locals:         0       1       0       0       0       0       0       0       0       0       0       0       
      +0       0
  6245 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  6246 ;;      Totals:         0       1       0       0       0       0       0       0       0       0       0       0       
      +0       0
  6247 ;;Total ram usage:        1 bytes
  6248 ;; Hardware stack levels used:    1
  6249 ;; Hardware stack levels required when called:    4
  6250 ;; This function calls:
  6251 ;;		_EUSART_Write
  6252 ;; This function is called by:
  6253 ;;		_printf
  6254 ;;		_puts
  6255 ;;		_cputs
  6256 ;; This function uses a non-reentrant model
  6257 ;;
  6258                           
  6259                           
  6260                           ;psect for function _putch
  6261  0FEB                     _putch:	
  6262                           
  6263                           ;incstack = 0
  6264                           ; Regs used in _putch: [wreg+status,2+status,0+pclath+cstack]
  6265                           ;putch@txData stored from wreg
  6266  0FEB  0020               	movlb	0	; select bank0
  6267  0FEC  00A1               	movwf	putch@txData
  6268                           
  6269                           ;eusart.c: 113: EUSART_Write(txData);
  6270  0FED  0821               	movf	putch@txData,w
  6271  0FEE  3187  27F1         	fcall	_EUSART_Write
  6272  0FF0  0008               	return
  6273  0FF1                     __end_of_putch:	
  6274                           
  6275                           	psect	text12
  6276  07F1                     __ptext12:	
  6277 ;; *************** function _EUSART_Write *****************
  6278 ;; Defined at:
  6279 ;;		line 97 in file "mcc_generated_files/eusart.c"
  6280 ;; Parameters:    Size  Location     Type
  6281 ;;  txData          1    wreg     unsigned char 
  6282 ;; Auto vars:     Size  Location     Type
  6283 ;;  txData          1    0[BANK0 ] unsigned char 
  6284 ;; Return value:  Size  Location     Type
  6285 ;;                  1    wreg      void 
  6286 ;; Registers used:
  6287 ;;		wreg
  6288 ;; Tracked objects:
  6289 ;;		On entry : 0/0
  6290 ;;		On exit  : 0/0
  6291 ;;		Unchanged: 0/0
  6292 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
  6293 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  6294 ;;      Locals:         0       1       0       0       0       0       0       0       0       0       0       0       
      +0       0
  6295 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  6296 ;;      Totals:         0       1       0       0       0       0       0       0       0       0       0       0       
      +0       0
  6297 ;;Total ram usage:        1 bytes
  6298 ;; Hardware stack levels used:    1
  6299 ;; Hardware stack levels required when called:    3
  6300 ;; This function calls:
  6301 ;;		Nothing
  6302 ;; This function is called by:
  6303 ;;		_putch
  6304 ;; This function uses a non-reentrant model
  6305 ;;
  6306                           
  6307                           
  6308                           ;psect for function _EUSART_Write
  6309  07F1                     _EUSART_Write:	
  6310                           
  6311                           ;incstack = 0
  6312                           ; Regs used in _EUSART_Write: [wreg]
  6313                           ;EUSART_Write@txData stored from wreg
  6314  07F1  0020               	movlb	0	; select bank0
  6315  07F2  00A0               	movwf	EUSART_Write@txData
  6316  07F3                     l31:	
  6317                           ;eusart.c: 100: {
  6318                           
  6319                           ;eusart.c: 99: while(0 == PIR3bits.TXIF)
  6320                           
  6321  07F3  002E               	movlb	14	; select bank14
  6322  07F4  1E0F               	btfss	15,4	;volatile
  6323  07F5  2FF3               	goto	l31
  6324                           
  6325                           ;eusart.c: 101: }
  6326                           ;eusart.c: 103: TX1REG = txData;
  6327  07F6  0020               	movlb	0	; select bank0
  6328  07F7  0820               	movf	EUSART_Write@txData,w
  6329  07F8  0022               	movlb	2	; select bank2
  6330  07F9  009A               	movwf	26	;volatile
  6331  07FA  0008               	return
  6332  07FB                     __end_of_EUSART_Write:	
  6333                           
  6334                           	psect	text13
  6335  06AB                     __ptext13:	
  6336 ;; *************** function ___lwmod *****************
  6337 ;; Defined at:
  6338 ;;		line 6 in file "/opt/microchip/xc8/v1.41/sources/common/lwmod.c"
  6339 ;; Parameters:    Size  Location     Type
  6340 ;;  divisor         2    8[BANK0 ] unsigned int 
  6341 ;;  dividend        2   10[BANK0 ] unsigned int 
  6342 ;; Auto vars:     Size  Location     Type
  6343 ;;  counter         1   13[BANK0 ] unsigned char 
  6344 ;; Return value:  Size  Location     Type
  6345 ;;                  2    8[BANK0 ] unsigned int 
  6346 ;; Registers used:
  6347 ;;		wreg, status,2, status,0
  6348 ;; Tracked objects:
  6349 ;;		On entry : 0/0
  6350 ;;		On exit  : 0/0
  6351 ;;		Unchanged: 0/0
  6352 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
  6353 ;;      Params:         0       4       0       0       0       0       0       0       0       0       0       0       
      +0       0
  6354 ;;      Locals:         0       1       0       0       0       0       0       0       0       0       0       0       
      +0       0
  6355 ;;      Temps:          0       1       0       0       0       0       0       0       0       0       0       0       
      +0       0
  6356 ;;      Totals:         0       6       0       0       0       0       0       0       0       0       0       0       
      +0       0
  6357 ;;Total ram usage:        6 bytes
  6358 ;; Hardware stack levels used:    1
  6359 ;; Hardware stack levels required when called:    3
  6360 ;; This function calls:
  6361 ;;		Nothing
  6362 ;; This function is called by:
  6363 ;;		_printf
  6364 ;; This function uses a non-reentrant model
  6365 ;;
  6366                           
  6367                           
  6368                           ;psect for function ___lwmod
  6369  06AB                     ___lwmod:	
  6370                           
  6371                           ;incstack = 0
  6372                           ; Regs used in ___lwmod: [wreg+status,2+status,0]
  6373  06AB  0020               	movlb	0	; select bank0
  6374  06AC  0828               	movf	___lwmod@divisor,w
  6375  06AD  0429               	iorwf	___lwmod@divisor+1,w
  6376  06AE  1903               	btfsc	3,2
  6377  06AF  2ED3               	goto	l1525
  6378  06B0  01AD               	clrf	___lwmod@counter
  6379  06B1  0AAD               	incf	___lwmod@counter,f
  6380  06B2                     l1515:	
  6381  06B2  1BA9               	btfsc	___lwmod@divisor+1,7
  6382  06B3  2EBE               	goto	l1517
  6383  06B4  3001               	movlw	1
  6384  06B5                     u1015:	
  6385  06B5  35A8               	lslf	___lwmod@divisor,f
  6386  06B6  0DA9               	rlf	___lwmod@divisor+1,f
  6387  06B7  0B89               	decfsz	9,f
  6388  06B8  2EB5               	goto	u1015
  6389  06B9  3001               	movlw	1
  6390  06BA  00AC               	movwf	??___lwmod
  6391  06BB  082C               	movf	??___lwmod,w
  6392  06BC  07AD               	addwf	___lwmod@counter,f
  6393  06BD  2EB2               	goto	l1515
  6394  06BE                     l1517:	
  6395  06BE  0829               	movf	___lwmod@divisor+1,w
  6396  06BF  022B               	subwf	___lwmod@dividend+1,w
  6397  06C0  1D03               	skipz
  6398  06C1  2EC4               	goto	u1035
  6399  06C2  0828               	movf	___lwmod@divisor,w
  6400  06C3  022A               	subwf	___lwmod@dividend,w
  6401  06C4                     u1035:	
  6402  06C4  1C03               	skipc
  6403  06C5  2ECA               	goto	l1521
  6404  06C6  0828               	movf	___lwmod@divisor,w
  6405  06C7  02AA               	subwf	___lwmod@dividend,f
  6406  06C8  0829               	movf	___lwmod@divisor+1,w
  6407  06C9  3BAB               	subwfb	___lwmod@dividend+1,f
  6408  06CA                     l1521:	
  6409  06CA  3001               	movlw	1
  6410  06CB                     u1045:	
  6411  06CB  36A9               	lsrf	___lwmod@divisor+1,f
  6412  06CC  0CA8               	rrf	___lwmod@divisor,f
  6413  06CD  0B89               	decfsz	9,f
  6414  06CE  2ECB               	goto	u1045
  6415  06CF  3001               	movlw	1
  6416  06D0  02AD               	subwf	___lwmod@counter,f
  6417  06D1  1D03               	btfss	3,2
  6418  06D2  2EBE               	goto	l1517
  6419  06D3                     l1525:	
  6420  06D3  082B               	movf	___lwmod@dividend+1,w
  6421  06D4  00A9               	movwf	?___lwmod+1
  6422  06D5  082A               	movf	___lwmod@dividend,w
  6423  06D6  00A8               	movwf	?___lwmod
  6424  06D7  0008               	return
  6425  06D8                     __end_of___lwmod:	
  6426                           
  6427                           	psect	text14
  6428  0676                     __ptext14:	
  6429 ;; *************** function ___lwdiv *****************
  6430 ;; Defined at:
  6431 ;;		line 6 in file "/opt/microchip/xc8/v1.41/sources/common/lwdiv.c"
  6432 ;; Parameters:    Size  Location     Type
  6433 ;;  divisor         2    0[BANK0 ] unsigned int 
  6434 ;;  dividend        2    2[BANK0 ] unsigned int 
  6435 ;; Auto vars:     Size  Location     Type
  6436 ;;  quotient        2    5[BANK0 ] unsigned int 
  6437 ;;  counter         1    7[BANK0 ] unsigned char 
  6438 ;; Return value:  Size  Location     Type
  6439 ;;                  2    0[BANK0 ] unsigned int 
  6440 ;; Registers used:
  6441 ;;		wreg, status,2, status,0
  6442 ;; Tracked objects:
  6443 ;;		On entry : 0/0
  6444 ;;		On exit  : 0/0
  6445 ;;		Unchanged: 0/0
  6446 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
  6447 ;;      Params:         0       4       0       0       0       0       0       0       0       0       0       0       
      +0       0
  6448 ;;      Locals:         0       3       0       0       0       0       0       0       0       0       0       0       
      +0       0
  6449 ;;      Temps:          0       1       0       0       0       0       0       0       0       0       0       0       
      +0       0
  6450 ;;      Totals:         0       8       0       0       0       0       0       0       0       0       0       0       
      +0       0
  6451 ;;Total ram usage:        8 bytes
  6452 ;; Hardware stack levels used:    1
  6453 ;; Hardware stack levels required when called:    3
  6454 ;; This function calls:
  6455 ;;		Nothing
  6456 ;; This function is called by:
  6457 ;;		_printf
  6458 ;; This function uses a non-reentrant model
  6459 ;;
  6460                           
  6461                           
  6462                           ;psect for function ___lwdiv
  6463  0676                     ___lwdiv:	
  6464                           
  6465                           ;incstack = 0
  6466                           ; Regs used in ___lwdiv: [wreg+status,2+status,0]
  6467  0676  0020               	movlb	0	; select bank0
  6468  0677  01A5               	clrf	___lwdiv@quotient
  6469  0678  01A6               	clrf	___lwdiv@quotient+1
  6470  0679  0820               	movf	___lwdiv@divisor,w
  6471  067A  0421               	iorwf	___lwdiv@divisor+1,w
  6472  067B  1903               	btfsc	3,2
  6473  067C  2EA6               	goto	l1503
  6474  067D  01A7               	clrf	___lwdiv@counter
  6475  067E  0AA7               	incf	___lwdiv@counter,f
  6476  067F                     l1491:	
  6477  067F  1BA1               	btfsc	___lwdiv@divisor+1,7
  6478  0680  2E8B               	goto	l1493
  6479  0681  3001               	movlw	1
  6480  0682                     u945:	
  6481  0682  35A0               	lslf	___lwdiv@divisor,f
  6482  0683  0DA1               	rlf	___lwdiv@divisor+1,f
  6483  0684  0B89               	decfsz	9,f
  6484  0685  2E82               	goto	u945
  6485  0686  3001               	movlw	1
  6486  0687  00A4               	movwf	??___lwdiv
  6487  0688  0824               	movf	??___lwdiv,w
  6488  0689  07A7               	addwf	___lwdiv@counter,f
  6489  068A  2E7F               	goto	l1491
  6490  068B                     l1493:	
  6491  068B  3001               	movlw	1
  6492  068C                     u965:	
  6493  068C  35A5               	lslf	___lwdiv@quotient,f
  6494  068D  0DA6               	rlf	___lwdiv@quotient+1,f
  6495  068E  0B89               	decfsz	9,f
  6496  068F  2E8C               	goto	u965
  6497  0690  0821               	movf	___lwdiv@divisor+1,w
  6498  0691  0223               	subwf	___lwdiv@dividend+1,w
  6499  0692  1D03               	skipz
  6500  0693  2E96               	goto	u975
  6501  0694  0820               	movf	___lwdiv@divisor,w
  6502  0695  0222               	subwf	___lwdiv@dividend,w
  6503  0696                     u975:	
  6504  0696  1C03               	skipc
  6505  0697  2E9D               	goto	l1499
  6506  0698  0820               	movf	___lwdiv@divisor,w
  6507  0699  02A2               	subwf	___lwdiv@dividend,f
  6508  069A  0821               	movf	___lwdiv@divisor+1,w
  6509  069B  3BA3               	subwfb	___lwdiv@dividend+1,f
  6510  069C  1425               	bsf	___lwdiv@quotient,0
  6511  069D                     l1499:	
  6512  069D  3001               	movlw	1
  6513  069E                     u985:	
  6514  069E  36A1               	lsrf	___lwdiv@divisor+1,f
  6515  069F  0CA0               	rrf	___lwdiv@divisor,f
  6516  06A0  0B89               	decfsz	9,f
  6517  06A1  2E9E               	goto	u985
  6518  06A2  3001               	movlw	1
  6519  06A3  02A7               	subwf	___lwdiv@counter,f
  6520  06A4  1D03               	btfss	3,2
  6521  06A5  2E8B               	goto	l1493
  6522  06A6                     l1503:	
  6523  06A6  0826               	movf	___lwdiv@quotient+1,w
  6524  06A7  00A1               	movwf	?___lwdiv+1
  6525  06A8  0825               	movf	___lwdiv@quotient,w
  6526  06A9  00A0               	movwf	?___lwdiv
  6527  06AA  0008               	return
  6528  06AB                     __end_of___lwdiv:	
  6529                           
  6530                           	psect	text15
  6531  0741                     __ptext15:	
  6532 ;; *************** function ___wmul *****************
  6533 ;; Defined at:
  6534 ;;		line 15 in file "/opt/microchip/xc8/v1.41/sources/common/Umul16.c"
  6535 ;; Parameters:    Size  Location     Type
  6536 ;;  multiplier      2    0[BANK0 ] unsigned int 
  6537 ;;  multiplicand    2    2[BANK0 ] unsigned int 
  6538 ;; Auto vars:     Size  Location     Type
  6539 ;;  product         2    4[BANK0 ] unsigned int 
  6540 ;; Return value:  Size  Location     Type
  6541 ;;                  2    0[BANK0 ] unsigned int 
  6542 ;; Registers used:
  6543 ;;		wreg, status,2, status,0
  6544 ;; Tracked objects:
  6545 ;;		On entry : 0/0
  6546 ;;		On exit  : 0/0
  6547 ;;		Unchanged: 0/0
  6548 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
  6549 ;;      Params:         0       4       0       0       0       0       0       0       0       0       0       0       
      +0       0
  6550 ;;      Locals:         0       2       0       0       0       0       0       0       0       0       0       0       
      +0       0
  6551 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  6552 ;;      Totals:         0       6       0       0       0       0       0       0       0       0       0       0       
      +0       0
  6553 ;;Total ram usage:        6 bytes
  6554 ;; Hardware stack levels used:    1
  6555 ;; Hardware stack levels required when called:    3
  6556 ;; This function calls:
  6557 ;;		Nothing
  6558 ;; This function is called by:
  6559 ;;		_EMC1001_PrintInfo
  6560 ;;		_EMC1001_PrintTemp
  6561 ;; This function uses a non-reentrant model
  6562 ;;
  6563                           
  6564                           
  6565                           ;psect for function ___wmul
  6566  0741                     ___wmul:	
  6567                           
  6568                           ;incstack = 0
  6569                           ; Regs used in ___wmul: [wreg+status,2+status,0]
  6570  0741  0020               	movlb	0	; select bank0
  6571  0742  01A4               	clrf	___wmul@product
  6572  0743  01A5               	clrf	___wmul@product+1
  6573  0744                     l2167:	
  6574  0744  1C20               	btfss	___wmul@multiplier,0
  6575  0745  2F4A               	goto	l470
  6576  0746  0822               	movf	___wmul@multiplicand,w
  6577  0747  07A4               	addwf	___wmul@product,f
  6578  0748  0823               	movf	___wmul@multiplicand+1,w
  6579  0749  3DA5               	addwfc	___wmul@product+1,f
  6580  074A                     l470:	
  6581  074A  3001               	movlw	1
  6582  074B                     u1915:	
  6583  074B  35A2               	lslf	___wmul@multiplicand,f
  6584  074C  0DA3               	rlf	___wmul@multiplicand+1,f
  6585  074D  0B89               	decfsz	9,f
  6586  074E  2F4B               	goto	u1915
  6587  074F  3001               	movlw	1
  6588  0750                     u1925:	
  6589  0750  36A1               	lsrf	___wmul@multiplier+1,f
  6590  0751  0CA0               	rrf	___wmul@multiplier,f
  6591  0752  0B89               	decfsz	9,f
  6592  0753  2F50               	goto	u1925
  6593  0754  0820               	movf	___wmul@multiplier,w
  6594  0755  0421               	iorwf	___wmul@multiplier+1,w
  6595  0756  1D03               	btfss	3,2
  6596  0757  2F44               	goto	l2167
  6597  0758  0825               	movf	___wmul@product+1,w
  6598  0759  00A1               	movwf	?___wmul+1
  6599  075A  0824               	movf	___wmul@product,w
  6600  075B  00A0               	movwf	?___wmul
  6601  075C  0008               	return
  6602  075D                     __end_of___wmul:	
  6603                           
  6604                           	psect	text16
  6605  063A                     __ptext16:	
  6606 ;; *************** function _EMC1001_Read *****************
  6607 ;; Defined at:
  6608 ;;		line 6 in file "EMC1001.c"
  6609 ;; Parameters:    Size  Location     Type
  6610 ;;  reg             1    wreg     unsigned char 
  6611 ;;  pData           1    7[BANK0 ] PTR unsigned char 
  6612 ;;		 -> EMC1001_PrintTemp@templo(1), EMC1001_PrintTemp@temp(1), EMC1001_PrintInfo@templo(1), EMC1001_PrintInfo@temp(1), 
  6613 ;;		 -> EMC1001_PrintInfo@data(1), 
  6614 ;; Auto vars:     Size  Location     Type
  6615 ;;  reg             1   10[BANK0 ] unsigned char 
  6616 ;;  status          1   11[BANK0 ] enum E14334
  6617 ;; Return value:  Size  Location     Type
  6618 ;;                  1    wreg      unsigned char 
  6619 ;; Registers used:
  6620 ;;		wreg, fsr1l, fsr1h, status,2, status,0, pclath, cstack
  6621 ;; Tracked objects:
  6622 ;;		On entry : 0/0
  6623 ;;		On exit  : 0/0
  6624 ;;		Unchanged: 0/0
  6625 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
  6626 ;;      Params:         0       1       0       0       0       0       0       0       0       0       0       0       
      +0       0
  6627 ;;      Locals:         0       2       0       0       0       0       0       0       0       0       0       0       
      +0       0
  6628 ;;      Temps:          0       2       0       0       0       0       0       0       0       0       0       0       
      +0       0
  6629 ;;      Totals:         0       5       0       0       0       0       0       0       0       0       0       0       
      +0       0
  6630 ;;Total ram usage:        5 bytes
  6631 ;; Hardware stack levels used:    1
  6632 ;; Hardware stack levels required when called:    4
  6633 ;; This function calls:
  6634 ;;		_I2C2_MasterReadTRBBuild
  6635 ;;		_I2C2_MasterTRBInsert
  6636 ;;		_I2C2_MasterWriteTRBBuild
  6637 ;; This function is called by:
  6638 ;;		_EMC1001_PrintInfo
  6639 ;;		_EMC1001_PrintTemp
  6640 ;; This function uses a non-reentrant model
  6641 ;;
  6642                           
  6643                           
  6644                           ;psect for function _EMC1001_Read
  6645  063A                     _EMC1001_Read:	
  6646                           
  6647                           ;incstack = 0
  6648                           ; Regs used in _EMC1001_Read: [wreg+fsr1l+fsr1h+status,2+status,0+pclath+cstack]
  6649                           ;EMC1001_Read@reg stored from wreg
  6650  063A  0020               	movlb	0	; select bank0
  6651  063B  00AA               	movwf	EMC1001_Read@reg
  6652                           
  6653                           ;EMC1001.c: 8: I2C2_MESSAGE_STATUS status = I2C2_MESSAGE_PENDING;
  6654  063C  3002               	movlw	2
  6655  063D  00A8               	movwf	??_EMC1001_Read
  6656  063E  0828               	movf	??_EMC1001_Read,w
  6657  063F  00AB               	movwf	EMC1001_Read@status
  6658                           
  6659                           ;EMC1001.c: 9: static I2C2_TRANSACTION_REQUEST_BLOCK trb[2];
  6660                           ;EMC1001.c: 11: I2C2_MasterWriteTRBBuild(&trb[0], &reg, 1, 0x38);
  6661  0640  302A               	movlw	(low (EMC1001_Read@reg| 0))& (0+255)
  6662  0641  00A8               	movwf	??_EMC1001_Read
  6663  0642  0828               	movf	??_EMC1001_Read,w
  6664  0643  00A0               	movwf	I2C2_MasterWriteTRBBuild@pdata
  6665  0644  01A1               	clrf	I2C2_MasterWriteTRBBuild@length
  6666  0645  0AA1               	incf	I2C2_MasterWriteTRBBuild@length,f
  6667  0646  3038               	movlw	56
  6668  0647  00A2               	movwf	I2C2_MasterWriteTRBBuild@address
  6669  0648  3000               	movlw	0
  6670  0649  00A3               	movwf	I2C2_MasterWriteTRBBuild@address+1
  6671  064A  3052               	movlw	(low (EMC1001_Read@trb| 0))& (0+255)
  6672  064B  3187  2721  3186   	fcall	_I2C2_MasterWriteTRBBuild
  6673                           
  6674                           ;EMC1001.c: 12: I2C2_MasterReadTRBBuild(&trb[1], pData, 1, 0x38);
  6675  064E  0020               	movlb	0	; select bank0
  6676  064F  0827               	movf	EMC1001_Read@pData,w
  6677  0650  00A8               	movwf	??_EMC1001_Read
  6678  0651  0828               	movf	??_EMC1001_Read,w
  6679  0652  00A0               	movwf	I2C2_MasterReadTRBBuild@pdata
  6680  0653  01A1               	clrf	I2C2_MasterReadTRBBuild@length
  6681  0654  0AA1               	incf	I2C2_MasterReadTRBBuild@length,f
  6682  0655  3038               	movlw	56
  6683  0656  00A2               	movwf	I2C2_MasterReadTRBBuild@address
  6684  0657  3000               	movlw	0
  6685  0658  00A3               	movwf	I2C2_MasterReadTRBBuild@address+1
  6686  0659  3056               	movlw	(low ((EMC1001_Read@trb| 0+4)))& (0+255)
  6687  065A  3186  26D8  3186   	fcall	_I2C2_MasterReadTRBBuild
  6688                           
  6689                           ;EMC1001.c: 13: I2C2_MasterTRBInsert(2, &trb[0], &status);
  6690  065D  3052               	movlw	(low (EMC1001_Read@trb| 0))& (0+255)
  6691  065E  0020               	movlb	0	; select bank0
  6692  065F  00A8               	movwf	??_EMC1001_Read
  6693  0660  0828               	movf	??_EMC1001_Read,w
  6694  0661  00A0               	movwf	I2C2_MasterTRBInsert@ptrb_list
  6695  0662  302B               	movlw	(low (EMC1001_Read@status| 0))& (0+255)
  6696  0663  00A9               	movwf	??_EMC1001_Read+1
  6697  0664  0829               	movf	??_EMC1001_Read+1,w
  6698  0665  00A1               	movwf	I2C2_MasterTRBInsert@pflag
  6699  0666  3002               	movlw	2
  6700  0667  3185  25F4  3186   	fcall	_I2C2_MasterTRBInsert
  6701  066A                     l1701:	
  6702                           ;EMC1001.c: 15: while(status == I2C2_MESSAGE_PENDING);
  6703                           
  6704  066A  3002               	movlw	2
  6705  066B  0020               	movlb	0	; select bank0
  6706  066C  062B               	xorwf	EMC1001_Read@status,w
  6707  066D  1903               	btfsc	3,2
  6708  066E  2E6A               	goto	l1701
  6709                           
  6710                           ;EMC1001.c: 17: return (status == I2C2_MESSAGE_COMPLETE);
  6711  066F  082B               	movf	EMC1001_Read@status,w
  6712  0670  1D03               	btfss	3,2
  6713  0671  2E74               	goto	u1270
  6714  0672  3001               	movlw	1
  6715  0673  0008               	return
  6716  0674                     u1270:	
  6717  0674  3000               	movlw	0
  6718  0675  0008               	return
  6719  0676                     __end_of_EMC1001_Read:	
  6720                           
  6721                           	psect	text17
  6722  0721                     __ptext17:	
  6723 ;; *************** function _I2C2_MasterWriteTRBBuild *****************
  6724 ;; Defined at:
  6725 ;;		line 707 in file "mcc_generated_files/i2c2.c"
  6726 ;; Parameters:    Size  Location     Type
  6727 ;;  ptrb            1    wreg     PTR struct .
  6728 ;;		 -> EMC1001_Read@trb(8), I2C2_MasterWrite@trBlock(4), 
  6729 ;;  pdata           1    0[BANK0 ] PTR unsigned char 
  6730 ;;		 -> EMC1001_Read@reg(1), 
  6731 ;;  length          1    1[BANK0 ] unsigned char 
  6732 ;;  address         2    2[BANK0 ] unsigned int 
  6733 ;; Auto vars:     Size  Location     Type
  6734 ;;  ptrb            1    6[BANK0 ] PTR struct .
  6735 ;;		 -> EMC1001_Read@trb(8), I2C2_MasterWrite@trBlock(4), 
  6736 ;; Return value:  Size  Location     Type
  6737 ;;                  1    wreg      void 
  6738 ;; Registers used:
  6739 ;;		wreg, fsr1l, fsr1h, status,2, status,0
  6740 ;; Tracked objects:
  6741 ;;		On entry : 0/0
  6742 ;;		On exit  : 0/0
  6743 ;;		Unchanged: 0/0
  6744 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
  6745 ;;      Params:         0       4       0       0       0       0       0       0       0       0       0       0       
      +0       0
  6746 ;;      Locals:         0       1       0       0       0       0       0       0       0       0       0       0       
      +0       0
  6747 ;;      Temps:          0       2       0       0       0       0       0       0       0       0       0       0       
      +0       0
  6748 ;;      Totals:         0       7       0       0       0       0       0       0       0       0       0       0       
      +0       0
  6749 ;;Total ram usage:        7 bytes
  6750 ;; Hardware stack levels used:    1
  6751 ;; Hardware stack levels required when called:    3
  6752 ;; This function calls:
  6753 ;;		Nothing
  6754 ;; This function is called by:
  6755 ;;		_EMC1001_Read
  6756 ;;		_I2C2_MasterWrite
  6757 ;; This function uses a non-reentrant model
  6758 ;;
  6759                           
  6760                           
  6761                           ;psect for function _I2C2_MasterWriteTRBBuild
  6762  0721                     _I2C2_MasterWriteTRBBuild:	
  6763                           
  6764                           ;incstack = 0
  6765                           ; Regs used in _I2C2_MasterWriteTRBBuild: [wreg+fsr1l+fsr1h+status,2+status,0]
  6766                           ;I2C2_MasterWriteTRBBuild@ptrb stored from wreg
  6767  0721  0020               	movlb	0	; select bank0
  6768  0722  00A6               	movwf	I2C2_MasterWriteTRBBuild@ptrb
  6769                           
  6770                           ;i2c2.c: 713: ptrb->address = address << 1;
  6771  0723  0823               	movf	I2C2_MasterWriteTRBBuild@address+1,w
  6772  0724  00A5               	movwf	??_I2C2_MasterWriteTRBBuild+1
  6773  0725  0822               	movf	I2C2_MasterWriteTRBBuild@address,w
  6774  0726  00A4               	movwf	??_I2C2_MasterWriteTRBBuild
  6775  0727  35A4               	lslf	??_I2C2_MasterWriteTRBBuild,f
  6776  0728  0DA5               	rlf	??_I2C2_MasterWriteTRBBuild+1,f
  6777  0729  0826               	movf	I2C2_MasterWriteTRBBuild@ptrb,w
  6778  072A  0086               	movwf	6
  6779  072B  0187               	clrf	7
  6780  072C  0824               	movf	??_I2C2_MasterWriteTRBBuild,w
  6781  072D  3FC0               	movwi [0]fsr1
  6782  072E  0825               	movf	??_I2C2_MasterWriteTRBBuild+1,w
  6783  072F  3FC1               	movwi [1]fsr1
  6784                           
  6785                           ;i2c2.c: 714: ptrb->length = length;
  6786  0730  0821               	movf	I2C2_MasterWriteTRBBuild@length,w
  6787  0731  00A4               	movwf	??_I2C2_MasterWriteTRBBuild
  6788  0732  0826               	movf	I2C2_MasterWriteTRBBuild@ptrb,w
  6789  0733  3E02               	addlw	2
  6790  0734  0086               	movwf	6
  6791  0735  0187               	clrf	7
  6792  0736  0824               	movf	??_I2C2_MasterWriteTRBBuild,w
  6793  0737  0081               	movwf	1
  6794                           
  6795                           ;i2c2.c: 715: ptrb->pbuffer = pdata;
  6796  0738  0820               	movf	I2C2_MasterWriteTRBBuild@pdata,w
  6797  0739  00A4               	movwf	??_I2C2_MasterWriteTRBBuild
  6798  073A  0826               	movf	I2C2_MasterWriteTRBBuild@ptrb,w
  6799  073B  3E03               	addlw	3
  6800  073C  0086               	movwf	6
  6801  073D  0187               	clrf	7
  6802  073E  0824               	movf	??_I2C2_MasterWriteTRBBuild,w
  6803  073F  0081               	movwf	1
  6804  0740  0008               	return
  6805  0741                     __end_of_I2C2_MasterWriteTRBBuild:	
  6806                           
  6807                           	psect	text18
  6808  05F4                     __ptext18:	
  6809 ;; *************** function _I2C2_MasterTRBInsert *****************
  6810 ;; Defined at:
  6811 ;;		line 641 in file "mcc_generated_files/i2c2.c"
  6812 ;; Parameters:    Size  Location     Type
  6813 ;;  count           1    wreg     unsigned char 
  6814 ;;  ptrb_list       1    0[BANK0 ] PTR struct .
  6815 ;;		 -> EMC1001_Read@trb(8), I2C2_MasterRead@trBlock(4), I2C2_MasterWrite@trBlock(4), 
  6816 ;;  pflag           1    1[BANK0 ] PTR enum E14260
  6817 ;;		 -> EMC1001_Read@status(1), 
  6818 ;; Auto vars:     Size  Location     Type
  6819 ;;  count           1    3[BANK0 ] unsigned char 
  6820 ;; Return value:  Size  Location     Type
  6821 ;;                  1    wreg      void 
  6822 ;; Registers used:
  6823 ;;		wreg, fsr1l, fsr1h, status,2, status,0
  6824 ;; Tracked objects:
  6825 ;;		On entry : 0/0
  6826 ;;		On exit  : 0/0
  6827 ;;		Unchanged: 0/0
  6828 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
  6829 ;;      Params:         0       2       0       0       0       0       0       0       0       0       0       0       
      +0       0
  6830 ;;      Locals:         0       1       0       0       0       0       0       0       0       0       0       0       
      +0       0
  6831 ;;      Temps:          0       1       0       0       0       0       0       0       0       0       0       0       
      +0       0
  6832 ;;      Totals:         0       4       0       0       0       0       0       0       0       0       0       0       
      +0       0
  6833 ;;Total ram usage:        4 bytes
  6834 ;; Hardware stack levels used:    1
  6835 ;; Hardware stack levels required when called:    3
  6836 ;; This function calls:
  6837 ;;		Nothing
  6838 ;; This function is called by:
  6839 ;;		_EMC1001_Read
  6840 ;;		_I2C2_MasterWrite
  6841 ;;		_I2C2_MasterRead
  6842 ;; This function uses a non-reentrant model
  6843 ;;
  6844                           
  6845                           
  6846                           ;psect for function _I2C2_MasterTRBInsert
  6847  05F4                     _I2C2_MasterTRBInsert:	
  6848                           
  6849                           ;incstack = 0
  6850                           ; Regs used in _I2C2_MasterTRBInsert: [wreg+fsr1l+fsr1h+status,2+status,0]
  6851                           ;I2C2_MasterTRBInsert@count stored from wreg
  6852  05F4  0020               	movlb	0	; select bank0
  6853  05F5  00A3               	movwf	I2C2_MasterTRBInsert@count
  6854                           
  6855                           ;i2c2.c: 648: if (i2c2_object.trStatus.s.full != 1)
  6856  05F6  184E               	btfsc	_i2c2_object+2,0
  6857  05F7  2E28               	goto	l1471
  6858                           
  6859                           ;i2c2.c: 649: {
  6860                           ;i2c2.c: 650: *pflag = I2C2_MESSAGE_PENDING;
  6861  05F8  3002               	movlw	2
  6862  05F9  00A2               	movwf	??_I2C2_MasterTRBInsert
  6863  05FA  0821               	movf	I2C2_MasterTRBInsert@pflag,w
  6864  05FB  0086               	movwf	6
  6865  05FC  0187               	clrf	7
  6866  05FD  0822               	movf	??_I2C2_MasterTRBInsert,w
  6867  05FE  0081               	movwf	1
  6868                           
  6869                           ;i2c2.c: 652: i2c2_object.pTrTail->ptrb_list = ptrb_list;
  6870  05FF  0820               	movf	I2C2_MasterTRBInsert@ptrb_list,w
  6871  0600  00A2               	movwf	??_I2C2_MasterTRBInsert
  6872  0601  0A4C               	incf	_i2c2_object,w
  6873  0602  0086               	movwf	6
  6874  0603  0187               	clrf	7
  6875  0604  0822               	movf	??_I2C2_MasterTRBInsert,w
  6876  0605  0081               	movwf	1
  6877                           
  6878                           ;i2c2.c: 653: i2c2_object.pTrTail->count = count;
  6879  0606  0823               	movf	I2C2_MasterTRBInsert@count,w
  6880  0607  00A2               	movwf	??_I2C2_MasterTRBInsert
  6881  0608  084C               	movf	_i2c2_object,w
  6882  0609  0086               	movwf	6
  6883  060A  0187               	clrf	7
  6884  060B  0822               	movf	??_I2C2_MasterTRBInsert,w
  6885  060C  0081               	movwf	1
  6886                           
  6887                           ;i2c2.c: 654: i2c2_object.pTrTail->pTrFlag = pflag;
  6888  060D  0821               	movf	I2C2_MasterTRBInsert@pflag,w
  6889  060E  00A2               	movwf	??_I2C2_MasterTRBInsert
  6890  060F  084C               	movf	_i2c2_object,w
  6891  0610  3E02               	addlw	2
  6892  0611  0086               	movwf	6
  6893  0612  0187               	clrf	7
  6894  0613  0822               	movf	??_I2C2_MasterTRBInsert,w
  6895  0614  0081               	movwf	1
  6896                           
  6897                           ;i2c2.c: 655: i2c2_object.pTrTail++;
  6898  0615  3003               	movlw	3
  6899  0616  00A2               	movwf	??_I2C2_MasterTRBInsert
  6900  0617  0822               	movf	??_I2C2_MasterTRBInsert,w
  6901  0618  07CC               	addwf	_i2c2_object,f
  6902                           
  6903                           ;i2c2.c: 658: if (i2c2_object.pTrTail == (i2c2_tr_queue + 1))
  6904  0619  084C               	movf	_i2c2_object,w
  6905  061A  3A65               	xorlw	(low ((_i2c2_tr_queue| 0+3)))& (0+255)
  6906  061B  1D03               	skipz
  6907  061C  2E21               	goto	l1467
  6908                           
  6909                           ;i2c2.c: 659: {
  6910                           ;i2c2.c: 661: i2c2_object.pTrTail = i2c2_tr_queue;
  6911  061D  3062               	movlw	(low (_i2c2_tr_queue| 0))& (0+255)
  6912  061E  00A2               	movwf	??_I2C2_MasterTRBInsert
  6913  061F  0822               	movf	??_I2C2_MasterTRBInsert,w
  6914  0620  00CC               	movwf	_i2c2_object
  6915  0621                     l1467:	
  6916                           
  6917                           ;i2c2.c: 662: }
  6918                           ;i2c2.c: 666: i2c2_object.trStatus.s.empty = 0;
  6919  0621  10CE               	bcf	_i2c2_object+2,1
  6920                           
  6921                           ;i2c2.c: 669: if (i2c2_object.pTrHead == i2c2_object.pTrTail)
  6922  0622  084D               	movf	low ((_i2c2_object| 0+1)),w
  6923  0623  064C               	xorwf	_i2c2_object,w
  6924  0624  1D03               	skipz
  6925  0625  2E2D               	goto	l1473
  6926                           
  6927                           ;i2c2.c: 670: {
  6928                           ;i2c2.c: 672: i2c2_object.trStatus.s.full = 1;
  6929  0626  144E               	bsf	_i2c2_object+2,0
  6930                           
  6931                           ;i2c2.c: 673: }
  6932                           ;i2c2.c: 675: }
  6933  0627  2E2D               	goto	l1473
  6934  0628                     l1471:	
  6935                           
  6936                           ;i2c2.c: 676: else
  6937                           ;i2c2.c: 677: {
  6938                           ;i2c2.c: 678: *pflag = I2C2_MESSAGE_FAIL;
  6939  0628  0821               	movf	I2C2_MasterTRBInsert@pflag,w
  6940  0629  0086               	movwf	6
  6941  062A  0187               	clrf	7
  6942  062B  0181               	clrf	1
  6943  062C  0A81               	incf	1,f
  6944  062D                     l1473:	
  6945                           
  6946                           ;i2c2.c: 679: }
  6947                           ;i2c2.c: 682: if (*pflag == I2C2_MESSAGE_PENDING)
  6948  062D  0821               	movf	I2C2_MasterTRBInsert@pflag,w
  6949  062E  0086               	movwf	6
  6950  062F  0187               	clrf	7
  6951  0630  3002               	movlw	2
  6952  0631  0601               	xorwf	1,w
  6953  0632  1D03               	btfss	3,2
  6954  0633  0008               	return
  6955  0634                     l1477:	
  6956                           ;i2c2.c: 683: {
  6957                           ;i2c2.c: 684: while(i2c2_state != S_MASTER_IDLE);
  6958                           
  6959  0634  0851               	movf	_i2c2_state,w
  6960  0635  1D03               	btfss	3,2
  6961  0636  2E34               	goto	l1477
  6962                           
  6963                           ;i2c2.c: 685: {
  6964                           ;i2c2.c: 688: PIR3bits.SSP2IF = 1;
  6965  0637  002E               	movlb	14	; select bank14
  6966  0638  150F               	bsf	15,2	;volatile
  6967  0639  0008               	return
  6968  063A                     __end_of_I2C2_MasterTRBInsert:	
  6969                           
  6970                           	psect	text19
  6971  06D8                     __ptext19:	
  6972 ;; *************** function _I2C2_MasterReadTRBBuild *****************
  6973 ;; Defined at:
  6974 ;;		line 694 in file "mcc_generated_files/i2c2.c"
  6975 ;; Parameters:    Size  Location     Type
  6976 ;;  ptrb            1    wreg     PTR struct .
  6977 ;;		 -> EMC1001_Read@trb(8), I2C2_MasterRead@trBlock(4), 
  6978 ;;  pdata           1    0[BANK0 ] PTR unsigned char 
  6979 ;;		 -> EMC1001_PrintTemp@templo(1), EMC1001_PrintTemp@temp(1), EMC1001_PrintInfo@templo(1), EMC1001_PrintInfo@temp(1), 
  6980 ;;		 -> EMC1001_PrintInfo@data(1), 
  6981 ;;  length          1    1[BANK0 ] unsigned char 
  6982 ;;  address         2    2[BANK0 ] unsigned int 
  6983 ;; Auto vars:     Size  Location     Type
  6984 ;;  ptrb            1    6[BANK0 ] PTR struct .
  6985 ;;		 -> EMC1001_Read@trb(8), I2C2_MasterRead@trBlock(4), 
  6986 ;; Return value:  Size  Location     Type
  6987 ;;                  1    wreg      void 
  6988 ;; Registers used:
  6989 ;;		wreg, fsr1l, fsr1h, status,2, status,0
  6990 ;; Tracked objects:
  6991 ;;		On entry : 0/0
  6992 ;;		On exit  : 0/0
  6993 ;;		Unchanged: 0/0
  6994 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
  6995 ;;      Params:         0       4       0       0       0       0       0       0       0       0       0       0       
      +0       0
  6996 ;;      Locals:         0       1       0       0       0       0       0       0       0       0       0       0       
      +0       0
  6997 ;;      Temps:          0       2       0       0       0       0       0       0       0       0       0       0       
      +0       0
  6998 ;;      Totals:         0       7       0       0       0       0       0       0       0       0       0       0       
      +0       0
  6999 ;;Total ram usage:        7 bytes
  7000 ;; Hardware stack levels used:    1
  7001 ;; Hardware stack levels required when called:    3
  7002 ;; This function calls:
  7003 ;;		Nothing
  7004 ;; This function is called by:
  7005 ;;		_EMC1001_Read
  7006 ;;		_I2C2_MasterRead
  7007 ;; This function uses a non-reentrant model
  7008 ;;
  7009                           
  7010                           
  7011                           ;psect for function _I2C2_MasterReadTRBBuild
  7012  06D8                     _I2C2_MasterReadTRBBuild:	
  7013                           
  7014                           ;incstack = 0
  7015                           ; Regs used in _I2C2_MasterReadTRBBuild: [wreg+fsr1l+fsr1h+status,2+status,0]
  7016                           ;I2C2_MasterReadTRBBuild@ptrb stored from wreg
  7017  06D8  0020               	movlb	0	; select bank0
  7018  06D9  00A6               	movwf	I2C2_MasterReadTRBBuild@ptrb
  7019                           
  7020                           ;i2c2.c: 700: ptrb->address = address << 1;
  7021  06DA  0823               	movf	I2C2_MasterReadTRBBuild@address+1,w
  7022  06DB  00A5               	movwf	??_I2C2_MasterReadTRBBuild+1
  7023  06DC  0822               	movf	I2C2_MasterReadTRBBuild@address,w
  7024  06DD  00A4               	movwf	??_I2C2_MasterReadTRBBuild
  7025  06DE  35A4               	lslf	??_I2C2_MasterReadTRBBuild,f
  7026  06DF  0DA5               	rlf	??_I2C2_MasterReadTRBBuild+1,f
  7027  06E0  0826               	movf	I2C2_MasterReadTRBBuild@ptrb,w
  7028  06E1  0086               	movwf	6
  7029  06E2  0187               	clrf	7
  7030  06E3  0824               	movf	??_I2C2_MasterReadTRBBuild,w
  7031  06E4  3FC0               	movwi [0]fsr1
  7032  06E5  0825               	movf	??_I2C2_MasterReadTRBBuild+1,w
  7033  06E6  3FC1               	movwi [1]fsr1
  7034                           
  7035                           ;i2c2.c: 702: ptrb->address |= 0x01;
  7036  06E7  0826               	movf	I2C2_MasterReadTRBBuild@ptrb,w
  7037  06E8  0086               	movwf	6
  7038  06E9  0187               	clrf	7
  7039  06EA  3001               	movlw	1
  7040  06EB  0481               	iorwf	1,f
  7041  06EC  3141               	addfsr 1,1
  7042  06ED  3000               	movlw	0
  7043  06EE  0481               	iorwf	1,f
  7044                           
  7045                           ;i2c2.c: 703: ptrb->length = length;
  7046  06EF  0821               	movf	I2C2_MasterReadTRBBuild@length,w
  7047  06F0  00A4               	movwf	??_I2C2_MasterReadTRBBuild
  7048  06F1  0826               	movf	I2C2_MasterReadTRBBuild@ptrb,w
  7049  06F2  3E02               	addlw	2
  7050  06F3  0086               	movwf	6
  7051  06F4  0187               	clrf	7
  7052  06F5  0824               	movf	??_I2C2_MasterReadTRBBuild,w
  7053  06F6  0081               	movwf	1
  7054                           
  7055                           ;i2c2.c: 704: ptrb->pbuffer = pdata;
  7056  06F7  0820               	movf	I2C2_MasterReadTRBBuild@pdata,w
  7057  06F8  00A4               	movwf	??_I2C2_MasterReadTRBBuild
  7058  06F9  0826               	movf	I2C2_MasterReadTRBBuild@ptrb,w
  7059  06FA  3E03               	addlw	3
  7060  06FB  0086               	movwf	6
  7061  06FC  0187               	clrf	7
  7062  06FD  0824               	movf	??_I2C2_MasterReadTRBBuild,w
  7063  06FE  0081               	movwf	1
  7064  06FF  0008               	return
  7065  0700                     __end_of_I2C2_MasterReadTRBBuild:	
  7066                           
  7067                           	psect	intentry
  7068  0004                     __pintentry:	
  7069 ;; *************** function _INTERRUPT_InterruptManager *****************
  7070 ;; Defined at:
  7071 ;;		line 51 in file "mcc_generated_files/interrupt_manager.c"
  7072 ;; Parameters:    Size  Location     Type
  7073 ;;		None
  7074 ;; Auto vars:     Size  Location     Type
  7075 ;;		None
  7076 ;; Return value:  Size  Location     Type
  7077 ;;                  1    wreg      void 
  7078 ;; Registers used:
  7079 ;;		wreg, fsr0l, fsr0h, fsr1l, fsr1h, status,2, status,0, pclath, cstack
  7080 ;; Tracked objects:
  7081 ;;		On entry : 0/0
  7082 ;;		On exit  : 0/0
  7083 ;;		Unchanged: 0/0
  7084 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
  7085 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  7086 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  7087 ;;      Temps:          1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  7088 ;;      Totals:         1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  7089 ;;Total ram usage:        1 bytes
  7090 ;; Hardware stack levels used:    1
  7091 ;; Hardware stack levels required when called:    2
  7092 ;; This function calls:
  7093 ;;		_I2C2_BusCollisionISR
  7094 ;;		_I2C2_ISR
  7095 ;; This function is called by:
  7096 ;;		Interrupt level 1
  7097 ;; This function uses a non-reentrant model
  7098 ;;
  7099                           
  7100  0004                     _INTERRUPT_InterruptManager:	
  7101                           
  7102                           ;incstack = 0
  7103  0004  147E               	bsf	126,0	;set compiler interrupt flag (level 1)
  7104                           
  7105                           ; Regs used in _INTERRUPT_InterruptManager: [wreg-fsr1h+status,2+status,0+pclath+cstack]
  7106  0005  3180               	pagesel	$
  7107  0006  0020               	movlb	0	; select bank0
  7108  0007  087F               	movf	127,w
  7109  0008  00F6               	movwf	??_INTERRUPT_InterruptManager
  7110                           
  7111                           ;interrupt_manager.c: 54: if(PIE3bits.BCL2IE == 1 && PIR3bits.BCL2IF == 1)
  7112  0009  002E               	movlb	14	; select bank14
  7113  000A  1999               	btfsc	25,3	;volatile
  7114  000B  1D8F               	btfss	15,3	;volatile
  7115  000C  2811               	goto	i1l198
  7116                           
  7117                           ;interrupt_manager.c: 55: {
  7118                           ;interrupt_manager.c: 56: I2C2_BusCollisionISR();
  7119  000D  3187  27FB  3180   	fcall	_I2C2_BusCollisionISR
  7120                           
  7121                           ;interrupt_manager.c: 57: }
  7122  0010  2816               	goto	i1l202
  7123  0011                     i1l198:	
  7124                           
  7125                           ;interrupt_manager.c: 58: else if(PIE3bits.SSP2IE == 1 && PIR3bits.SSP2IF == 1)
  7126  0011  1919               	btfsc	25,2	;volatile
  7127  0012  1D0F               	btfss	15,2	;volatile
  7128  0013  2816               	goto	i1l202
  7129                           
  7130                           ;interrupt_manager.c: 59: {
  7131                           ;interrupt_manager.c: 60: I2C2_ISR();
  7132  0014  3184  242D         	fcall	_I2C2_ISR
  7133  0016                     i1l202:	
  7134                           ;interrupt_manager.c: 62: else
  7135                           ;interrupt_manager.c: 63: {
  7136                           
  7137                           ;interrupt_manager.c: 61: }
  7138                           
  7139  0016  0876               	movf	??_INTERRUPT_InterruptManager,w
  7140  0017  0020               	movlb	0	; select bank0
  7141  0018  00FF               	movwf	127
  7142  0019  107E               	bcf	126,0	;clear compiler interrupt flag (level 1)
  7143  001A  0009               	retfie
  7144  001B                     __end_of_INTERRUPT_InterruptManager:	
  7145                           
  7146                           	psect	text21
  7147  042D                     __ptext21:	
  7148 ;; *************** function _I2C2_ISR *****************
  7149 ;; Defined at:
  7150 ;;		line 233 in file "mcc_generated_files/i2c2.c"
  7151 ;; Parameters:    Size  Location     Type
  7152 ;;		None
  7153 ;; Auto vars:     Size  Location     Type
  7154 ;;		None
  7155 ;; Return value:  Size  Location     Type
  7156 ;;                  1    wreg      void 
  7157 ;; Registers used:
  7158 ;;		wreg, fsr0l, fsr0h, fsr1l, fsr1h, status,2, status,0, pclath, cstack
  7159 ;; Tracked objects:
  7160 ;;		On entry : 0/0
  7161 ;;		On exit  : 0/0
  7162 ;;		Unchanged: 0/0
  7163 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
  7164 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  7165 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  7166 ;;      Temps:          4       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  7167 ;;      Totals:         4       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  7168 ;;Total ram usage:        4 bytes
  7169 ;; Hardware stack levels used:    1
  7170 ;; Hardware stack levels required when called:    1
  7171 ;; This function calls:
  7172 ;;		_I2C2_FunctionComplete
  7173 ;;		_I2C2_Stop
  7174 ;; This function is called by:
  7175 ;;		_INTERRUPT_InterruptManager
  7176 ;; This function uses a non-reentrant model
  7177 ;;
  7178                           
  7179                           
  7180                           ;psect for function _I2C2_ISR
  7181  042D                     _I2C2_ISR:	
  7182                           
  7183                           ;i2c2.c: 236: static uint8_t *pi2c_buf_ptr;
  7184                           ;i2c2.c: 237: static uint16_t i2c_address = 0;
  7185                           ;i2c2.c: 238: static uint8_t i2c_bytes_left = 0;
  7186                           ;i2c2.c: 239: static uint8_t i2c_10bit_address_restart = 0;
  7187                           ;i2c2.c: 241: PIR3bits.SSP2IF = 0;
  7188                           
  7189                           ;incstack = 0
  7190                           ; Regs used in _I2C2_ISR: [wreg-fsr1h+status,2+status,0+pclath+cstack]
  7191  042D  002E               	movlb	14	; select bank14
  7192  042E  110F               	bcf	15,2	;volatile
  7193                           
  7194                           ;i2c2.c: 245: if(SSP2CON1bits.WCOL)
  7195  042F  0023               	movlb	3	; select bank3
  7196  0430  1F9A               	btfss	26,7	;volatile
  7197  0431  2D5B               	goto	i1l1861
  7198                           
  7199                           ;i2c2.c: 246: {
  7200                           ;i2c2.c: 248: SSP2CON1bits.WCOL = 0;
  7201  0432  139A               	bcf	26,7	;volatile
  7202                           
  7203                           ;i2c2.c: 249: i2c2_state = S_MASTER_IDLE;
  7204  0433  0020               	movlb	0	; select bank0
  7205  0434  01D1               	clrf	_i2c2_state
  7206                           
  7207                           ;i2c2.c: 250: *(p_i2c2_current->pTrFlag) = I2C2_MESSAGE_FAIL;
  7208  0435  087A               	movf	_p_i2c2_current,w
  7209  0436  3E02               	addlw	2
  7210  0437  0086               	movwf	6
  7211  0438  0187               	clrf	7
  7212  0439  0801               	movf	1,w
  7213  043A  0086               	movwf	6
  7214  043B  0187               	clrf	7
  7215  043C  0181               	clrf	1
  7216  043D  0A81               	incf	1,f
  7217                           
  7218                           ;i2c2.c: 253: p_i2c2_current = (0);
  7219  043E  01FA               	clrf	_p_i2c2_current
  7220                           
  7221                           ;i2c2.c: 255: return;
  7222  043F  0008               	return
  7223  0440                     i1l100:	
  7224                           ;i2c2.c: 260: {
  7225                           ;i2c2.c: 261: case S_MASTER_IDLE:
  7226                           
  7227                           ;i2c2.c: 256: }
  7228                           ;i2c2.c: 259: switch(i2c2_state)
  7229                           
  7230                           
  7231                           ;i2c2.c: 263: if(i2c2_object.trStatus.s.empty != 1)
  7232  0440  18CE               	btfsc	_i2c2_object+2,1
  7233  0441  0008               	return
  7234                           
  7235                           ;i2c2.c: 264: {
  7236                           ;i2c2.c: 266: p_i2c2_current = i2c2_object.pTrHead;
  7237  0442  084D               	movf	low ((_i2c2_object| 0+1)),w
  7238  0443  00F2               	movwf	??_I2C2_ISR
  7239  0444  0872               	movf	??_I2C2_ISR,w
  7240  0445  00FA               	movwf	_p_i2c2_current
  7241                           
  7242                           ;i2c2.c: 267: i2c2_trb_count = i2c2_object.pTrHead->count;
  7243  0446  084D               	movf	low ((_i2c2_object| 0+1)),w
  7244  0447  0086               	movwf	6
  7245  0448  0187               	clrf	7
  7246  0449  0801               	movf	1,w
  7247  044A  00F2               	movwf	??_I2C2_ISR
  7248  044B  0872               	movf	??_I2C2_ISR,w
  7249  044C  00FC               	movwf	_i2c2_trb_count
  7250                           
  7251                           ;i2c2.c: 268: p_i2c2_trb_current = i2c2_object.pTrHead->ptrb_list;
  7252  044D  084D               	movf	low ((_i2c2_object| 0+1)),w
  7253  044E  0086               	movwf	6
  7254  044F  0187               	clrf	7
  7255  0450  3F41               	moviw [1]fsr1
  7256  0451  00FB               	movwf	_p_i2c2_trb_current
  7257                           
  7258                           ;i2c2.c: 270: i2c2_object.pTrHead++;
  7259  0452  3003               	movlw	3
  7260  0453  00F2               	movwf	??_I2C2_ISR
  7261  0454  0872               	movf	??_I2C2_ISR,w
  7262  0455  07CD               	addwf	low ((_i2c2_object| 0+1)),f
  7263                           
  7264                           ;i2c2.c: 273: if(i2c2_object.pTrHead == (i2c2_tr_queue + 1))
  7265  0456  084D               	movf	low ((_i2c2_object| 0+1)),w
  7266  0457  3A65               	xorlw	(low ((_i2c2_tr_queue| 0+3)))& (0+255)
  7267  0458  1D03               	skipz
  7268  0459  2C5E               	goto	i1l1749
  7269                           
  7270                           ;i2c2.c: 274: {
  7271                           ;i2c2.c: 276: i2c2_object.pTrHead = i2c2_tr_queue;
  7272  045A  3062               	movlw	(low (_i2c2_tr_queue| 0))& (0+255)
  7273  045B  00F2               	movwf	??_I2C2_ISR
  7274  045C  0872               	movf	??_I2C2_ISR,w
  7275  045D  00CD               	movwf	low ((_i2c2_object| 0+1))
  7276  045E                     i1l1749:	
  7277                           
  7278                           ;i2c2.c: 277: }
  7279                           ;i2c2.c: 281: i2c2_object.trStatus.s.full = 0;
  7280  045E  104E               	bcf	_i2c2_object+2,0
  7281                           
  7282                           ;i2c2.c: 284: if(i2c2_object.pTrHead == i2c2_object.pTrTail)
  7283  045F  084D               	movf	low ((_i2c2_object| 0+1)),w
  7284  0460  064C               	xorwf	_i2c2_object,w
  7285  0461  1903               	btfsc	3,2
  7286                           
  7287                           ;i2c2.c: 285: {
  7288                           ;i2c2.c: 287: i2c2_object.trStatus.s.empty = 1;
  7289  0462  14CE               	bsf	_i2c2_object+2,1
  7290                           
  7291                           ;i2c2.c: 288: }
  7292                           ;i2c2.c: 291: SSP2CON2bits.SEN = 1;
  7293  0463  0023               	movlb	3	; select bank3
  7294  0464  141B               	bsf	27,0	;volatile
  7295                           
  7296                           ;i2c2.c: 294: i2c2_state = S_MASTER_SEND_ADDR;
  7297  0465  3002               	movlw	2
  7298  0466  00F2               	movwf	??_I2C2_ISR
  7299  0467  0872               	movf	??_I2C2_ISR,w
  7300  0468  0020               	movlb	0	; select bank0
  7301  0469  00D1               	movwf	_i2c2_state
  7302                           
  7303                           ;i2c2.c: 295: }
  7304                           ;i2c2.c: 297: break;
  7305  046A  0008               	return
  7306  046B                     i1l105:	
  7307                           ;i2c2.c: 299: case S_MASTER_RESTART:
  7308                           
  7309                           
  7310                           ;i2c2.c: 304: SSP2CON2bits.RSEN = 1;
  7311  046B  0023               	movlb	3	; select bank3
  7312  046C  149B               	bsf	27,1	;volatile
  7313                           
  7314                           ;i2c2.c: 307: i2c2_state = S_MASTER_SEND_ADDR;
  7315  046D  3002               	movlw	2
  7316  046E  00F2               	movwf	??_I2C2_ISR
  7317  046F  0872               	movf	??_I2C2_ISR,w
  7318  0470  0020               	movlb	0	; select bank0
  7319  0471  00D1               	movwf	_i2c2_state
  7320                           
  7321                           ;i2c2.c: 309: break;
  7322  0472  0008               	return
  7323  0473                     i1l106:	
  7324                           ;i2c2.c: 311: case S_MASTER_SEND_ADDR_10BIT_LSB:
  7325                           
  7326                           
  7327                           ;i2c2.c: 313: if(SSP2CON2bits.ACKSTAT)
  7328  0473  0023               	movlb	3	; select bank3
  7329  0474  1F1B               	btfss	27,6	;volatile
  7330  0475  2C7F               	goto	i1l1761
  7331                           
  7332                           ;i2c2.c: 314: {
  7333                           ;i2c2.c: 315: i2c2_object.i2cErrors++;
  7334  0476  3001               	movlw	1
  7335  0477  00F2               	movwf	??_I2C2_ISR
  7336  0478  0872               	movf	??_I2C2_ISR,w
  7337  0479  0020               	movlb	0	; select bank0
  7338  047A  07D0               	addwf	_i2c2_object+4,f
  7339                           
  7340                           ;i2c2.c: 316: I2C2_Stop(I2C2_MESSAGE_ADDRESS_NO_ACK);
  7341  047B  3004               	movlw	4
  7342  047C  3187  278D         	fcall	_I2C2_Stop
  7343                           
  7344                           ;i2c2.c: 317: }
  7345  047E  0008               	return
  7346  047F                     i1l1761:	
  7347                           
  7348                           ;i2c2.c: 318: else
  7349                           ;i2c2.c: 319: {
  7350                           ;i2c2.c: 321: SSP2BUF = (i2c_address >> 1) & 0x00FF;
  7351  047F  0020               	movlb	0	; select bank0
  7352  0480  0866               	movf	I2C2_ISR@i2c_address+1,w
  7353  0481  00F3               	movwf	??_I2C2_ISR+1
  7354  0482  0865               	movf	I2C2_ISR@i2c_address,w
  7355  0483  00F2               	movwf	??_I2C2_ISR
  7356  0484  36F3               	lsrf	??_I2C2_ISR+1,f
  7357  0485  0CF2               	rrf	??_I2C2_ISR,f
  7358  0486  0872               	movf	??_I2C2_ISR,w
  7359  0487  0023               	movlb	3	; select bank3
  7360  0488  0096               	movwf	22	;volatile
  7361                           
  7362                           ;i2c2.c: 324: if(i2c_address & 0x01)
  7363  0489  0020               	movlb	0	; select bank0
  7364  048A  1C65               	btfss	I2C2_ISR@i2c_address,0
  7365  048B  2C91               	goto	i1l1767
  7366                           
  7367                           ;i2c2.c: 325: {
  7368                           ;i2c2.c: 328: i2c2_state = S_MASTER_10BIT_RESTART;
  7369  048C  300B               	movlw	11
  7370  048D  00F2               	movwf	??_I2C2_ISR
  7371  048E  0872               	movf	??_I2C2_ISR,w
  7372  048F  00D1               	movwf	_i2c2_state
  7373                           
  7374                           ;i2c2.c: 329: }
  7375  0490  0008               	return
  7376  0491                     i1l1767:	
  7377                           
  7378                           ;i2c2.c: 330: else
  7379                           ;i2c2.c: 331: {
  7380                           ;i2c2.c: 333: i2c2_state = S_MASTER_SEND_DATA;
  7381  0491  3003               	movlw	3
  7382  0492  00F2               	movwf	??_I2C2_ISR
  7383  0493  0872               	movf	??_I2C2_ISR,w
  7384  0494  00D1               	movwf	_i2c2_state
  7385                           
  7386                           ;i2c2.c: 334: }
  7387                           ;i2c2.c: 335: }
  7388                           ;i2c2.c: 337: break;
  7389  0495  0008               	return
  7390  0496                     i1l111:	
  7391                           ;i2c2.c: 339: case S_MASTER_10BIT_RESTART:
  7392                           
  7393                           
  7394                           ;i2c2.c: 341: if(SSP2CON2bits.ACKSTAT)
  7395  0496  0023               	movlb	3	; select bank3
  7396  0497  1F1B               	btfss	27,6	;volatile
  7397  0498  2CA2               	goto	i1l112
  7398                           
  7399                           ;i2c2.c: 342: {
  7400                           ;i2c2.c: 343: i2c2_object.i2cErrors++;
  7401  0499  3001               	movlw	1
  7402  049A  00F2               	movwf	??_I2C2_ISR
  7403  049B  0872               	movf	??_I2C2_ISR,w
  7404  049C  0020               	movlb	0	; select bank0
  7405  049D  07D0               	addwf	_i2c2_object+4,f
  7406                           
  7407                           ;i2c2.c: 344: I2C2_Stop(I2C2_MESSAGE_ADDRESS_NO_ACK);
  7408  049E  3004               	movlw	4
  7409  049F  3187  278D         	fcall	_I2C2_Stop
  7410                           
  7411                           ;i2c2.c: 345: }
  7412  04A1  0008               	return
  7413  04A2                     i1l112:	
  7414                           
  7415                           ;i2c2.c: 346: else
  7416                           ;i2c2.c: 347: {
  7417                           ;i2c2.c: 350: SSP2CON2bits.RSEN = 1;
  7418  04A2  149B               	bsf	27,1	;volatile
  7419                           
  7420                           ;i2c2.c: 354: i2c_address = 0x00F0 | ((i2c_address >> 8) & 0x0006);
  7421  04A3  0020               	movlb	0	; select bank0
  7422  04A4  0866               	movf	I2C2_ISR@i2c_address+1,w
  7423  04A5  00F3               	movwf	??_I2C2_ISR+1
  7424  04A6  0865               	movf	I2C2_ISR@i2c_address,w
  7425  04A7  00F2               	movwf	??_I2C2_ISR
  7426  04A8  0873               	movf	??_I2C2_ISR+1,w
  7427  04A9  00F2               	movwf	??_I2C2_ISR
  7428  04AA  01F3               	clrf	??_I2C2_ISR+1
  7429  04AB  3006               	movlw	6
  7430  04AC  0572               	andwf	??_I2C2_ISR,w
  7431  04AD  00F4               	movwf	??_I2C2_ISR+2
  7432  04AE  3000               	movlw	0
  7433  04AF  0573               	andwf	??_I2C2_ISR+1,w
  7434  04B0  00F5               	movwf	??_I2C2_ISR+3
  7435  04B1  30F0               	movlw	240
  7436  04B2  0474               	iorwf	??_I2C2_ISR+2,w
  7437  04B3  00E5               	movwf	I2C2_ISR@i2c_address
  7438  04B4  3000               	movlw	0
  7439  04B5  0475               	iorwf	??_I2C2_ISR+3,w
  7440  04B6  00E6               	movwf	I2C2_ISR@i2c_address+1
  7441                           
  7442                           ;i2c2.c: 357: i2c_address |= 0x0001;
  7443  04B7  1465               	bsf	I2C2_ISR@i2c_address,0
  7444                           
  7445                           ;i2c2.c: 360: i2c_10bit_address_restart = 1;
  7446  04B8  01F7               	clrf	I2C2_ISR@i2c_10bit_address_restart
  7447  04B9  0AF7               	incf	I2C2_ISR@i2c_10bit_address_restart,f
  7448                           
  7449                           ;i2c2.c: 363: i2c2_state = S_MASTER_SEND_ADDR;
  7450  04BA  3002               	movlw	2
  7451  04BB  00F2               	movwf	??_I2C2_ISR
  7452  04BC  0872               	movf	??_I2C2_ISR,w
  7453  04BD  00D1               	movwf	_i2c2_state
  7454                           
  7455                           ;i2c2.c: 364: }
  7456                           ;i2c2.c: 366: break;
  7457  04BE  0008               	return
  7458  04BF                     i1l1781:	
  7459                           ;i2c2.c: 368: case S_MASTER_SEND_ADDR:
  7460                           
  7461                           
  7462                           ;i2c2.c: 381: if(i2c_10bit_address_restart != 1)
  7463  04BF  0377               	decf	I2C2_ISR@i2c_10bit_address_restart,w
  7464  04C0  1903               	btfsc	3,2
  7465  04C1  2CD3               	goto	i1l1801
  7466                           
  7467                           ;i2c2.c: 382: {
  7468                           ;i2c2.c: 384: i2c_address = p_i2c2_trb_current->address;
  7469  04C2  087B               	movf	_p_i2c2_trb_current,w
  7470  04C3  0086               	movwf	6
  7471  04C4  0187               	clrf	7
  7472  04C5  3F40               	moviw [0]fsr1
  7473  04C6  00E5               	movwf	I2C2_ISR@i2c_address
  7474  04C7  3F41               	moviw [1]fsr1
  7475  04C8  00E6               	movwf	I2C2_ISR@i2c_address+1
  7476                           
  7477                           ;i2c2.c: 385: pi2c_buf_ptr = p_i2c2_trb_current->pbuffer;
  7478  04C9  087B               	movf	_p_i2c2_trb_current,w
  7479  04CA  0086               	movwf	6
  7480  04CB  0187               	clrf	7
  7481  04CC  3F43               	moviw [3]fsr1
  7482  04CD  00F9               	movwf	I2C2_ISR@pi2c_buf_ptr
  7483                           
  7484                           ;i2c2.c: 386: i2c_bytes_left = p_i2c2_trb_current->length;
  7485  04CE  087B               	movf	_p_i2c2_trb_current,w
  7486  04CF  0086               	movwf	6
  7487  04D0  0187               	clrf	7
  7488  04D1  3F42               	moviw [2]fsr1
  7489  04D2  00F8               	movwf	I2C2_ISR@i2c_bytes_left
  7490  04D3                     i1l1801:	
  7491                           ;i2c2.c: 407: }
  7492                           ;i2c2.c: 408: }
  7493                           
  7494                           ;i2c2.c: 406: i2c_10bit_address_restart = 0;
  7495                           
  7496                           ;i2c2.c: 404: i2c2_state = S_MASTER_ACK_ADDR;
  7497                           
  7498                           ;i2c2.c: 400: else
  7499                           ;i2c2.c: 401: {
  7500                           ;i2c2.c: 403: SSP2BUF = i2c_address;
  7501                           
  7502                           ;i2c2.c: 399: }
  7503                           
  7504                           ;i2c2.c: 398: i2c2_state = S_MASTER_SEND_ADDR_10BIT_LSB;
  7505                           
  7506                           ;i2c2.c: 393: {
  7507                           ;i2c2.c: 397: SSP2BUF = 0xF0 | ((i2c_address >> 8) & 0x0006);
  7508                           
  7509                           ;i2c2.c: 391: {
  7510                           ;i2c2.c: 392: if (0 == i2c_10bit_address_restart)
  7511                           
  7512                           ;i2c2.c: 387: }
  7513                           ;i2c2.c: 390: if(!1 && (0x0 != i2c_address))
  7514                           
  7515                           
  7516                           ;i2c2.c: 409: else
  7517                           ;i2c2.c: 410: {
  7518                           ;i2c2.c: 412: SSP2BUF = i2c_address;
  7519  04D3  0865               	movf	I2C2_ISR@i2c_address,w
  7520  04D4  0023               	movlb	3	; select bank3
  7521  04D5  0096               	movwf	22	;volatile
  7522                           
  7523                           ;i2c2.c: 413: if(i2c_address & 0x01)
  7524  04D6  0020               	movlb	0	; select bank0
  7525  04D7  1C65               	btfss	I2C2_ISR@i2c_address,0
  7526  04D8  2CDE               	goto	i1l1807
  7527                           
  7528                           ;i2c2.c: 414: {
  7529                           ;i2c2.c: 416: i2c2_state = S_MASTER_ACK_ADDR;
  7530  04D9  3005               	movlw	5
  7531  04DA  00F2               	movwf	??_I2C2_ISR
  7532  04DB  0872               	movf	??_I2C2_ISR,w
  7533  04DC  00D1               	movwf	_i2c2_state
  7534                           
  7535                           ;i2c2.c: 417: }
  7536  04DD  0008               	return
  7537  04DE                     i1l1807:	
  7538                           
  7539                           ;i2c2.c: 418: else
  7540                           ;i2c2.c: 419: {
  7541                           ;i2c2.c: 421: i2c2_state = S_MASTER_SEND_DATA;
  7542  04DE  3003               	movlw	3
  7543  04DF  00F2               	movwf	??_I2C2_ISR
  7544  04E0  0872               	movf	??_I2C2_ISR,w
  7545  04E1  00D1               	movwf	_i2c2_state
  7546                           
  7547                           ;i2c2.c: 422: }
  7548                           ;i2c2.c: 423: }
  7549                           ;i2c2.c: 424: break;
  7550  04E2  0008               	return
  7551  04E3                     i1l122:	
  7552                           ;i2c2.c: 426: case S_MASTER_SEND_DATA:
  7553                           
  7554                           
  7555                           ;i2c2.c: 429: if(SSP2CON2bits.ACKSTAT)
  7556  04E3  0023               	movlb	3	; select bank3
  7557  04E4  1F1B               	btfss	27,6	;volatile
  7558  04E5  2CF1               	goto	i1l1815
  7559                           
  7560                           ;i2c2.c: 430: {
  7561                           ;i2c2.c: 432: i2c2_object.i2cErrors++;
  7562  04E6  3001               	movlw	1
  7563  04E7  00F2               	movwf	??_I2C2_ISR
  7564  04E8  0872               	movf	??_I2C2_ISR,w
  7565  04E9  0020               	movlb	0	; select bank0
  7566  04EA  07D0               	addwf	_i2c2_object+4,f
  7567                           
  7568                           ;i2c2.c: 435: SSP2CON2bits.ACKSTAT = 0;
  7569  04EB  0023               	movlb	3	; select bank3
  7570  04EC  131B               	bcf	27,6	;volatile
  7571                           
  7572                           ;i2c2.c: 438: I2C2_Stop(I2C2_DATA_NO_ACK);
  7573  04ED  3005               	movlw	5
  7574  04EE  3187  278D         	fcall	_I2C2_Stop
  7575                           
  7576                           ;i2c2.c: 440: }
  7577  04F0  0008               	return
  7578  04F1                     i1l1815:	
  7579                           
  7580                           ;i2c2.c: 441: else
  7581                           ;i2c2.c: 442: {
  7582                           ;i2c2.c: 444: if(i2c_bytes_left-- == 0U)
  7583  04F1  3001               	movlw	1
  7584  04F2  02F8               	subwf	I2C2_ISR@i2c_bytes_left,f
  7585  04F3  0A78               	incf	I2C2_ISR@i2c_bytes_left,w
  7586  04F4  1D03               	btfss	3,2
  7587  04F5  2D0A               	goto	i1l1823
  7588                           
  7589                           ;i2c2.c: 445: {
  7590                           ;i2c2.c: 449: p_i2c2_trb_current++;
  7591  04F6  3004               	movlw	4
  7592  04F7  00F2               	movwf	??_I2C2_ISR
  7593  04F8  0872               	movf	??_I2C2_ISR,w
  7594  04F9  07FB               	addwf	_p_i2c2_trb_current,f
  7595                           
  7596                           ;i2c2.c: 452: if(--i2c2_trb_count == 0)
  7597  04FA  3001               	movlw	1
  7598  04FB  02FC               	subwf	_i2c2_trb_count,f
  7599  04FC  1D03               	btfss	3,2
  7600  04FD  2D02               	goto	i1l126
  7601                           
  7602                           ;i2c2.c: 453: {
  7603                           ;i2c2.c: 454: I2C2_Stop(I2C2_MESSAGE_COMPLETE);
  7604  04FE  3000               	movlw	0
  7605  04FF  3187  278D         	fcall	_I2C2_Stop
  7606                           
  7607                           ;i2c2.c: 455: }
  7608  0501  0008               	return
  7609  0502                     i1l126:	
  7610                           
  7611                           ;i2c2.c: 456: else
  7612                           ;i2c2.c: 457: {
  7613                           ;i2c2.c: 464: SSP2CON2bits.RSEN = 1;
  7614  0502  0023               	movlb	3	; select bank3
  7615  0503  149B               	bsf	27,1	;volatile
  7616                           
  7617                           ;i2c2.c: 467: i2c2_state = S_MASTER_SEND_ADDR;
  7618  0504  3002               	movlw	2
  7619  0505  00F2               	movwf	??_I2C2_ISR
  7620  0506  0872               	movf	??_I2C2_ISR,w
  7621  0507  0020               	movlb	0	; select bank0
  7622  0508  00D1               	movwf	_i2c2_state
  7623                           
  7624                           ;i2c2.c: 469: }
  7625                           ;i2c2.c: 470: }
  7626  0509  0008               	return
  7627  050A                     i1l1823:	
  7628                           
  7629                           ;i2c2.c: 471: else
  7630                           ;i2c2.c: 472: {
  7631                           ;i2c2.c: 474: SSP2BUF = *pi2c_buf_ptr++;
  7632  050A  0879               	movf	I2C2_ISR@pi2c_buf_ptr,w
  7633  050B  0086               	movwf	6
  7634  050C  0187               	clrf	7
  7635  050D  0801               	movf	1,w
  7636  050E  0023               	movlb	3	; select bank3
  7637  050F  0096               	movwf	22	;volatile
  7638  0510  3001               	movlw	1
  7639  0511  00F2               	movwf	??_I2C2_ISR
  7640  0512  0872               	movf	??_I2C2_ISR,w
  7641  0513  07F9               	addwf	I2C2_ISR@pi2c_buf_ptr,f
  7642                           
  7643                           ;i2c2.c: 475: }
  7644                           ;i2c2.c: 476: }
  7645                           ;i2c2.c: 477: break;
  7646  0514  0008               	return
  7647  0515                     i1l129:	
  7648                           ;i2c2.c: 479: case S_MASTER_ACK_ADDR:
  7649                           
  7650                           
  7651                           ;i2c2.c: 482: if(SSP2CON2bits.ACKSTAT)
  7652  0515  0023               	movlb	3	; select bank3
  7653  0516  1F1B               	btfss	27,6	;volatile
  7654  0517  2D23               	goto	i1l130
  7655                           
  7656                           ;i2c2.c: 483: {
  7657                           ;i2c2.c: 486: i2c2_object.i2cErrors++;
  7658  0518  3001               	movlw	1
  7659  0519  00F2               	movwf	??_I2C2_ISR
  7660  051A  0872               	movf	??_I2C2_ISR,w
  7661  051B  0020               	movlb	0	; select bank0
  7662  051C  07D0               	addwf	_i2c2_object+4,f
  7663                           
  7664                           ;i2c2.c: 489: I2C2_Stop(I2C2_MESSAGE_ADDRESS_NO_ACK);
  7665  051D  3004               	movlw	4
  7666  051E  3187  278D         	fcall	_I2C2_Stop
  7667                           
  7668                           ;i2c2.c: 492: SSP2CON2bits.ACKSTAT = 0;
  7669  0520  0023               	movlb	3	; select bank3
  7670  0521  131B               	bcf	27,6	;volatile
  7671                           
  7672                           ;i2c2.c: 493: }
  7673  0522  0008               	return
  7674  0523                     i1l130:	
  7675                           
  7676                           ;i2c2.c: 494: else
  7677                           ;i2c2.c: 495: {
  7678                           ;i2c2.c: 496: SSP2CON2bits.RCEN = 1;
  7679  0523  159B               	bsf	27,3	;volatile
  7680                           
  7681                           ;i2c2.c: 497: i2c2_state = S_MASTER_ACK_RCV_DATA;
  7682  0524  3008               	movlw	8
  7683  0525  00F2               	movwf	??_I2C2_ISR
  7684  0526  0872               	movf	??_I2C2_ISR,w
  7685  0527  0020               	movlb	0	; select bank0
  7686  0528  00D1               	movwf	_i2c2_state
  7687                           
  7688                           ;i2c2.c: 498: }
  7689                           ;i2c2.c: 499: break;
  7690  0529  0008               	return
  7691  052A                     i1l1835:	
  7692                           ;i2c2.c: 501: case S_MASTER_RCV_DATA:
  7693                           
  7694                           
  7695                           ;i2c2.c: 506: i2c2_state = S_MASTER_ACK_RCV_DATA;
  7696  052A  3008               	movlw	8
  7697  052B  00F2               	movwf	??_I2C2_ISR
  7698  052C  0872               	movf	??_I2C2_ISR,w
  7699  052D  00D1               	movwf	_i2c2_state
  7700                           
  7701                           ;i2c2.c: 509: SSP2CON2bits.RCEN = 1;
  7702  052E  0023               	movlb	3	; select bank3
  7703  052F  159B               	bsf	27,3	;volatile
  7704                           
  7705                           ;i2c2.c: 511: break;
  7706  0530  0008               	return
  7707  0531                     i1l1839:	
  7708                           ;i2c2.c: 513: case S_MASTER_ACK_RCV_DATA:
  7709                           
  7710                           
  7711                           ;i2c2.c: 516: *pi2c_buf_ptr++ = SSP2BUF;
  7712  0531  0023               	movlb	3	; select bank3
  7713  0532  0816               	movf	22,w	;volatile
  7714  0533  00F2               	movwf	??_I2C2_ISR
  7715  0534  0879               	movf	I2C2_ISR@pi2c_buf_ptr,w
  7716  0535  0086               	movwf	6
  7717  0536  0187               	clrf	7
  7718  0537  0872               	movf	??_I2C2_ISR,w
  7719  0538  0081               	movwf	1
  7720  0539  3001               	movlw	1
  7721  053A  00F2               	movwf	??_I2C2_ISR
  7722  053B  0872               	movf	??_I2C2_ISR,w
  7723  053C  07F9               	addwf	I2C2_ISR@pi2c_buf_ptr,f
  7724                           
  7725                           ;i2c2.c: 519: if(--i2c_bytes_left)
  7726  053D  3001               	movlw	1
  7727  053E  02F8               	subwf	I2C2_ISR@i2c_bytes_left,f
  7728  053F  1903               	btfsc	3,2
  7729  0540  2D48               	goto	i1l134
  7730                           
  7731                           ;i2c2.c: 520: {
  7732                           ;i2c2.c: 526: SSP2CON2bits.ACKDT = 0;
  7733  0541  129B               	bcf	27,5	;volatile
  7734                           
  7735                           ;i2c2.c: 529: i2c2_state = S_MASTER_RCV_DATA;
  7736  0542  3006               	movlw	6
  7737  0543  00F2               	movwf	??_I2C2_ISR
  7738  0544  0872               	movf	??_I2C2_ISR,w
  7739  0545  0020               	movlb	0	; select bank0
  7740  0546  00D1               	movwf	_i2c2_state
  7741                           
  7742                           ;i2c2.c: 530: }
  7743  0547  2D4B               	goto	i1l1851
  7744  0548                     i1l134:	
  7745                           
  7746                           ;i2c2.c: 531: else
  7747                           ;i2c2.c: 532: {
  7748                           ;i2c2.c: 536: SSP2CON2bits.ACKDT = 1;
  7749  0548  169B               	bsf	27,5	;volatile
  7750                           
  7751                           ;i2c2.c: 538: I2C2_FunctionComplete();
  7752  0549  3187  27BC         	fcall	_I2C2_FunctionComplete
  7753  054B                     i1l1851:	
  7754                           
  7755                           ;i2c2.c: 539: }
  7756                           ;i2c2.c: 542: SSP2CON2bits.ACKEN = 1;
  7757  054B  0023               	movlb	3	; select bank3
  7758  054C  161B               	bsf	27,4	;volatile
  7759                           
  7760                           ;i2c2.c: 543: break;
  7761  054D  0008               	return
  7762  054E                     i1l1853:	
  7763                           ;i2c2.c: 545: case S_MASTER_RCV_STOP:
  7764                           
  7765                           
  7766                           ;i2c2.c: 546: case S_MASTER_SEND_STOP:
  7767                           ;i2c2.c: 549: I2C2_Stop(I2C2_MESSAGE_COMPLETE);
  7768  054E  3000               	movlw	0
  7769  054F  3187  278D         	fcall	_I2C2_Stop
  7770                           
  7771                           ;i2c2.c: 550: break;
  7772  0551  0008               	return
  7773  0552                     i1l1855:	
  7774                           ;i2c2.c: 552: default:
  7775                           
  7776                           
  7777                           ;i2c2.c: 556: i2c2_object.i2cErrors++;
  7778  0552  3001               	movlw	1
  7779  0553  00F2               	movwf	??_I2C2_ISR
  7780  0554  0872               	movf	??_I2C2_ISR,w
  7781  0555  0020               	movlb	0	; select bank0
  7782  0556  07D0               	addwf	_i2c2_object+4,f
  7783                           
  7784                           ;i2c2.c: 557: I2C2_Stop(I2C2_LOST_STATE);
  7785  0557  3006               	movlw	6
  7786  0558  3187  278D         	fcall	_I2C2_Stop
  7787                           
  7788                           ;i2c2.c: 560: }
  7789                           
  7790                           ;i2c2.c: 558: break;
  7791  055A  0008               	return
  7792  055B                     i1l1861:	
  7793  055B  0020               	movlb	0	; select bank0
  7794  055C  0851               	movf	_i2c2_state,w
  7795                           
  7796                           ; Switch size 1, requested type "space"
  7797                           ; Number of cases is 11, Range of values is 0 to 11
  7798                           ; switch strategies available:
  7799                           ; Name         Instructions Cycles
  7800                           ; direct_byte           30     6 (fixed)
  7801                           ; simple_byte           34    18 (average)
  7802                           ; jumptable            260     6 (fixed)
  7803                           ;	Chosen strategy is direct_byte
  7804  055D  0084               	movwf	4
  7805  055E  300C               	movlw	12
  7806  055F  0204               	subwf	4,w
  7807  0560  1803               	skipnc
  7808  0561  2D52               	goto	i1l1855
  7809  0562  3187               	movlp	high i1S2297
  7810  0563  3504               	lslf	4,w
  7811  0564  3E75               	addlw	low i1S2297
  7812  0565  0082               	movwf	2
  7813  0566  0008               	return
  7814  0567                     __end_of_I2C2_ISR:	
  7815                           
  7816                           	psect	swtext1
  7817  0775                     __pswtext1:	
  7818  0775                     i1S2297:	
  7819  0775  3184  2C40         	ljmp	i1l100
  7820  0777  3184  2C6B         	ljmp	i1l105
  7821  0779  3184  2CBF         	ljmp	i1l1781
  7822  077B  3184  2CE3         	ljmp	i1l122
  7823  077D  3185  2D4E         	ljmp	i1l1853
  7824  077F  3185  2D15         	ljmp	i1l129
  7825  0781  3185  2D2A         	ljmp	i1l1835
  7826  0783  3185  2D4E         	ljmp	i1l1853
  7827  0785  3185  2D31         	ljmp	i1l1839
  7828  0787  3185  2D52         	ljmp	i1l1855
  7829  0789  3184  2C73         	ljmp	i1l106
  7830  078B  3184  2C96         	ljmp	i1l111
  7831                           
  7832                           	psect	text22
  7833  078D                     __ptext22:	
  7834 ;; *************** function _I2C2_Stop *****************
  7835 ;; Defined at:
  7836 ;;		line 581 in file "mcc_generated_files/i2c2.c"
  7837 ;; Parameters:    Size  Location     Type
  7838 ;;  completion_c    1    wreg     enum E14260
  7839 ;; Auto vars:     Size  Location     Type
  7840 ;;  completion_c    1    1[COMMON] enum E14260
  7841 ;; Return value:  Size  Location     Type
  7842 ;;                  1    wreg      void 
  7843 ;; Registers used:
  7844 ;;		wreg, fsr1l, fsr1h, status,2, status,0
  7845 ;; Tracked objects:
  7846 ;;		On entry : 0/0
  7847 ;;		On exit  : 0/0
  7848 ;;		Unchanged: 0/0
  7849 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
  7850 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  7851 ;;      Locals:         1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  7852 ;;      Temps:          1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  7853 ;;      Totals:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  7854 ;;Total ram usage:        2 bytes
  7855 ;; Hardware stack levels used:    1
  7856 ;; This function calls:
  7857 ;;		Nothing
  7858 ;; This function is called by:
  7859 ;;		_I2C2_ISR
  7860 ;; This function uses a non-reentrant model
  7861 ;;
  7862                           
  7863                           
  7864                           ;psect for function _I2C2_Stop
  7865  078D                     _I2C2_Stop:	
  7866                           
  7867                           ;incstack = 0
  7868                           ; Regs used in _I2C2_Stop: [wreg+fsr1l+fsr1h+status,2+status,0]
  7869                           ;I2C2_Stop@completion_code stored from wreg
  7870  078D  00F1               	movwf	I2C2_Stop@completion_code
  7871                           
  7872                           ;i2c2.c: 584: SSP2CON2bits.PEN = 1;
  7873  078E  0023               	movlb	3	; select bank3
  7874  078F  151B               	bsf	27,2	;volatile
  7875                           
  7876                           ;i2c2.c: 587: if (p_i2c2_current->pTrFlag != (0))
  7877  0790  087A               	movf	_p_i2c2_current,w
  7878  0791  3E02               	addlw	2
  7879  0792  0086               	movwf	6
  7880  0793  0187               	clrf	7
  7881  0794  0801               	movf	1,w
  7882  0795  1903               	btfsc	3,2
  7883  0796  2FA2               	goto	i1l1561
  7884                           
  7885                           ;i2c2.c: 588: {
  7886                           ;i2c2.c: 590: *(p_i2c2_current->pTrFlag) = completion_code;
  7887  0797  0871               	movf	I2C2_Stop@completion_code,w
  7888  0798  00F0               	movwf	??_I2C2_Stop
  7889  0799  087A               	movf	_p_i2c2_current,w
  7890  079A  3E02               	addlw	2
  7891  079B  0086               	movwf	6
  7892  079C  0187               	clrf	7
  7893  079D  0801               	movf	1,w
  7894  079E  0086               	movwf	6
  7895  079F  0187               	clrf	7
  7896  07A0  0870               	movf	??_I2C2_Stop,w
  7897  07A1  0081               	movwf	1
  7898  07A2                     i1l1561:	
  7899                           
  7900                           ;i2c2.c: 591: }
  7901                           ;i2c2.c: 594: i2c2_state = S_MASTER_IDLE;
  7902  07A2  0020               	movlb	0	; select bank0
  7903  07A3  01D1               	clrf	_i2c2_state
  7904  07A4  0008               	return
  7905  07A5                     __end_of_I2C2_Stop:	
  7906                           
  7907                           	psect	text23
  7908  07BC                     __ptext23:	
  7909 ;; *************** function _I2C2_FunctionComplete *****************
  7910 ;; Defined at:
  7911 ;;		line 563 in file "mcc_generated_files/i2c2.c"
  7912 ;; Parameters:    Size  Location     Type
  7913 ;;		None
  7914 ;; Auto vars:     Size  Location     Type
  7915 ;;		None
  7916 ;; Return value:  Size  Location     Type
  7917 ;;                  1    wreg      void 
  7918 ;; Registers used:
  7919 ;;		wreg, status,2, status,0
  7920 ;; Tracked objects:
  7921 ;;		On entry : 0/0
  7922 ;;		On exit  : 0/0
  7923 ;;		Unchanged: 0/0
  7924 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
  7925 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  7926 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  7927 ;;      Temps:          1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  7928 ;;      Totals:         1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  7929 ;;Total ram usage:        1 bytes
  7930 ;; Hardware stack levels used:    1
  7931 ;; This function calls:
  7932 ;;		Nothing
  7933 ;; This function is called by:
  7934 ;;		_I2C2_ISR
  7935 ;; This function uses a non-reentrant model
  7936 ;;
  7937                           
  7938                           
  7939                           ;psect for function _I2C2_FunctionComplete
  7940  07BC                     _I2C2_FunctionComplete:	
  7941                           
  7942                           ;i2c2.c: 567: p_i2c2_trb_current++;
  7943                           
  7944                           ;incstack = 0
  7945                           ; Regs used in _I2C2_FunctionComplete: [wreg+status,2+status,0]
  7946  07BC  3004               	movlw	4
  7947  07BD  00F0               	movwf	??_I2C2_FunctionComplete
  7948  07BE  0870               	movf	??_I2C2_FunctionComplete,w
  7949  07BF  07FB               	addwf	_p_i2c2_trb_current,f
  7950                           
  7951                           ;i2c2.c: 570: if(--i2c2_trb_count == 0)
  7952  07C0  3001               	movlw	1
  7953  07C1  02FC               	subwf	_i2c2_trb_count,f
  7954  07C2  1D03               	btfss	3,2
  7955  07C3  2FCA               	goto	i1l141
  7956                           
  7957                           ;i2c2.c: 571: {
  7958                           ;i2c2.c: 572: i2c2_state = S_MASTER_SEND_STOP;
  7959  07C4  3004               	movlw	4
  7960  07C5  00F0               	movwf	??_I2C2_FunctionComplete
  7961  07C6  0870               	movf	??_I2C2_FunctionComplete,w
  7962  07C7  0020               	movlb	0	; select bank0
  7963  07C8  00D1               	movwf	_i2c2_state
  7964                           
  7965                           ;i2c2.c: 573: }
  7966  07C9  0008               	return
  7967  07CA                     i1l141:	
  7968                           
  7969                           ;i2c2.c: 574: else
  7970                           ;i2c2.c: 575: {
  7971                           ;i2c2.c: 576: i2c2_state = S_MASTER_RESTART;
  7972  07CA  0020               	movlb	0	; select bank0
  7973  07CB  01D1               	clrf	_i2c2_state
  7974  07CC  0AD1               	incf	_i2c2_state,f
  7975  07CD  0008               	return
  7976  07CE                     __end_of_I2C2_FunctionComplete:	
  7977                           
  7978                           	psect	text24
  7979  07FB                     __ptext24:	
  7980 ;; *************** function _I2C2_BusCollisionISR *****************
  7981 ;; Defined at:
  7982 ;;		line 728 in file "mcc_generated_files/i2c2.c"
  7983 ;; Parameters:    Size  Location     Type
  7984 ;;		None
  7985 ;; Auto vars:     Size  Location     Type
  7986 ;;		None
  7987 ;; Return value:  Size  Location     Type
  7988 ;;                  1    wreg      void 
  7989 ;; Registers used:
  7990 ;;		None
  7991 ;; Tracked objects:
  7992 ;;		On entry : 0/0
  7993 ;;		On exit  : 0/0
  7994 ;;		Unchanged: 0/0
  7995 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
  7996 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  7997 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  7998 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  7999 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  8000 ;;Total ram usage:        0 bytes
  8001 ;; Hardware stack levels used:    1
  8002 ;; This function calls:
  8003 ;;		Nothing
  8004 ;; This function is called by:
  8005 ;;		_INTERRUPT_InterruptManager
  8006 ;; This function uses a non-reentrant model
  8007 ;;
  8008                           
  8009                           
  8010                           ;psect for function _I2C2_BusCollisionISR
  8011  07FB                     _I2C2_BusCollisionISR:	
  8012                           
  8013                           ;incstack = 0
  8014                           ; Regs used in _I2C2_BusCollisionISR: []
  8015  07FB  0008               	return
  8016  07FC                     __end_of_I2C2_BusCollisionISR:	
  8017  007E                     btemp	set	126	;btemp
  8018  007E                     int$flags	set	126
  8019  007E                     wtemp0	set	126


Data Sizes:
    Strings     316
    Constant    18
    Data        0
    BSS         33
    Persistent  0
    Stack       0

Auto Spaces:
    Space          Size  Autos    Used
    COMMON           14      7      13
    BANK0            80     44      71
    BANK1            80      0       0
    BANK2            80      0       0
    BANK3            80      0       0
    BANK4            80      0       0
    BANK5            80      0       0
    BANK6            80      0       0
    BANK7            80      0       0
    BANK8            80      0       0
    BANK9            80      0       0
    BANK10           80      0       0
    BANK11           80      0       0
    BANK12           48      0       0

Pointer List with Targets:

    i2c2_tr_queue.ptrb_list.pbuffer	PTR unsigned char  size(1) Largest target is 1
		 -> EMC1001_PrintTemp@templo(BANK0[1]), EMC1001_PrintTemp@temp(BANK0[1]), EMC1001_PrintInfo@templo(BANK0[1]), EMC1001_PrintInfo@temp(BANK0[1]), 
		 -> EMC1001_PrintInfo@data(BANK0[1]), EMC1001_Read@reg(BANK0[1]), 

    EMC1001_Read@trb.pbuffer	PTR unsigned char  size(1) Largest target is 1
		 -> EMC1001_PrintTemp@templo(BANK0[1]), EMC1001_PrintTemp@temp(BANK0[1]), EMC1001_PrintInfo@templo(BANK0[1]), EMC1001_PrintInfo@temp(BANK0[1]), 
		 -> EMC1001_PrintInfo@data(BANK0[1]), EMC1001_Read@reg(BANK0[1]), 

    i2c2_tr_queue.pTrFlag	PTR enum E14260 size(1) Largest target is 1
		 -> EMC1001_Read@status(BANK0[1]), 

    i2c2_tr_queue.ptrb_list	PTR struct . size(1) Largest target is 10
		 -> EMC1001_Read@trb(BANK0[8]), I2C2_MasterRead@trBlock(BANK0[4]), I2C2_MasterWrite@trBlock(BANK0[4]), 

    cputs@s	PTR const unsigned char  size(2) Largest target is 43
		 -> STR_14(CODE[2]), STR_8(CODE[2]), STR_2(CODE[43]), 

    puts@s	PTR const unsigned char  size(2) Largest target is 43
		 -> STR_14(CODE[2]), STR_8(CODE[2]), STR_2(CODE[43]), 

    printf$662	PTR const unsigned char  size(2) Largest target is 17
		 -> STR_18(CODE[17]), STR_17(CODE[17]), 

    printf@f	PTR const unsigned char  size(2) Largest target is 33
		 -> STR_15(CODE[30]), STR_13(CODE[26]), STR_12(CODE[22]), STR_11(CODE[32]), 
		 -> STR_10(CODE[33]), STR_9(CODE[21]), STR_7(CODE[16]), STR_6(CODE[23]), 
		 -> STR_3(CODE[24]), STR_1(CODE[2]), 

    printf@cp	PTR const unsigned char  size(2) Largest target is 7
		 -> STR_16(CODE[7]), STR_5(CODE[1]), STR_4(CODE[3]), I2C2_ISR@i2c_address(BANK0[2]), 

    printf@ap	PTR void [1] size(1) Largest target is 2
		 -> ?_printf(BANK0[2]), 

    EMC1001_PrintInfo$613	PTR const unsigned char  size(2) Largest target is 3
		 -> STR_5(CODE[1]), STR_4(CODE[3]), 

    EMC1001_Read@pData	PTR unsigned char  size(1) Largest target is 1
		 -> EMC1001_PrintTemp@templo(BANK0[1]), EMC1001_PrintTemp@temp(BANK0[1]), EMC1001_PrintInfo@templo(BANK0[1]), EMC1001_PrintInfo@temp(BANK0[1]), 
		 -> EMC1001_PrintInfo@data(BANK0[1]), 

    I2C2_MasterWriteTRBBuild@pdata	PTR unsigned char  size(1) Largest target is 1
		 -> EMC1001_Read@reg(BANK0[1]), 

    I2C2_MasterWriteTRBBuild@ptrb.pbuffer	PTR unsigned char  size(1) Largest target is 1
		 -> EMC1001_PrintTemp@templo(BANK0[1]), EMC1001_PrintTemp@temp(BANK0[1]), EMC1001_PrintInfo@templo(BANK0[1]), EMC1001_PrintInfo@temp(BANK0[1]), 
		 -> EMC1001_PrintInfo@data(BANK0[1]), EMC1001_Read@reg(BANK0[1]), 

    I2C2_MasterWriteTRBBuild@ptrb	PTR struct . size(1) Largest target is 10
		 -> EMC1001_Read@trb(BANK0[8]), I2C2_MasterWrite@trBlock(BANK0[4]), 

    I2C2_MasterReadTRBBuild@pdata	PTR unsigned char  size(1) Largest target is 1
		 -> EMC1001_PrintTemp@templo(BANK0[1]), EMC1001_PrintTemp@temp(BANK0[1]), EMC1001_PrintInfo@templo(BANK0[1]), EMC1001_PrintInfo@temp(BANK0[1]), 
		 -> EMC1001_PrintInfo@data(BANK0[1]), 

    I2C2_MasterReadTRBBuild@ptrb.pbuffer	PTR unsigned char  size(1) Largest target is 1
		 -> EMC1001_PrintTemp@templo(BANK0[1]), EMC1001_PrintTemp@temp(BANK0[1]), EMC1001_PrintInfo@templo(BANK0[1]), EMC1001_PrintInfo@temp(BANK0[1]), 
		 -> EMC1001_PrintInfo@data(BANK0[1]), EMC1001_Read@reg(BANK0[1]), 

    I2C2_MasterReadTRBBuild@ptrb	PTR struct . size(1) Largest target is 10
		 -> EMC1001_Read@trb(BANK0[8]), I2C2_MasterRead@trBlock(BANK0[4]), 

    i2c2_object.pTrTail.ptrb_list.pbuffer	PTR unsigned char  size(1) Largest target is 1
		 -> EMC1001_PrintTemp@templo(BANK0[1]), EMC1001_PrintTemp@temp(BANK0[1]), EMC1001_PrintInfo@templo(BANK0[1]), EMC1001_PrintInfo@temp(BANK0[1]), 
		 -> EMC1001_PrintInfo@data(BANK0[1]), EMC1001_Read@reg(BANK0[1]), 

    i2c2_object.pTrTail.pTrFlag	PTR enum E14260 size(1) Largest target is 1
		 -> EMC1001_Read@status(BANK0[1]), 

    i2c2_object.pTrTail.ptrb_list	PTR struct . size(1) Largest target is 10
		 -> EMC1001_Read@trb(BANK0[8]), I2C2_MasterRead@trBlock(BANK0[4]), I2C2_MasterWrite@trBlock(BANK0[4]), 

    I2C2_MasterTRBInsert@ptrb_list	PTR struct . size(1) Largest target is 10
		 -> EMC1001_Read@trb(BANK0[8]), I2C2_MasterRead@trBlock(BANK0[4]), I2C2_MasterWrite@trBlock(BANK0[4]), 

    I2C2_MasterTRBInsert@pflag	PTR enum E14260 size(1) Largest target is 1
		 -> EMC1001_Read@status(BANK0[1]), 

    F14372.pbuffer	PTR unsigned char  size(1) Largest target is 1
		 -> EMC1001_PrintTemp@templo(BANK0[1]), EMC1001_PrintTemp@temp(BANK0[1]), EMC1001_PrintInfo@templo(BANK0[1]), EMC1001_PrintInfo@temp(BANK0[1]), 
		 -> EMC1001_PrintInfo@data(BANK0[1]), EMC1001_Read@reg(BANK0[1]), 

    F14367.pbuffer	PTR unsigned char  size(1) Largest target is 1
		 -> EMC1001_PrintTemp@templo(BANK0[1]), EMC1001_PrintTemp@temp(BANK0[1]), EMC1001_PrintInfo@templo(BANK0[1]), EMC1001_PrintInfo@temp(BANK0[1]), 
		 -> EMC1001_PrintInfo@data(BANK0[1]), EMC1001_Read@reg(BANK0[1]), 

    I2C2_ISR@pi2c_buf_ptr	PTR unsigned char  size(1) Largest target is 2
		 -> EMC1001_PrintTemp@templo(BANK0[1]), EMC1001_PrintTemp@temp(BANK0[1]), EMC1001_PrintInfo@templo(BANK0[1]), EMC1001_PrintInfo@temp(BANK0[1]), 
		 -> EMC1001_PrintInfo@data(BANK0[1]), EMC1001_Read@reg(BANK0[1]), I2C2_ISR@i2c_address(BANK0[2]), NULL(NULL[0]), 

    S87$pbuffer	PTR unsigned char  size(1) Largest target is 1
		 -> EMC1001_PrintTemp@templo(BANK0[1]), EMC1001_PrintTemp@temp(BANK0[1]), EMC1001_PrintInfo@templo(BANK0[1]), EMC1001_PrintInfo@temp(BANK0[1]), 
		 -> EMC1001_PrintInfo@data(BANK0[1]), EMC1001_Read@reg(BANK0[1]), 

    p_i2c2_trb_current.pbuffer	PTR unsigned char  size(1) Largest target is 1
		 -> EMC1001_PrintTemp@templo(BANK0[1]), EMC1001_PrintTemp@temp(BANK0[1]), EMC1001_PrintInfo@templo(BANK0[1]), EMC1001_PrintInfo@temp(BANK0[1]), 
		 -> EMC1001_PrintInfo@data(BANK0[1]), EMC1001_Read@reg(BANK0[1]), 

    p_i2c2_trb_current	PTR struct . size(1) Largest target is 10
		 -> EMC1001_Read@trb(BANK0[8]), I2C2_MasterRead@trBlock(BANK0[4]), I2C2_MasterWrite@trBlock(BANK0[4]), NULL(NULL[0]), 

    i2c2_object.pTrHead.pTrFlag	PTR enum E14260 size(1) Largest target is 1
		 -> EMC1001_Read@status(BANK0[1]), 

    i2c2_object.pTrHead.ptrb_list	PTR struct . size(1) Largest target is 10
		 -> EMC1001_Read@trb(BANK0[8]), I2C2_MasterRead@trBlock(BANK0[4]), I2C2_MasterWrite@trBlock(BANK0[4]), 

    S99$pTrFlag	PTR enum E14260 size(1) Largest target is 1
		 -> EMC1001_Read@status(BANK0[1]), 

    p_i2c2_current.pTrFlag	PTR enum E14260 size(1) Largest target is 1
		 -> EMC1001_Read@status(BANK0[1]), 

    S99$ptrb_list	PTR struct . size(1) Largest target is 10
		 -> EMC1001_Read@trb(BANK0[8]), I2C2_MasterRead@trBlock(BANK0[4]), I2C2_MasterWrite@trBlock(BANK0[4]), 

    p_i2c2_current.ptrb_list	PTR struct . size(1) Largest target is 10
		 -> EMC1001_Read@trb(BANK0[8]), I2C2_MasterRead@trBlock(BANK0[4]), I2C2_MasterWrite@trBlock(BANK0[4]), 

    p_i2c2_current	PTR struct . size(1) Largest target is 5
		 -> i2c2_tr_queue(BANK0[3]), NULL(NULL[0]), 

    S110$pTrHead	PTR struct . size(1) Largest target is 5
		 -> i2c2_tr_queue(BANK0[3]), 

    i2c2_object.pTrHead	PTR struct . size(1) Largest target is 5
		 -> i2c2_tr_queue(BANK0[3]), 

    S110$pTrTail	PTR struct . size(1) Largest target is 5
		 -> i2c2_tr_queue(BANK0[3]), 

    i2c2_object.pTrTail	PTR struct . size(1) Largest target is 5
		 -> i2c2_tr_queue(BANK0[3]), 


Critical Paths under _main in COMMON

    None.

Critical Paths under _INTERRUPT_InterruptManager in COMMON

    _INTERRUPT_InterruptManager->_I2C2_ISR
    _I2C2_ISR->_I2C2_Stop

Critical Paths under _main in BANK0

    _main->_EMC1001_PrintInfo
    _SYSTEM_Initialize->_I2C2_Initialize
    _SYSTEM_Initialize->_PIN_MANAGER_Initialize
    _EMC1001_PrintTemp->_printf
    _EMC1001_PrintInfo->_printf
    _puts->_cputs
    _cputs->_putch
    _printf->___lwmod
    _putch->_EUSART_Write
    ___lwmod->___lwdiv
    _EMC1001_Read->_I2C2_MasterReadTRBBuild
    _EMC1001_Read->_I2C2_MasterWriteTRBBuild

Critical Paths under _INTERRUPT_InterruptManager in BANK0

    None.

Critical Paths under _main in BANK1

    None.

Critical Paths under _INTERRUPT_InterruptManager in BANK1

    None.

Critical Paths under _main in BANK2

    None.

Critical Paths under _INTERRUPT_InterruptManager in BANK2

    None.

Critical Paths under _main in BANK3

    None.

Critical Paths under _INTERRUPT_InterruptManager in BANK3

    None.

Critical Paths under _main in BANK4

    None.

Critical Paths under _INTERRUPT_InterruptManager in BANK4

    None.

Critical Paths under _main in BANK5

    None.

Critical Paths under _INTERRUPT_InterruptManager in BANK5

    None.

Critical Paths under _main in BANK6

    None.

Critical Paths under _INTERRUPT_InterruptManager in BANK6

    None.

Critical Paths under _main in BANK7

    None.

Critical Paths under _INTERRUPT_InterruptManager in BANK7

    None.

Critical Paths under _main in BANK8

    None.

Critical Paths under _INTERRUPT_InterruptManager in BANK8

    None.

Critical Paths under _main in BANK9

    None.

Critical Paths under _INTERRUPT_InterruptManager in BANK9

    None.

Critical Paths under _main in BANK10

    None.

Critical Paths under _INTERRUPT_InterruptManager in BANK10

    None.

Critical Paths under _main in BANK11

    None.

Critical Paths under _INTERRUPT_InterruptManager in BANK11

    None.

Critical Paths under _main in BANK12

    None.

Critical Paths under _INTERRUPT_InterruptManager in BANK12

    None.

Call Graph Tables:

 ---------------------------------------------------------------------------------
 (Depth) Function   	        Calls       Base Space   Used Autos Params    Refs
 ---------------------------------------------------------------------------------
 (0) _main                                                 2     2      0   14616
                                             42 BANK0      2     2      0
                  _EMC1001_PrintInfo
                  _EMC1001_PrintTemp
                  _SYSTEM_Initialize
                             _printf
 ---------------------------------------------------------------------------------
 (1) _SYSTEM_Initialize                                    0     0      0      34
                  _EUSART_Initialize
                    _I2C2_Initialize
              _OSCILLATOR_Initialize
             _PIN_MANAGER_Initialize
 ---------------------------------------------------------------------------------
 (2) _PIN_MANAGER_Initialize                               1     1      0      34
                                              0 BANK0      1     1      0
 ---------------------------------------------------------------------------------
 (2) _OSCILLATOR_Initialize                                0     0      0       0
 ---------------------------------------------------------------------------------
 (2) _I2C2_Initialize                                      1     1      0       0
                                              0 BANK0      1     1      0
 ---------------------------------------------------------------------------------
 (2) _EUSART_Initialize                                    0     0      0       0
 ---------------------------------------------------------------------------------
 (1) _EMC1001_PrintTemp                                    4     4      0    5489
                                             35 BANK0      4     4      0
                       _EMC1001_Read
                             ___wmul
                             _printf
 ---------------------------------------------------------------------------------
 (1) _EMC1001_PrintInfo                                    7     7      0    6610
                                             35 BANK0      7     7      0
                       _EMC1001_Read
                             ___wmul
                             _printf
                               _puts
 ---------------------------------------------------------------------------------
 (2) _puts                                                 2     0      2     480
                                              5 BANK0      2     0      2
                              _cputs
                              _putch
 ---------------------------------------------------------------------------------
 (3) _cputs                                                3     1      2     192
                                              2 BANK0      3     1      2
                              _putch
 ---------------------------------------------------------------------------------
 (1) _printf                                              27    21      6    2483
                                             14 BANK0     21    15      6
                            ___lwdiv
                            ___lwmod
                             ___wmul (ARG)
                              _putch
 ---------------------------------------------------------------------------------
 (2) _putch                                                1     1      0      62
                                              1 BANK0      1     1      0
                       _EUSART_Write
 ---------------------------------------------------------------------------------
 (3) _EUSART_Write                                         1     1      0      31
                                              0 BANK0      1     1      0
 ---------------------------------------------------------------------------------
 (2) ___lwmod                                              6     2      4     265
                                              8 BANK0      6     2      4
                            ___lwdiv (ARG)
 ---------------------------------------------------------------------------------
 (2) ___lwdiv                                              8     4      4     374
                                              0 BANK0      8     4      4
 ---------------------------------------------------------------------------------
 (2) ___wmul                                               6     2      4     526
                                              0 BANK0      6     2      4
 ---------------------------------------------------------------------------------
 (2) _EMC1001_Read                                         5     4      1    2239
                                              7 BANK0      5     4      1
            _I2C2_MasterReadTRBBuild
               _I2C2_MasterTRBInsert
           _I2C2_MasterWriteTRBBuild
 ---------------------------------------------------------------------------------
 (3) _I2C2_MasterWriteTRBBuild                             7     3      4     504
                                              0 BANK0      7     3      4
 ---------------------------------------------------------------------------------
 (3) _I2C2_MasterTRBInsert                                 4     2      2     450
                                              0 BANK0      4     2      2
 ---------------------------------------------------------------------------------
 (3) _I2C2_MasterReadTRBBuild                              7     3      4     526
                                              0 BANK0      7     3      4
 ---------------------------------------------------------------------------------
 Estimated maximum stack depth 3
 ---------------------------------------------------------------------------------
 (Depth) Function   	        Calls       Base Space   Used Autos Params    Refs
 ---------------------------------------------------------------------------------
 (6) _INTERRUPT_InterruptManager                           1     1      0      22
                                              6 COMMON     1     1      0
               _I2C2_BusCollisionISR
                           _I2C2_ISR
 ---------------------------------------------------------------------------------
 (7) _I2C2_ISR                                             4     4      0      22
                                              2 COMMON     4     4      0
              _I2C2_FunctionComplete
                          _I2C2_Stop
 ---------------------------------------------------------------------------------
 (8) _I2C2_Stop                                            2     2      0      22
                                              0 COMMON     2     2      0
 ---------------------------------------------------------------------------------
 (8) _I2C2_FunctionComplete                                1     1      0       0
                                              0 COMMON     1     1      0
 ---------------------------------------------------------------------------------
 (7) _I2C2_BusCollisionISR                                 0     0      0       0
 ---------------------------------------------------------------------------------
 Estimated maximum stack depth 8
 ---------------------------------------------------------------------------------

 Call Graph Graphs:

 _main (ROOT)
   _EMC1001_PrintInfo
     _EMC1001_Read
       _I2C2_MasterReadTRBBuild
       _I2C2_MasterTRBInsert
       _I2C2_MasterWriteTRBBuild
     ___wmul
     _printf
       ___lwdiv
       ___lwmod
         ___lwdiv (ARG)
       ___wmul (ARG)
       _putch (ARG)
         _EUSART_Write
     _puts
       _cputs
         _putch
           _EUSART_Write
       _putch
         _EUSART_Write
   _EMC1001_PrintTemp
     _EMC1001_Read
       _I2C2_MasterReadTRBBuild
       _I2C2_MasterTRBInsert
       _I2C2_MasterWriteTRBBuild
     ___wmul
     _printf
       ___lwdiv
       ___lwmod
         ___lwdiv (ARG)
       ___wmul (ARG)
       _putch (ARG)
         _EUSART_Write
   _SYSTEM_Initialize
     _EUSART_Initialize
     _I2C2_Initialize
     _OSCILLATOR_Initialize
     _PIN_MANAGER_Initialize
   _printf
     ___lwdiv
     ___lwmod
       ___lwdiv (ARG)
     ___wmul (ARG)
     _putch (ARG)
       _EUSART_Write

 _INTERRUPT_InterruptManager (ROOT)
   _I2C2_BusCollisionISR
   _I2C2_ISR
     _I2C2_FunctionComplete
     _I2C2_Stop

 Address spaces:
Name               Size   Autos  Total    Cost      Usage
BIGRAM             3F0      0       0       0        0.0%
EEDATA             100      0       0       0        0.0%
NULL                 0      0       0       0        0.0%
CODE                 0      0       0       0        0.0%
BITCOMMON            E      0       0       1        0.0%
BITSFR0              0      0       0       1        0.0%
SFR0                 0      0       0       1        0.0%
COMMON               E      7       D       2       92.9%
BITSFR1              0      0       0       2        0.0%
SFR1                 0      0       0       2        0.0%
BITSFR2              0      0       0       3        0.0%
SFR2                 0      0       0       3        0.0%
STACK                0      0       0       3        0.0%
BITBANK0            50      0       0       4        0.0%
BITSFR3              0      0       0       4        0.0%
SFR3                 0      0       0       4        0.0%
BANK0               50     2C      47       5       88.8%
BITSFR4              0      0       0       5        0.0%
SFR4                 0      0       0       5        0.0%
BITBANK1            50      0       0       6        0.0%
BITSFR5              0      0       0       6        0.0%
SFR5                 0      0       0       6        0.0%
BANK1               50      0       0       7        0.0%
BITSFR6              0      0       0       7        0.0%
SFR6                 0      0       0       7        0.0%
BITBANK2            50      0       0       8        0.0%
BITSFR7              0      0       0       8        0.0%
SFR7                 0      0       0       8        0.0%
BANK2               50      0       0       9        0.0%
BITSFR8              0      0       0       9        0.0%
SFR8                 0      0       0       9        0.0%
BITBANK3            50      0       0      10        0.0%
BITSFR9              0      0       0      10        0.0%
SFR9                 0      0       0      10        0.0%
BANK3               50      0       0      11        0.0%
BITSFR10             0      0       0      11        0.0%
SFR10                0      0       0      11        0.0%
BITBANK4            50      0       0      12        0.0%
BITSFR11             0      0       0      12        0.0%
SFR11                0      0       0      12        0.0%
BANK4               50      0       0      13        0.0%
BITSFR12             0      0       0      13        0.0%
SFR12                0      0       0      13        0.0%
BITBANK5            50      0       0      14        0.0%
BITSFR13             0      0       0      14        0.0%
SFR13                0      0       0      14        0.0%
BANK5               50      0       0      15        0.0%
BITSFR14             0      0       0      15        0.0%
SFR14                0      0       0      15        0.0%
BITBANK6            50      0       0      16        0.0%
BITSFR15             0      0       0      16        0.0%
SFR15                0      0       0      16        0.0%
BANK6               50      0       0      17        0.0%
BITSFR16             0      0       0      17        0.0%
SFR16                0      0       0      17        0.0%
BITBANK7            50      0       0      18        0.0%
BITSFR17             0      0       0      18        0.0%
SFR17                0      0       0      18        0.0%
BANK7               50      0       0      19        0.0%
BITSFR18             0      0       0      19        0.0%
SFR18                0      0       0      19        0.0%
BITSFR19             0      0       0      20        0.0%
SFR19                0      0       0      20        0.0%
ABS                  0      0      54      20        0.0%
BITBANK8            50      0       0      21        0.0%
BITSFR20             0      0       0      21        0.0%
SFR20                0      0       0      21        0.0%
BANK8               50      0       0      22        0.0%
BITSFR21             0      0       0      22        0.0%
SFR21                0      0       0      22        0.0%
BITBANK9            50      0       0      23        0.0%
BITSFR22             0      0       0      23        0.0%
SFR22                0      0       0      23        0.0%
BANK9               50      0       0      24        0.0%
BITSFR23             0      0       0      24        0.0%
SFR23                0      0       0      24        0.0%
BITBANK10           50      0       0      25        0.0%
BITSFR24             0      0       0      25        0.0%
SFR24                0      0       0      25        0.0%
BANK10              50      0       0      26        0.0%
BITSFR25             0      0       0      26        0.0%
SFR25                0      0       0      26        0.0%
BITBANK11           50      0       0      27        0.0%
BITSFR26             0      0       0      27        0.0%
SFR26                0      0       0      27        0.0%
BANK11              50      0       0      28        0.0%
BITSFR27             0      0       0      28        0.0%
SFR27                0      0       0      28        0.0%
BITBANK12           30      0       0      29        0.0%
BITSFR28             0      0       0      29        0.0%
SFR28                0      0       0      29        0.0%
BANK12              30      0       0      30        0.0%
BITSFR29             0      0       0      30        0.0%
SFR29                0      0       0      30        0.0%
BITSFR30             0      0       0      31        0.0%
SFR30                0      0       0      31        0.0%
DATA                 0      0      54      31        0.0%
BITSFR31             0      0       0      32        0.0%
SFR31                0      0       0      32        0.0%


Microchip Technology PIC Macro Assembler V1.41 build -162212810 
Symbol Table                                                                                   Fri Mar 24 03:56:38 2017

                                  pc 0002                          __CFG_CP$OFF 0000  
              ?_I2C2_MasterTRBInsert 0020                                   l31 07F3  
                ___wmul@multiplicand 0022       I2C2_MasterReadTRBBuild@address 0022  
                        __CFG_LVP$ON 0000                          __CFG_ZCD$ON 0000  
                                l353 009D                                  l354 0052  
                                l371 00E4                                  l355 0053  
                                l470 074A                                  l366 00C2  
                                l388 018E                                  _GIE 005F  
                       __CFG_CPD$OFF 0000                    EMC1001_Read@pData 0027  
                                u945 0682                                  u965 068C  
                                u975 0696                                  u985 069E  
              __size_of_EMC1001_Read 003C                         __CFG_BORV$LO 0000  
                                wreg 0009                     __end_of_I2C2_ISR 0567  
                               l2021 07A5                                 l2105 00B6  
                               l2201 01F0                                 l2131 0106  
                               l2141 0143                                 l2133 010F  
                               l1503 06A6                                 l2231 02A1  
                               l2207 0213                                 l1521 06CA  
                               l2137 0117                                 l2217 023B  
                               l1515 06B2                                 l2147 0165  
                               l2155 0178                                 l2139 011D  
                               l2075 004F                                 l2235 02BC  
                               l2219 025A                                 l2251 058F  
                               l1701 066A                                 l1517 06BE  
                               l1525 06D3                                 l2157 017C  
                               l2077 0055                                 l2093 007D  
                               l2229 0282                                 l1471 0628  
                               l2167 0744                                 l2159 0033  
                               l2239 02D7                                 l1473 062D  
                               l2089 0068                                 l2193 01BA  
                               l1467 0621                                 l1491 067F  
                               l2259 0705                                 l1477 0634  
                               l1493 068B                                 l2197 01D5  
                               l2189 01AB                                 l1499 069D  
                               STR_1 042B                                 STR_2 02F1  
                               STR_3 0395                                 STR_4 0428  
                               STR_5 03D9                                 STR_6 03AD  
                               STR_7 0411                                 STR_8 03D8  
                               STR_9 03DA                                 u1015 06B5  
                               u1035 06C4                                 u1045 06CB  
                               u2005 022C                                 u2035 0273  
                               u2107 0719                                 _LATA 0016  
                               u1270 0674                                 _LATB 0017  
                               _LATC 0018                                 u2085 0580  
                               u1730 05F2                                 u1815 00DD  
                               u1915 074B                                 u1925 0750  
                               u1845 00FF                                 _WPUA 0F39  
                               _WPUB 0F44                                 _WPUC 0F4F  
                               _WPUE 0F65                         __CFG_WRT$OFF 0000  
                      __CFG_FCMEN$ON 0000                                 _main 0700  
                               fsr0h 0005                                 fsr1h 0007  
                               indf0 0000                                 fsr0l 0004  
                               indf1 0001                                 fsr1l 0006  
                               btemp 007E                                 _puts 07DA  
        I2C2_MasterReadTRBBuild@ptrb 0026                        __CFG_BOREN$ON 0000  
                               start 001B                   EMC1001_Read@status 002B  
                      __CFG_CSWEN$ON 0000                        __CFG_MCLRE$ON 0000  
                       _EMC1001_Read 063A                           _i2c2_state 0051  
                      ?_EUSART_Write 0070       __size_of_OSCILLATOR_Initialize 0009  
      __end_of_OSCILLATOR_Initialize 1000              _I2C2_MasterReadTRBBuild 06D8  
                              ?_main 0070                                STR_10 031C  
                              STR_11 033D                                STR_12 03C4  
                              STR_13 037B                                STR_14 03D8  
                              STR_15 035D                                STR_16 0421  
                              STR_17 03EF                        __CFG_WDTE$OFF 0000  
                              STR_18 0400                    __end_of_I2C2_Stop 07A5  
                              ?_puts 0025                      __end_of___lwdiv 06AB  
                              i1l100 0440                                i1l111 0496  
                              i1l112 04A2                                i1l105 046B  
                              i1l130 0523                                i1l122 04E3  
                              i1l106 0473                                i1l202 0016  
                              i1l141 07CA       __size_of_I2C2_FunctionComplete 0012  
                              i1l134 0548                                i1l126 0502  
                              i1l129 0515                      __end_of___lwmod 06D8  
                              i1l198 0011        __end_of_I2C2_FunctionComplete 07CE  
                              _OSCEN 0891                                _TRISA 0011  
                              _TRISB 0012                                _TRISC 0013  
                    __end_of_dpowers 02E9                                _cputs 07A5  
                              _putch 0FEB         I2C2_MasterReadTRBBuild@pdata 0020  
                              puts@s 0025                                status 0003  
                              wtemp0 007E              EMC1001_PrintInfo@templo 0048  
                  ??_I2C2_Initialize 0020                      __initialization 001D  
                       __end_of_main 0721               ??_I2C2_MasterTRBInsert 0022  
                       __end_of_puts 07E6                       ??_EUSART_Write 0020  
        ?_INTERRUPT_InterruptManager 0070     __end_of_I2C2_MasterWriteTRBBuild 0741  
                             ??_main 004A                          _i2c2_object 004C  
                             ??_puts 0027                               ?_cputs 0022  
                             i1S2297 0775                               _ANSELA 0F38  
                             ?_putch 0070                               _ANSELB 0F43  
                             _ANSELC 0F4E                   __CFG_RSTOSC$HFINT1 0000  
                             _RC1REG 0119                               _RC0PPS 0F20  
                             _RC1STA 011D                               _RC3PPS 0F23  
                             _RC4PPS 0F24         __end_of_I2C2_BusCollisionISR 07FC  
                             i1l1561 07A2                               i1l1801 04D3  
                             i1l1823 050A                               i1l1815 04F1  
                             i1l1807 04DE                               i1l1761 047F  
                             i1l1851 054B                               i1l1835 052A  
                             i1l1853 054E                               i1l1781 04BF  
                             i1l1749 045E                               i1l1861 055B  
                             i1l1855 0552                               i1l1839 0531  
                             i1l1767 0491                       __CFG_WDTCCS$SC 0000  
                             _OSCFRQ 0893                               _TX1REG 011A  
                             _TX1STA 011E                       __CFG_PWRTE$OFF 0000  
                             ___wmul 0741                       _p_i2c2_current 007A  
                     __CFG_STVREN$ON 0000            ??_I2C2_MasterReadTRBBuild 0024  
                          ??___lwdiv 0024                            ??___lwmod 002C  
                          ?_I2C2_ISR 0070             I2C2_Stop@completion_code 0071  
                             _printf 002E        I2C2_MasterReadTRBBuild@length 0021  
                             cputs@s 0022                    _SYSTEM_Initialize 07CE  
            __end_of__initialization 002A                   ?_SYSTEM_Initialize 0070  
                    EMC1001_Read@reg 002A                      EMC1001_Read@trb 0052  
            EMC1001_PrintTemp@templo 0046                       __pcstackCOMMON 0070  
                ??_SYSTEM_Initialize 0021                        __end_of_cputs 07BC  
                     _i2c2_trb_count 007C                        __end_of_putch 0FF1  
                         ??_I2C2_ISR 0072             _I2C2_MasterWriteTRBBuild 0721  
       I2C2_MasterWriteTRBBuild@ptrb 0026                              ??_cputs 0024  
          __end_of_SYSTEM_Initialize 07DA                              ??_putch 0021  
              _EMC1001_PrintInfo$613 0045                           __pbssBANK0 004C  
               __end_of_EUSART_Write 07FB                           __pmaintext 0700  
                            ?___wmul 0020                      __CFG_PPS1WAY$ON 0000  
                         __pintentry 0004                       _SSP2DATPPSbits 0EC9  
               _I2C2_BusCollisionISR 07FB                              ?_printf 002E  
                            _SP1BRGH 011C                              _SP1BRGL 011B  
  I2C2_ISR@i2c_10bit_address_restart 0077                              _OSCCON1 088D  
                            _OSCCON3 088F                            _I2C2_Stop 078D  
                     _SSP2CLKPPSbits 0EC8                              _OSCTUNE 0892  
                            _SSP2ADD 0197                              _PPSLOCK 0E8F  
                            _SSP2BUF 0196                      _I2C2_Initialize 075D  
             I2C2_MasterRead@trBlock 005A                    _EMC1001_PrintInfo 018F  
                  _EMC1001_PrintTemp 0567                   ?_EMC1001_PrintInfo 0070  
                 ?_EMC1001_PrintTemp 0070                 __CFG_SCANE$available 0000  
                    __size_of___wmul 001C                              ___lwdiv 0676  
                            ___lwmod 06AB                ?_I2C2_BusCollisionISR 0070  
          I2C2_MasterTRBInsert@count 0023                              __ptext1 07CE  
                            __ptext2 05AE                              __ptext3 0FF7  
                            __ptext4 075D                              __ptext5 07E6  
                            __ptext6 0567                              __ptext7 018F  
                            __ptext8 07DA                              __ptext9 07A5  
                ??_EMC1001_PrintInfo 0043            I2C2_MasterTRBInsert@pflag 0021  
                ??_EMC1001_PrintTemp 0043                      __size_of_printf 0161  
                  __end_of_hexpowers 02F1                              _dpowers 02DF  
              _OSCILLATOR_Initialize 0FF7             ??_PIN_MANAGER_Initialize 0020  
                         ?_I2C2_Stop 0070                _I2C2_FunctionComplete 07BC  
         __size_of_SYSTEM_Initialize 000C                              clrloop0 0FF2  
               end_of_initialization 002A            __end_of_EMC1001_PrintInfo 02DF  
          __end_of_EMC1001_PrintTemp 05AE                    _EUSART_Initialize 07E6  
                 ?_EUSART_Initialize 0070                   _p_i2c2_trb_current 007B  
                            printf@c 0042                              printf@f 002E  
             I2C2_ISR@i2c_bytes_left 0078                         __pstringtext 02DF  
                         _printf$662 0039        __size_of_I2C2_MasterTRBInsert 0046  
              __CFG_WDTCPS$WDTCPS_31 0000                  ??_EUSART_Initialize 0020  
                  __size_of_I2C2_ISR 013A              __end_of_I2C2_Initialize 0775  
              __size_of_EUSART_Write 000A                     __CFG_FEXTOSC$OFF 0000  
          __end_of_EUSART_Initialize 07F1               ??_I2C2_BusCollisionISR 0070  
         ??_I2C2_MasterWriteTRBBuild 0024                       __end_of___wmul 075D  
                       _EUSART_Write 07F1               ?_OSCILLATOR_Initialize 0070  
                     __end_of_printf 018F               ?_I2C2_FunctionComplete 0070  
                start_initialization 001D                          ??_I2C2_Stop 0070  
    __size_of_PIN_MANAGER_Initialize 0046                          putch@txData 0021  
         __size_of_EMC1001_PrintInfo 0150           __size_of_EMC1001_PrintTemp 0047  
    I2C2_MasterWriteTRBBuild@address 0022             ?_I2C2_MasterReadTRBBuild 0020  
                   __CFG_LPBOREN$OFF 0000                        ?_EMC1001_Read 0027  
                           ??___wmul 0024        I2C2_MasterWriteTRBBuild@pdata 0020  
               I2C2_ISR@pi2c_buf_ptr 0079                             ??_printf 0034  
                        __pbssCOMMON 0077                     ?_I2C2_Initialize 0070  
                          ___latbits 0002                        __pcstackBANK0 0020  
                      _i2c2_tr_queue 0062           __size_of_EUSART_Initialize 000B  
                   ___lwdiv@dividend 0022               _PIN_MANAGER_Initialize 05AE  
                     ??_EMC1001_Read 0028                             ?___lwdiv 0020  
                           ?___lwmod 0028                             _I2C2_ISR 042D  
       ??_INTERRUPT_InterruptManager 0076                            __pswtext1 0775  
                           _BAUD1CON 011F                            _hexpowers 02E9  
                   ___lwdiv@quotient 0025                       __size_of_cputs 0017  
                     __size_of_putch 0006      __end_of_I2C2_MasterReadTRBBuild 0700  
                     ___wmul@product 0024                            clear_ram0 0FF1  
                           _PIE3bits 0719  __size_of_INTERRUPT_InterruptManager 0017  
                           _PIR3bits 070F                             _SSP2CON1 019A  
                           _SSP2CON3 019C                             _SSP2STAT 0199  
      I2C2_MasterTRBInsert@ptrb_list 0020                    ___wmul@multiplier 0020  
                         printf@flag 003F                           printf@prec 003B  
       __end_of_I2C2_MasterTRBInsert 063A                EMC1001_PrintInfo@data 0049  
              EMC1001_PrintInfo@temp 0047       I2C2_MasterWriteTRBBuild@length 0021  
            ??_OSCILLATOR_Initialize 0020                     __size_of___lwdiv 0035  
                   __size_of___lwmod 002D                EMC1001_PrintTemp@temp 0045  
            ??_I2C2_FunctionComplete 0070                      ___lwdiv@divisor 0020  
                    ___lwdiv@counter 0027                             __ptext10 002E  
                           __ptext11 0FEB                             __ptext12 07F1  
                           __ptext21 042D                             __ptext13 06AB  
                           __ptext22 078D                             __ptext14 0676  
                           __ptext23 07BC                             __ptext15 0741  
                           __ptext24 07FB                             __ptext16 063A  
                           __ptext17 0721                             __ptext18 05F4  
                           __ptext19 06D8                 __end_of_EMC1001_Read 0676  
                       _SSP2CON1bits 019A                         _SSP2CON2bits 019B  
                      __size_of_main 0021                        __size_of_puts 000C  
               __CFG_WDTCWS$WDTCWS_7 0000                           _RC1STAbits 011D  
                           int$flags 007E   __end_of_INTERRUPT_InterruptManager 001B  
         _INTERRUPT_InterruptManager 0004                            printf@idx 0038  
                          printf@val 0040              I2C2_MasterWrite@trBlock 005E  
      __size_of_I2C2_BusCollisionISR 0001          PIN_MANAGER_Initialize@state 0020  
   __size_of_I2C2_MasterReadTRBBuild 0028                           _INTCONbits 000B  
  __size_of_I2C2_MasterWriteTRBBuild 0020            ?_I2C2_MasterWriteTRBBuild 0020  
                           intlevel1 0000                     ___lwmod@dividend 002A  
                I2C2_ISR@i2c_address 0065              ?_PIN_MANAGER_Initialize 0070  
                  __CFG_CLKOUTEN$OFF 0000                          _PPSLOCKbits 0E8F  
                           printf@ap 003E                             printf@cp 003C  
               _I2C2_MasterTRBInsert 05F4                      ___lwmod@divisor 0028  
                    ___lwmod@counter 002D                   EUSART_Write@txData 0020  
     __end_of_PIN_MANAGER_Initialize 05F4             __size_of_I2C2_Initialize 0018  
                 __size_of_I2C2_Stop 0018  
