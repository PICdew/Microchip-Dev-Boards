

Microchip Technology PIC LITE Macro Assembler V1.42 build -159332390 
                                                                                               Fri May 26 06:49:24 2017

Microchip Technology Omniscient Code Generator v1.42 (Free mode) build 201704130522
     1                           	processor	16F1829
     2                           	opt	pw 120
     3                           	opt	lm
     4                           	psect	cinit,global,class=CODE,merge=1,delta=2
     5                           	psect	bssBANK0,global,class=BANK0,space=1,delta=1
     6                           	psect	cstackCOMMON,global,class=COMMON,space=1,delta=1
     7                           	psect	maintext,global,class=CODE,merge=1,split=1,delta=2
     8                           	psect	text1,local,class=CODE,merge=1,delta=2
     9                           	psect	text2,local,class=CODE,merge=1,delta=2
    10                           	dabs	1,0x7E,2
    11  0000                     
    12                           ; Version 1.42
    13                           ; Generated 13/04/2017 GMT
    14                           ; 
    15                           ; Copyright Â© 2017, Microchip Technology Inc. and its subsidiaries ("Microchip")
    16                           ; All rights reserved.
    17                           ; 
    18                           ; This software is developed by Microchip Technology Inc. and its subsidiaries ("Microch
      +                          ip").
    19                           ; 
    20                           ; Redistribution and use in source and binary forms, with or without modification, are
    21                           ; permitted provided that the following conditions are met:
    22                           ; 
    23                           ;     1. Redistributions of source code must retain the above copyright notice, this lis
      +                          t of
    24                           ;        conditions and the following disclaimer.
    25                           ; 
    26                           ;     2. Redistributions in binary form must reproduce the above copyright notice, this 
      +                          list
    27                           ;        of conditions and the following disclaimer in the documentation and/or other
    28                           ;        materials provided with the distribution.
    29                           ; 
    30                           ;     3. Microchip's name may not be used to endorse or promote products derived from th
      +                          is
    31                           ;        software without specific prior written permission.
    32                           ; 
    33                           ; THIS SOFTWARE IS PROVIDED BY MICROCHIP "AS IS" AND ANY EXPRESS OR IMPLIED WARRANTIES,
    34                           ; INCLUDING, BUT NOT LIMITED TO, THE IMPLIED WARRANTIES OF MERCHANTABILITY AND FITNESS F
      +                          OR
    35                           ; PURPOSE ARE DISCLAIMED.  IN NO EVENT SHALL MICROCHIP BE LIABLE FOR ANY DIRECT, INDIREC
      +                          T,
    36                           ; INCIDENTAL, SPECIAL, EXEMPLARY, OR CONSEQUENTIAL DAMAGES (INCLUDING BUT NOT LIMITED TO
    37                           ; PROCUREMENT OF SUBSTITUTE GOODS OR SERVICES; LOSS OF USE, DATA OR PROFITS; OR BUSINESS
    38                           ; INTERRUPTION) HOWSOEVER CAUSED AND ON ANY THEORY OF LIABILITY, WHETHER IN CONTRACT, ST
      +                          RICT
    39                           ; LIABILITY, OR TORT (INCLUDING NEGLIGENCE OR OTHERWISE) ARISING IN ANY WAY OUT OF THE U
      +                          SE OF
    40                           ; THIS SOFTWARE, EVEN IF ADVISED OF THE POSSIBILITY OF SUCH DAMAGE.
    41                           ; 
    42                           ; 
    43                           ; Code-generator required, PIC16F1829 Definitions
    44                           ; 
    45                           ; SFR Addresses
    46  0000                     	;# 
    47  0001                     	;# 
    48  0002                     	;# 
    49  0003                     	;# 
    50  0004                     	;# 
    51  0005                     	;# 
    52  0006                     	;# 
    53  0007                     	;# 
    54  0008                     	;# 
    55  0009                     	;# 
    56  000A                     	;# 
    57  000B                     	;# 
    58  000C                     	;# 
    59  000D                     	;# 
    60  000E                     	;# 
    61  0011                     	;# 
    62  0012                     	;# 
    63  0013                     	;# 
    64  0014                     	;# 
    65  0015                     	;# 
    66  0016                     	;# 
    67  0016                     	;# 
    68  0017                     	;# 
    69  0018                     	;# 
    70  0019                     	;# 
    71  001A                     	;# 
    72  001B                     	;# 
    73  001C                     	;# 
    74  001E                     	;# 
    75  001F                     	;# 
    76  008C                     	;# 
    77  008D                     	;# 
    78  008E                     	;# 
    79  0091                     	;# 
    80  0092                     	;# 
    81  0093                     	;# 
    82  0094                     	;# 
    83  0095                     	;# 
    84  0096                     	;# 
    85  0097                     	;# 
    86  0098                     	;# 
    87  0099                     	;# 
    88  009A                     	;# 
    89  009B                     	;# 
    90  009B                     	;# 
    91  009C                     	;# 
    92  009D                     	;# 
    93  009E                     	;# 
    94  010C                     	;# 
    95  010D                     	;# 
    96  010E                     	;# 
    97  0111                     	;# 
    98  0112                     	;# 
    99  0113                     	;# 
   100  0114                     	;# 
   101  0115                     	;# 
   102  0116                     	;# 
   103  0117                     	;# 
   104  0118                     	;# 
   105  0119                     	;# 
   106  011A                     	;# 
   107  011B                     	;# 
   108  011D                     	;# 
   109  011E                     	;# 
   110  018C                     	;# 
   111  018D                     	;# 
   112  018E                     	;# 
   113  0191                     	;# 
   114  0191                     	;# 
   115  0192                     	;# 
   116  0193                     	;# 
   117  0193                     	;# 
   118  0193                     	;# 
   119  0194                     	;# 
   120  0195                     	;# 
   121  0196                     	;# 
   122  0199                     	;# 
   123  019A                     	;# 
   124  019B                     	;# 
   125  019B                     	;# 
   126  019C                     	;# 
   127  019D                     	;# 
   128  019E                     	;# 
   129  019F                     	;# 
   130  020C                     	;# 
   131  020D                     	;# 
   132  020E                     	;# 
   133  0211                     	;# 
   134  0211                     	;# 
   135  0212                     	;# 
   136  0212                     	;# 
   137  0213                     	;# 
   138  0213                     	;# 
   139  0214                     	;# 
   140  0214                     	;# 
   141  0215                     	;# 
   142  0215                     	;# 
   143  0215                     	;# 
   144  0216                     	;# 
   145  0216                     	;# 
   146  0217                     	;# 
   147  0217                     	;# 
   148  0219                     	;# 
   149  021A                     	;# 
   150  021B                     	;# 
   151  021C                     	;# 
   152  021D                     	;# 
   153  021E                     	;# 
   154  021F                     	;# 
   155  0291                     	;# 
   156  0291                     	;# 
   157  0292                     	;# 
   158  0293                     	;# 
   159  0294                     	;# 
   160  0295                     	;# 
   161  0295                     	;# 
   162  0296                     	;# 
   163  0298                     	;# 
   164  0298                     	;# 
   165  0299                     	;# 
   166  029A                     	;# 
   167  029B                     	;# 
   168  029C                     	;# 
   169  029D                     	;# 
   170  029E                     	;# 
   171  0311                     	;# 
   172  0311                     	;# 
   173  0312                     	;# 
   174  0313                     	;# 
   175  0318                     	;# 
   176  0318                     	;# 
   177  0319                     	;# 
   178  031A                     	;# 
   179  038C                     	;# 
   180  038D                     	;# 
   181  038E                     	;# 
   182  0391                     	;# 
   183  0392                     	;# 
   184  0393                     	;# 
   185  0394                     	;# 
   186  0395                     	;# 
   187  0396                     	;# 
   188  039A                     	;# 
   189  039C                     	;# 
   190  039D                     	;# 
   191  039E                     	;# 
   192  039F                     	;# 
   193  0415                     	;# 
   194  0416                     	;# 
   195  0417                     	;# 
   196  041C                     	;# 
   197  041D                     	;# 
   198  041E                     	;# 
   199  0FE4                     	;# 
   200  0FE5                     	;# 
   201  0FE6                     	;# 
   202  0FE7                     	;# 
   203  0FE8                     	;# 
   204  0FE9                     	;# 
   205  0FEA                     	;# 
   206  0FEB                     	;# 
   207  0FED                     	;# 
   208  0FEE                     	;# 
   209  0FEF                     	;# 
   210  009C                     _ADRESH	set	156
   211  009E                     _ADCON1	set	158
   212  009D                     _ADCON0	set	157
   213  008C                     _TRISAbits	set	140
   214  008E                     _TRISC	set	142
   215  0099                     _OSCCON	set	153
   216  04E9                     _GO	set	1257
   217  010E                     _LATC	set	270
   218  018C                     _ANSELAbits	set	396
   219                           
   220                           ; #config settings
   221  0000                     
   222                           	psect	cinit
   223  07F2                     start_initialization:	
   224  07F2                     __initialization:	
   225                           
   226                           ; Clear objects allocated to BANK0
   227  07F2  0020               	movlb	0	; select bank0
   228  07F3  01A0               	clrf	__pbssBANK0& (0+127)
   229  07F4  01A1               	clrf	(__pbssBANK0+1)& (0+127)
   230  07F5  01A2               	clrf	(__pbssBANK0+2)& (0+127)
   231  07F6  01A3               	clrf	(__pbssBANK0+3)& (0+127)
   232  07F7  01A4               	clrf	(__pbssBANK0+4)& (0+127)
   233  07F8  01A5               	clrf	(__pbssBANK0+5)& (0+127)
   234  07F9  01A6               	clrf	(__pbssBANK0+6)& (0+127)
   235  07FA  01A7               	clrf	(__pbssBANK0+7)& (0+127)
   236  07FB  01A8               	clrf	(__pbssBANK0+8)& (0+127)
   237  07FC  01A9               	clrf	(__pbssBANK0+9)& (0+127)
   238  07FD                     end_of_initialization:	
   239                           ;End of C runtime variable initialization code
   240                           
   241  07FD                     __end_of__initialization:	
   242  07FD  0020               	movlb	0
   243  07FE  3187  2FBA         	ljmp	_main	;jump to C main() function
   244                           
   245                           	psect	bssBANK0
   246  0020                     __pbssBANK0:	
   247  0020                     main@F2950:	
   248  0020                     	ds	8
   249  0028                     __sum:	
   250  0028                     	ds	2
   251                           
   252                           	psect	cstackCOMMON
   253  0070                     __pcstackCOMMON:	
   254  0070                     ?_average:	
   255  0070                     ??_average:	
   256                           ; 1 bytes @ 0x0
   257                           
   258  0070                     ?_adc:	
   259                           ; 1 bytes @ 0x0
   260                           
   261  0070                     ??_adc:	
   262                           ; 1 bytes @ 0x0
   263                           
   264  0070                     ?_main:	
   265                           ; 1 bytes @ 0x0
   266                           
   267                           
   268                           ; 1 bytes @ 0x0
   269  0070                     	ds	2
   270  0072                     average@ptr:	
   271                           
   272                           ; 1 bytes @ 0x2
   273  0072                     	ds	1
   274  0073                     ??_main:	
   275                           
   276                           ; 1 bytes @ 0x3
   277  0073                     	ds	1
   278  0074                     main@queue:	
   279                           
   280                           ; 8 bytes @ 0x4
   281  0074                     	ds	8
   282  007C                     main@ptr_queue:	
   283                           
   284                           ; 1 bytes @ 0xC
   285  007C                     	ds	1
   286  007D                     main@i:	
   287                           
   288                           ; 1 bytes @ 0xD
   289  007D                     	ds	1
   290                           
   291                           	psect	maintext
   292  07BA                     __pmaintext:	
   293 ;;
   294 ;;Main: autosize = 0, tempsize = 1, incstack = 0, save=0
   295 ;;
   296 ;; *************** function _main *****************
   297 ;; Defined at:
   298 ;;		line 52 in file "src/indirect_addressing.c"
   299 ;; Parameters:    Size  Location     Type
   300 ;;		None
   301 ;; Auto vars:     Size  Location     Type
   302 ;;  queue           8    4[COMMON] unsigned char [8]
   303 ;;  i               1   13[COMMON] unsigned char 
   304 ;;  ptr_queue       1   12[COMMON] PTR unsigned char 
   305 ;;		 -> main@queue(8), 
   306 ;; Return value:  Size  Location     Type
   307 ;;                  1    wreg      void 
   308 ;; Registers used:
   309 ;;		wreg, fsr0l, fsr0h, fsr1l, fsr1h, status,2, status,0, pclath, cstack
   310 ;; Tracked objects:
   311 ;;		On entry : B1F/0
   312 ;;		On exit  : 0/0
   313 ;;		Unchanged: 0/0
   314 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
   315 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
   316 ;;      Locals:        10       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
   317 ;;      Temps:          1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
   318 ;;      Totals:        11       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
   319 ;;Total ram usage:       11 bytes
   320 ;; Hardware stack levels required when called:    2
   321 ;; This function calls:
   322 ;;		_average
   323 ;; This function is called by:
   324 ;;		Startup code after reset
   325 ;; This function uses a non-reentrant model
   326 ;;
   327                           
   328                           
   329                           ;psect for function _main
   330  07BA                     _main:	
   331                           
   332                           ;indirect_addressing.c: 53: unsigned char *ptr_queue;
   333                           ;indirect_addressing.c: 54: unsigned char queue[8] = {0};
   334                           
   335                           ;incstack = 0
   336                           ; Regs used in _main: [wreg-fsr1h+status,2+status,0+pclath+cstack]
   337  07BA  3020               	movlw	low main@F2950
   338  07BB  0086               	movwf	6
   339  07BC  3000               	movlw	high main@F2950
   340  07BD  0087               	movwf	7
   341  07BE  3074               	movlw	low main@queue
   342  07BF  0084               	movwf	4
   343  07C0  3000               	movlw	high main@queue
   344  07C1  0085               	movwf	5
   345  07C2  3008               	movlw	8
   346  07C3  00F3               	movwf	??_main
   347  07C4                     u70:	
   348  07C4  0016               	moviw fsr1++
   349  07C5  001A               	movwi fsr0++
   350  07C6  0BF3               	decfsz	??_main,f
   351  07C7  2FC4               	goto	u70
   352                           
   353                           ;indirect_addressing.c: 55: unsigned char i;
   354                           ;indirect_addressing.c: 57: OSCCON = 0b00111000;
   355  07C8  3038               	movlw	56
   356  07C9  0021               	movlb	1	; select bank1
   357  07CA  0099               	movwf	25	;volatile
   358                           
   359                           ;indirect_addressing.c: 58: TRISC = 0;
   360  07CB  018E               	clrf	14	;volatile
   361                           
   362                           ;indirect_addressing.c: 60: TRISAbits.TRISA4 = 1;
   363  07CC  160C               	bsf	12,4	;volatile
   364                           
   365                           ;indirect_addressing.c: 61: ANSELAbits.ANSA4 = 1;
   366  07CD  0023               	movlb	3	; select bank3
   367  07CE  160C               	bsf	12,4	;volatile
   368                           
   369                           ;indirect_addressing.c: 62: ADCON0 = 0b00001101;
   370  07CF  300D               	movlw	13
   371  07D0  0021               	movlb	1	; select bank1
   372  07D1  009D               	movwf	29	;volatile
   373                           
   374                           ;indirect_addressing.c: 63: ADCON1 = 0b00010000;
   375  07D2  3010               	movlw	16
   376  07D3  009E               	movwf	30	;volatile
   377  07D4                     l583:	
   378                           ;indirect_addressing.c: 65: while (1) {
   379                           
   380                           
   381                           ;indirect_addressing.c: 66: ptr_queue = &queue;
   382  07D4  3074               	movlw	(low (main@queue| 0))& (0+255)
   383  07D5  00F3               	movwf	??_main
   384  07D6  0873               	movf	??_main,w
   385  07D7  00FC               	movwf	main@ptr_queue
   386                           
   387                           ;indirect_addressing.c: 67: for (i = 8; i != 0; i--){
   388  07D8  3008               	movlw	8
   389  07D9  00F3               	movwf	??_main
   390  07DA  0873               	movf	??_main,w
   391  07DB  00FD               	movwf	main@i
   392  07DC                     L1:	
   393  07DC  087D               	movf	main@i,w
   394  07DD  1903               	btfsc	3,2
   395  07DE  2FD4               	goto	l583
   396                           
   397                           ;indirect_addressing.c: 68: LATC = (average(ptr_queue) >> 4 );
   398  07DF  087C               	movf	main@ptr_queue,w
   399  07E0  3187  278F  3187   	fcall	_average
   400  07E3  00F3               	movwf	??_main
   401  07E4  3004               	movlw	4
   402  07E5                     u95:	
   403  07E5  36F3               	lsrf	??_main,f
   404  07E6  0B89               	decfsz	9,f
   405  07E7  2FE5               	goto	u95
   406  07E8  0873               	movf	??_main,w
   407  07E9  0022               	movlb	2	; select bank2
   408  07EA  008E               	movwf	14	;volatile
   409                           
   410                           ;indirect_addressing.c: 69: ptr_queue++;
   411  07EB  3001               	movlw	1
   412  07EC  00F3               	movwf	??_main
   413  07ED  0873               	movf	??_main,w
   414  07EE  07FC               	addwf	main@ptr_queue,f
   415  07EF  3001               	movlw	1
   416  07F0  02FD               	subwf	main@i,f
   417  07F1  2FDC               	goto	L1
   418  07F2                     __end_of_main:	
   419                           
   420                           	psect	text1
   421  078F                     __ptext1:	
   422 ;; *************** function _average *****************
   423 ;; Defined at:
   424 ;;		line 74 in file "src/indirect_addressing.c"
   425 ;; Parameters:    Size  Location     Type
   426 ;;  ptr             1    wreg     PTR unsigned char 
   427 ;;		 -> main@queue(8), 
   428 ;; Auto vars:     Size  Location     Type
   429 ;;  ptr             1    2[COMMON] PTR unsigned char 
   430 ;;		 -> main@queue(8), 
   431 ;; Return value:  Size  Location     Type
   432 ;;                  1    wreg      unsigned char 
   433 ;; Registers used:
   434 ;;		wreg, fsr1l, fsr1h, status,2, status,0, pclath, cstack
   435 ;; Tracked objects:
   436 ;;		On entry : 0/0
   437 ;;		On exit  : 0/0
   438 ;;		Unchanged: 0/0
   439 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
   440 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
   441 ;;      Locals:         1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
   442 ;;      Temps:          2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
   443 ;;      Totals:         3       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
   444 ;;Total ram usage:        3 bytes
   445 ;; Hardware stack levels used:    1
   446 ;; Hardware stack levels required when called:    1
   447 ;; This function calls:
   448 ;;		_adc
   449 ;; This function is called by:
   450 ;;		_main
   451 ;; This function uses a non-reentrant model
   452 ;;
   453                           
   454                           
   455                           ;psect for function _average
   456  078F                     _average:	
   457                           
   458                           ;incstack = 0
   459                           ; Regs used in _average: [wreg+fsr1l+fsr1h+status,2+status,0+pclath+cstack]
   460                           ;average@ptr stored from wreg
   461  078F  00F2               	movwf	average@ptr
   462                           
   463                           ;indirect_addressing.c: 76: _sum -= *ptr;
   464  0790  0872               	movf	average@ptr,w
   465  0791  0086               	movwf	6
   466  0792  0187               	clrf	7
   467  0793  0801               	movf	1,w
   468  0794  00F0               	movwf	??_average
   469  0795  01F1               	clrf	??_average+1
   470  0796  0870               	movf	??_average,w
   471  0797  0020               	movlb	0	; select bank0
   472  0798  02A8               	subwf	__sum,f
   473  0799  0871               	movf	??_average+1,w
   474  079A  3BA9               	subwfb	__sum+1,f
   475                           
   476                           ;indirect_addressing.c: 77: *ptr = adc();
   477  079B  3187  2789         	fcall	_adc
   478  079D  00F0               	movwf	??_average
   479  079E  0872               	movf	average@ptr,w
   480  079F  0086               	movwf	6
   481  07A0  0187               	clrf	7
   482  07A1  0870               	movf	??_average,w
   483  07A2  0081               	movwf	1
   484                           
   485                           ;indirect_addressing.c: 78: _sum += *ptr;
   486  07A3  0872               	movf	average@ptr,w
   487  07A4  0086               	movwf	6
   488  07A5  0187               	clrf	7
   489  07A6  0801               	movf	1,w
   490  07A7  00F0               	movwf	??_average
   491  07A8  01F1               	clrf	??_average+1
   492  07A9  0870               	movf	??_average,w
   493  07AA  0020               	movlb	0	; select bank0
   494  07AB  07A8               	addwf	__sum,f
   495  07AC  0871               	movf	??_average+1,w
   496  07AD  3DA9               	addwfc	__sum+1,f
   497                           
   498                           ;indirect_addressing.c: 79: return (_sum/8);
   499  07AE  0829               	movf	__sum+1,w
   500  07AF  00F1               	movwf	??_average+1
   501  07B0  0828               	movf	__sum,w
   502  07B1  00F0               	movwf	??_average
   503  07B2  36F1               	lsrf	??_average+1,f
   504  07B3  0CF0               	rrf	??_average,f
   505  07B4  36F1               	lsrf	??_average+1,f
   506  07B5  0CF0               	rrf	??_average,f
   507  07B6  36F1               	lsrf	??_average+1,f
   508  07B7  0CF0               	rrf	??_average,f
   509  07B8  0870               	movf	??_average,w
   510  07B9  0008               	return
   511  07BA                     __end_of_average:	
   512                           
   513                           	psect	text2
   514  0789                     __ptext2:	
   515 ;; *************** function _adc *****************
   516 ;; Defined at:
   517 ;;		line 83 in file "src/indirect_addressing.c"
   518 ;; Parameters:    Size  Location     Type
   519 ;;		None
   520 ;; Auto vars:     Size  Location     Type
   521 ;;		None
   522 ;; Return value:  Size  Location     Type
   523 ;;                  1    wreg      unsigned char 
   524 ;; Registers used:
   525 ;;		wreg
   526 ;; Tracked objects:
   527 ;;		On entry : 0/0
   528 ;;		On exit  : 0/0
   529 ;;		Unchanged: 0/0
   530 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
   531 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
   532 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
   533 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
   534 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
   535 ;;Total ram usage:        0 bytes
   536 ;; Hardware stack levels used:    1
   537 ;; This function calls:
   538 ;;		Nothing
   539 ;; This function is called by:
   540 ;;		_average
   541 ;; This function uses a non-reentrant model
   542 ;;
   543                           
   544                           
   545                           ;psect for function _adc
   546  0789                     _adc:	
   547                           
   548                           ;indirect_addressing.c: 84: _delay((unsigned long)((5)*(500000/4000000.0)));
   549                           ;indirect_addressing.c: 85: GO = 1;
   550                           
   551                           ;incstack = 0
   552                           ; Regs used in _adc: [wreg]
   553  0789  0021               	movlb	1	; select bank1
   554  078A  149D               	bsf	29,1	;volatile
   555  078B                     l44:	
   556                           ;indirect_addressing.c: 86: while (GO) continue;
   557                           
   558  078B  189D               	btfsc	29,1	;volatile
   559  078C  2F8B               	goto	l44
   560                           
   561                           ;indirect_addressing.c: 88: return ADRESH;
   562  078D  081C               	movf	28,w	;volatile
   563  078E  0008               	return
   564  078F                     __end_of_adc:	
   565  007E                     btemp	set	126	;btemp
   566  007E                     wtemp0	set	126


Data Sizes:
    Strings     0
    Constant    0
    Data        0
    BSS         10
    Persistent  0
    Stack       0

Auto Spaces:
    Space          Size  Autos    Used
    COMMON           14     14      14
    BANK0            80      0      10
    BANK1            80      0       0
    BANK2            80      0       0
    BANK3            80      0       0
    BANK4            80      0       0
    BANK5            80      0       0
    BANK6            80      0       0
    BANK7            80      0       0
    BANK8            80      0       0
    BANK9            80      0       0
    BANK10           80      0       0
    BANK11           80      0       0
    BANK12           48      0       0

Pointer List with Targets:

    average@ptr	PTR unsigned char  size(1) Largest target is 8
		 -> main@queue(COMMON[8]), 

    main@ptr_queue	PTR unsigned char  size(1) Largest target is 8
		 -> main@queue(COMMON[8]), 


Critical Paths under _main in COMMON

    _main->_average

Critical Paths under _main in BANK0

    None.

Critical Paths under _main in BANK1

    None.

Critical Paths under _main in BANK2

    None.

Critical Paths under _main in BANK3

    None.

Critical Paths under _main in BANK4

    None.

Critical Paths under _main in BANK5

    None.

Critical Paths under _main in BANK6

    None.

Critical Paths under _main in BANK7

    None.

Critical Paths under _main in BANK8

    None.

Critical Paths under _main in BANK9

    None.

Critical Paths under _main in BANK10

    None.

Critical Paths under _main in BANK11

    None.

Critical Paths under _main in BANK12

    None.

Call Graph Tables:

 ---------------------------------------------------------------------------------
 (Depth) Function   	        Calls       Base Space   Used Autos Params    Refs
 ---------------------------------------------------------------------------------
 (0) _main                                                11    11      0     190
                                              3 COMMON    11    11      0
                            _average
 ---------------------------------------------------------------------------------
 (1) _average                                              3     3      0      93
                                              0 COMMON     3     3      0
                                _adc
 ---------------------------------------------------------------------------------
 (2) _adc                                                  0     0      0       0
 ---------------------------------------------------------------------------------
 Estimated maximum stack depth 2
 ---------------------------------------------------------------------------------

 Call Graph Graphs:

 _main (ROOT)
   _average
     _adc

 Address spaces:
Name               Size   Autos  Total    Cost      Usage
BIGRAM             3F0      0       0       0        0.0%
EEDATA             100      0       0       0        0.0%
NULL                 0      0       0       0        0.0%
CODE                 0      0       0       0        0.0%
BITCOMMON            E      0       0       1        0.0%
BITSFR0              0      0       0       1        0.0%
SFR0                 0      0       0       1        0.0%
COMMON               E      E       E       2      100.0%
BITSFR1              0      0       0       2        0.0%
SFR1                 0      0       0       2        0.0%
BITSFR2              0      0       0       3        0.0%
SFR2                 0      0       0       3        0.0%
STACK                0      0       0       3        0.0%
BITBANK0            50      0       0       4        0.0%
BITSFR3              0      0       0       4        0.0%
SFR3                 0      0       0       4        0.0%
BANK0               50      0       A       5       12.5%
BITSFR4              0      0       0       5        0.0%
SFR4                 0      0       0       5        0.0%
BITBANK1            50      0       0       6        0.0%
BITSFR5              0      0       0       6        0.0%
SFR5                 0      0       0       6        0.0%
BANK1               50      0       0       7        0.0%
BITSFR6              0      0       0       7        0.0%
SFR6                 0      0       0       7        0.0%
BITBANK2            50      0       0       8        0.0%
BITSFR7              0      0       0       8        0.0%
SFR7                 0      0       0       8        0.0%
BANK2               50      0       0       9        0.0%
BITSFR8              0      0       0       9        0.0%
SFR8                 0      0       0       9        0.0%
BITBANK3            50      0       0      10        0.0%
BITSFR9              0      0       0      10        0.0%
SFR9                 0      0       0      10        0.0%
BANK3               50      0       0      11        0.0%
BITSFR10             0      0       0      11        0.0%
SFR10                0      0       0      11        0.0%
BITBANK4            50      0       0      12        0.0%
BITSFR11             0      0       0      12        0.0%
SFR11                0      0       0      12        0.0%
BANK4               50      0       0      13        0.0%
BITSFR12             0      0       0      13        0.0%
SFR12                0      0       0      13        0.0%
BITBANK5            50      0       0      14        0.0%
BITSFR13             0      0       0      14        0.0%
SFR13                0      0       0      14        0.0%
BANK5               50      0       0      15        0.0%
BITSFR14             0      0       0      15        0.0%
SFR14                0      0       0      15        0.0%
BITBANK6            50      0       0      16        0.0%
BITSFR15             0      0       0      16        0.0%
SFR15                0      0       0      16        0.0%
BANK6               50      0       0      17        0.0%
BITSFR16             0      0       0      17        0.0%
SFR16                0      0       0      17        0.0%
BITBANK7            50      0       0      18        0.0%
BITSFR17             0      0       0      18        0.0%
SFR17                0      0       0      18        0.0%
BANK7               50      0       0      19        0.0%
BITSFR18             0      0       0      19        0.0%
SFR18                0      0       0      19        0.0%
BITSFR19             0      0       0      20        0.0%
SFR19                0      0       0      20        0.0%
ABS                  0      0      18      20        0.0%
BITBANK8            50      0       0      21        0.0%
BITSFR20             0      0       0      21        0.0%
SFR20                0      0       0      21        0.0%
BANK8               50      0       0      22        0.0%
BITSFR21             0      0       0      22        0.0%
SFR21                0      0       0      22        0.0%
BITBANK9            50      0       0      23        0.0%
BITSFR22             0      0       0      23        0.0%
SFR22                0      0       0      23        0.0%
BANK9               50      0       0      24        0.0%
BITSFR23             0      0       0      24        0.0%
SFR23                0      0       0      24        0.0%
BITBANK10           50      0       0      25        0.0%
BITSFR24             0      0       0      25        0.0%
SFR24                0      0       0      25        0.0%
BANK10              50      0       0      26        0.0%
BITSFR25             0      0       0      26        0.0%
SFR25                0      0       0      26        0.0%
BITBANK11           50      0       0      27        0.0%
BITSFR26             0      0       0      27        0.0%
SFR26                0      0       0      27        0.0%
BANK11              50      0       0      28        0.0%
BITSFR27             0      0       0      28        0.0%
SFR27                0      0       0      28        0.0%
BITBANK12           30      0       0      29        0.0%
BITSFR28             0      0       0      29        0.0%
SFR28                0      0       0      29        0.0%
BANK12              30      0       0      30        0.0%
BITSFR29             0      0       0      30        0.0%
SFR29                0      0       0      30        0.0%
BITSFR30             0      0       0      31        0.0%
SFR30                0      0       0      31        0.0%
DATA                 0      0      18      31        0.0%
BITSFR31             0      0       0      32        0.0%
SFR31                0      0       0      32        0.0%


Microchip Technology PIC Macro Assembler V1.42 build -159332390 
Symbol Table                                                                                   Fri May 26 06:49:24 2017

                     l44 078B                       _GO 04E9                       u70 07C4  
                     u95 07E5                      l583 07D4                      _adc 0789  
                    wreg 0009             __CFG_LVP$OFF 0000                     ?_adc 0070  
                   _LATC 010E                     __sum 0028                     _main 07BA  
                   fsr0h 0005                     fsr1h 0007                     fsr0l 0004  
                   indf1 0001                     fsr1l 0006                     btemp 007E  
                   start 0002            __CFG_IESO$OFF 0000                    ??_adc 0070  
                  ?_main 0070            __CFG_WDTE$OFF 0000                    _TRISC 008E  
         __CFG_FCMEN$OFF 0000          __end_of_average 07BA                    main@i 007D  
                  status 0003                    wtemp0 007E           __CFG_MCLRE$OFF 0000  
        __initialization 07F2             __end_of_main 07F2                   ??_main 0073  
         __CFG_PLLEN$OFF 0000                   _ADCON0 009D                   _ADCON1 009E  
                 _ADRESH 009C                   _OSCCON 0099                ??_average 0070  
          main@ptr_queue 007C  __end_of__initialization 07FD           __pcstackCOMMON 0070  
             __pbssBANK0 0020               __pmaintext 07BA          __CFG_STVREN$OFF 0000  
                __ptext1 078F                  __ptext2 0789                  _average 078F  
           __size_of_adc 0006     end_of_initialization 07FD         __CFG_FOSC$INTOSC 0000  
              _TRISAbits 008C               average@ptr 0072      start_initialization 07F2  
            __end_of_adc 078F                ___latbits 0002                 ?_average 0070  
              main@F2950 0020                main@queue 0074               _ANSELAbits 018C  
       __size_of_average 002B            __size_of_main 0038  
