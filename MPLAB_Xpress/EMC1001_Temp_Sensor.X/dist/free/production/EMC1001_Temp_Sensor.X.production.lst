

Microchip Technology PIC LITE Macro Assembler V1.41 build -162212810 
                                                                                               Wed Mar 29 17:30:33 2017

Microchip Technology Omniscient Code Generator v1.41 (Free mode) build 201701250102
     1                           	processor	16F18855
     2                           	opt	pw 120
     3                           	opt	lm
     4                           	psect	stringtext,global,class=STRCODE,delta=2
     5                           	psect	cinit,global,class=CODE,merge=1,delta=2
     6                           	psect	bssCOMMON,global,class=COMMON,space=1,delta=1
     7                           	psect	bssBANK0,global,class=BANK0,space=1,delta=1
     8                           	psect	clrtext,global,class=CODE,delta=2
     9                           	psect	cstackCOMMON,global,class=COMMON,space=1,delta=1
    10                           	psect	cstackBANK0,global,class=BANK0,space=1,delta=1
    11                           	psect	maintext,global,class=CODE,merge=1,split=1,delta=2
    12                           	psect	text1,local,class=CODE,merge=1,delta=2
    13                           	psect	text2,local,class=CODE,merge=1,delta=2
    14                           	psect	text3,local,class=CODE,merge=1,delta=2
    15                           	psect	text4,local,class=CODE,merge=1,delta=2
    16                           	psect	text5,local,class=CODE,merge=1,delta=2
    17                           	psect	text6,local,class=CODE,merge=1,delta=2
    18                           	psect	text7,local,class=CODE,merge=1,delta=2
    19                           	psect	text8,local,class=CODE,merge=1,delta=2,group=2
    20                           	psect	text9,local,class=CODE,merge=1,delta=2,group=2
    21                           	psect	text10,local,class=CODE,merge=1,delta=2
    22                           	psect	text11,local,class=CODE,merge=1,delta=2
    23                           	psect	text12,local,class=CODE,merge=1,delta=2
    24                           	psect	text13,local,class=CODE,merge=1,delta=2,group=2
    25                           	psect	text14,local,class=CODE,merge=1,delta=2,group=2
    26                           	psect	text15,local,class=CODE,merge=1,delta=2,group=2
    27                           	psect	text16,local,class=CODE,merge=1,delta=2
    28                           	psect	text17,local,class=CODE,merge=1,delta=2
    29                           	psect	text18,local,class=CODE,merge=1,delta=2
    30                           	psect	text19,local,class=CODE,merge=1,delta=2
    31                           	psect	intentry,global,class=CODE,delta=2
    32                           	psect	text21,local,class=CODE,merge=1,delta=2
    33                           	psect	swtext1,local,class=CONST,delta=2
    34                           	psect	text22,local,class=CODE,merge=1,delta=2
    35                           	psect	text23,local,class=CODE,merge=1,delta=2
    36                           	psect	text24,local,class=CODE,merge=1,delta=2
    37                           	dabs	1,0x7E,2
    38  0000                     
    39                           ; Version 1.41
    40                           ; Generated 25/01/2017 GMT
    41                           ; 
    42                           ; Copyright Â© 2017, Microchip Technology Inc. and its subsidiaries ("Microchip")
    43                           ; All rights reserved.
    44                           ; 
    45                           ; This software is developed by Microchip Technology Inc. and its subsidiaries ("Microch
      +                          ip").
    46                           ; 
    47                           ; Redistribution and use in source and binary forms, with or without modification, are
    48                           ; permitted provided that the following conditions are met:
    49                           ; 
    50                           ;     1. Redistributions of source code must retain the above copyright notice, this lis
      +                          t of
    51                           ;        conditions and the following disclaimer.
    52                           ; 
    53                           ;     2. Redistributions in binary form must reproduce the above copyright notice, this 
      +                          list
    54                           ;        of conditions and the following disclaimer in the documentation and/or other
    55                           ;        materials provided with the distribution.
    56                           ; 
    57                           ;     3. Microchip's name may not be used to endorse or promote products derived from th
      +                          is
    58                           ;        software without specific prior written permission.
    59                           ; 
    60                           ; THIS SOFTWARE IS PROVIDED BY MICROCHIP "AS IS" AND ANY EXPRESS OR IMPLIED WARRANTIES,
    61                           ; INCLUDING, BUT NOT LIMITED TO, THE IMPLIED WARRANTIES OF MERCHANTABILITY AND FITNESS F
      +                          OR
    62                           ; PURPOSE ARE DISCLAIMED.  IN NO EVENT SHALL MICROCHIP BE LIABLE FOR ANY DIRECT, INDIREC
      +                          T,
    63                           ; INCIDENTAL, SPECIAL, EXEMPLARY, OR CONSEQUENTIAL DAMAGES (INCLUDING BUT NOT LIMITED TO
    64                           ; PROCUREMENT OF SUBSTITUTE GOODS OR SERVICES; LOSS OF USE, DATA OR PROFITS; OR BUSINESS
    65                           ; INTERRUPTION) HOWSOEVER CAUSED AND ON ANY THEORY OF LIABILITY, WHETHER IN CONTRACT, ST
      +                          RICT
    66                           ; LIABILITY, OR TORT (INCLUDING NEGLIGENCE OR OTHERWISE) ARISING IN ANY WAY OUT OF THE U
      +                          SE OF
    67                           ; THIS SOFTWARE, EVEN IF ADVISED OF THE POSSIBILITY OF SUCH DAMAGE.
    68                           ; 
    69                           ; 
    70                           ; Code-generator required, PIC16F18855 Definitions
    71                           ; 
    72                           ; SFR Addresses
    73  0000                     	;# 
    74  0001                     	;# 
    75  0002                     	;# 
    76  0003                     	;# 
    77  0004                     	;# 
    78  0005                     	;# 
    79  0006                     	;# 
    80  0007                     	;# 
    81  0008                     	;# 
    82  0009                     	;# 
    83  000A                     	;# 
    84  000B                     	;# 
    85  000C                     	;# 
    86  000D                     	;# 
    87  000E                     	;# 
    88  0010                     	;# 
    89  0011                     	;# 
    90  0012                     	;# 
    91  0013                     	;# 
    92  0016                     	;# 
    93  0017                     	;# 
    94  0018                     	;# 
    95  001C                     	;# 
    96  001C                     	;# 
    97  001D                     	;# 
    98  001D                     	;# 
    99  001E                     	;# 
   100  001F                     	;# 
   101  008C                     	;# 
   102  008C                     	;# 
   103  008D                     	;# 
   104  008E                     	;# 
   105  008E                     	;# 
   106  008F                     	;# 
   107  0090                     	;# 
   108  0090                     	;# 
   109  0091                     	;# 
   110  0093                     	;# 
   111  0094                     	;# 
   112  0095                     	;# 
   113  0096                     	;# 
   114  0097                     	;# 
   115  0098                     	;# 
   116  0099                     	;# 
   117  009A                     	;# 
   118  009B                     	;# 
   119  009C                     	;# 
   120  009D                     	;# 
   121  009E                     	;# 
   122  010C                     	;# 
   123  010D                     	;# 
   124  010E                     	;# 
   125  010E                     	;# 
   126  010F                     	;# 
   127  0110                     	;# 
   128  0110                     	;# 
   129  0111                     	;# 
   130  0112                     	;# 
   131  0112                     	;# 
   132  0113                     	;# 
   133  0114                     	;# 
   134  0114                     	;# 
   135  0115                     	;# 
   136  0116                     	;# 
   137  0116                     	;# 
   138  0117                     	;# 
   139  0119                     	;# 
   140  0119                     	;# 
   141  0119                     	;# 
   142  011A                     	;# 
   143  011A                     	;# 
   144  011A                     	;# 
   145  011B                     	;# 
   146  011B                     	;# 
   147  011B                     	;# 
   148  011B                     	;# 
   149  011B                     	;# 
   150  011C                     	;# 
   151  011C                     	;# 
   152  011C                     	;# 
   153  011D                     	;# 
   154  011D                     	;# 
   155  011D                     	;# 
   156  011E                     	;# 
   157  011E                     	;# 
   158  011E                     	;# 
   159  011F                     	;# 
   160  011F                     	;# 
   161  011F                     	;# 
   162  011F                     	;# 
   163  011F                     	;# 
   164  018C                     	;# 
   165  018D                     	;# 
   166  018E                     	;# 
   167  018F                     	;# 
   168  0190                     	;# 
   169  0191                     	;# 
   170  0192                     	;# 
   171  0196                     	;# 
   172  0197                     	;# 
   173  0198                     	;# 
   174  0199                     	;# 
   175  019A                     	;# 
   176  019B                     	;# 
   177  019C                     	;# 
   178  020C                     	;# 
   179  020C                     	;# 
   180  020D                     	;# 
   181  020E                     	;# 
   182  020F                     	;# 
   183  020F                     	;# 
   184  0210                     	;# 
   185  0210                     	;# 
   186  0211                     	;# 
   187  0211                     	;# 
   188  0212                     	;# 
   189  0212                     	;# 
   190  0213                     	;# 
   191  0214                     	;# 
   192  0215                     	;# 
   193  0215                     	;# 
   194  0216                     	;# 
   195  0216                     	;# 
   196  0217                     	;# 
   197  0217                     	;# 
   198  0218                     	;# 
   199  0218                     	;# 
   200  0219                     	;# 
   201  021A                     	;# 
   202  021B                     	;# 
   203  021B                     	;# 
   204  021C                     	;# 
   205  021C                     	;# 
   206  021D                     	;# 
   207  021D                     	;# 
   208  021E                     	;# 
   209  021F                     	;# 
   210  028C                     	;# 
   211  028C                     	;# 
   212  028D                     	;# 
   213  028D                     	;# 
   214  028E                     	;# 
   215  028F                     	;# 
   216  0290                     	;# 
   217  0290                     	;# 
   218  0291                     	;# 
   219  0292                     	;# 
   220  0292                     	;# 
   221  0293                     	;# 
   222  0293                     	;# 
   223  0294                     	;# 
   224  0295                     	;# 
   225  0296                     	;# 
   226  0296                     	;# 
   227  0297                     	;# 
   228  0298                     	;# 
   229  0298                     	;# 
   230  0299                     	;# 
   231  0299                     	;# 
   232  029A                     	;# 
   233  029B                     	;# 
   234  029C                     	;# 
   235  029C                     	;# 
   236  029D                     	;# 
   237  030C                     	;# 
   238  030C                     	;# 
   239  030D                     	;# 
   240  030E                     	;# 
   241  030F                     	;# 
   242  0310                     	;# 
   243  0310                     	;# 
   244  0311                     	;# 
   245  0312                     	;# 
   246  0313                     	;# 
   247  0314                     	;# 
   248  0314                     	;# 
   249  0315                     	;# 
   250  0316                     	;# 
   251  0317                     	;# 
   252  0318                     	;# 
   253  0318                     	;# 
   254  0319                     	;# 
   255  031A                     	;# 
   256  031B                     	;# 
   257  031C                     	;# 
   258  031C                     	;# 
   259  031D                     	;# 
   260  031E                     	;# 
   261  031F                     	;# 
   262  038C                     	;# 
   263  038D                     	;# 
   264  038E                     	;# 
   265  0390                     	;# 
   266  0391                     	;# 
   267  0392                     	;# 
   268  040C                     	;# 
   269  040D                     	;# 
   270  040E                     	;# 
   271  040F                     	;# 
   272  0410                     	;# 
   273  0411                     	;# 
   274  0416                     	;# 
   275  0416                     	;# 
   276  0417                     	;# 
   277  0418                     	;# 
   278  0418                     	;# 
   279  0419                     	;# 
   280  041A                     	;# 
   281  041A                     	;# 
   282  041B                     	;# 
   283  041C                     	;# 
   284  041C                     	;# 
   285  041D                     	;# 
   286  041E                     	;# 
   287  041F                     	;# 
   288  048C                     	;# 
   289  048C                     	;# 
   290  048D                     	;# 
   291  048E                     	;# 
   292  048F                     	;# 
   293  048F                     	;# 
   294  0490                     	;# 
   295  0491                     	;# 
   296  0492                     	;# 
   297  0492                     	;# 
   298  0493                     	;# 
   299  0494                     	;# 
   300  0495                     	;# 
   301  0495                     	;# 
   302  0496                     	;# 
   303  0497                     	;# 
   304  0498                     	;# 
   305  0499                     	;# 
   306  049A                     	;# 
   307  049B                     	;# 
   308  049C                     	;# 
   309  049D                     	;# 
   310  050C                     	;# 
   311  050C                     	;# 
   312  050D                     	;# 
   313  050E                     	;# 
   314  050F                     	;# 
   315  050F                     	;# 
   316  0510                     	;# 
   317  0511                     	;# 
   318  0512                     	;# 
   319  0512                     	;# 
   320  0513                     	;# 
   321  0514                     	;# 
   322  0515                     	;# 
   323  0515                     	;# 
   324  0516                     	;# 
   325  0517                     	;# 
   326  0518                     	;# 
   327  0519                     	;# 
   328  051A                     	;# 
   329  051B                     	;# 
   330  051C                     	;# 
   331  051D                     	;# 
   332  058C                     	;# 
   333  058C                     	;# 
   334  058D                     	;# 
   335  058E                     	;# 
   336  058F                     	;# 
   337  058F                     	;# 
   338  0590                     	;# 
   339  0591                     	;# 
   340  0592                     	;# 
   341  0593                     	;# 
   342  060C                     	;# 
   343  060D                     	;# 
   344  060E                     	;# 
   345  060F                     	;# 
   346  0610                     	;# 
   347  0611                     	;# 
   348  0612                     	;# 
   349  0613                     	;# 
   350  0614                     	;# 
   351  0616                     	;# 
   352  0617                     	;# 
   353  0618                     	;# 
   354  0619                     	;# 
   355  061A                     	;# 
   356  061B                     	;# 
   357  061C                     	;# 
   358  061D                     	;# 
   359  061E                     	;# 
   360  068C                     	;# 
   361  068D                     	;# 
   362  068E                     	;# 
   363  068F                     	;# 
   364  0690                     	;# 
   365  0691                     	;# 
   366  0692                     	;# 
   367  0693                     	;# 
   368  0694                     	;# 
   369  070C                     	;# 
   370  070D                     	;# 
   371  070E                     	;# 
   372  070F                     	;# 
   373  0710                     	;# 
   374  0711                     	;# 
   375  0712                     	;# 
   376  0713                     	;# 
   377  0714                     	;# 
   378  0716                     	;# 
   379  0717                     	;# 
   380  0718                     	;# 
   381  0719                     	;# 
   382  071A                     	;# 
   383  071B                     	;# 
   384  071C                     	;# 
   385  071D                     	;# 
   386  071E                     	;# 
   387  0796                     	;# 
   388  0797                     	;# 
   389  0798                     	;# 
   390  0799                     	;# 
   391  079A                     	;# 
   392  079B                     	;# 
   393  080C                     	;# 
   394  080D                     	;# 
   395  080E                     	;# 
   396  080F                     	;# 
   397  0810                     	;# 
   398  0811                     	;# 
   399  0812                     	;# 
   400  0813                     	;# 
   401  0814                     	;# 
   402  081A                     	;# 
   403  081B                     	;# 
   404  081C                     	;# 
   405  081D                     	;# 
   406  081E                     	;# 
   407  081F                     	;# 
   408  088C                     	;# 
   409  088D                     	;# 
   410  088E                     	;# 
   411  088F                     	;# 
   412  0890                     	;# 
   413  0891                     	;# 
   414  0892                     	;# 
   415  0893                     	;# 
   416  0895                     	;# 
   417  0896                     	;# 
   418  0897                     	;# 
   419  0898                     	;# 
   420  0899                     	;# 
   421  089A                     	;# 
   422  089B                     	;# 
   423  090C                     	;# 
   424  090E                     	;# 
   425  090F                     	;# 
   426  091F                     	;# 
   427  091F                     	;# 
   428  098F                     	;# 
   429  098F                     	;# 
   430  0990                     	;# 
   431  0991                     	;# 
   432  0992                     	;# 
   433  0993                     	;# 
   434  0994                     	;# 
   435  0995                     	;# 
   436  0996                     	;# 
   437  0997                     	;# 
   438  0E0F                     	;# 
   439  0E10                     	;# 
   440  0E11                     	;# 
   441  0E12                     	;# 
   442  0E13                     	;# 
   443  0E14                     	;# 
   444  0E15                     	;# 
   445  0E16                     	;# 
   446  0E17                     	;# 
   447  0E18                     	;# 
   448  0E19                     	;# 
   449  0E1A                     	;# 
   450  0E1B                     	;# 
   451  0E1C                     	;# 
   452  0E1D                     	;# 
   453  0E1E                     	;# 
   454  0E1F                     	;# 
   455  0E20                     	;# 
   456  0E21                     	;# 
   457  0E22                     	;# 
   458  0E23                     	;# 
   459  0E24                     	;# 
   460  0E25                     	;# 
   461  0E26                     	;# 
   462  0E27                     	;# 
   463  0E28                     	;# 
   464  0E29                     	;# 
   465  0E2A                     	;# 
   466  0E2B                     	;# 
   467  0E2C                     	;# 
   468  0E2D                     	;# 
   469  0E2E                     	;# 
   470  0E2F                     	;# 
   471  0E30                     	;# 
   472  0E31                     	;# 
   473  0E32                     	;# 
   474  0E33                     	;# 
   475  0E34                     	;# 
   476  0E35                     	;# 
   477  0E36                     	;# 
   478  0E37                     	;# 
   479  0E8F                     	;# 
   480  0E90                     	;# 
   481  0E91                     	;# 
   482  0E92                     	;# 
   483  0E93                     	;# 
   484  0E94                     	;# 
   485  0E95                     	;# 
   486  0E96                     	;# 
   487  0E97                     	;# 
   488  0E9C                     	;# 
   489  0E9D                     	;# 
   490  0E9E                     	;# 
   491  0EA1                     	;# 
   492  0EA2                     	;# 
   493  0EA3                     	;# 
   494  0EA4                     	;# 
   495  0EA5                     	;# 
   496  0EA9                     	;# 
   497  0EAA                     	;# 
   498  0EAB                     	;# 
   499  0EAC                     	;# 
   500  0EB1                     	;# 
   501  0EB2                     	;# 
   502  0EB3                     	;# 
   503  0EB8                     	;# 
   504  0EB9                     	;# 
   505  0EBA                     	;# 
   506  0EBB                     	;# 
   507  0EBC                     	;# 
   508  0EBD                     	;# 
   509  0EBE                     	;# 
   510  0EC3                     	;# 
   511  0EC5                     	;# 
   512  0EC6                     	;# 
   513  0EC7                     	;# 
   514  0EC8                     	;# 
   515  0EC9                     	;# 
   516  0ECA                     	;# 
   517  0ECB                     	;# 
   518  0ECC                     	;# 
   519  0F10                     	;# 
   520  0F11                     	;# 
   521  0F12                     	;# 
   522  0F13                     	;# 
   523  0F14                     	;# 
   524  0F15                     	;# 
   525  0F16                     	;# 
   526  0F17                     	;# 
   527  0F18                     	;# 
   528  0F19                     	;# 
   529  0F1A                     	;# 
   530  0F1B                     	;# 
   531  0F1C                     	;# 
   532  0F1D                     	;# 
   533  0F1E                     	;# 
   534  0F1F                     	;# 
   535  0F20                     	;# 
   536  0F21                     	;# 
   537  0F22                     	;# 
   538  0F23                     	;# 
   539  0F24                     	;# 
   540  0F25                     	;# 
   541  0F26                     	;# 
   542  0F27                     	;# 
   543  0F38                     	;# 
   544  0F39                     	;# 
   545  0F3A                     	;# 
   546  0F3B                     	;# 
   547  0F3C                     	;# 
   548  0F3D                     	;# 
   549  0F3E                     	;# 
   550  0F3F                     	;# 
   551  0F40                     	;# 
   552  0F41                     	;# 
   553  0F43                     	;# 
   554  0F44                     	;# 
   555  0F45                     	;# 
   556  0F46                     	;# 
   557  0F47                     	;# 
   558  0F48                     	;# 
   559  0F49                     	;# 
   560  0F4A                     	;# 
   561  0F4B                     	;# 
   562  0F4C                     	;# 
   563  0F4E                     	;# 
   564  0F4F                     	;# 
   565  0F50                     	;# 
   566  0F51                     	;# 
   567  0F52                     	;# 
   568  0F53                     	;# 
   569  0F54                     	;# 
   570  0F55                     	;# 
   571  0F56                     	;# 
   572  0F57                     	;# 
   573  0F65                     	;# 
   574  0F68                     	;# 
   575  0F69                     	;# 
   576  0F6A                     	;# 
   577  0F6B                     	;# 
   578  0FE4                     	;# 
   579  0FE5                     	;# 
   580  0FE6                     	;# 
   581  0FE7                     	;# 
   582  0FE8                     	;# 
   583  0FE9                     	;# 
   584  0FEA                     	;# 
   585  0FEB                     	;# 
   586  0FED                     	;# 
   587  0FEE                     	;# 
   588  0FEF                     	;# 
   589  0000                     	;# 
   590  0001                     	;# 
   591  0002                     	;# 
   592  0003                     	;# 
   593  0004                     	;# 
   594  0005                     	;# 
   595  0006                     	;# 
   596  0007                     	;# 
   597  0008                     	;# 
   598  0009                     	;# 
   599  000A                     	;# 
   600  000B                     	;# 
   601  000C                     	;# 
   602  000D                     	;# 
   603  000E                     	;# 
   604  0010                     	;# 
   605  0011                     	;# 
   606  0012                     	;# 
   607  0013                     	;# 
   608  0016                     	;# 
   609  0017                     	;# 
   610  0018                     	;# 
   611  001C                     	;# 
   612  001C                     	;# 
   613  001D                     	;# 
   614  001D                     	;# 
   615  001E                     	;# 
   616  001F                     	;# 
   617  008C                     	;# 
   618  008C                     	;# 
   619  008D                     	;# 
   620  008E                     	;# 
   621  008E                     	;# 
   622  008F                     	;# 
   623  0090                     	;# 
   624  0090                     	;# 
   625  0091                     	;# 
   626  0093                     	;# 
   627  0094                     	;# 
   628  0095                     	;# 
   629  0096                     	;# 
   630  0097                     	;# 
   631  0098                     	;# 
   632  0099                     	;# 
   633  009A                     	;# 
   634  009B                     	;# 
   635  009C                     	;# 
   636  009D                     	;# 
   637  009E                     	;# 
   638  010C                     	;# 
   639  010D                     	;# 
   640  010E                     	;# 
   641  010E                     	;# 
   642  010F                     	;# 
   643  0110                     	;# 
   644  0110                     	;# 
   645  0111                     	;# 
   646  0112                     	;# 
   647  0112                     	;# 
   648  0113                     	;# 
   649  0114                     	;# 
   650  0114                     	;# 
   651  0115                     	;# 
   652  0116                     	;# 
   653  0116                     	;# 
   654  0117                     	;# 
   655  0119                     	;# 
   656  0119                     	;# 
   657  0119                     	;# 
   658  011A                     	;# 
   659  011A                     	;# 
   660  011A                     	;# 
   661  011B                     	;# 
   662  011B                     	;# 
   663  011B                     	;# 
   664  011B                     	;# 
   665  011B                     	;# 
   666  011C                     	;# 
   667  011C                     	;# 
   668  011C                     	;# 
   669  011D                     	;# 
   670  011D                     	;# 
   671  011D                     	;# 
   672  011E                     	;# 
   673  011E                     	;# 
   674  011E                     	;# 
   675  011F                     	;# 
   676  011F                     	;# 
   677  011F                     	;# 
   678  011F                     	;# 
   679  011F                     	;# 
   680  018C                     	;# 
   681  018D                     	;# 
   682  018E                     	;# 
   683  018F                     	;# 
   684  0190                     	;# 
   685  0191                     	;# 
   686  0192                     	;# 
   687  0196                     	;# 
   688  0197                     	;# 
   689  0198                     	;# 
   690  0199                     	;# 
   691  019A                     	;# 
   692  019B                     	;# 
   693  019C                     	;# 
   694  020C                     	;# 
   695  020C                     	;# 
   696  020D                     	;# 
   697  020E                     	;# 
   698  020F                     	;# 
   699  020F                     	;# 
   700  0210                     	;# 
   701  0210                     	;# 
   702  0211                     	;# 
   703  0211                     	;# 
   704  0212                     	;# 
   705  0212                     	;# 
   706  0213                     	;# 
   707  0214                     	;# 
   708  0215                     	;# 
   709  0215                     	;# 
   710  0216                     	;# 
   711  0216                     	;# 
   712  0217                     	;# 
   713  0217                     	;# 
   714  0218                     	;# 
   715  0218                     	;# 
   716  0219                     	;# 
   717  021A                     	;# 
   718  021B                     	;# 
   719  021B                     	;# 
   720  021C                     	;# 
   721  021C                     	;# 
   722  021D                     	;# 
   723  021D                     	;# 
   724  021E                     	;# 
   725  021F                     	;# 
   726  028C                     	;# 
   727  028C                     	;# 
   728  028D                     	;# 
   729  028D                     	;# 
   730  028E                     	;# 
   731  028F                     	;# 
   732  0290                     	;# 
   733  0290                     	;# 
   734  0291                     	;# 
   735  0292                     	;# 
   736  0292                     	;# 
   737  0293                     	;# 
   738  0293                     	;# 
   739  0294                     	;# 
   740  0295                     	;# 
   741  0296                     	;# 
   742  0296                     	;# 
   743  0297                     	;# 
   744  0298                     	;# 
   745  0298                     	;# 
   746  0299                     	;# 
   747  0299                     	;# 
   748  029A                     	;# 
   749  029B                     	;# 
   750  029C                     	;# 
   751  029C                     	;# 
   752  029D                     	;# 
   753  030C                     	;# 
   754  030C                     	;# 
   755  030D                     	;# 
   756  030E                     	;# 
   757  030F                     	;# 
   758  0310                     	;# 
   759  0310                     	;# 
   760  0311                     	;# 
   761  0312                     	;# 
   762  0313                     	;# 
   763  0314                     	;# 
   764  0314                     	;# 
   765  0315                     	;# 
   766  0316                     	;# 
   767  0317                     	;# 
   768  0318                     	;# 
   769  0318                     	;# 
   770  0319                     	;# 
   771  031A                     	;# 
   772  031B                     	;# 
   773  031C                     	;# 
   774  031C                     	;# 
   775  031D                     	;# 
   776  031E                     	;# 
   777  031F                     	;# 
   778  038C                     	;# 
   779  038D                     	;# 
   780  038E                     	;# 
   781  0390                     	;# 
   782  0391                     	;# 
   783  0392                     	;# 
   784  040C                     	;# 
   785  040D                     	;# 
   786  040E                     	;# 
   787  040F                     	;# 
   788  0410                     	;# 
   789  0411                     	;# 
   790  0416                     	;# 
   791  0416                     	;# 
   792  0417                     	;# 
   793  0418                     	;# 
   794  0418                     	;# 
   795  0419                     	;# 
   796  041A                     	;# 
   797  041A                     	;# 
   798  041B                     	;# 
   799  041C                     	;# 
   800  041C                     	;# 
   801  041D                     	;# 
   802  041E                     	;# 
   803  041F                     	;# 
   804  048C                     	;# 
   805  048C                     	;# 
   806  048D                     	;# 
   807  048E                     	;# 
   808  048F                     	;# 
   809  048F                     	;# 
   810  0490                     	;# 
   811  0491                     	;# 
   812  0492                     	;# 
   813  0492                     	;# 
   814  0493                     	;# 
   815  0494                     	;# 
   816  0495                     	;# 
   817  0495                     	;# 
   818  0496                     	;# 
   819  0497                     	;# 
   820  0498                     	;# 
   821  0499                     	;# 
   822  049A                     	;# 
   823  049B                     	;# 
   824  049C                     	;# 
   825  049D                     	;# 
   826  050C                     	;# 
   827  050C                     	;# 
   828  050D                     	;# 
   829  050E                     	;# 
   830  050F                     	;# 
   831  050F                     	;# 
   832  0510                     	;# 
   833  0511                     	;# 
   834  0512                     	;# 
   835  0512                     	;# 
   836  0513                     	;# 
   837  0514                     	;# 
   838  0515                     	;# 
   839  0515                     	;# 
   840  0516                     	;# 
   841  0517                     	;# 
   842  0518                     	;# 
   843  0519                     	;# 
   844  051A                     	;# 
   845  051B                     	;# 
   846  051C                     	;# 
   847  051D                     	;# 
   848  058C                     	;# 
   849  058C                     	;# 
   850  058D                     	;# 
   851  058E                     	;# 
   852  058F                     	;# 
   853  058F                     	;# 
   854  0590                     	;# 
   855  0591                     	;# 
   856  0592                     	;# 
   857  0593                     	;# 
   858  060C                     	;# 
   859  060D                     	;# 
   860  060E                     	;# 
   861  060F                     	;# 
   862  0610                     	;# 
   863  0611                     	;# 
   864  0612                     	;# 
   865  0613                     	;# 
   866  0614                     	;# 
   867  0616                     	;# 
   868  0617                     	;# 
   869  0618                     	;# 
   870  0619                     	;# 
   871  061A                     	;# 
   872  061B                     	;# 
   873  061C                     	;# 
   874  061D                     	;# 
   875  061E                     	;# 
   876  068C                     	;# 
   877  068D                     	;# 
   878  068E                     	;# 
   879  068F                     	;# 
   880  0690                     	;# 
   881  0691                     	;# 
   882  0692                     	;# 
   883  0693                     	;# 
   884  0694                     	;# 
   885  070C                     	;# 
   886  070D                     	;# 
   887  070E                     	;# 
   888  070F                     	;# 
   889  0710                     	;# 
   890  0711                     	;# 
   891  0712                     	;# 
   892  0713                     	;# 
   893  0714                     	;# 
   894  0716                     	;# 
   895  0717                     	;# 
   896  0718                     	;# 
   897  0719                     	;# 
   898  071A                     	;# 
   899  071B                     	;# 
   900  071C                     	;# 
   901  071D                     	;# 
   902  071E                     	;# 
   903  0796                     	;# 
   904  0797                     	;# 
   905  0798                     	;# 
   906  0799                     	;# 
   907  079A                     	;# 
   908  079B                     	;# 
   909  080C                     	;# 
   910  080D                     	;# 
   911  080E                     	;# 
   912  080F                     	;# 
   913  0810                     	;# 
   914  0811                     	;# 
   915  0812                     	;# 
   916  0813                     	;# 
   917  0814                     	;# 
   918  081A                     	;# 
   919  081B                     	;# 
   920  081C                     	;# 
   921  081D                     	;# 
   922  081E                     	;# 
   923  081F                     	;# 
   924  088C                     	;# 
   925  088D                     	;# 
   926  088E                     	;# 
   927  088F                     	;# 
   928  0890                     	;# 
   929  0891                     	;# 
   930  0892                     	;# 
   931  0893                     	;# 
   932  0895                     	;# 
   933  0896                     	;# 
   934  0897                     	;# 
   935  0898                     	;# 
   936  0899                     	;# 
   937  089A                     	;# 
   938  089B                     	;# 
   939  090C                     	;# 
   940  090E                     	;# 
   941  090F                     	;# 
   942  091F                     	;# 
   943  091F                     	;# 
   944  098F                     	;# 
   945  098F                     	;# 
   946  0990                     	;# 
   947  0991                     	;# 
   948  0992                     	;# 
   949  0993                     	;# 
   950  0994                     	;# 
   951  0995                     	;# 
   952  0996                     	;# 
   953  0997                     	;# 
   954  0E0F                     	;# 
   955  0E10                     	;# 
   956  0E11                     	;# 
   957  0E12                     	;# 
   958  0E13                     	;# 
   959  0E14                     	;# 
   960  0E15                     	;# 
   961  0E16                     	;# 
   962  0E17                     	;# 
   963  0E18                     	;# 
   964  0E19                     	;# 
   965  0E1A                     	;# 
   966  0E1B                     	;# 
   967  0E1C                     	;# 
   968  0E1D                     	;# 
   969  0E1E                     	;# 
   970  0E1F                     	;# 
   971  0E20                     	;# 
   972  0E21                     	;# 
   973  0E22                     	;# 
   974  0E23                     	;# 
   975  0E24                     	;# 
   976  0E25                     	;# 
   977  0E26                     	;# 
   978  0E27                     	;# 
   979  0E28                     	;# 
   980  0E29                     	;# 
   981  0E2A                     	;# 
   982  0E2B                     	;# 
   983  0E2C                     	;# 
   984  0E2D                     	;# 
   985  0E2E                     	;# 
   986  0E2F                     	;# 
   987  0E30                     	;# 
   988  0E31                     	;# 
   989  0E32                     	;# 
   990  0E33                     	;# 
   991  0E34                     	;# 
   992  0E35                     	;# 
   993  0E36                     	;# 
   994  0E37                     	;# 
   995  0E8F                     	;# 
   996  0E90                     	;# 
   997  0E91                     	;# 
   998  0E92                     	;# 
   999  0E93                     	;# 
  1000  0E94                     	;# 
  1001  0E95                     	;# 
  1002  0E96                     	;# 
  1003  0E97                     	;# 
  1004  0E9C                     	;# 
  1005  0E9D                     	;# 
  1006  0E9E                     	;# 
  1007  0EA1                     	;# 
  1008  0EA2                     	;# 
  1009  0EA3                     	;# 
  1010  0EA4                     	;# 
  1011  0EA5                     	;# 
  1012  0EA9                     	;# 
  1013  0EAA                     	;# 
  1014  0EAB                     	;# 
  1015  0EAC                     	;# 
  1016  0EB1                     	;# 
  1017  0EB2                     	;# 
  1018  0EB3                     	;# 
  1019  0EB8                     	;# 
  1020  0EB9                     	;# 
  1021  0EBA                     	;# 
  1022  0EBB                     	;# 
  1023  0EBC                     	;# 
  1024  0EBD                     	;# 
  1025  0EBE                     	;# 
  1026  0EC3                     	;# 
  1027  0EC5                     	;# 
  1028  0EC6                     	;# 
  1029  0EC7                     	;# 
  1030  0EC8                     	;# 
  1031  0EC9                     	;# 
  1032  0ECA                     	;# 
  1033  0ECB                     	;# 
  1034  0ECC                     	;# 
  1035  0F10                     	;# 
  1036  0F11                     	;# 
  1037  0F12                     	;# 
  1038  0F13                     	;# 
  1039  0F14                     	;# 
  1040  0F15                     	;# 
  1041  0F16                     	;# 
  1042  0F17                     	;# 
  1043  0F18                     	;# 
  1044  0F19                     	;# 
  1045  0F1A                     	;# 
  1046  0F1B                     	;# 
  1047  0F1C                     	;# 
  1048  0F1D                     	;# 
  1049  0F1E                     	;# 
  1050  0F1F                     	;# 
  1051  0F20                     	;# 
  1052  0F21                     	;# 
  1053  0F22                     	;# 
  1054  0F23                     	;# 
  1055  0F24                     	;# 
  1056  0F25                     	;# 
  1057  0F26                     	;# 
  1058  0F27                     	;# 
  1059  0F38                     	;# 
  1060  0F39                     	;# 
  1061  0F3A                     	;# 
  1062  0F3B                     	;# 
  1063  0F3C                     	;# 
  1064  0F3D                     	;# 
  1065  0F3E                     	;# 
  1066  0F3F                     	;# 
  1067  0F40                     	;# 
  1068  0F41                     	;# 
  1069  0F43                     	;# 
  1070  0F44                     	;# 
  1071  0F45                     	;# 
  1072  0F46                     	;# 
  1073  0F47                     	;# 
  1074  0F48                     	;# 
  1075  0F49                     	;# 
  1076  0F4A                     	;# 
  1077  0F4B                     	;# 
  1078  0F4C                     	;# 
  1079  0F4E                     	;# 
  1080  0F4F                     	;# 
  1081  0F50                     	;# 
  1082  0F51                     	;# 
  1083  0F52                     	;# 
  1084  0F53                     	;# 
  1085  0F54                     	;# 
  1086  0F55                     	;# 
  1087  0F56                     	;# 
  1088  0F57                     	;# 
  1089  0F65                     	;# 
  1090  0F68                     	;# 
  1091  0F69                     	;# 
  1092  0F6A                     	;# 
  1093  0F6B                     	;# 
  1094  0FE4                     	;# 
  1095  0FE5                     	;# 
  1096  0FE6                     	;# 
  1097  0FE7                     	;# 
  1098  0FE8                     	;# 
  1099  0FE9                     	;# 
  1100  0FEA                     	;# 
  1101  0FEB                     	;# 
  1102  0FED                     	;# 
  1103  0FEE                     	;# 
  1104  0FEF                     	;# 
  1105  0000                     	;# 
  1106  0001                     	;# 
  1107  0002                     	;# 
  1108  0003                     	;# 
  1109  0004                     	;# 
  1110  0005                     	;# 
  1111  0006                     	;# 
  1112  0007                     	;# 
  1113  0008                     	;# 
  1114  0009                     	;# 
  1115  000A                     	;# 
  1116  000B                     	;# 
  1117  000C                     	;# 
  1118  000D                     	;# 
  1119  000E                     	;# 
  1120  0010                     	;# 
  1121  0011                     	;# 
  1122  0012                     	;# 
  1123  0013                     	;# 
  1124  0016                     	;# 
  1125  0017                     	;# 
  1126  0018                     	;# 
  1127  001C                     	;# 
  1128  001C                     	;# 
  1129  001D                     	;# 
  1130  001D                     	;# 
  1131  001E                     	;# 
  1132  001F                     	;# 
  1133  008C                     	;# 
  1134  008C                     	;# 
  1135  008D                     	;# 
  1136  008E                     	;# 
  1137  008E                     	;# 
  1138  008F                     	;# 
  1139  0090                     	;# 
  1140  0090                     	;# 
  1141  0091                     	;# 
  1142  0093                     	;# 
  1143  0094                     	;# 
  1144  0095                     	;# 
  1145  0096                     	;# 
  1146  0097                     	;# 
  1147  0098                     	;# 
  1148  0099                     	;# 
  1149  009A                     	;# 
  1150  009B                     	;# 
  1151  009C                     	;# 
  1152  009D                     	;# 
  1153  009E                     	;# 
  1154  010C                     	;# 
  1155  010D                     	;# 
  1156  010E                     	;# 
  1157  010E                     	;# 
  1158  010F                     	;# 
  1159  0110                     	;# 
  1160  0110                     	;# 
  1161  0111                     	;# 
  1162  0112                     	;# 
  1163  0112                     	;# 
  1164  0113                     	;# 
  1165  0114                     	;# 
  1166  0114                     	;# 
  1167  0115                     	;# 
  1168  0116                     	;# 
  1169  0116                     	;# 
  1170  0117                     	;# 
  1171  0119                     	;# 
  1172  0119                     	;# 
  1173  0119                     	;# 
  1174  011A                     	;# 
  1175  011A                     	;# 
  1176  011A                     	;# 
  1177  011B                     	;# 
  1178  011B                     	;# 
  1179  011B                     	;# 
  1180  011B                     	;# 
  1181  011B                     	;# 
  1182  011C                     	;# 
  1183  011C                     	;# 
  1184  011C                     	;# 
  1185  011D                     	;# 
  1186  011D                     	;# 
  1187  011D                     	;# 
  1188  011E                     	;# 
  1189  011E                     	;# 
  1190  011E                     	;# 
  1191  011F                     	;# 
  1192  011F                     	;# 
  1193  011F                     	;# 
  1194  011F                     	;# 
  1195  011F                     	;# 
  1196  018C                     	;# 
  1197  018D                     	;# 
  1198  018E                     	;# 
  1199  018F                     	;# 
  1200  0190                     	;# 
  1201  0191                     	;# 
  1202  0192                     	;# 
  1203  0196                     	;# 
  1204  0197                     	;# 
  1205  0198                     	;# 
  1206  0199                     	;# 
  1207  019A                     	;# 
  1208  019B                     	;# 
  1209  019C                     	;# 
  1210  020C                     	;# 
  1211  020C                     	;# 
  1212  020D                     	;# 
  1213  020E                     	;# 
  1214  020F                     	;# 
  1215  020F                     	;# 
  1216  0210                     	;# 
  1217  0210                     	;# 
  1218  0211                     	;# 
  1219  0211                     	;# 
  1220  0212                     	;# 
  1221  0212                     	;# 
  1222  0213                     	;# 
  1223  0214                     	;# 
  1224  0215                     	;# 
  1225  0215                     	;# 
  1226  0216                     	;# 
  1227  0216                     	;# 
  1228  0217                     	;# 
  1229  0217                     	;# 
  1230  0218                     	;# 
  1231  0218                     	;# 
  1232  0219                     	;# 
  1233  021A                     	;# 
  1234  021B                     	;# 
  1235  021B                     	;# 
  1236  021C                     	;# 
  1237  021C                     	;# 
  1238  021D                     	;# 
  1239  021D                     	;# 
  1240  021E                     	;# 
  1241  021F                     	;# 
  1242  028C                     	;# 
  1243  028C                     	;# 
  1244  028D                     	;# 
  1245  028D                     	;# 
  1246  028E                     	;# 
  1247  028F                     	;# 
  1248  0290                     	;# 
  1249  0290                     	;# 
  1250  0291                     	;# 
  1251  0292                     	;# 
  1252  0292                     	;# 
  1253  0293                     	;# 
  1254  0293                     	;# 
  1255  0294                     	;# 
  1256  0295                     	;# 
  1257  0296                     	;# 
  1258  0296                     	;# 
  1259  0297                     	;# 
  1260  0298                     	;# 
  1261  0298                     	;# 
  1262  0299                     	;# 
  1263  0299                     	;# 
  1264  029A                     	;# 
  1265  029B                     	;# 
  1266  029C                     	;# 
  1267  029C                     	;# 
  1268  029D                     	;# 
  1269  030C                     	;# 
  1270  030C                     	;# 
  1271  030D                     	;# 
  1272  030E                     	;# 
  1273  030F                     	;# 
  1274  0310                     	;# 
  1275  0310                     	;# 
  1276  0311                     	;# 
  1277  0312                     	;# 
  1278  0313                     	;# 
  1279  0314                     	;# 
  1280  0314                     	;# 
  1281  0315                     	;# 
  1282  0316                     	;# 
  1283  0317                     	;# 
  1284  0318                     	;# 
  1285  0318                     	;# 
  1286  0319                     	;# 
  1287  031A                     	;# 
  1288  031B                     	;# 
  1289  031C                     	;# 
  1290  031C                     	;# 
  1291  031D                     	;# 
  1292  031E                     	;# 
  1293  031F                     	;# 
  1294  038C                     	;# 
  1295  038D                     	;# 
  1296  038E                     	;# 
  1297  0390                     	;# 
  1298  0391                     	;# 
  1299  0392                     	;# 
  1300  040C                     	;# 
  1301  040D                     	;# 
  1302  040E                     	;# 
  1303  040F                     	;# 
  1304  0410                     	;# 
  1305  0411                     	;# 
  1306  0416                     	;# 
  1307  0416                     	;# 
  1308  0417                     	;# 
  1309  0418                     	;# 
  1310  0418                     	;# 
  1311  0419                     	;# 
  1312  041A                     	;# 
  1313  041A                     	;# 
  1314  041B                     	;# 
  1315  041C                     	;# 
  1316  041C                     	;# 
  1317  041D                     	;# 
  1318  041E                     	;# 
  1319  041F                     	;# 
  1320  048C                     	;# 
  1321  048C                     	;# 
  1322  048D                     	;# 
  1323  048E                     	;# 
  1324  048F                     	;# 
  1325  048F                     	;# 
  1326  0490                     	;# 
  1327  0491                     	;# 
  1328  0492                     	;# 
  1329  0492                     	;# 
  1330  0493                     	;# 
  1331  0494                     	;# 
  1332  0495                     	;# 
  1333  0495                     	;# 
  1334  0496                     	;# 
  1335  0497                     	;# 
  1336  0498                     	;# 
  1337  0499                     	;# 
  1338  049A                     	;# 
  1339  049B                     	;# 
  1340  049C                     	;# 
  1341  049D                     	;# 
  1342  050C                     	;# 
  1343  050C                     	;# 
  1344  050D                     	;# 
  1345  050E                     	;# 
  1346  050F                     	;# 
  1347  050F                     	;# 
  1348  0510                     	;# 
  1349  0511                     	;# 
  1350  0512                     	;# 
  1351  0512                     	;# 
  1352  0513                     	;# 
  1353  0514                     	;# 
  1354  0515                     	;# 
  1355  0515                     	;# 
  1356  0516                     	;# 
  1357  0517                     	;# 
  1358  0518                     	;# 
  1359  0519                     	;# 
  1360  051A                     	;# 
  1361  051B                     	;# 
  1362  051C                     	;# 
  1363  051D                     	;# 
  1364  058C                     	;# 
  1365  058C                     	;# 
  1366  058D                     	;# 
  1367  058E                     	;# 
  1368  058F                     	;# 
  1369  058F                     	;# 
  1370  0590                     	;# 
  1371  0591                     	;# 
  1372  0592                     	;# 
  1373  0593                     	;# 
  1374  060C                     	;# 
  1375  060D                     	;# 
  1376  060E                     	;# 
  1377  060F                     	;# 
  1378  0610                     	;# 
  1379  0611                     	;# 
  1380  0612                     	;# 
  1381  0613                     	;# 
  1382  0614                     	;# 
  1383  0616                     	;# 
  1384  0617                     	;# 
  1385  0618                     	;# 
  1386  0619                     	;# 
  1387  061A                     	;# 
  1388  061B                     	;# 
  1389  061C                     	;# 
  1390  061D                     	;# 
  1391  061E                     	;# 
  1392  068C                     	;# 
  1393  068D                     	;# 
  1394  068E                     	;# 
  1395  068F                     	;# 
  1396  0690                     	;# 
  1397  0691                     	;# 
  1398  0692                     	;# 
  1399  0693                     	;# 
  1400  0694                     	;# 
  1401  070C                     	;# 
  1402  070D                     	;# 
  1403  070E                     	;# 
  1404  070F                     	;# 
  1405  0710                     	;# 
  1406  0711                     	;# 
  1407  0712                     	;# 
  1408  0713                     	;# 
  1409  0714                     	;# 
  1410  0716                     	;# 
  1411  0717                     	;# 
  1412  0718                     	;# 
  1413  0719                     	;# 
  1414  071A                     	;# 
  1415  071B                     	;# 
  1416  071C                     	;# 
  1417  071D                     	;# 
  1418  071E                     	;# 
  1419  0796                     	;# 
  1420  0797                     	;# 
  1421  0798                     	;# 
  1422  0799                     	;# 
  1423  079A                     	;# 
  1424  079B                     	;# 
  1425  080C                     	;# 
  1426  080D                     	;# 
  1427  080E                     	;# 
  1428  080F                     	;# 
  1429  0810                     	;# 
  1430  0811                     	;# 
  1431  0812                     	;# 
  1432  0813                     	;# 
  1433  0814                     	;# 
  1434  081A                     	;# 
  1435  081B                     	;# 
  1436  081C                     	;# 
  1437  081D                     	;# 
  1438  081E                     	;# 
  1439  081F                     	;# 
  1440  088C                     	;# 
  1441  088D                     	;# 
  1442  088E                     	;# 
  1443  088F                     	;# 
  1444  0890                     	;# 
  1445  0891                     	;# 
  1446  0892                     	;# 
  1447  0893                     	;# 
  1448  0895                     	;# 
  1449  0896                     	;# 
  1450  0897                     	;# 
  1451  0898                     	;# 
  1452  0899                     	;# 
  1453  089A                     	;# 
  1454  089B                     	;# 
  1455  090C                     	;# 
  1456  090E                     	;# 
  1457  090F                     	;# 
  1458  091F                     	;# 
  1459  091F                     	;# 
  1460  098F                     	;# 
  1461  098F                     	;# 
  1462  0990                     	;# 
  1463  0991                     	;# 
  1464  0992                     	;# 
  1465  0993                     	;# 
  1466  0994                     	;# 
  1467  0995                     	;# 
  1468  0996                     	;# 
  1469  0997                     	;# 
  1470  0E0F                     	;# 
  1471  0E10                     	;# 
  1472  0E11                     	;# 
  1473  0E12                     	;# 
  1474  0E13                     	;# 
  1475  0E14                     	;# 
  1476  0E15                     	;# 
  1477  0E16                     	;# 
  1478  0E17                     	;# 
  1479  0E18                     	;# 
  1480  0E19                     	;# 
  1481  0E1A                     	;# 
  1482  0E1B                     	;# 
  1483  0E1C                     	;# 
  1484  0E1D                     	;# 
  1485  0E1E                     	;# 
  1486  0E1F                     	;# 
  1487  0E20                     	;# 
  1488  0E21                     	;# 
  1489  0E22                     	;# 
  1490  0E23                     	;# 
  1491  0E24                     	;# 
  1492  0E25                     	;# 
  1493  0E26                     	;# 
  1494  0E27                     	;# 
  1495  0E28                     	;# 
  1496  0E29                     	;# 
  1497  0E2A                     	;# 
  1498  0E2B                     	;# 
  1499  0E2C                     	;# 
  1500  0E2D                     	;# 
  1501  0E2E                     	;# 
  1502  0E2F                     	;# 
  1503  0E30                     	;# 
  1504  0E31                     	;# 
  1505  0E32                     	;# 
  1506  0E33                     	;# 
  1507  0E34                     	;# 
  1508  0E35                     	;# 
  1509  0E36                     	;# 
  1510  0E37                     	;# 
  1511  0E8F                     	;# 
  1512  0E90                     	;# 
  1513  0E91                     	;# 
  1514  0E92                     	;# 
  1515  0E93                     	;# 
  1516  0E94                     	;# 
  1517  0E95                     	;# 
  1518  0E96                     	;# 
  1519  0E97                     	;# 
  1520  0E9C                     	;# 
  1521  0E9D                     	;# 
  1522  0E9E                     	;# 
  1523  0EA1                     	;# 
  1524  0EA2                     	;# 
  1525  0EA3                     	;# 
  1526  0EA4                     	;# 
  1527  0EA5                     	;# 
  1528  0EA9                     	;# 
  1529  0EAA                     	;# 
  1530  0EAB                     	;# 
  1531  0EAC                     	;# 
  1532  0EB1                     	;# 
  1533  0EB2                     	;# 
  1534  0EB3                     	;# 
  1535  0EB8                     	;# 
  1536  0EB9                     	;# 
  1537  0EBA                     	;# 
  1538  0EBB                     	;# 
  1539  0EBC                     	;# 
  1540  0EBD                     	;# 
  1541  0EBE                     	;# 
  1542  0EC3                     	;# 
  1543  0EC5                     	;# 
  1544  0EC6                     	;# 
  1545  0EC7                     	;# 
  1546  0EC8                     	;# 
  1547  0EC9                     	;# 
  1548  0ECA                     	;# 
  1549  0ECB                     	;# 
  1550  0ECC                     	;# 
  1551  0F10                     	;# 
  1552  0F11                     	;# 
  1553  0F12                     	;# 
  1554  0F13                     	;# 
  1555  0F14                     	;# 
  1556  0F15                     	;# 
  1557  0F16                     	;# 
  1558  0F17                     	;# 
  1559  0F18                     	;# 
  1560  0F19                     	;# 
  1561  0F1A                     	;# 
  1562  0F1B                     	;# 
  1563  0F1C                     	;# 
  1564  0F1D                     	;# 
  1565  0F1E                     	;# 
  1566  0F1F                     	;# 
  1567  0F20                     	;# 
  1568  0F21                     	;# 
  1569  0F22                     	;# 
  1570  0F23                     	;# 
  1571  0F24                     	;# 
  1572  0F25                     	;# 
  1573  0F26                     	;# 
  1574  0F27                     	;# 
  1575  0F38                     	;# 
  1576  0F39                     	;# 
  1577  0F3A                     	;# 
  1578  0F3B                     	;# 
  1579  0F3C                     	;# 
  1580  0F3D                     	;# 
  1581  0F3E                     	;# 
  1582  0F3F                     	;# 
  1583  0F40                     	;# 
  1584  0F41                     	;# 
  1585  0F43                     	;# 
  1586  0F44                     	;# 
  1587  0F45                     	;# 
  1588  0F46                     	;# 
  1589  0F47                     	;# 
  1590  0F48                     	;# 
  1591  0F49                     	;# 
  1592  0F4A                     	;# 
  1593  0F4B                     	;# 
  1594  0F4C                     	;# 
  1595  0F4E                     	;# 
  1596  0F4F                     	;# 
  1597  0F50                     	;# 
  1598  0F51                     	;# 
  1599  0F52                     	;# 
  1600  0F53                     	;# 
  1601  0F54                     	;# 
  1602  0F55                     	;# 
  1603  0F56                     	;# 
  1604  0F57                     	;# 
  1605  0F65                     	;# 
  1606  0F68                     	;# 
  1607  0F69                     	;# 
  1608  0F6A                     	;# 
  1609  0F6B                     	;# 
  1610  0FE4                     	;# 
  1611  0FE5                     	;# 
  1612  0FE6                     	;# 
  1613  0FE7                     	;# 
  1614  0FE8                     	;# 
  1615  0FE9                     	;# 
  1616  0FEA                     	;# 
  1617  0FEB                     	;# 
  1618  0FED                     	;# 
  1619  0FEE                     	;# 
  1620  0FEF                     	;# 
  1621  0000                     	;# 
  1622  0001                     	;# 
  1623  0002                     	;# 
  1624  0003                     	;# 
  1625  0004                     	;# 
  1626  0005                     	;# 
  1627  0006                     	;# 
  1628  0007                     	;# 
  1629  0008                     	;# 
  1630  0009                     	;# 
  1631  000A                     	;# 
  1632  000B                     	;# 
  1633  000C                     	;# 
  1634  000D                     	;# 
  1635  000E                     	;# 
  1636  0010                     	;# 
  1637  0011                     	;# 
  1638  0012                     	;# 
  1639  0013                     	;# 
  1640  0016                     	;# 
  1641  0017                     	;# 
  1642  0018                     	;# 
  1643  001C                     	;# 
  1644  001C                     	;# 
  1645  001D                     	;# 
  1646  001D                     	;# 
  1647  001E                     	;# 
  1648  001F                     	;# 
  1649  008C                     	;# 
  1650  008C                     	;# 
  1651  008D                     	;# 
  1652  008E                     	;# 
  1653  008E                     	;# 
  1654  008F                     	;# 
  1655  0090                     	;# 
  1656  0090                     	;# 
  1657  0091                     	;# 
  1658  0093                     	;# 
  1659  0094                     	;# 
  1660  0095                     	;# 
  1661  0096                     	;# 
  1662  0097                     	;# 
  1663  0098                     	;# 
  1664  0099                     	;# 
  1665  009A                     	;# 
  1666  009B                     	;# 
  1667  009C                     	;# 
  1668  009D                     	;# 
  1669  009E                     	;# 
  1670  010C                     	;# 
  1671  010D                     	;# 
  1672  010E                     	;# 
  1673  010E                     	;# 
  1674  010F                     	;# 
  1675  0110                     	;# 
  1676  0110                     	;# 
  1677  0111                     	;# 
  1678  0112                     	;# 
  1679  0112                     	;# 
  1680  0113                     	;# 
  1681  0114                     	;# 
  1682  0114                     	;# 
  1683  0115                     	;# 
  1684  0116                     	;# 
  1685  0116                     	;# 
  1686  0117                     	;# 
  1687  0119                     	;# 
  1688  0119                     	;# 
  1689  0119                     	;# 
  1690  011A                     	;# 
  1691  011A                     	;# 
  1692  011A                     	;# 
  1693  011B                     	;# 
  1694  011B                     	;# 
  1695  011B                     	;# 
  1696  011B                     	;# 
  1697  011B                     	;# 
  1698  011C                     	;# 
  1699  011C                     	;# 
  1700  011C                     	;# 
  1701  011D                     	;# 
  1702  011D                     	;# 
  1703  011D                     	;# 
  1704  011E                     	;# 
  1705  011E                     	;# 
  1706  011E                     	;# 
  1707  011F                     	;# 
  1708  011F                     	;# 
  1709  011F                     	;# 
  1710  011F                     	;# 
  1711  011F                     	;# 
  1712  018C                     	;# 
  1713  018D                     	;# 
  1714  018E                     	;# 
  1715  018F                     	;# 
  1716  0190                     	;# 
  1717  0191                     	;# 
  1718  0192                     	;# 
  1719  0196                     	;# 
  1720  0197                     	;# 
  1721  0198                     	;# 
  1722  0199                     	;# 
  1723  019A                     	;# 
  1724  019B                     	;# 
  1725  019C                     	;# 
  1726  020C                     	;# 
  1727  020C                     	;# 
  1728  020D                     	;# 
  1729  020E                     	;# 
  1730  020F                     	;# 
  1731  020F                     	;# 
  1732  0210                     	;# 
  1733  0210                     	;# 
  1734  0211                     	;# 
  1735  0211                     	;# 
  1736  0212                     	;# 
  1737  0212                     	;# 
  1738  0213                     	;# 
  1739  0214                     	;# 
  1740  0215                     	;# 
  1741  0215                     	;# 
  1742  0216                     	;# 
  1743  0216                     	;# 
  1744  0217                     	;# 
  1745  0217                     	;# 
  1746  0218                     	;# 
  1747  0218                     	;# 
  1748  0219                     	;# 
  1749  021A                     	;# 
  1750  021B                     	;# 
  1751  021B                     	;# 
  1752  021C                     	;# 
  1753  021C                     	;# 
  1754  021D                     	;# 
  1755  021D                     	;# 
  1756  021E                     	;# 
  1757  021F                     	;# 
  1758  028C                     	;# 
  1759  028C                     	;# 
  1760  028D                     	;# 
  1761  028D                     	;# 
  1762  028E                     	;# 
  1763  028F                     	;# 
  1764  0290                     	;# 
  1765  0290                     	;# 
  1766  0291                     	;# 
  1767  0292                     	;# 
  1768  0292                     	;# 
  1769  0293                     	;# 
  1770  0293                     	;# 
  1771  0294                     	;# 
  1772  0295                     	;# 
  1773  0296                     	;# 
  1774  0296                     	;# 
  1775  0297                     	;# 
  1776  0298                     	;# 
  1777  0298                     	;# 
  1778  0299                     	;# 
  1779  0299                     	;# 
  1780  029A                     	;# 
  1781  029B                     	;# 
  1782  029C                     	;# 
  1783  029C                     	;# 
  1784  029D                     	;# 
  1785  030C                     	;# 
  1786  030C                     	;# 
  1787  030D                     	;# 
  1788  030E                     	;# 
  1789  030F                     	;# 
  1790  0310                     	;# 
  1791  0310                     	;# 
  1792  0311                     	;# 
  1793  0312                     	;# 
  1794  0313                     	;# 
  1795  0314                     	;# 
  1796  0314                     	;# 
  1797  0315                     	;# 
  1798  0316                     	;# 
  1799  0317                     	;# 
  1800  0318                     	;# 
  1801  0318                     	;# 
  1802  0319                     	;# 
  1803  031A                     	;# 
  1804  031B                     	;# 
  1805  031C                     	;# 
  1806  031C                     	;# 
  1807  031D                     	;# 
  1808  031E                     	;# 
  1809  031F                     	;# 
  1810  038C                     	;# 
  1811  038D                     	;# 
  1812  038E                     	;# 
  1813  0390                     	;# 
  1814  0391                     	;# 
  1815  0392                     	;# 
  1816  040C                     	;# 
  1817  040D                     	;# 
  1818  040E                     	;# 
  1819  040F                     	;# 
  1820  0410                     	;# 
  1821  0411                     	;# 
  1822  0416                     	;# 
  1823  0416                     	;# 
  1824  0417                     	;# 
  1825  0418                     	;# 
  1826  0418                     	;# 
  1827  0419                     	;# 
  1828  041A                     	;# 
  1829  041A                     	;# 
  1830  041B                     	;# 
  1831  041C                     	;# 
  1832  041C                     	;# 
  1833  041D                     	;# 
  1834  041E                     	;# 
  1835  041F                     	;# 
  1836  048C                     	;# 
  1837  048C                     	;# 
  1838  048D                     	;# 
  1839  048E                     	;# 
  1840  048F                     	;# 
  1841  048F                     	;# 
  1842  0490                     	;# 
  1843  0491                     	;# 
  1844  0492                     	;# 
  1845  0492                     	;# 
  1846  0493                     	;# 
  1847  0494                     	;# 
  1848  0495                     	;# 
  1849  0495                     	;# 
  1850  0496                     	;# 
  1851  0497                     	;# 
  1852  0498                     	;# 
  1853  0499                     	;# 
  1854  049A                     	;# 
  1855  049B                     	;# 
  1856  049C                     	;# 
  1857  049D                     	;# 
  1858  050C                     	;# 
  1859  050C                     	;# 
  1860  050D                     	;# 
  1861  050E                     	;# 
  1862  050F                     	;# 
  1863  050F                     	;# 
  1864  0510                     	;# 
  1865  0511                     	;# 
  1866  0512                     	;# 
  1867  0512                     	;# 
  1868  0513                     	;# 
  1869  0514                     	;# 
  1870  0515                     	;# 
  1871  0515                     	;# 
  1872  0516                     	;# 
  1873  0517                     	;# 
  1874  0518                     	;# 
  1875  0519                     	;# 
  1876  051A                     	;# 
  1877  051B                     	;# 
  1878  051C                     	;# 
  1879  051D                     	;# 
  1880  058C                     	;# 
  1881  058C                     	;# 
  1882  058D                     	;# 
  1883  058E                     	;# 
  1884  058F                     	;# 
  1885  058F                     	;# 
  1886  0590                     	;# 
  1887  0591                     	;# 
  1888  0592                     	;# 
  1889  0593                     	;# 
  1890  060C                     	;# 
  1891  060D                     	;# 
  1892  060E                     	;# 
  1893  060F                     	;# 
  1894  0610                     	;# 
  1895  0611                     	;# 
  1896  0612                     	;# 
  1897  0613                     	;# 
  1898  0614                     	;# 
  1899  0616                     	;# 
  1900  0617                     	;# 
  1901  0618                     	;# 
  1902  0619                     	;# 
  1903  061A                     	;# 
  1904  061B                     	;# 
  1905  061C                     	;# 
  1906  061D                     	;# 
  1907  061E                     	;# 
  1908  068C                     	;# 
  1909  068D                     	;# 
  1910  068E                     	;# 
  1911  068F                     	;# 
  1912  0690                     	;# 
  1913  0691                     	;# 
  1914  0692                     	;# 
  1915  0693                     	;# 
  1916  0694                     	;# 
  1917  070C                     	;# 
  1918  070D                     	;# 
  1919  070E                     	;# 
  1920  070F                     	;# 
  1921  0710                     	;# 
  1922  0711                     	;# 
  1923  0712                     	;# 
  1924  0713                     	;# 
  1925  0714                     	;# 
  1926  0716                     	;# 
  1927  0717                     	;# 
  1928  0718                     	;# 
  1929  0719                     	;# 
  1930  071A                     	;# 
  1931  071B                     	;# 
  1932  071C                     	;# 
  1933  071D                     	;# 
  1934  071E                     	;# 
  1935  0796                     	;# 
  1936  0797                     	;# 
  1937  0798                     	;# 
  1938  0799                     	;# 
  1939  079A                     	;# 
  1940  079B                     	;# 
  1941  080C                     	;# 
  1942  080D                     	;# 
  1943  080E                     	;# 
  1944  080F                     	;# 
  1945  0810                     	;# 
  1946  0811                     	;# 
  1947  0812                     	;# 
  1948  0813                     	;# 
  1949  0814                     	;# 
  1950  081A                     	;# 
  1951  081B                     	;# 
  1952  081C                     	;# 
  1953  081D                     	;# 
  1954  081E                     	;# 
  1955  081F                     	;# 
  1956  088C                     	;# 
  1957  088D                     	;# 
  1958  088E                     	;# 
  1959  088F                     	;# 
  1960  0890                     	;# 
  1961  0891                     	;# 
  1962  0892                     	;# 
  1963  0893                     	;# 
  1964  0895                     	;# 
  1965  0896                     	;# 
  1966  0897                     	;# 
  1967  0898                     	;# 
  1968  0899                     	;# 
  1969  089A                     	;# 
  1970  089B                     	;# 
  1971  090C                     	;# 
  1972  090E                     	;# 
  1973  090F                     	;# 
  1974  091F                     	;# 
  1975  091F                     	;# 
  1976  098F                     	;# 
  1977  098F                     	;# 
  1978  0990                     	;# 
  1979  0991                     	;# 
  1980  0992                     	;# 
  1981  0993                     	;# 
  1982  0994                     	;# 
  1983  0995                     	;# 
  1984  0996                     	;# 
  1985  0997                     	;# 
  1986  0E0F                     	;# 
  1987  0E10                     	;# 
  1988  0E11                     	;# 
  1989  0E12                     	;# 
  1990  0E13                     	;# 
  1991  0E14                     	;# 
  1992  0E15                     	;# 
  1993  0E16                     	;# 
  1994  0E17                     	;# 
  1995  0E18                     	;# 
  1996  0E19                     	;# 
  1997  0E1A                     	;# 
  1998  0E1B                     	;# 
  1999  0E1C                     	;# 
  2000  0E1D                     	;# 
  2001  0E1E                     	;# 
  2002  0E1F                     	;# 
  2003  0E20                     	;# 
  2004  0E21                     	;# 
  2005  0E22                     	;# 
  2006  0E23                     	;# 
  2007  0E24                     	;# 
  2008  0E25                     	;# 
  2009  0E26                     	;# 
  2010  0E27                     	;# 
  2011  0E28                     	;# 
  2012  0E29                     	;# 
  2013  0E2A                     	;# 
  2014  0E2B                     	;# 
  2015  0E2C                     	;# 
  2016  0E2D                     	;# 
  2017  0E2E                     	;# 
  2018  0E2F                     	;# 
  2019  0E30                     	;# 
  2020  0E31                     	;# 
  2021  0E32                     	;# 
  2022  0E33                     	;# 
  2023  0E34                     	;# 
  2024  0E35                     	;# 
  2025  0E36                     	;# 
  2026  0E37                     	;# 
  2027  0E8F                     	;# 
  2028  0E90                     	;# 
  2029  0E91                     	;# 
  2030  0E92                     	;# 
  2031  0E93                     	;# 
  2032  0E94                     	;# 
  2033  0E95                     	;# 
  2034  0E96                     	;# 
  2035  0E97                     	;# 
  2036  0E9C                     	;# 
  2037  0E9D                     	;# 
  2038  0E9E                     	;# 
  2039  0EA1                     	;# 
  2040  0EA2                     	;# 
  2041  0EA3                     	;# 
  2042  0EA4                     	;# 
  2043  0EA5                     	;# 
  2044  0EA9                     	;# 
  2045  0EAA                     	;# 
  2046  0EAB                     	;# 
  2047  0EAC                     	;# 
  2048  0EB1                     	;# 
  2049  0EB2                     	;# 
  2050  0EB3                     	;# 
  2051  0EB8                     	;# 
  2052  0EB9                     	;# 
  2053  0EBA                     	;# 
  2054  0EBB                     	;# 
  2055  0EBC                     	;# 
  2056  0EBD                     	;# 
  2057  0EBE                     	;# 
  2058  0EC3                     	;# 
  2059  0EC5                     	;# 
  2060  0EC6                     	;# 
  2061  0EC7                     	;# 
  2062  0EC8                     	;# 
  2063  0EC9                     	;# 
  2064  0ECA                     	;# 
  2065  0ECB                     	;# 
  2066  0ECC                     	;# 
  2067  0F10                     	;# 
  2068  0F11                     	;# 
  2069  0F12                     	;# 
  2070  0F13                     	;# 
  2071  0F14                     	;# 
  2072  0F15                     	;# 
  2073  0F16                     	;# 
  2074  0F17                     	;# 
  2075  0F18                     	;# 
  2076  0F19                     	;# 
  2077  0F1A                     	;# 
  2078  0F1B                     	;# 
  2079  0F1C                     	;# 
  2080  0F1D                     	;# 
  2081  0F1E                     	;# 
  2082  0F1F                     	;# 
  2083  0F20                     	;# 
  2084  0F21                     	;# 
  2085  0F22                     	;# 
  2086  0F23                     	;# 
  2087  0F24                     	;# 
  2088  0F25                     	;# 
  2089  0F26                     	;# 
  2090  0F27                     	;# 
  2091  0F38                     	;# 
  2092  0F39                     	;# 
  2093  0F3A                     	;# 
  2094  0F3B                     	;# 
  2095  0F3C                     	;# 
  2096  0F3D                     	;# 
  2097  0F3E                     	;# 
  2098  0F3F                     	;# 
  2099  0F40                     	;# 
  2100  0F41                     	;# 
  2101  0F43                     	;# 
  2102  0F44                     	;# 
  2103  0F45                     	;# 
  2104  0F46                     	;# 
  2105  0F47                     	;# 
  2106  0F48                     	;# 
  2107  0F49                     	;# 
  2108  0F4A                     	;# 
  2109  0F4B                     	;# 
  2110  0F4C                     	;# 
  2111  0F4E                     	;# 
  2112  0F4F                     	;# 
  2113  0F50                     	;# 
  2114  0F51                     	;# 
  2115  0F52                     	;# 
  2116  0F53                     	;# 
  2117  0F54                     	;# 
  2118  0F55                     	;# 
  2119  0F56                     	;# 
  2120  0F57                     	;# 
  2121  0F65                     	;# 
  2122  0F68                     	;# 
  2123  0F69                     	;# 
  2124  0F6A                     	;# 
  2125  0F6B                     	;# 
  2126  0FE4                     	;# 
  2127  0FE5                     	;# 
  2128  0FE6                     	;# 
  2129  0FE7                     	;# 
  2130  0FE8                     	;# 
  2131  0FE9                     	;# 
  2132  0FEA                     	;# 
  2133  0FEB                     	;# 
  2134  0FED                     	;# 
  2135  0FEE                     	;# 
  2136  0FEF                     	;# 
  2137  0000                     	;# 
  2138  0001                     	;# 
  2139  0002                     	;# 
  2140  0003                     	;# 
  2141  0004                     	;# 
  2142  0005                     	;# 
  2143  0006                     	;# 
  2144  0007                     	;# 
  2145  0008                     	;# 
  2146  0009                     	;# 
  2147  000A                     	;# 
  2148  000B                     	;# 
  2149  000C                     	;# 
  2150  000D                     	;# 
  2151  000E                     	;# 
  2152  0010                     	;# 
  2153  0011                     	;# 
  2154  0012                     	;# 
  2155  0013                     	;# 
  2156  0016                     	;# 
  2157  0017                     	;# 
  2158  0018                     	;# 
  2159  001C                     	;# 
  2160  001C                     	;# 
  2161  001D                     	;# 
  2162  001D                     	;# 
  2163  001E                     	;# 
  2164  001F                     	;# 
  2165  008C                     	;# 
  2166  008C                     	;# 
  2167  008D                     	;# 
  2168  008E                     	;# 
  2169  008E                     	;# 
  2170  008F                     	;# 
  2171  0090                     	;# 
  2172  0090                     	;# 
  2173  0091                     	;# 
  2174  0093                     	;# 
  2175  0094                     	;# 
  2176  0095                     	;# 
  2177  0096                     	;# 
  2178  0097                     	;# 
  2179  0098                     	;# 
  2180  0099                     	;# 
  2181  009A                     	;# 
  2182  009B                     	;# 
  2183  009C                     	;# 
  2184  009D                     	;# 
  2185  009E                     	;# 
  2186  010C                     	;# 
  2187  010D                     	;# 
  2188  010E                     	;# 
  2189  010E                     	;# 
  2190  010F                     	;# 
  2191  0110                     	;# 
  2192  0110                     	;# 
  2193  0111                     	;# 
  2194  0112                     	;# 
  2195  0112                     	;# 
  2196  0113                     	;# 
  2197  0114                     	;# 
  2198  0114                     	;# 
  2199  0115                     	;# 
  2200  0116                     	;# 
  2201  0116                     	;# 
  2202  0117                     	;# 
  2203  0119                     	;# 
  2204  0119                     	;# 
  2205  0119                     	;# 
  2206  011A                     	;# 
  2207  011A                     	;# 
  2208  011A                     	;# 
  2209  011B                     	;# 
  2210  011B                     	;# 
  2211  011B                     	;# 
  2212  011B                     	;# 
  2213  011B                     	;# 
  2214  011C                     	;# 
  2215  011C                     	;# 
  2216  011C                     	;# 
  2217  011D                     	;# 
  2218  011D                     	;# 
  2219  011D                     	;# 
  2220  011E                     	;# 
  2221  011E                     	;# 
  2222  011E                     	;# 
  2223  011F                     	;# 
  2224  011F                     	;# 
  2225  011F                     	;# 
  2226  011F                     	;# 
  2227  011F                     	;# 
  2228  018C                     	;# 
  2229  018D                     	;# 
  2230  018E                     	;# 
  2231  018F                     	;# 
  2232  0190                     	;# 
  2233  0191                     	;# 
  2234  0192                     	;# 
  2235  0196                     	;# 
  2236  0197                     	;# 
  2237  0198                     	;# 
  2238  0199                     	;# 
  2239  019A                     	;# 
  2240  019B                     	;# 
  2241  019C                     	;# 
  2242  020C                     	;# 
  2243  020C                     	;# 
  2244  020D                     	;# 
  2245  020E                     	;# 
  2246  020F                     	;# 
  2247  020F                     	;# 
  2248  0210                     	;# 
  2249  0210                     	;# 
  2250  0211                     	;# 
  2251  0211                     	;# 
  2252  0212                     	;# 
  2253  0212                     	;# 
  2254  0213                     	;# 
  2255  0214                     	;# 
  2256  0215                     	;# 
  2257  0215                     	;# 
  2258  0216                     	;# 
  2259  0216                     	;# 
  2260  0217                     	;# 
  2261  0217                     	;# 
  2262  0218                     	;# 
  2263  0218                     	;# 
  2264  0219                     	;# 
  2265  021A                     	;# 
  2266  021B                     	;# 
  2267  021B                     	;# 
  2268  021C                     	;# 
  2269  021C                     	;# 
  2270  021D                     	;# 
  2271  021D                     	;# 
  2272  021E                     	;# 
  2273  021F                     	;# 
  2274  028C                     	;# 
  2275  028C                     	;# 
  2276  028D                     	;# 
  2277  028D                     	;# 
  2278  028E                     	;# 
  2279  028F                     	;# 
  2280  0290                     	;# 
  2281  0290                     	;# 
  2282  0291                     	;# 
  2283  0292                     	;# 
  2284  0292                     	;# 
  2285  0293                     	;# 
  2286  0293                     	;# 
  2287  0294                     	;# 
  2288  0295                     	;# 
  2289  0296                     	;# 
  2290  0296                     	;# 
  2291  0297                     	;# 
  2292  0298                     	;# 
  2293  0298                     	;# 
  2294  0299                     	;# 
  2295  0299                     	;# 
  2296  029A                     	;# 
  2297  029B                     	;# 
  2298  029C                     	;# 
  2299  029C                     	;# 
  2300  029D                     	;# 
  2301  030C                     	;# 
  2302  030C                     	;# 
  2303  030D                     	;# 
  2304  030E                     	;# 
  2305  030F                     	;# 
  2306  0310                     	;# 
  2307  0310                     	;# 
  2308  0311                     	;# 
  2309  0312                     	;# 
  2310  0313                     	;# 
  2311  0314                     	;# 
  2312  0314                     	;# 
  2313  0315                     	;# 
  2314  0316                     	;# 
  2315  0317                     	;# 
  2316  0318                     	;# 
  2317  0318                     	;# 
  2318  0319                     	;# 
  2319  031A                     	;# 
  2320  031B                     	;# 
  2321  031C                     	;# 
  2322  031C                     	;# 
  2323  031D                     	;# 
  2324  031E                     	;# 
  2325  031F                     	;# 
  2326  038C                     	;# 
  2327  038D                     	;# 
  2328  038E                     	;# 
  2329  0390                     	;# 
  2330  0391                     	;# 
  2331  0392                     	;# 
  2332  040C                     	;# 
  2333  040D                     	;# 
  2334  040E                     	;# 
  2335  040F                     	;# 
  2336  0410                     	;# 
  2337  0411                     	;# 
  2338  0416                     	;# 
  2339  0416                     	;# 
  2340  0417                     	;# 
  2341  0418                     	;# 
  2342  0418                     	;# 
  2343  0419                     	;# 
  2344  041A                     	;# 
  2345  041A                     	;# 
  2346  041B                     	;# 
  2347  041C                     	;# 
  2348  041C                     	;# 
  2349  041D                     	;# 
  2350  041E                     	;# 
  2351  041F                     	;# 
  2352  048C                     	;# 
  2353  048C                     	;# 
  2354  048D                     	;# 
  2355  048E                     	;# 
  2356  048F                     	;# 
  2357  048F                     	;# 
  2358  0490                     	;# 
  2359  0491                     	;# 
  2360  0492                     	;# 
  2361  0492                     	;# 
  2362  0493                     	;# 
  2363  0494                     	;# 
  2364  0495                     	;# 
  2365  0495                     	;# 
  2366  0496                     	;# 
  2367  0497                     	;# 
  2368  0498                     	;# 
  2369  0499                     	;# 
  2370  049A                     	;# 
  2371  049B                     	;# 
  2372  049C                     	;# 
  2373  049D                     	;# 
  2374  050C                     	;# 
  2375  050C                     	;# 
  2376  050D                     	;# 
  2377  050E                     	;# 
  2378  050F                     	;# 
  2379  050F                     	;# 
  2380  0510                     	;# 
  2381  0511                     	;# 
  2382  0512                     	;# 
  2383  0512                     	;# 
  2384  0513                     	;# 
  2385  0514                     	;# 
  2386  0515                     	;# 
  2387  0515                     	;# 
  2388  0516                     	;# 
  2389  0517                     	;# 
  2390  0518                     	;# 
  2391  0519                     	;# 
  2392  051A                     	;# 
  2393  051B                     	;# 
  2394  051C                     	;# 
  2395  051D                     	;# 
  2396  058C                     	;# 
  2397  058C                     	;# 
  2398  058D                     	;# 
  2399  058E                     	;# 
  2400  058F                     	;# 
  2401  058F                     	;# 
  2402  0590                     	;# 
  2403  0591                     	;# 
  2404  0592                     	;# 
  2405  0593                     	;# 
  2406  060C                     	;# 
  2407  060D                     	;# 
  2408  060E                     	;# 
  2409  060F                     	;# 
  2410  0610                     	;# 
  2411  0611                     	;# 
  2412  0612                     	;# 
  2413  0613                     	;# 
  2414  0614                     	;# 
  2415  0616                     	;# 
  2416  0617                     	;# 
  2417  0618                     	;# 
  2418  0619                     	;# 
  2419  061A                     	;# 
  2420  061B                     	;# 
  2421  061C                     	;# 
  2422  061D                     	;# 
  2423  061E                     	;# 
  2424  068C                     	;# 
  2425  068D                     	;# 
  2426  068E                     	;# 
  2427  068F                     	;# 
  2428  0690                     	;# 
  2429  0691                     	;# 
  2430  0692                     	;# 
  2431  0693                     	;# 
  2432  0694                     	;# 
  2433  070C                     	;# 
  2434  070D                     	;# 
  2435  070E                     	;# 
  2436  070F                     	;# 
  2437  0710                     	;# 
  2438  0711                     	;# 
  2439  0712                     	;# 
  2440  0713                     	;# 
  2441  0714                     	;# 
  2442  0716                     	;# 
  2443  0717                     	;# 
  2444  0718                     	;# 
  2445  0719                     	;# 
  2446  071A                     	;# 
  2447  071B                     	;# 
  2448  071C                     	;# 
  2449  071D                     	;# 
  2450  071E                     	;# 
  2451  0796                     	;# 
  2452  0797                     	;# 
  2453  0798                     	;# 
  2454  0799                     	;# 
  2455  079A                     	;# 
  2456  079B                     	;# 
  2457  080C                     	;# 
  2458  080D                     	;# 
  2459  080E                     	;# 
  2460  080F                     	;# 
  2461  0810                     	;# 
  2462  0811                     	;# 
  2463  0812                     	;# 
  2464  0813                     	;# 
  2465  0814                     	;# 
  2466  081A                     	;# 
  2467  081B                     	;# 
  2468  081C                     	;# 
  2469  081D                     	;# 
  2470  081E                     	;# 
  2471  081F                     	;# 
  2472  088C                     	;# 
  2473  088D                     	;# 
  2474  088E                     	;# 
  2475  088F                     	;# 
  2476  0890                     	;# 
  2477  0891                     	;# 
  2478  0892                     	;# 
  2479  0893                     	;# 
  2480  0895                     	;# 
  2481  0896                     	;# 
  2482  0897                     	;# 
  2483  0898                     	;# 
  2484  0899                     	;# 
  2485  089A                     	;# 
  2486  089B                     	;# 
  2487  090C                     	;# 
  2488  090E                     	;# 
  2489  090F                     	;# 
  2490  091F                     	;# 
  2491  091F                     	;# 
  2492  098F                     	;# 
  2493  098F                     	;# 
  2494  0990                     	;# 
  2495  0991                     	;# 
  2496  0992                     	;# 
  2497  0993                     	;# 
  2498  0994                     	;# 
  2499  0995                     	;# 
  2500  0996                     	;# 
  2501  0997                     	;# 
  2502  0E0F                     	;# 
  2503  0E10                     	;# 
  2504  0E11                     	;# 
  2505  0E12                     	;# 
  2506  0E13                     	;# 
  2507  0E14                     	;# 
  2508  0E15                     	;# 
  2509  0E16                     	;# 
  2510  0E17                     	;# 
  2511  0E18                     	;# 
  2512  0E19                     	;# 
  2513  0E1A                     	;# 
  2514  0E1B                     	;# 
  2515  0E1C                     	;# 
  2516  0E1D                     	;# 
  2517  0E1E                     	;# 
  2518  0E1F                     	;# 
  2519  0E20                     	;# 
  2520  0E21                     	;# 
  2521  0E22                     	;# 
  2522  0E23                     	;# 
  2523  0E24                     	;# 
  2524  0E25                     	;# 
  2525  0E26                     	;# 
  2526  0E27                     	;# 
  2527  0E28                     	;# 
  2528  0E29                     	;# 
  2529  0E2A                     	;# 
  2530  0E2B                     	;# 
  2531  0E2C                     	;# 
  2532  0E2D                     	;# 
  2533  0E2E                     	;# 
  2534  0E2F                     	;# 
  2535  0E30                     	;# 
  2536  0E31                     	;# 
  2537  0E32                     	;# 
  2538  0E33                     	;# 
  2539  0E34                     	;# 
  2540  0E35                     	;# 
  2541  0E36                     	;# 
  2542  0E37                     	;# 
  2543  0E8F                     	;# 
  2544  0E90                     	;# 
  2545  0E91                     	;# 
  2546  0E92                     	;# 
  2547  0E93                     	;# 
  2548  0E94                     	;# 
  2549  0E95                     	;# 
  2550  0E96                     	;# 
  2551  0E97                     	;# 
  2552  0E9C                     	;# 
  2553  0E9D                     	;# 
  2554  0E9E                     	;# 
  2555  0EA1                     	;# 
  2556  0EA2                     	;# 
  2557  0EA3                     	;# 
  2558  0EA4                     	;# 
  2559  0EA5                     	;# 
  2560  0EA9                     	;# 
  2561  0EAA                     	;# 
  2562  0EAB                     	;# 
  2563  0EAC                     	;# 
  2564  0EB1                     	;# 
  2565  0EB2                     	;# 
  2566  0EB3                     	;# 
  2567  0EB8                     	;# 
  2568  0EB9                     	;# 
  2569  0EBA                     	;# 
  2570  0EBB                     	;# 
  2571  0EBC                     	;# 
  2572  0EBD                     	;# 
  2573  0EBE                     	;# 
  2574  0EC3                     	;# 
  2575  0EC5                     	;# 
  2576  0EC6                     	;# 
  2577  0EC7                     	;# 
  2578  0EC8                     	;# 
  2579  0EC9                     	;# 
  2580  0ECA                     	;# 
  2581  0ECB                     	;# 
  2582  0ECC                     	;# 
  2583  0F10                     	;# 
  2584  0F11                     	;# 
  2585  0F12                     	;# 
  2586  0F13                     	;# 
  2587  0F14                     	;# 
  2588  0F15                     	;# 
  2589  0F16                     	;# 
  2590  0F17                     	;# 
  2591  0F18                     	;# 
  2592  0F19                     	;# 
  2593  0F1A                     	;# 
  2594  0F1B                     	;# 
  2595  0F1C                     	;# 
  2596  0F1D                     	;# 
  2597  0F1E                     	;# 
  2598  0F1F                     	;# 
  2599  0F20                     	;# 
  2600  0F21                     	;# 
  2601  0F22                     	;# 
  2602  0F23                     	;# 
  2603  0F24                     	;# 
  2604  0F25                     	;# 
  2605  0F26                     	;# 
  2606  0F27                     	;# 
  2607  0F38                     	;# 
  2608  0F39                     	;# 
  2609  0F3A                     	;# 
  2610  0F3B                     	;# 
  2611  0F3C                     	;# 
  2612  0F3D                     	;# 
  2613  0F3E                     	;# 
  2614  0F3F                     	;# 
  2615  0F40                     	;# 
  2616  0F41                     	;# 
  2617  0F43                     	;# 
  2618  0F44                     	;# 
  2619  0F45                     	;# 
  2620  0F46                     	;# 
  2621  0F47                     	;# 
  2622  0F48                     	;# 
  2623  0F49                     	;# 
  2624  0F4A                     	;# 
  2625  0F4B                     	;# 
  2626  0F4C                     	;# 
  2627  0F4E                     	;# 
  2628  0F4F                     	;# 
  2629  0F50                     	;# 
  2630  0F51                     	;# 
  2631  0F52                     	;# 
  2632  0F53                     	;# 
  2633  0F54                     	;# 
  2634  0F55                     	;# 
  2635  0F56                     	;# 
  2636  0F57                     	;# 
  2637  0F65                     	;# 
  2638  0F68                     	;# 
  2639  0F69                     	;# 
  2640  0F6A                     	;# 
  2641  0F6B                     	;# 
  2642  0FE4                     	;# 
  2643  0FE5                     	;# 
  2644  0FE6                     	;# 
  2645  0FE7                     	;# 
  2646  0FE8                     	;# 
  2647  0FE9                     	;# 
  2648  0FEA                     	;# 
  2649  0FEB                     	;# 
  2650  0FED                     	;# 
  2651  0FEE                     	;# 
  2652  0FEF                     	;# 
  2653  0000                     	;# 
  2654  0001                     	;# 
  2655  0002                     	;# 
  2656  0003                     	;# 
  2657  0004                     	;# 
  2658  0005                     	;# 
  2659  0006                     	;# 
  2660  0007                     	;# 
  2661  0008                     	;# 
  2662  0009                     	;# 
  2663  000A                     	;# 
  2664  000B                     	;# 
  2665  000C                     	;# 
  2666  000D                     	;# 
  2667  000E                     	;# 
  2668  0010                     	;# 
  2669  0011                     	;# 
  2670  0012                     	;# 
  2671  0013                     	;# 
  2672  0016                     	;# 
  2673  0017                     	;# 
  2674  0018                     	;# 
  2675  001C                     	;# 
  2676  001C                     	;# 
  2677  001D                     	;# 
  2678  001D                     	;# 
  2679  001E                     	;# 
  2680  001F                     	;# 
  2681  008C                     	;# 
  2682  008C                     	;# 
  2683  008D                     	;# 
  2684  008E                     	;# 
  2685  008E                     	;# 
  2686  008F                     	;# 
  2687  0090                     	;# 
  2688  0090                     	;# 
  2689  0091                     	;# 
  2690  0093                     	;# 
  2691  0094                     	;# 
  2692  0095                     	;# 
  2693  0096                     	;# 
  2694  0097                     	;# 
  2695  0098                     	;# 
  2696  0099                     	;# 
  2697  009A                     	;# 
  2698  009B                     	;# 
  2699  009C                     	;# 
  2700  009D                     	;# 
  2701  009E                     	;# 
  2702  010C                     	;# 
  2703  010D                     	;# 
  2704  010E                     	;# 
  2705  010E                     	;# 
  2706  010F                     	;# 
  2707  0110                     	;# 
  2708  0110                     	;# 
  2709  0111                     	;# 
  2710  0112                     	;# 
  2711  0112                     	;# 
  2712  0113                     	;# 
  2713  0114                     	;# 
  2714  0114                     	;# 
  2715  0115                     	;# 
  2716  0116                     	;# 
  2717  0116                     	;# 
  2718  0117                     	;# 
  2719  0119                     	;# 
  2720  0119                     	;# 
  2721  0119                     	;# 
  2722  011A                     	;# 
  2723  011A                     	;# 
  2724  011A                     	;# 
  2725  011B                     	;# 
  2726  011B                     	;# 
  2727  011B                     	;# 
  2728  011B                     	;# 
  2729  011B                     	;# 
  2730  011C                     	;# 
  2731  011C                     	;# 
  2732  011C                     	;# 
  2733  011D                     	;# 
  2734  011D                     	;# 
  2735  011D                     	;# 
  2736  011E                     	;# 
  2737  011E                     	;# 
  2738  011E                     	;# 
  2739  011F                     	;# 
  2740  011F                     	;# 
  2741  011F                     	;# 
  2742  011F                     	;# 
  2743  011F                     	;# 
  2744  018C                     	;# 
  2745  018D                     	;# 
  2746  018E                     	;# 
  2747  018F                     	;# 
  2748  0190                     	;# 
  2749  0191                     	;# 
  2750  0192                     	;# 
  2751  0196                     	;# 
  2752  0197                     	;# 
  2753  0198                     	;# 
  2754  0199                     	;# 
  2755  019A                     	;# 
  2756  019B                     	;# 
  2757  019C                     	;# 
  2758  020C                     	;# 
  2759  020C                     	;# 
  2760  020D                     	;# 
  2761  020E                     	;# 
  2762  020F                     	;# 
  2763  020F                     	;# 
  2764  0210                     	;# 
  2765  0210                     	;# 
  2766  0211                     	;# 
  2767  0211                     	;# 
  2768  0212                     	;# 
  2769  0212                     	;# 
  2770  0213                     	;# 
  2771  0214                     	;# 
  2772  0215                     	;# 
  2773  0215                     	;# 
  2774  0216                     	;# 
  2775  0216                     	;# 
  2776  0217                     	;# 
  2777  0217                     	;# 
  2778  0218                     	;# 
  2779  0218                     	;# 
  2780  0219                     	;# 
  2781  021A                     	;# 
  2782  021B                     	;# 
  2783  021B                     	;# 
  2784  021C                     	;# 
  2785  021C                     	;# 
  2786  021D                     	;# 
  2787  021D                     	;# 
  2788  021E                     	;# 
  2789  021F                     	;# 
  2790  028C                     	;# 
  2791  028C                     	;# 
  2792  028D                     	;# 
  2793  028D                     	;# 
  2794  028E                     	;# 
  2795  028F                     	;# 
  2796  0290                     	;# 
  2797  0290                     	;# 
  2798  0291                     	;# 
  2799  0292                     	;# 
  2800  0292                     	;# 
  2801  0293                     	;# 
  2802  0293                     	;# 
  2803  0294                     	;# 
  2804  0295                     	;# 
  2805  0296                     	;# 
  2806  0296                     	;# 
  2807  0297                     	;# 
  2808  0298                     	;# 
  2809  0298                     	;# 
  2810  0299                     	;# 
  2811  0299                     	;# 
  2812  029A                     	;# 
  2813  029B                     	;# 
  2814  029C                     	;# 
  2815  029C                     	;# 
  2816  029D                     	;# 
  2817  030C                     	;# 
  2818  030C                     	;# 
  2819  030D                     	;# 
  2820  030E                     	;# 
  2821  030F                     	;# 
  2822  0310                     	;# 
  2823  0310                     	;# 
  2824  0311                     	;# 
  2825  0312                     	;# 
  2826  0313                     	;# 
  2827  0314                     	;# 
  2828  0314                     	;# 
  2829  0315                     	;# 
  2830  0316                     	;# 
  2831  0317                     	;# 
  2832  0318                     	;# 
  2833  0318                     	;# 
  2834  0319                     	;# 
  2835  031A                     	;# 
  2836  031B                     	;# 
  2837  031C                     	;# 
  2838  031C                     	;# 
  2839  031D                     	;# 
  2840  031E                     	;# 
  2841  031F                     	;# 
  2842  038C                     	;# 
  2843  038D                     	;# 
  2844  038E                     	;# 
  2845  0390                     	;# 
  2846  0391                     	;# 
  2847  0392                     	;# 
  2848  040C                     	;# 
  2849  040D                     	;# 
  2850  040E                     	;# 
  2851  040F                     	;# 
  2852  0410                     	;# 
  2853  0411                     	;# 
  2854  0416                     	;# 
  2855  0416                     	;# 
  2856  0417                     	;# 
  2857  0418                     	;# 
  2858  0418                     	;# 
  2859  0419                     	;# 
  2860  041A                     	;# 
  2861  041A                     	;# 
  2862  041B                     	;# 
  2863  041C                     	;# 
  2864  041C                     	;# 
  2865  041D                     	;# 
  2866  041E                     	;# 
  2867  041F                     	;# 
  2868  048C                     	;# 
  2869  048C                     	;# 
  2870  048D                     	;# 
  2871  048E                     	;# 
  2872  048F                     	;# 
  2873  048F                     	;# 
  2874  0490                     	;# 
  2875  0491                     	;# 
  2876  0492                     	;# 
  2877  0492                     	;# 
  2878  0493                     	;# 
  2879  0494                     	;# 
  2880  0495                     	;# 
  2881  0495                     	;# 
  2882  0496                     	;# 
  2883  0497                     	;# 
  2884  0498                     	;# 
  2885  0499                     	;# 
  2886  049A                     	;# 
  2887  049B                     	;# 
  2888  049C                     	;# 
  2889  049D                     	;# 
  2890  050C                     	;# 
  2891  050C                     	;# 
  2892  050D                     	;# 
  2893  050E                     	;# 
  2894  050F                     	;# 
  2895  050F                     	;# 
  2896  0510                     	;# 
  2897  0511                     	;# 
  2898  0512                     	;# 
  2899  0512                     	;# 
  2900  0513                     	;# 
  2901  0514                     	;# 
  2902  0515                     	;# 
  2903  0515                     	;# 
  2904  0516                     	;# 
  2905  0517                     	;# 
  2906  0518                     	;# 
  2907  0519                     	;# 
  2908  051A                     	;# 
  2909  051B                     	;# 
  2910  051C                     	;# 
  2911  051D                     	;# 
  2912  058C                     	;# 
  2913  058C                     	;# 
  2914  058D                     	;# 
  2915  058E                     	;# 
  2916  058F                     	;# 
  2917  058F                     	;# 
  2918  0590                     	;# 
  2919  0591                     	;# 
  2920  0592                     	;# 
  2921  0593                     	;# 
  2922  060C                     	;# 
  2923  060D                     	;# 
  2924  060E                     	;# 
  2925  060F                     	;# 
  2926  0610                     	;# 
  2927  0611                     	;# 
  2928  0612                     	;# 
  2929  0613                     	;# 
  2930  0614                     	;# 
  2931  0616                     	;# 
  2932  0617                     	;# 
  2933  0618                     	;# 
  2934  0619                     	;# 
  2935  061A                     	;# 
  2936  061B                     	;# 
  2937  061C                     	;# 
  2938  061D                     	;# 
  2939  061E                     	;# 
  2940  068C                     	;# 
  2941  068D                     	;# 
  2942  068E                     	;# 
  2943  068F                     	;# 
  2944  0690                     	;# 
  2945  0691                     	;# 
  2946  0692                     	;# 
  2947  0693                     	;# 
  2948  0694                     	;# 
  2949  070C                     	;# 
  2950  070D                     	;# 
  2951  070E                     	;# 
  2952  070F                     	;# 
  2953  0710                     	;# 
  2954  0711                     	;# 
  2955  0712                     	;# 
  2956  0713                     	;# 
  2957  0714                     	;# 
  2958  0716                     	;# 
  2959  0717                     	;# 
  2960  0718                     	;# 
  2961  0719                     	;# 
  2962  071A                     	;# 
  2963  071B                     	;# 
  2964  071C                     	;# 
  2965  071D                     	;# 
  2966  071E                     	;# 
  2967  0796                     	;# 
  2968  0797                     	;# 
  2969  0798                     	;# 
  2970  0799                     	;# 
  2971  079A                     	;# 
  2972  079B                     	;# 
  2973  080C                     	;# 
  2974  080D                     	;# 
  2975  080E                     	;# 
  2976  080F                     	;# 
  2977  0810                     	;# 
  2978  0811                     	;# 
  2979  0812                     	;# 
  2980  0813                     	;# 
  2981  0814                     	;# 
  2982  081A                     	;# 
  2983  081B                     	;# 
  2984  081C                     	;# 
  2985  081D                     	;# 
  2986  081E                     	;# 
  2987  081F                     	;# 
  2988  088C                     	;# 
  2989  088D                     	;# 
  2990  088E                     	;# 
  2991  088F                     	;# 
  2992  0890                     	;# 
  2993  0891                     	;# 
  2994  0892                     	;# 
  2995  0893                     	;# 
  2996  0895                     	;# 
  2997  0896                     	;# 
  2998  0897                     	;# 
  2999  0898                     	;# 
  3000  0899                     	;# 
  3001  089A                     	;# 
  3002  089B                     	;# 
  3003  090C                     	;# 
  3004  090E                     	;# 
  3005  090F                     	;# 
  3006  091F                     	;# 
  3007  091F                     	;# 
  3008  098F                     	;# 
  3009  098F                     	;# 
  3010  0990                     	;# 
  3011  0991                     	;# 
  3012  0992                     	;# 
  3013  0993                     	;# 
  3014  0994                     	;# 
  3015  0995                     	;# 
  3016  0996                     	;# 
  3017  0997                     	;# 
  3018  0E0F                     	;# 
  3019  0E10                     	;# 
  3020  0E11                     	;# 
  3021  0E12                     	;# 
  3022  0E13                     	;# 
  3023  0E14                     	;# 
  3024  0E15                     	;# 
  3025  0E16                     	;# 
  3026  0E17                     	;# 
  3027  0E18                     	;# 
  3028  0E19                     	;# 
  3029  0E1A                     	;# 
  3030  0E1B                     	;# 
  3031  0E1C                     	;# 
  3032  0E1D                     	;# 
  3033  0E1E                     	;# 
  3034  0E1F                     	;# 
  3035  0E20                     	;# 
  3036  0E21                     	;# 
  3037  0E22                     	;# 
  3038  0E23                     	;# 
  3039  0E24                     	;# 
  3040  0E25                     	;# 
  3041  0E26                     	;# 
  3042  0E27                     	;# 
  3043  0E28                     	;# 
  3044  0E29                     	;# 
  3045  0E2A                     	;# 
  3046  0E2B                     	;# 
  3047  0E2C                     	;# 
  3048  0E2D                     	;# 
  3049  0E2E                     	;# 
  3050  0E2F                     	;# 
  3051  0E30                     	;# 
  3052  0E31                     	;# 
  3053  0E32                     	;# 
  3054  0E33                     	;# 
  3055  0E34                     	;# 
  3056  0E35                     	;# 
  3057  0E36                     	;# 
  3058  0E37                     	;# 
  3059  0E8F                     	;# 
  3060  0E90                     	;# 
  3061  0E91                     	;# 
  3062  0E92                     	;# 
  3063  0E93                     	;# 
  3064  0E94                     	;# 
  3065  0E95                     	;# 
  3066  0E96                     	;# 
  3067  0E97                     	;# 
  3068  0E9C                     	;# 
  3069  0E9D                     	;# 
  3070  0E9E                     	;# 
  3071  0EA1                     	;# 
  3072  0EA2                     	;# 
  3073  0EA3                     	;# 
  3074  0EA4                     	;# 
  3075  0EA5                     	;# 
  3076  0EA9                     	;# 
  3077  0EAA                     	;# 
  3078  0EAB                     	;# 
  3079  0EAC                     	;# 
  3080  0EB1                     	;# 
  3081  0EB2                     	;# 
  3082  0EB3                     	;# 
  3083  0EB8                     	;# 
  3084  0EB9                     	;# 
  3085  0EBA                     	;# 
  3086  0EBB                     	;# 
  3087  0EBC                     	;# 
  3088  0EBD                     	;# 
  3089  0EBE                     	;# 
  3090  0EC3                     	;# 
  3091  0EC5                     	;# 
  3092  0EC6                     	;# 
  3093  0EC7                     	;# 
  3094  0EC8                     	;# 
  3095  0EC9                     	;# 
  3096  0ECA                     	;# 
  3097  0ECB                     	;# 
  3098  0ECC                     	;# 
  3099  0F10                     	;# 
  3100  0F11                     	;# 
  3101  0F12                     	;# 
  3102  0F13                     	;# 
  3103  0F14                     	;# 
  3104  0F15                     	;# 
  3105  0F16                     	;# 
  3106  0F17                     	;# 
  3107  0F18                     	;# 
  3108  0F19                     	;# 
  3109  0F1A                     	;# 
  3110  0F1B                     	;# 
  3111  0F1C                     	;# 
  3112  0F1D                     	;# 
  3113  0F1E                     	;# 
  3114  0F1F                     	;# 
  3115  0F20                     	;# 
  3116  0F21                     	;# 
  3117  0F22                     	;# 
  3118  0F23                     	;# 
  3119  0F24                     	;# 
  3120  0F25                     	;# 
  3121  0F26                     	;# 
  3122  0F27                     	;# 
  3123  0F38                     	;# 
  3124  0F39                     	;# 
  3125  0F3A                     	;# 
  3126  0F3B                     	;# 
  3127  0F3C                     	;# 
  3128  0F3D                     	;# 
  3129  0F3E                     	;# 
  3130  0F3F                     	;# 
  3131  0F40                     	;# 
  3132  0F41                     	;# 
  3133  0F43                     	;# 
  3134  0F44                     	;# 
  3135  0F45                     	;# 
  3136  0F46                     	;# 
  3137  0F47                     	;# 
  3138  0F48                     	;# 
  3139  0F49                     	;# 
  3140  0F4A                     	;# 
  3141  0F4B                     	;# 
  3142  0F4C                     	;# 
  3143  0F4E                     	;# 
  3144  0F4F                     	;# 
  3145  0F50                     	;# 
  3146  0F51                     	;# 
  3147  0F52                     	;# 
  3148  0F53                     	;# 
  3149  0F54                     	;# 
  3150  0F55                     	;# 
  3151  0F56                     	;# 
  3152  0F57                     	;# 
  3153  0F65                     	;# 
  3154  0F68                     	;# 
  3155  0F69                     	;# 
  3156  0F6A                     	;# 
  3157  0F6B                     	;# 
  3158  0FE4                     	;# 
  3159  0FE5                     	;# 
  3160  0FE6                     	;# 
  3161  0FE7                     	;# 
  3162  0FE8                     	;# 
  3163  0FE9                     	;# 
  3164  0FEA                     	;# 
  3165  0FEB                     	;# 
  3166  0FED                     	;# 
  3167  0FEE                     	;# 
  3168  0FEF                     	;# 
  3169  0000                     	;# 
  3170  0001                     	;# 
  3171  0002                     	;# 
  3172  0003                     	;# 
  3173  0004                     	;# 
  3174  0005                     	;# 
  3175  0006                     	;# 
  3176  0007                     	;# 
  3177  0008                     	;# 
  3178  0009                     	;# 
  3179  000A                     	;# 
  3180  000B                     	;# 
  3181  000C                     	;# 
  3182  000D                     	;# 
  3183  000E                     	;# 
  3184  0010                     	;# 
  3185  0011                     	;# 
  3186  0012                     	;# 
  3187  0013                     	;# 
  3188  0016                     	;# 
  3189  0017                     	;# 
  3190  0018                     	;# 
  3191  001C                     	;# 
  3192  001C                     	;# 
  3193  001D                     	;# 
  3194  001D                     	;# 
  3195  001E                     	;# 
  3196  001F                     	;# 
  3197  008C                     	;# 
  3198  008C                     	;# 
  3199  008D                     	;# 
  3200  008E                     	;# 
  3201  008E                     	;# 
  3202  008F                     	;# 
  3203  0090                     	;# 
  3204  0090                     	;# 
  3205  0091                     	;# 
  3206  0093                     	;# 
  3207  0094                     	;# 
  3208  0095                     	;# 
  3209  0096                     	;# 
  3210  0097                     	;# 
  3211  0098                     	;# 
  3212  0099                     	;# 
  3213  009A                     	;# 
  3214  009B                     	;# 
  3215  009C                     	;# 
  3216  009D                     	;# 
  3217  009E                     	;# 
  3218  010C                     	;# 
  3219  010D                     	;# 
  3220  010E                     	;# 
  3221  010E                     	;# 
  3222  010F                     	;# 
  3223  0110                     	;# 
  3224  0110                     	;# 
  3225  0111                     	;# 
  3226  0112                     	;# 
  3227  0112                     	;# 
  3228  0113                     	;# 
  3229  0114                     	;# 
  3230  0114                     	;# 
  3231  0115                     	;# 
  3232  0116                     	;# 
  3233  0116                     	;# 
  3234  0117                     	;# 
  3235  0119                     	;# 
  3236  0119                     	;# 
  3237  0119                     	;# 
  3238  011A                     	;# 
  3239  011A                     	;# 
  3240  011A                     	;# 
  3241  011B                     	;# 
  3242  011B                     	;# 
  3243  011B                     	;# 
  3244  011B                     	;# 
  3245  011B                     	;# 
  3246  011C                     	;# 
  3247  011C                     	;# 
  3248  011C                     	;# 
  3249  011D                     	;# 
  3250  011D                     	;# 
  3251  011D                     	;# 
  3252  011E                     	;# 
  3253  011E                     	;# 
  3254  011E                     	;# 
  3255  011F                     	;# 
  3256  011F                     	;# 
  3257  011F                     	;# 
  3258  011F                     	;# 
  3259  011F                     	;# 
  3260  018C                     	;# 
  3261  018D                     	;# 
  3262  018E                     	;# 
  3263  018F                     	;# 
  3264  0190                     	;# 
  3265  0191                     	;# 
  3266  0192                     	;# 
  3267  0196                     	;# 
  3268  0197                     	;# 
  3269  0198                     	;# 
  3270  0199                     	;# 
  3271  019A                     	;# 
  3272  019B                     	;# 
  3273  019C                     	;# 
  3274  020C                     	;# 
  3275  020C                     	;# 
  3276  020D                     	;# 
  3277  020E                     	;# 
  3278  020F                     	;# 
  3279  020F                     	;# 
  3280  0210                     	;# 
  3281  0210                     	;# 
  3282  0211                     	;# 
  3283  0211                     	;# 
  3284  0212                     	;# 
  3285  0212                     	;# 
  3286  0213                     	;# 
  3287  0214                     	;# 
  3288  0215                     	;# 
  3289  0215                     	;# 
  3290  0216                     	;# 
  3291  0216                     	;# 
  3292  0217                     	;# 
  3293  0217                     	;# 
  3294  0218                     	;# 
  3295  0218                     	;# 
  3296  0219                     	;# 
  3297  021A                     	;# 
  3298  021B                     	;# 
  3299  021B                     	;# 
  3300  021C                     	;# 
  3301  021C                     	;# 
  3302  021D                     	;# 
  3303  021D                     	;# 
  3304  021E                     	;# 
  3305  021F                     	;# 
  3306  028C                     	;# 
  3307  028C                     	;# 
  3308  028D                     	;# 
  3309  028D                     	;# 
  3310  028E                     	;# 
  3311  028F                     	;# 
  3312  0290                     	;# 
  3313  0290                     	;# 
  3314  0291                     	;# 
  3315  0292                     	;# 
  3316  0292                     	;# 
  3317  0293                     	;# 
  3318  0293                     	;# 
  3319  0294                     	;# 
  3320  0295                     	;# 
  3321  0296                     	;# 
  3322  0296                     	;# 
  3323  0297                     	;# 
  3324  0298                     	;# 
  3325  0298                     	;# 
  3326  0299                     	;# 
  3327  0299                     	;# 
  3328  029A                     	;# 
  3329  029B                     	;# 
  3330  029C                     	;# 
  3331  029C                     	;# 
  3332  029D                     	;# 
  3333  030C                     	;# 
  3334  030C                     	;# 
  3335  030D                     	;# 
  3336  030E                     	;# 
  3337  030F                     	;# 
  3338  0310                     	;# 
  3339  0310                     	;# 
  3340  0311                     	;# 
  3341  0312                     	;# 
  3342  0313                     	;# 
  3343  0314                     	;# 
  3344  0314                     	;# 
  3345  0315                     	;# 
  3346  0316                     	;# 
  3347  0317                     	;# 
  3348  0318                     	;# 
  3349  0318                     	;# 
  3350  0319                     	;# 
  3351  031A                     	;# 
  3352  031B                     	;# 
  3353  031C                     	;# 
  3354  031C                     	;# 
  3355  031D                     	;# 
  3356  031E                     	;# 
  3357  031F                     	;# 
  3358  038C                     	;# 
  3359  038D                     	;# 
  3360  038E                     	;# 
  3361  0390                     	;# 
  3362  0391                     	;# 
  3363  0392                     	;# 
  3364  040C                     	;# 
  3365  040D                     	;# 
  3366  040E                     	;# 
  3367  040F                     	;# 
  3368  0410                     	;# 
  3369  0411                     	;# 
  3370  0416                     	;# 
  3371  0416                     	;# 
  3372  0417                     	;# 
  3373  0418                     	;# 
  3374  0418                     	;# 
  3375  0419                     	;# 
  3376  041A                     	;# 
  3377  041A                     	;# 
  3378  041B                     	;# 
  3379  041C                     	;# 
  3380  041C                     	;# 
  3381  041D                     	;# 
  3382  041E                     	;# 
  3383  041F                     	;# 
  3384  048C                     	;# 
  3385  048C                     	;# 
  3386  048D                     	;# 
  3387  048E                     	;# 
  3388  048F                     	;# 
  3389  048F                     	;# 
  3390  0490                     	;# 
  3391  0491                     	;# 
  3392  0492                     	;# 
  3393  0492                     	;# 
  3394  0493                     	;# 
  3395  0494                     	;# 
  3396  0495                     	;# 
  3397  0495                     	;# 
  3398  0496                     	;# 
  3399  0497                     	;# 
  3400  0498                     	;# 
  3401  0499                     	;# 
  3402  049A                     	;# 
  3403  049B                     	;# 
  3404  049C                     	;# 
  3405  049D                     	;# 
  3406  050C                     	;# 
  3407  050C                     	;# 
  3408  050D                     	;# 
  3409  050E                     	;# 
  3410  050F                     	;# 
  3411  050F                     	;# 
  3412  0510                     	;# 
  3413  0511                     	;# 
  3414  0512                     	;# 
  3415  0512                     	;# 
  3416  0513                     	;# 
  3417  0514                     	;# 
  3418  0515                     	;# 
  3419  0515                     	;# 
  3420  0516                     	;# 
  3421  0517                     	;# 
  3422  0518                     	;# 
  3423  0519                     	;# 
  3424  051A                     	;# 
  3425  051B                     	;# 
  3426  051C                     	;# 
  3427  051D                     	;# 
  3428  058C                     	;# 
  3429  058C                     	;# 
  3430  058D                     	;# 
  3431  058E                     	;# 
  3432  058F                     	;# 
  3433  058F                     	;# 
  3434  0590                     	;# 
  3435  0591                     	;# 
  3436  0592                     	;# 
  3437  0593                     	;# 
  3438  060C                     	;# 
  3439  060D                     	;# 
  3440  060E                     	;# 
  3441  060F                     	;# 
  3442  0610                     	;# 
  3443  0611                     	;# 
  3444  0612                     	;# 
  3445  0613                     	;# 
  3446  0614                     	;# 
  3447  0616                     	;# 
  3448  0617                     	;# 
  3449  0618                     	;# 
  3450  0619                     	;# 
  3451  061A                     	;# 
  3452  061B                     	;# 
  3453  061C                     	;# 
  3454  061D                     	;# 
  3455  061E                     	;# 
  3456  068C                     	;# 
  3457  068D                     	;# 
  3458  068E                     	;# 
  3459  068F                     	;# 
  3460  0690                     	;# 
  3461  0691                     	;# 
  3462  0692                     	;# 
  3463  0693                     	;# 
  3464  0694                     	;# 
  3465  070C                     	;# 
  3466  070D                     	;# 
  3467  070E                     	;# 
  3468  070F                     	;# 
  3469  0710                     	;# 
  3470  0711                     	;# 
  3471  0712                     	;# 
  3472  0713                     	;# 
  3473  0714                     	;# 
  3474  0716                     	;# 
  3475  0717                     	;# 
  3476  0718                     	;# 
  3477  0719                     	;# 
  3478  071A                     	;# 
  3479  071B                     	;# 
  3480  071C                     	;# 
  3481  071D                     	;# 
  3482  071E                     	;# 
  3483  0796                     	;# 
  3484  0797                     	;# 
  3485  0798                     	;# 
  3486  0799                     	;# 
  3487  079A                     	;# 
  3488  079B                     	;# 
  3489  080C                     	;# 
  3490  080D                     	;# 
  3491  080E                     	;# 
  3492  080F                     	;# 
  3493  0810                     	;# 
  3494  0811                     	;# 
  3495  0812                     	;# 
  3496  0813                     	;# 
  3497  0814                     	;# 
  3498  081A                     	;# 
  3499  081B                     	;# 
  3500  081C                     	;# 
  3501  081D                     	;# 
  3502  081E                     	;# 
  3503  081F                     	;# 
  3504  088C                     	;# 
  3505  088D                     	;# 
  3506  088E                     	;# 
  3507  088F                     	;# 
  3508  0890                     	;# 
  3509  0891                     	;# 
  3510  0892                     	;# 
  3511  0893                     	;# 
  3512  0895                     	;# 
  3513  0896                     	;# 
  3514  0897                     	;# 
  3515  0898                     	;# 
  3516  0899                     	;# 
  3517  089A                     	;# 
  3518  089B                     	;# 
  3519  090C                     	;# 
  3520  090E                     	;# 
  3521  090F                     	;# 
  3522  091F                     	;# 
  3523  091F                     	;# 
  3524  098F                     	;# 
  3525  098F                     	;# 
  3526  0990                     	;# 
  3527  0991                     	;# 
  3528  0992                     	;# 
  3529  0993                     	;# 
  3530  0994                     	;# 
  3531  0995                     	;# 
  3532  0996                     	;# 
  3533  0997                     	;# 
  3534  0E0F                     	;# 
  3535  0E10                     	;# 
  3536  0E11                     	;# 
  3537  0E12                     	;# 
  3538  0E13                     	;# 
  3539  0E14                     	;# 
  3540  0E15                     	;# 
  3541  0E16                     	;# 
  3542  0E17                     	;# 
  3543  0E18                     	;# 
  3544  0E19                     	;# 
  3545  0E1A                     	;# 
  3546  0E1B                     	;# 
  3547  0E1C                     	;# 
  3548  0E1D                     	;# 
  3549  0E1E                     	;# 
  3550  0E1F                     	;# 
  3551  0E20                     	;# 
  3552  0E21                     	;# 
  3553  0E22                     	;# 
  3554  0E23                     	;# 
  3555  0E24                     	;# 
  3556  0E25                     	;# 
  3557  0E26                     	;# 
  3558  0E27                     	;# 
  3559  0E28                     	;# 
  3560  0E29                     	;# 
  3561  0E2A                     	;# 
  3562  0E2B                     	;# 
  3563  0E2C                     	;# 
  3564  0E2D                     	;# 
  3565  0E2E                     	;# 
  3566  0E2F                     	;# 
  3567  0E30                     	;# 
  3568  0E31                     	;# 
  3569  0E32                     	;# 
  3570  0E33                     	;# 
  3571  0E34                     	;# 
  3572  0E35                     	;# 
  3573  0E36                     	;# 
  3574  0E37                     	;# 
  3575  0E8F                     	;# 
  3576  0E90                     	;# 
  3577  0E91                     	;# 
  3578  0E92                     	;# 
  3579  0E93                     	;# 
  3580  0E94                     	;# 
  3581  0E95                     	;# 
  3582  0E96                     	;# 
  3583  0E97                     	;# 
  3584  0E9C                     	;# 
  3585  0E9D                     	;# 
  3586  0E9E                     	;# 
  3587  0EA1                     	;# 
  3588  0EA2                     	;# 
  3589  0EA3                     	;# 
  3590  0EA4                     	;# 
  3591  0EA5                     	;# 
  3592  0EA9                     	;# 
  3593  0EAA                     	;# 
  3594  0EAB                     	;# 
  3595  0EAC                     	;# 
  3596  0EB1                     	;# 
  3597  0EB2                     	;# 
  3598  0EB3                     	;# 
  3599  0EB8                     	;# 
  3600  0EB9                     	;# 
  3601  0EBA                     	;# 
  3602  0EBB                     	;# 
  3603  0EBC                     	;# 
  3604  0EBD                     	;# 
  3605  0EBE                     	;# 
  3606  0EC3                     	;# 
  3607  0EC5                     	;# 
  3608  0EC6                     	;# 
  3609  0EC7                     	;# 
  3610  0EC8                     	;# 
  3611  0EC9                     	;# 
  3612  0ECA                     	;# 
  3613  0ECB                     	;# 
  3614  0ECC                     	;# 
  3615  0F10                     	;# 
  3616  0F11                     	;# 
  3617  0F12                     	;# 
  3618  0F13                     	;# 
  3619  0F14                     	;# 
  3620  0F15                     	;# 
  3621  0F16                     	;# 
  3622  0F17                     	;# 
  3623  0F18                     	;# 
  3624  0F19                     	;# 
  3625  0F1A                     	;# 
  3626  0F1B                     	;# 
  3627  0F1C                     	;# 
  3628  0F1D                     	;# 
  3629  0F1E                     	;# 
  3630  0F1F                     	;# 
  3631  0F20                     	;# 
  3632  0F21                     	;# 
  3633  0F22                     	;# 
  3634  0F23                     	;# 
  3635  0F24                     	;# 
  3636  0F25                     	;# 
  3637  0F26                     	;# 
  3638  0F27                     	;# 
  3639  0F38                     	;# 
  3640  0F39                     	;# 
  3641  0F3A                     	;# 
  3642  0F3B                     	;# 
  3643  0F3C                     	;# 
  3644  0F3D                     	;# 
  3645  0F3E                     	;# 
  3646  0F3F                     	;# 
  3647  0F40                     	;# 
  3648  0F41                     	;# 
  3649  0F43                     	;# 
  3650  0F44                     	;# 
  3651  0F45                     	;# 
  3652  0F46                     	;# 
  3653  0F47                     	;# 
  3654  0F48                     	;# 
  3655  0F49                     	;# 
  3656  0F4A                     	;# 
  3657  0F4B                     	;# 
  3658  0F4C                     	;# 
  3659  0F4E                     	;# 
  3660  0F4F                     	;# 
  3661  0F50                     	;# 
  3662  0F51                     	;# 
  3663  0F52                     	;# 
  3664  0F53                     	;# 
  3665  0F54                     	;# 
  3666  0F55                     	;# 
  3667  0F56                     	;# 
  3668  0F57                     	;# 
  3669  0F65                     	;# 
  3670  0F68                     	;# 
  3671  0F69                     	;# 
  3672  0F6A                     	;# 
  3673  0F6B                     	;# 
  3674  0FE4                     	;# 
  3675  0FE5                     	;# 
  3676  0FE6                     	;# 
  3677  0FE7                     	;# 
  3678  0FE8                     	;# 
  3679  0FE9                     	;# 
  3680  0FEA                     	;# 
  3681  0FEB                     	;# 
  3682  0FED                     	;# 
  3683  0FEE                     	;# 
  3684  0FEF                     	;# 
  3685                           
  3686                           	psect	stringtext
  3687  02E4                     __pstringtext:	
  3688  02E4                     _dpowers:	
  3689  02E4  3401               	retlw	1
  3690  02E5  3400               	retlw	0
  3691  02E6  340A               	retlw	10
  3692  02E7  3400               	retlw	0
  3693  02E8  3464               	retlw	100
  3694  02E9  3400               	retlw	0
  3695  02EA  34E8               	retlw	232
  3696  02EB  3403               	retlw	3
  3697  02EC  3410               	retlw	16
  3698  02ED  3427               	retlw	39
  3699  02EE                     __end_of_dpowers:	
  3700  02EE                     _hexpowers:	
  3701  02EE  3401               	retlw	1
  3702  02EF  3400               	retlw	0
  3703  02F0  3410               	retlw	16
  3704  02F1  3400               	retlw	0
  3705  02F2  3400               	retlw	0
  3706  02F3  3401               	retlw	1
  3707  02F4  3400               	retlw	0
  3708  02F5  3410               	retlw	16
  3709  02F6                     __end_of_hexpowers:	
  3710  000C                     _PORTAbits	set	12
  3711  0016                     _LATAbits	set	22
  3712  0013                     _TRISC	set	19
  3713  0012                     _TRISB	set	18
  3714  0011                     _TRISA	set	17
  3715  0018                     _LATC	set	24
  3716  0017                     _LATB	set	23
  3717  0016                     _LATA	set	22
  3718  000B                     _INTCONbits	set	11
  3719  005F                     _GIE	set	95
  3720  011A                     _TX1REG	set	282
  3721  0119                     _RC1REG	set	281
  3722  011D                     _RC1STAbits	set	285
  3723  011C                     _SP1BRGH	set	284
  3724  011B                     _SP1BRGL	set	283
  3725  011E                     _TX1STA	set	286
  3726  011D                     _RC1STA	set	285
  3727  011F                     _BAUD1CON	set	287
  3728  0196                     _SSP2BUF	set	406
  3729  019B                     _SSP2CON2bits	set	411
  3730  019A                     _SSP2CON1bits	set	410
  3731  0197                     _SSP2ADD	set	407
  3732  019C                     _SSP2CON3	set	412
  3733  019A                     _SSP2CON1	set	410
  3734  0199                     _SSP2STAT	set	409
  3735  0719                     _PIE3bits	set	1817
  3736  070F                     _PIR3bits	set	1807
  3737  0892                     _OSCTUNE	set	2194
  3738  0893                     _OSCFRQ	set	2195
  3739  0891                     _OSCEN	set	2193
  3740  088F                     _OSCCON3	set	2191
  3741  088D                     _OSCCON1	set	2189
  3742  0EC8                     _SSP2CLKPPSbits	set	3784
  3743  0EC9                     _SSP2DATPPSbits	set	3785
  3744  0E8F                     _PPSLOCKbits	set	3727
  3745  0E8F                     _PPSLOCK	set	3727
  3746  0F24                     _RC4PPS	set	3876
  3747  0F23                     _RC3PPS	set	3875
  3748  0F20                     _RC0PPS	set	3872
  3749  0F50                     _ODCONC	set	3920
  3750  0F45                     _ODCONB	set	3909
  3751  0F3A                     _ODCONA	set	3898
  3752  0F4F                     _WPUC	set	3919
  3753  0F39                     _WPUA	set	3897
  3754  0F44                     _WPUB	set	3908
  3755  0F65                     _WPUE	set	3941
  3756  0F38                     _ANSELA	set	3896
  3757  0F43                     _ANSELB	set	3907
  3758  0F4E                     _ANSELC	set	3918
  3759  02F6                     STR_2:	
  3760  02F6  344D               	retlw	77	;'M'
  3761  02F7  3469               	retlw	105	;'i'
  3762  02F8  3463               	retlw	99	;'c'
  3763  02F9  3472               	retlw	114	;'r'
  3764  02FA  346F               	retlw	111	;'o'
  3765  02FB  3463               	retlw	99	;'c'
  3766  02FC  3468               	retlw	104	;'h'
  3767  02FD  3469               	retlw	105	;'i'
  3768  02FE  3470               	retlw	112	;'p'
  3769  02FF  3420               	retlw	32	;' '
  3770  0300  3445               	retlw	69	;'E'
  3771  0301  344D               	retlw	77	;'M'
  3772  0302  3443               	retlw	67	;'C'
  3773  0303  3431               	retlw	49	;'1'
  3774  0304  3430               	retlw	48	;'0'
  3775  0305  3430               	retlw	48	;'0'
  3776  0306  3431               	retlw	49	;'1'
  3777  0307  3420               	retlw	32	;' '
  3778  0308  3454               	retlw	84	;'T'
  3779  0309  3465               	retlw	101	;'e'
  3780  030A  346D               	retlw	109	;'m'
  3781  030B  3470               	retlw	112	;'p'
  3782  030C  3465               	retlw	101	;'e'
  3783  030D  3472               	retlw	114	;'r'
  3784  030E  3461               	retlw	97	;'a'
  3785  030F  3474               	retlw	116	;'t'
  3786  0310  3475               	retlw	117	;'u'
  3787  0311  3472               	retlw	114	;'r'
  3788  0312  3465               	retlw	101	;'e'
  3789  0313  3420               	retlw	32	;' '
  3790  0314  3453               	retlw	83	;'S'
  3791  0315  3465               	retlw	101	;'e'
  3792  0316  346E               	retlw	110	;'n'
  3793  0317  3473               	retlw	115	;'s'
  3794  0318  346F               	retlw	111	;'o'
  3795  0319  3472               	retlw	114	;'r'
  3796  031A  3420               	retlw	32	;' '
  3797  031B  3444               	retlw	68	;'D'
  3798  031C  3465               	retlw	101	;'e'
  3799  031D  346D               	retlw	109	;'m'
  3800  031E  346F               	retlw	111	;'o'
  3801  031F  340A               	retlw	10
  3802  0320  3400               	retlw	0
  3803  0321                     STR_10:	
  3804  0321  3454               	retlw	84	;'T'
  3805  0322  3465               	retlw	101	;'e'
  3806  0323  346D               	retlw	109	;'m'
  3807  0324  3470               	retlw	112	;'p'
  3808  0325  3465               	retlw	101	;'e'
  3809  0326  3472               	retlw	114	;'r'
  3810  0327  3461               	retlw	97	;'a'
  3811  0328  3474               	retlw	116	;'t'
  3812  0329  3475               	retlw	117	;'u'
  3813  032A  3472               	retlw	114	;'r'
  3814  032B  3465               	retlw	101	;'e'
  3815  032C  3420               	retlw	32	;' '
  3816  032D  3468               	retlw	104	;'h'
  3817  032E  3469               	retlw	105	;'i'
  3818  032F  3467               	retlw	103	;'g'
  3819  0330  3468               	retlw	104	;'h'
  3820  0331  3420               	retlw	32	;' '
  3821  0332  346C               	retlw	108	;'l'
  3822  0333  3469               	retlw	105	;'i'
  3823  0334  346D               	retlw	109	;'m'
  3824  0335  3469               	retlw	105	;'i'
  3825  0336  3474               	retlw	116	;'t'
  3826  0337  343A               	retlw	58	;':'
  3827  0338  3409               	retlw	9
  3828  0339  3425               	retlw	37	;'%'
  3829  033A  3464               	retlw	100	;'d'
  3830  033B  342E               	retlw	46	;'.'
  3831  033C  3425               	retlw	37	;'%'
  3832  033D  3464               	retlw	100	;'d'
  3833  033E  3420               	retlw	32	;' '
  3834  033F  3443               	retlw	67	;'C'
  3835  0340  340A               	retlw	10
  3836  0341  3400               	retlw	0
  3837  0342                     STR_11:	
  3838  0342  3454               	retlw	84	;'T'
  3839  0343  3465               	retlw	101	;'e'
  3840  0344  346D               	retlw	109	;'m'
  3841  0345  3470               	retlw	112	;'p'
  3842  0346  3465               	retlw	101	;'e'
  3843  0347  3472               	retlw	114	;'r'
  3844  0348  3461               	retlw	97	;'a'
  3845  0349  3474               	retlw	116	;'t'
  3846  034A  3475               	retlw	117	;'u'
  3847  034B  3472               	retlw	114	;'r'
  3848  034C  3465               	retlw	101	;'e'
  3849  034D  3420               	retlw	32	;' '
  3850  034E  346C               	retlw	108	;'l'
  3851  034F  346F               	retlw	111	;'o'
  3852  0350  3477               	retlw	119	;'w'
  3853  0351  3420               	retlw	32	;' '
  3854  0352  346C               	retlw	108	;'l'
  3855  0353  3469               	retlw	105	;'i'
  3856  0354  346D               	retlw	109	;'m'
  3857  0355  3469               	retlw	105	;'i'
  3858  0356  3474               	retlw	116	;'t'
  3859  0357  343A               	retlw	58	;':'
  3860  0358  3409               	retlw	9
  3861  0359  3425               	retlw	37	;'%'
  3862  035A  3464               	retlw	100	;'d'
  3863  035B  342E               	retlw	46	;'.'
  3864  035C  3425               	retlw	37	;'%'
  3865  035D  3464               	retlw	100	;'d'
  3866  035E  3420               	retlw	32	;' '
  3867  035F  3443               	retlw	67	;'C'
  3868  0360  340A               	retlw	10
  3869  0361  3400               	retlw	0
  3870  0362                     STR_15:	
  3871  0362  3443               	retlw	67	;'C'
  3872  0363  3475               	retlw	117	;'u'
  3873  0364  3472               	retlw	114	;'r'
  3874  0365  3472               	retlw	114	;'r'
  3875  0366  3465               	retlw	101	;'e'
  3876  0367  346E               	retlw	110	;'n'
  3877  0368  3474               	retlw	116	;'t'
  3878  0369  3420               	retlw	32	;' '
  3879  036A  3454               	retlw	84	;'T'
  3880  036B  3465               	retlw	101	;'e'
  3881  036C  346D               	retlw	109	;'m'
  3882  036D  3470               	retlw	112	;'p'
  3883  036E  3465               	retlw	101	;'e'
  3884  036F  3472               	retlw	114	;'r'
  3885  0370  3461               	retlw	97	;'a'
  3886  0371  3474               	retlw	116	;'t'
  3887  0372  3475               	retlw	117	;'u'
  3888  0373  3472               	retlw	114	;'r'
  3889  0374  3465               	retlw	101	;'e'
  3890  0375  343A               	retlw	58	;':'
  3891  0376  3409               	retlw	9
  3892  0377  3425               	retlw	37	;'%'
  3893  0378  3464               	retlw	100	;'d'
  3894  0379  342E               	retlw	46	;'.'
  3895  037A  3425               	retlw	37	;'%'
  3896  037B  3464               	retlw	100	;'d'
  3897  037C  3420               	retlw	32	;' '
  3898  037D  3443               	retlw	67	;'C'
  3899  037E  340A               	retlw	10
  3900  037F  3400               	retlw	0
  3901  0380                     STR_13:	
  3902  0380  3454               	retlw	84	;'T'
  3903  0381  3468               	retlw	104	;'h'
  3904  0382  3465               	retlw	101	;'e'
  3905  0383  3472               	retlw	114	;'r'
  3906  0384  346D               	retlw	109	;'m'
  3907  0385  3461               	retlw	97	;'a'
  3908  0386  346C               	retlw	108	;'l'
  3909  0387  3420               	retlw	32	;' '
  3910  0388  3468               	retlw	104	;'h'
  3911  0389  3479               	retlw	121	;'y'
  3912  038A  3473               	retlw	115	;'s'
  3913  038B  3474               	retlw	116	;'t'
  3914  038C  3465               	retlw	101	;'e'
  3915  038D  3472               	retlw	114	;'r'
  3916  038E  3465               	retlw	101	;'e'
  3917  038F  3473               	retlw	115	;'s'
  3918  0390  3469               	retlw	105	;'i'
  3919  0391  3473               	retlw	115	;'s'
  3920  0392  343A               	retlw	58	;':'
  3921  0393  3409               	retlw	9
  3922  0394  3425               	retlw	37	;'%'
  3923  0395  3464               	retlw	100	;'d'
  3924  0396  3420               	retlw	32	;' '
  3925  0397  3443               	retlw	67	;'C'
  3926  0398  340A               	retlw	10
  3927  0399  3400               	retlw	0
  3928  039A                     STR_3:	
  3929  039A  3450               	retlw	80	;'P'
  3930  039B  3472               	retlw	114	;'r'
  3931  039C  346F               	retlw	111	;'o'
  3932  039D  3464               	retlw	100	;'d'
  3933  039E  3475               	retlw	117	;'u'
  3934  039F  3463               	retlw	99	;'c'
  3935  03A0  3474               	retlw	116	;'t'
  3936  03A1  3420               	retlw	32	;' '
  3937  03A2  3449               	retlw	73	;'I'
  3938  03A3  3444               	retlw	68	;'D'
  3939  03A4  343A               	retlw	58	;':'
  3940  03A5  3409               	retlw	9
  3941  03A6  3409               	retlw	9
  3942  03A7  3445               	retlw	69	;'E'
  3943  03A8  344D               	retlw	77	;'M'
  3944  03A9  3443               	retlw	67	;'C'
  3945  03AA  3431               	retlw	49	;'1'
  3946  03AB  3430               	retlw	48	;'0'
  3947  03AC  3430               	retlw	48	;'0'
  3948  03AD  3431               	retlw	49	;'1'
  3949  03AE  3425               	retlw	37	;'%'
  3950  03AF  3473               	retlw	115	;'s'
  3951  03B0  340A               	retlw	10
  3952  03B1  3400               	retlw	0
  3953  03B2                     STR_6:	
  3954  03B2  344D               	retlw	77	;'M'
  3955  03B3  3461               	retlw	97	;'a'
  3956  03B4  346E               	retlw	110	;'n'
  3957  03B5  3475               	retlw	117	;'u'
  3958  03B6  3466               	retlw	102	;'f'
  3959  03B7  3461               	retlw	97	;'a'
  3960  03B8  3463               	retlw	99	;'c'
  3961  03B9  3474               	retlw	116	;'t'
  3962  03BA  3475               	retlw	117	;'u'
  3963  03BB  3472               	retlw	114	;'r'
  3964  03BC  3465               	retlw	101	;'e'
  3965  03BD  3472               	retlw	114	;'r'
  3966  03BE  3420               	retlw	32	;' '
  3967  03BF  3449               	retlw	73	;'I'
  3968  03C0  3444               	retlw	68	;'D'
  3969  03C1  343A               	retlw	58	;':'
  3970  03C2  3409               	retlw	9
  3971  03C3  3430               	retlw	48	;'0'
  3972  03C4  3478               	retlw	120	;'x'
  3973  03C5  3425               	retlw	37	;'%'
  3974  03C6  3458               	retlw	88	;'X'
  3975  03C7  340A               	retlw	10
  3976  03C8  3400               	retlw	0
  3977  03C9                     STR_12:	
  3978  03C9  3454               	retlw	84	;'T'
  3979  03CA  3468               	retlw	104	;'h'
  3980  03CB  3465               	retlw	101	;'e'
  3981  03CC  3472               	retlw	114	;'r'
  3982  03CD  346D               	retlw	109	;'m'
  3983  03CE  3461               	retlw	97	;'a'
  3984  03CF  346C               	retlw	108	;'l'
  3985  03D0  3420               	retlw	32	;' '
  3986  03D1  346C               	retlw	108	;'l'
  3987  03D2  3469               	retlw	105	;'i'
  3988  03D3  346D               	retlw	109	;'m'
  3989  03D4  3469               	retlw	105	;'i'
  3990  03D5  3474               	retlw	116	;'t'
  3991  03D6  343A               	retlw	58	;':'
  3992  03D7  3409               	retlw	9
  3993  03D8  3409               	retlw	9
  3994  03D9  3425               	retlw	37	;'%'
  3995  03DA  3464               	retlw	100	;'d'
  3996  03DB  3420               	retlw	32	;' '
  3997  03DC  3443               	retlw	67	;'C'
  3998  03DD  340A               	retlw	10
  3999  03DE  3400               	retlw	0
  4000  03DF                     STR_9:	
  4001  03DF  3443               	retlw	67	;'C'
  4002  03E0  346F               	retlw	111	;'o'
  4003  03E1  346E               	retlw	110	;'n'
  4004  03E2  3476               	retlw	118	;'v'
  4005  03E3  3465               	retlw	101	;'e'
  4006  03E4  3472               	retlw	114	;'r'
  4007  03E5  3473               	retlw	115	;'s'
  4008  03E6  3469               	retlw	105	;'i'
  4009  03E7  346F               	retlw	111	;'o'
  4010  03E8  346E               	retlw	110	;'n'
  4011  03E9  3420               	retlw	32	;' '
  4012  03EA  3472               	retlw	114	;'r'
  4013  03EB  3461               	retlw	97	;'a'
  4014  03EC  3474               	retlw	116	;'t'
  4015  03ED  3465               	retlw	101	;'e'
  4016  03EE  343A               	retlw	58	;':'
  4017  03EF  3409               	retlw	9
  4018  03F0  3425               	retlw	37	;'%'
  4019  03F1  3478               	retlw	120	;'x'
  4020  03F2  340A               	retlw	10
  4021  03F3  3400               	retlw	0
  4022  03F4                     STR_17:	
  4023  03F4  3430               	retlw	48	;'0'
  4024  03F5  3431               	retlw	49	;'1'
  4025  03F6  3432               	retlw	50	;'2'
  4026  03F7  3433               	retlw	51	;'3'
  4027  03F8  3434               	retlw	52	;'4'
  4028  03F9  3435               	retlw	53	;'5'
  4029  03FA  3436               	retlw	54	;'6'
  4030  03FB  3437               	retlw	55	;'7'
  4031  03FC  3438               	retlw	56	;'8'
  4032  03FD  3439               	retlw	57	;'9'
  4033  03FE  3441               	retlw	65	;'A'
  4034  03FF  3442               	retlw	66	;'B'
  4035  0400  3443               	retlw	67	;'C'
  4036  0401  3444               	retlw	68	;'D'
  4037  0402  3445               	retlw	69	;'E'
  4038  0403  3446               	retlw	70	;'F'
  4039  0404  3400               	retlw	0
  4040  0405                     STR_18:	
  4041  0405  3430               	retlw	48	;'0'
  4042  0406  3431               	retlw	49	;'1'
  4043  0407  3432               	retlw	50	;'2'
  4044  0408  3433               	retlw	51	;'3'
  4045  0409  3434               	retlw	52	;'4'
  4046  040A  3435               	retlw	53	;'5'
  4047  040B  3436               	retlw	54	;'6'
  4048  040C  3437               	retlw	55	;'7'
  4049  040D  3438               	retlw	56	;'8'
  4050  040E  3439               	retlw	57	;'9'
  4051  040F  3461               	retlw	97	;'a'
  4052  0410  3462               	retlw	98	;'b'
  4053  0411  3463               	retlw	99	;'c'
  4054  0412  3464               	retlw	100	;'d'
  4055  0413  3465               	retlw	101	;'e'
  4056  0414  3466               	retlw	102	;'f'
  4057  0415  3400               	retlw	0
  4058  0416                     STR_7:	
  4059  0416  3452               	retlw	82	;'R'
  4060  0417  3465               	retlw	101	;'e'
  4061  0418  3476               	retlw	118	;'v'
  4062  0419  3469               	retlw	105	;'i'
  4063  041A  3473               	retlw	115	;'s'
  4064  041B  3469               	retlw	105	;'i'
  4065  041C  346F               	retlw	111	;'o'
  4066  041D  346E               	retlw	110	;'n'
  4067  041E  3420               	retlw	32	;' '
  4068  041F  343A               	retlw	58	;':'
  4069  0420  3409               	retlw	9
  4070  0421  3409               	retlw	9
  4071  0422  3425               	retlw	37	;'%'
  4072  0423  3464               	retlw	100	;'d'
  4073  0424  340A               	retlw	10
  4074  0425  3400               	retlw	0
  4075  0426                     STR_16:	
  4076  0426  3428               	retlw	40	;'('
  4077  0427  346E               	retlw	110	;'n'
  4078  0428  3475               	retlw	117	;'u'
  4079  0429  346C               	retlw	108	;'l'
  4080  042A  346C               	retlw	108	;'l'
  4081  042B  3429               	retlw	41	;')'
  4082  042C  3400               	retlw	0
  4083  042D                     STR_4:	
  4084  042D  342D               	retlw	45	;'-'
  4085  042E  3431               	retlw	49	;'1'
  4086  042F  3400               	retlw	0
  4087  0430                     STR_1:	
  4088  0430  340C               	retlw	12
  4089  0431  3400               	retlw	0
  4090  03DE                     
  4091                           ; #config settings
  4092  0000                     
  4093                           	psect	cinit
  4094  0022                     start_initialization:	
  4095  0022                     __initialization:	
  4096                           
  4097                           ; Clear objects allocated to COMMON
  4098  0022  01F7               	clrf	__pbssCOMMON& (0+127)
  4099  0023  01F8               	clrf	(__pbssCOMMON+1)& (0+127)
  4100  0024  01F9               	clrf	(__pbssCOMMON+2)& (0+127)
  4101  0025  01FA               	clrf	(__pbssCOMMON+3)& (0+127)
  4102  0026  01FB               	clrf	(__pbssCOMMON+4)& (0+127)
  4103  0027  01FC               	clrf	(__pbssCOMMON+5)& (0+127)
  4104                           
  4105                           ; Clear objects allocated to BANK0
  4106  0028  304B               	movlw	low __pbssBANK0
  4107  0029  0084               	movwf	4
  4108  002A  3000               	movlw	high __pbssBANK0
  4109  002B  0085               	movwf	5
  4110  002C  301B               	movlw	27
  4111  002D  318F  27CD         	fcall	clear_ram0
  4112  002F                     end_of_initialization:	
  4113                           ;End of C runtime variable initialization code
  4114                           
  4115  002F                     __end_of__initialization:	
  4116  002F  107E               	bcf	int$flags,0	;clear compiler interrupt flag (level 1)
  4117  0030  0020               	movlb	0
  4118  0031  3186  2E40         	ljmp	_main	;jump to C main() function
  4119                           
  4120                           	psect	bssCOMMON
  4121  0077                     __pbssCOMMON:	
  4122  0077                     I2C2_ISR@i2c_10bit_address_restart:	
  4123  0077                     	ds	1
  4124  0078                     I2C2_ISR@i2c_bytes_left:	
  4125  0078                     	ds	1
  4126  0079                     I2C2_ISR@pi2c_buf_ptr:	
  4127  0079                     	ds	1
  4128  007A                     _p_i2c2_current:	
  4129  007A                     	ds	1
  4130  007B                     _p_i2c2_trb_current:	
  4131  007B                     	ds	1
  4132  007C                     _i2c2_trb_count:	
  4133  007C                     	ds	1
  4134                           
  4135                           	psect	bssBANK0
  4136  004B                     __pbssBANK0:	
  4137  004B                     _i2c2_object:	
  4138  004B                     	ds	5
  4139  0050                     _i2c2_state:	
  4140  0050                     	ds	1
  4141  0051                     EMC1001_Read@trb:	
  4142  0051                     	ds	8
  4143  0059                     I2C2_MasterRead@trBlock:	
  4144  0059                     	ds	4
  4145  005D                     I2C2_MasterWrite@trBlock:	
  4146  005D                     	ds	4
  4147  0061                     _i2c2_tr_queue:	
  4148  0061                     	ds	3
  4149  0064                     I2C2_ISR@i2c_address:	
  4150  0064                     	ds	2
  4151                           
  4152                           	psect	clrtext
  4153  0FCD                     clear_ram0:	
  4154                           ;	Called with FSR0 containing the base address, and
  4155                           ;	WREG with the size to clear
  4156                           
  4157  0FCD  0064               	clrwdt	;clear the watchdog before getting into this loop
  4158  0FCE                     clrloop0:	
  4159  0FCE  0180               	clrf	0	;clear RAM location pointed to by FSR
  4160  0FCF  3101               	addfsr 0,1
  4161  0FD0  0B89               	decfsz	9,f	;Have we reached the end of clearing yet?
  4162  0FD1  2FCE               	goto	clrloop0	;have we reached the end yet?
  4163  0FD2  3400               	retlw	0	;all done for this memory range, return
  4164                           
  4165                           	psect	cstackCOMMON
  4166  0070                     __pcstackCOMMON:	
  4167  0070                     ?_I2C2_Stop:	
  4168  0070                     ??_I2C2_Stop:	
  4169                           ; 1 bytes @ 0x0
  4170                           
  4171  0070                     ?_I2C2_FunctionComplete:	
  4172                           ; 1 bytes @ 0x0
  4173                           
  4174  0070                     ??_I2C2_FunctionComplete:	
  4175                           ; 1 bytes @ 0x0
  4176                           
  4177  0070                     ?_PIN_MANAGER_Initialize:	
  4178                           ; 1 bytes @ 0x0
  4179                           
  4180  0070                     ?_OSCILLATOR_Initialize:	
  4181                           ; 1 bytes @ 0x0
  4182                           
  4183  0070                     ?_EMC1001_PrintInfo:	
  4184                           ; 1 bytes @ 0x0
  4185                           
  4186  0070                     ?_EMC1001_PrintTemp:	
  4187                           ; 1 bytes @ 0x0
  4188                           
  4189  0070                     ?_EUSART_Initialize:	
  4190                           ; 1 bytes @ 0x0
  4191                           
  4192  0070                     ?_EUSART_Write:	
  4193                           ; 1 bytes @ 0x0
  4194                           
  4195  0070                     ?_putch:	
  4196                           ; 1 bytes @ 0x0
  4197                           
  4198  0070                     ?_I2C2_Initialize:	
  4199                           ; 1 bytes @ 0x0
  4200                           
  4201  0070                     ?_I2C2_ISR:	
  4202                           ; 1 bytes @ 0x0
  4203                           
  4204  0070                     ?_I2C2_BusCollisionISR:	
  4205                           ; 1 bytes @ 0x0
  4206                           
  4207  0070                     ??_I2C2_BusCollisionISR:	
  4208                           ; 1 bytes @ 0x0
  4209                           
  4210  0070                     ?_INTERRUPT_InterruptManager:	
  4211                           ; 1 bytes @ 0x0
  4212                           
  4213  0070                     ?_SYSTEM_Initialize:	
  4214                           ; 1 bytes @ 0x0
  4215                           
  4216  0070                     ?_main:	
  4217                           ; 1 bytes @ 0x0
  4218                           
  4219                           
  4220                           ; 1 bytes @ 0x0
  4221  0070                     	ds	1
  4222  0071                     I2C2_Stop@completion_code:	
  4223                           
  4224                           ; 1 bytes @ 0x1
  4225  0071                     	ds	1
  4226  0072                     ??_I2C2_ISR:	
  4227                           
  4228                           ; 1 bytes @ 0x2
  4229  0072                     	ds	4
  4230  0076                     ??_INTERRUPT_InterruptManager:	
  4231                           
  4232                           ; 1 bytes @ 0x6
  4233  0076                     	ds	1
  4234                           
  4235                           	psect	cstackBANK0
  4236  0020                     __pcstackBANK0:	
  4237  0020                     ?_I2C2_MasterWriteTRBBuild:	
  4238  0020                     ?_I2C2_MasterTRBInsert:	
  4239                           ; 1 bytes @ 0x0
  4240                           
  4241  0020                     ?_I2C2_MasterReadTRBBuild:	
  4242                           ; 1 bytes @ 0x0
  4243                           
  4244  0020                     ??_PIN_MANAGER_Initialize:	
  4245                           ; 1 bytes @ 0x0
  4246                           
  4247  0020                     ??_OSCILLATOR_Initialize:	
  4248                           ; 1 bytes @ 0x0
  4249                           
  4250  0020                     ??_EUSART_Initialize:	
  4251                           ; 1 bytes @ 0x0
  4252                           
  4253  0020                     ??_EUSART_Write:	
  4254                           ; 1 bytes @ 0x0
  4255                           
  4256  0020                     ??_I2C2_Initialize:	
  4257                           ; 1 bytes @ 0x0
  4258                           
  4259  0020                     ?___wmul:	
  4260                           ; 1 bytes @ 0x0
  4261                           
  4262  0020                     ?___lwdiv:	
  4263                           ; 2 bytes @ 0x0
  4264                           
  4265  0020                     EUSART_Write@txData:	
  4266                           ; 2 bytes @ 0x0
  4267                           
  4268  0020                     I2C2_MasterTRBInsert@ptrb_list:	
  4269                           ; 1 bytes @ 0x0
  4270                           
  4271  0020                     I2C2_MasterReadTRBBuild@pdata:	
  4272                           ; 1 bytes @ 0x0
  4273                           
  4274  0020                     I2C2_MasterWriteTRBBuild@pdata:	
  4275                           ; 1 bytes @ 0x0
  4276                           
  4277  0020                     PIN_MANAGER_Initialize@state:	
  4278                           ; 1 bytes @ 0x0
  4279                           
  4280  0020                     ___wmul@multiplier:	
  4281                           ; 1 bytes @ 0x0
  4282                           
  4283  0020                     ___lwdiv@divisor:	
  4284                           ; 2 bytes @ 0x0
  4285                           
  4286                           
  4287                           ; 2 bytes @ 0x0
  4288  0020                     	ds	1
  4289  0021                     ??_putch:	
  4290  0021                     ??_SYSTEM_Initialize:	
  4291                           ; 1 bytes @ 0x1
  4292                           
  4293  0021                     putch@txData:	
  4294                           ; 1 bytes @ 0x1
  4295                           
  4296  0021                     I2C2_MasterTRBInsert@pflag:	
  4297                           ; 1 bytes @ 0x1
  4298                           
  4299  0021                     I2C2_MasterReadTRBBuild@length:	
  4300                           ; 1 bytes @ 0x1
  4301                           
  4302  0021                     I2C2_MasterWriteTRBBuild@length:	
  4303                           ; 1 bytes @ 0x1
  4304                           
  4305                           
  4306                           ; 1 bytes @ 0x1
  4307  0021                     	ds	1
  4308  0022                     ??_I2C2_MasterTRBInsert:	
  4309  0022                     ?_cputs:	
  4310                           ; 1 bytes @ 0x2
  4311                           
  4312  0022                     I2C2_MasterReadTRBBuild@address:	
  4313                           ; 1 bytes @ 0x2
  4314                           
  4315  0022                     I2C2_MasterWriteTRBBuild@address:	
  4316                           ; 2 bytes @ 0x2
  4317                           
  4318  0022                     ___wmul@multiplicand:	
  4319                           ; 2 bytes @ 0x2
  4320                           
  4321  0022                     ___lwdiv@dividend:	
  4322                           ; 2 bytes @ 0x2
  4323                           
  4324  0022                     cputs@s:	
  4325                           ; 2 bytes @ 0x2
  4326                           
  4327                           
  4328                           ; 2 bytes @ 0x2
  4329  0022                     	ds	1
  4330  0023                     I2C2_MasterTRBInsert@count:	
  4331                           
  4332                           ; 1 bytes @ 0x3
  4333  0023                     	ds	1
  4334  0024                     ??_I2C2_MasterWriteTRBBuild:	
  4335  0024                     ??_I2C2_MasterReadTRBBuild:	
  4336                           ; 1 bytes @ 0x4
  4337                           
  4338  0024                     ??_cputs:	
  4339                           ; 1 bytes @ 0x4
  4340                           
  4341  0024                     ??___wmul:	
  4342                           ; 1 bytes @ 0x4
  4343                           
  4344  0024                     ??___lwdiv:	
  4345                           ; 1 bytes @ 0x4
  4346                           
  4347  0024                     ___wmul@product:	
  4348                           ; 1 bytes @ 0x4
  4349                           
  4350                           
  4351                           ; 2 bytes @ 0x4
  4352  0024                     	ds	1
  4353  0025                     ?_puts:	
  4354  0025                     ___lwdiv@quotient:	
  4355                           ; 2 bytes @ 0x5
  4356                           
  4357  0025                     puts@s:	
  4358                           ; 2 bytes @ 0x5
  4359                           
  4360                           
  4361                           ; 2 bytes @ 0x5
  4362  0025                     	ds	1
  4363  0026                     I2C2_MasterReadTRBBuild@ptrb:	
  4364  0026                     I2C2_MasterWriteTRBBuild@ptrb:	
  4365                           ; 1 bytes @ 0x6
  4366                           
  4367                           
  4368                           ; 1 bytes @ 0x6
  4369  0026                     	ds	1
  4370  0027                     ??_puts:	
  4371  0027                     ?_EMC1001_Read:	
  4372                           ; 1 bytes @ 0x7
  4373                           
  4374  0027                     EMC1001_Read@pData:	
  4375                           ; 1 bytes @ 0x7
  4376                           
  4377  0027                     ___lwdiv@counter:	
  4378                           ; 1 bytes @ 0x7
  4379                           
  4380                           
  4381                           ; 1 bytes @ 0x7
  4382  0027                     	ds	1
  4383  0028                     ??_EMC1001_Read:	
  4384  0028                     ?___lwmod:	
  4385                           ; 1 bytes @ 0x8
  4386                           
  4387  0028                     ___lwmod@divisor:	
  4388                           ; 2 bytes @ 0x8
  4389                           
  4390                           
  4391                           ; 2 bytes @ 0x8
  4392  0028                     	ds	2
  4393  002A                     EMC1001_Read@reg:	
  4394  002A                     ___lwmod@dividend:	
  4395                           ; 1 bytes @ 0xA
  4396                           
  4397                           
  4398                           ; 2 bytes @ 0xA
  4399  002A                     	ds	1
  4400  002B                     EMC1001_Read@status:	
  4401                           
  4402                           ; 1 bytes @ 0xB
  4403  002B                     	ds	1
  4404  002C                     ??___lwmod:	
  4405                           
  4406                           ; 1 bytes @ 0xC
  4407  002C                     	ds	1
  4408  002D                     ___lwmod@counter:	
  4409                           
  4410                           ; 1 bytes @ 0xD
  4411  002D                     	ds	1
  4412  002E                     ?_printf:	
  4413  002E                     printf@f:	
  4414                           ; 2 bytes @ 0xE
  4415                           
  4416                           
  4417                           ; 2 bytes @ 0xE
  4418  002E                     	ds	6
  4419  0034                     ??_printf:	
  4420                           
  4421                           ; 1 bytes @ 0x14
  4422  0034                     	ds	4
  4423  0038                     printf@idx:	
  4424                           
  4425                           ; 1 bytes @ 0x18
  4426  0038                     	ds	1
  4427  0039                     _printf$731:	
  4428                           
  4429                           ; 2 bytes @ 0x19
  4430  0039                     	ds	2
  4431  003B                     printf@prec:	
  4432                           
  4433                           ; 1 bytes @ 0x1B
  4434  003B                     	ds	1
  4435  003C                     printf@cp:	
  4436                           
  4437                           ; 2 bytes @ 0x1C
  4438  003C                     	ds	2
  4439  003E                     printf@ap:	
  4440                           
  4441                           ; 1 bytes @ 0x1E
  4442  003E                     	ds	1
  4443  003F                     printf@flag:	
  4444                           
  4445                           ; 1 bytes @ 0x1F
  4446  003F                     	ds	1
  4447  0040                     printf@val:	
  4448                           
  4449                           ; 2 bytes @ 0x20
  4450  0040                     	ds	2
  4451  0042                     printf@c:	
  4452                           
  4453                           ; 1 bytes @ 0x22
  4454  0042                     	ds	1
  4455  0043                     ??_EMC1001_PrintInfo:	
  4456  0043                     ??_EMC1001_PrintTemp:	
  4457                           ; 1 bytes @ 0x23
  4458                           
  4459                           
  4460                           ; 1 bytes @ 0x23
  4461  0043                     	ds	2
  4462  0045                     EMC1001_PrintTemp@temp:	
  4463  0045                     _EMC1001_PrintInfo$682:	
  4464                           ; 1 bytes @ 0x25
  4465                           
  4466                           
  4467                           ; 2 bytes @ 0x25
  4468  0045                     	ds	1
  4469  0046                     EMC1001_PrintTemp@templo:	
  4470                           
  4471                           ; 1 bytes @ 0x26
  4472  0046                     	ds	1
  4473  0047                     EMC1001_PrintInfo@temp:	
  4474                           
  4475                           ; 1 bytes @ 0x27
  4476  0047                     	ds	1
  4477  0048                     EMC1001_PrintInfo@templo:	
  4478                           
  4479                           ; 1 bytes @ 0x28
  4480  0048                     	ds	1
  4481  0049                     EMC1001_PrintInfo@data:	
  4482                           
  4483                           ; 1 bytes @ 0x29
  4484  0049                     	ds	1
  4485  004A                     ??_main:	
  4486                           
  4487                           ; 1 bytes @ 0x2A
  4488  004A                     	ds	1
  4489                           
  4490                           	psect	maintext
  4491  0640                     __pmaintext:	
  4492 ;;
  4493 ;;Main: autosize = 0, tempsize = 1, incstack = 0, save=0
  4494 ;;
  4495 ;; *************** function _main *****************
  4496 ;; Defined at:
  4497 ;;		line 6 in file "main.c"
  4498 ;; Parameters:    Size  Location     Type
  4499 ;;		None
  4500 ;; Auto vars:     Size  Location     Type
  4501 ;;		None
  4502 ;; Return value:  Size  Location     Type
  4503 ;;                  1    wreg      void 
  4504 ;; Registers used:
  4505 ;;		wreg, fsr0l, fsr0h, fsr1l, fsr1h, status,2, status,0, pclath, cstack
  4506 ;; Tracked objects:
  4507 ;;		On entry : B1F/0
  4508 ;;		On exit  : 0/0
  4509 ;;		Unchanged: 0/0
  4510 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
  4511 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  4512 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  4513 ;;      Temps:          0       1       0       0       0       0       0       0       0       0       0       0       
      +0       0
  4514 ;;      Totals:         0       1       0       0       0       0       0       0       0       0       0       0       
      +0       0
  4515 ;;Total ram usage:        1 bytes
  4516 ;; Hardware stack levels required when called:    8
  4517 ;; This function calls:
  4518 ;;		_EMC1001_PrintInfo
  4519 ;;		_EMC1001_PrintTemp
  4520 ;;		_SYSTEM_Initialize
  4521 ;;		_printf
  4522 ;; This function is called by:
  4523 ;;		Startup code after reset
  4524 ;; This function uses a non-reentrant model
  4525 ;;
  4526                           
  4527                           
  4528                           ;psect for function _main
  4529  0640                     _main:	
  4530                           
  4531                           ;main.c: 9: SYSTEM_Initialize();
  4532                           
  4533                           ;incstack = 0
  4534                           ; Regs used in _main: [wreg-fsr1h+status,2+status,0+pclath+cstack]
  4535  0640  318F  27F4  3186   	fcall	_SYSTEM_Initialize
  4536                           
  4537                           ;main.c: 10: (INTCONbits.GIE = 1);
  4538  0643  178B               	bsf	11,7	;volatile
  4539                           
  4540                           ;main.c: 11: (INTCONbits.PEIE = 1);
  4541  0644  170B               	bsf	11,6	;volatile
  4542                           
  4543                           ;main.c: 13: do { LATAbits.LATA0 = 0; } while(0);
  4544  0645  0020               	movlb	0	; select bank0
  4545  0646  1016               	bcf	22,0	;volatile
  4546                           
  4547                           ;main.c: 14: do { LATAbits.LATA1 = 0; } while(0);
  4548  0647  1096               	bcf	22,1	;volatile
  4549                           
  4550                           ;main.c: 15: do { LATAbits.LATA2 = 0; } while(0);
  4551  0648  1116               	bcf	22,2	;volatile
  4552                           
  4553                           ;main.c: 16: do { LATAbits.LATA3 = 0; } while(0);
  4554  0649  1196               	bcf	22,3	;volatile
  4555  064A                     l2407:	
  4556                           ;main.c: 19: {
  4557                           ;main.c: 20: do { LATAbits.LATA0 = ~LATAbits.LATA0; } while(0);
  4558                           
  4559                           ;main.c: 18: while (1)
  4560                           
  4561  064A  1003               	clrc
  4562  064B  0020               	movlb	0	; select bank0
  4563  064C  1C16               	btfss	22,0	;volatile
  4564  064D  1403               	setc
  4565  064E  1C03               	btfss	3,0
  4566  064F  2E53               	goto	u2300
  4567  0650  0020               	movlb	0	; select bank0
  4568  0651  1416               	bsf	22,0	;volatile
  4569  0652  2E55               	goto	l2409
  4570  0653                     u2300:	
  4571  0653  0020               	movlb	0	; select bank0
  4572  0654  1016               	bcf	22,0	;volatile
  4573  0655                     l2409:	
  4574                           
  4575                           ;main.c: 21: printf("\x0C");
  4576  0655  3030               	movlw	low (STR_1| (0+32768))
  4577  0656  00AE               	movwf	printf@f
  4578  0657  3084               	movlw	high (STR_1| (0+32768))
  4579  0658  00AF               	movwf	printf@f+1
  4580  0659  3180  2033  3186   	fcall	_printf
  4581                           
  4582                           ;main.c: 22: EMC1001_PrintInfo();
  4583  065C  3181  2194  3186   	fcall	_EMC1001_PrintInfo
  4584                           
  4585                           ;main.c: 23: EMC1001_PrintTemp();
  4586  065F  3185  25B3  3186   	fcall	_EMC1001_PrintTemp
  4587                           
  4588                           ;main.c: 25: LATAbits.LATA1=PORTAbits.RA7;
  4589  0662  0020               	movlb	0	; select bank0
  4590  0663  1F8C               	btfss	12,7	;volatile
  4591  0664  2E68               	goto	u2320
  4592  0665  0020               	movlb	0	; select bank0
  4593  0666  1496               	bsf	22,1	;volatile
  4594  0667  2E6A               	goto	l2417
  4595  0668                     u2320:	
  4596  0668  0020               	movlb	0	; select bank0
  4597  0669  1096               	bcf	22,1	;volatile
  4598  066A                     l2417:	
  4599                           
  4600                           ;main.c: 26: LATAbits.LATA2=PORTAbits.RA6;
  4601  066A  1F0C               	btfss	12,6	;volatile
  4602  066B  2E6F               	goto	u2340
  4603  066C  0020               	movlb	0	; select bank0
  4604  066D  1516               	bsf	22,2	;volatile
  4605  066E  2E71               	goto	l2419
  4606  066F                     u2340:	
  4607  066F  0020               	movlb	0	; select bank0
  4608  0670  1116               	bcf	22,2	;volatile
  4609  0671                     l2419:	
  4610                           ;main.c: 28: do { LATAbits.LATA0 = ~LATAbits.LATA0; } while(0);
  4611                           
  4612  0671  1003               	clrc
  4613  0672  1C16               	btfss	22,0	;volatile
  4614  0673  1403               	setc
  4615  0674  1C03               	btfss	3,0
  4616  0675  2E79               	goto	u2360
  4617  0676  0020               	movlb	0	; select bank0
  4618  0677  1416               	bsf	22,0	;volatile
  4619  0678  2E7B               	goto	l2421
  4620  0679                     u2360:	
  4621  0679  0020               	movlb	0	; select bank0
  4622  067A  1016               	bcf	22,0	;volatile
  4623  067B                     l2421:	
  4624                           
  4625                           ;main.c: 30: _delay((unsigned long)((500)*(1000000/4000.0)));
  4626  067B  30A3               	movlw	163
  4627  067C  0020               	movlb	0	; select bank0
  4628  067D  00CA               	movwf	??_main
  4629  067E  3055               	movlw	85
  4630  067F                     u2387:	
  4631  067F  0B89               	decfsz	9,f
  4632  0680  2E7F               	goto	u2387
  4633  0681  0BCA               	decfsz	??_main,f
  4634  0682  2E7F               	goto	u2387
  4635  0683  2E4A               	goto	l2407
  4636  0684                     __end_of_main:	
  4637                           
  4638                           	psect	text1
  4639  0FF4                     __ptext1:	
  4640 ;; *************** function _SYSTEM_Initialize *****************
  4641 ;; Defined at:
  4642 ;;		line 82 in file "mcc_generated_files/mcc.c"
  4643 ;; Parameters:    Size  Location     Type
  4644 ;;		None
  4645 ;; Auto vars:     Size  Location     Type
  4646 ;;		None
  4647 ;; Return value:  Size  Location     Type
  4648 ;;                  1    wreg      void 
  4649 ;; Registers used:
  4650 ;;		wreg, status,2, status,0, pclath, cstack
  4651 ;; Tracked objects:
  4652 ;;		On entry : 0/0
  4653 ;;		On exit  : 0/0
  4654 ;;		Unchanged: 0/0
  4655 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
  4656 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  4657 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  4658 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  4659 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  4660 ;;Total ram usage:        0 bytes
  4661 ;; Hardware stack levels used:    1
  4662 ;; Hardware stack levels required when called:    4
  4663 ;; This function calls:
  4664 ;;		_EUSART_Initialize
  4665 ;;		_I2C2_Initialize
  4666 ;;		_OSCILLATOR_Initialize
  4667 ;;		_PIN_MANAGER_Initialize
  4668 ;; This function is called by:
  4669 ;;		_main
  4670 ;; This function uses a non-reentrant model
  4671 ;;
  4672                           
  4673                           
  4674                           ;psect for function _SYSTEM_Initialize
  4675  0FF4                     _SYSTEM_Initialize:	
  4676                           
  4677                           ;mcc.c: 85: PIN_MANAGER_Initialize();
  4678                           
  4679                           ;incstack = 0
  4680                           ; Regs used in _SYSTEM_Initialize: [wreg+status,2+status,0+pclath+cstack]
  4681  0FF4  3185  256C  318F   	fcall	_PIN_MANAGER_Initialize
  4682                           
  4683                           ;mcc.c: 86: OSCILLATOR_Initialize();
  4684  0FF7  3187  27F7  318F   	fcall	_OSCILLATOR_Initialize
  4685                           
  4686                           ;mcc.c: 87: I2C2_Initialize();
  4687  0FFA  3187  2786  318F   	fcall	_I2C2_Initialize
  4688                           
  4689                           ;mcc.c: 88: EUSART_Initialize();
  4690  0FFD  318F  27DD         	fcall	_EUSART_Initialize
  4691  0FFF  0008               	return
  4692  1000                     __end_of_SYSTEM_Initialize:	
  4693                           
  4694                           	psect	text2
  4695  056C                     __ptext2:	
  4696 ;; *************** function _PIN_MANAGER_Initialize *****************
  4697 ;; Defined at:
  4698 ;;		line 51 in file "mcc_generated_files/pin_manager.c"
  4699 ;; Parameters:    Size  Location     Type
  4700 ;;		None
  4701 ;; Auto vars:     Size  Location     Type
  4702 ;;  state           1    0[BANK0 ] unsigned char 
  4703 ;; Return value:  Size  Location     Type
  4704 ;;                  1    wreg      void 
  4705 ;; Registers used:
  4706 ;;		wreg, status,2, status,0
  4707 ;; Tracked objects:
  4708 ;;		On entry : 0/0
  4709 ;;		On exit  : 0/0
  4710 ;;		Unchanged: 0/0
  4711 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
  4712 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  4713 ;;      Locals:         0       1       0       0       0       0       0       0       0       0       0       0       
      +0       0
  4714 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  4715 ;;      Totals:         0       1       0       0       0       0       0       0       0       0       0       0       
      +0       0
  4716 ;;Total ram usage:        1 bytes
  4717 ;; Hardware stack levels used:    1
  4718 ;; Hardware stack levels required when called:    3
  4719 ;; This function calls:
  4720 ;;		Nothing
  4721 ;; This function is called by:
  4722 ;;		_SYSTEM_Initialize
  4723 ;; This function uses a non-reentrant model
  4724 ;;
  4725                           
  4726                           
  4727                           ;psect for function _PIN_MANAGER_Initialize
  4728  056C                     _PIN_MANAGER_Initialize:	
  4729                           
  4730                           ;pin_manager.c: 56: LATA = 0x00;
  4731                           
  4732                           ;incstack = 0
  4733                           ; Regs used in _PIN_MANAGER_Initialize: [wreg+status,2+status,0]
  4734  056C  0020               	movlb	0	; select bank0
  4735  056D  0196               	clrf	22	;volatile
  4736                           
  4737                           ;pin_manager.c: 57: LATB = 0x00;
  4738  056E  0197               	clrf	23	;volatile
  4739                           
  4740                           ;pin_manager.c: 58: LATC = 0x01;
  4741  056F  3001               	movlw	1
  4742  0570  0098               	movwf	24	;volatile
  4743                           
  4744                           ;pin_manager.c: 63: TRISA = 0xF0;
  4745  0571  30F0               	movlw	240
  4746  0572  0091               	movwf	17	;volatile
  4747                           
  4748                           ;pin_manager.c: 64: TRISB = 0xFF;
  4749  0573  30FF               	movlw	255
  4750  0574  0092               	movwf	18	;volatile
  4751                           
  4752                           ;pin_manager.c: 65: TRISC = 0xFE;
  4753  0575  30FE               	movlw	254
  4754  0576  0093               	movwf	19	;volatile
  4755                           
  4756                           ;pin_manager.c: 70: ANSELC = 0xE7;
  4757  0577  30E7               	movlw	231
  4758  0578  003E               	movlb	30	; select bank30
  4759  0579  00CE               	movwf	78	;volatile
  4760                           
  4761                           ;pin_manager.c: 71: ANSELB = 0xFF;
  4762  057A  30FF               	movlw	255
  4763  057B  00C3               	movwf	67	;volatile
  4764                           
  4765                           ;pin_manager.c: 72: ANSELA = 0x30;
  4766  057C  3030               	movlw	48
  4767  057D  00B8               	movwf	56	;volatile
  4768                           
  4769                           ;pin_manager.c: 77: WPUE = 0x08;
  4770  057E  3008               	movlw	8
  4771  057F  00E5               	movwf	101	;volatile
  4772                           
  4773                           ;pin_manager.c: 78: WPUB = 0xFF;
  4774  0580  30FF               	movlw	255
  4775  0581  00C4               	movwf	68	;volatile
  4776                           
  4777                           ;pin_manager.c: 79: WPUA = 0xF0;
  4778  0582  30F0               	movlw	240
  4779  0583  00B9               	movwf	57	;volatile
  4780                           
  4781                           ;pin_manager.c: 80: WPUC = 0xE7;
  4782  0584  30E7               	movlw	231
  4783  0585  00CF               	movwf	79	;volatile
  4784                           
  4785                           ;pin_manager.c: 85: ODCONA = 0x00;
  4786  0586  01BA               	clrf	58	;volatile
  4787                           
  4788                           ;pin_manager.c: 86: ODCONB = 0x00;
  4789  0587  01C5               	clrf	69	;volatile
  4790                           
  4791                           ;pin_manager.c: 87: ODCONC = 0x00;
  4792  0588  01D0               	clrf	80	;volatile
  4793                           
  4794                           ;pin_manager.c: 94: bool state = GIE;
  4795  0589  3000               	movlw	0
  4796  058A  1B8B               	btfsc	11,7	;volatile
  4797  058B  3001               	movlw	1
  4798  058C  0020               	movlb	0	; select bank0
  4799  058D  00A0               	movwf	PIN_MANAGER_Initialize@state
  4800                           
  4801                           ;pin_manager.c: 95: GIE = 0;
  4802  058E  138B               	bcf	11,7	;volatile
  4803                           
  4804                           ;pin_manager.c: 96: PPSLOCK = 0x55;
  4805  058F  3055               	movlw	85
  4806  0590  003D               	movlb	29	; select bank29
  4807  0591  008F               	movwf	15	;volatile
  4808                           
  4809                           ;pin_manager.c: 97: PPSLOCK = 0xAA;
  4810  0592  30AA               	movlw	170
  4811  0593  008F               	movwf	15	;volatile
  4812                           
  4813                           ;pin_manager.c: 98: PPSLOCKbits.PPSLOCKED = 0x00;
  4814  0594  100F               	bcf	15,0	;volatile
  4815                           
  4816                           ;pin_manager.c: 100: RC0PPS = 0x10;
  4817  0595  3010               	movlw	16
  4818  0596  003E               	movlb	30	; select bank30
  4819  0597  00A0               	movwf	32	;volatile
  4820                           
  4821                           ;pin_manager.c: 101: RC3PPS = 0x17;
  4822  0598  3017               	movlw	23
  4823  0599  00A3               	movwf	35	;volatile
  4824                           
  4825                           ;pin_manager.c: 102: SSP2DATPPSbits.SSP2DATPPS = 0x13;
  4826  059A  003D               	movlb	29	; select bank29
  4827  059B  0849               	movf	73,w	;volatile
  4828  059C  39E0               	andlw	-32
  4829  059D  3813               	iorlw	19
  4830  059E  00C9               	movwf	73	;volatile
  4831                           
  4832                           ;pin_manager.c: 103: SSP2CLKPPSbits.SSP2CLKPPS = 0x14;
  4833  059F  0848               	movf	72,w	;volatile
  4834  05A0  39E0               	andlw	-32
  4835  05A1  3814               	iorlw	20
  4836  05A2  00C8               	movwf	72	;volatile
  4837                           
  4838                           ;pin_manager.c: 104: RC4PPS = 0x16;
  4839  05A3  3016               	movlw	22
  4840  05A4  003E               	movlb	30	; select bank30
  4841  05A5  00A4               	movwf	36	;volatile
  4842                           
  4843                           ;pin_manager.c: 106: PPSLOCK = 0x55;
  4844  05A6  3055               	movlw	85
  4845  05A7  003D               	movlb	29	; select bank29
  4846  05A8  008F               	movwf	15	;volatile
  4847                           
  4848                           ;pin_manager.c: 107: PPSLOCK = 0xAA;
  4849  05A9  30AA               	movlw	170
  4850  05AA  008F               	movwf	15	;volatile
  4851                           
  4852                           ;pin_manager.c: 108: PPSLOCKbits.PPSLOCKED = 0x01;
  4853  05AB  140F               	bsf	15,0	;volatile
  4854                           
  4855                           ;pin_manager.c: 110: GIE = state;
  4856  05AC  0020               	movlb	0	; select bank0
  4857  05AD  1C20               	btfss	PIN_MANAGER_Initialize@state,0
  4858  05AE  2DB1               	goto	u1930
  4859  05AF  178B               	bsf	11,7	;volatile
  4860  05B0  0008               	return
  4861  05B1                     u1930:	
  4862  05B1  138B               	bcf	11,7	;volatile
  4863  05B2  0008               	return
  4864  05B3                     __end_of_PIN_MANAGER_Initialize:	
  4865                           
  4866                           	psect	text3
  4867  07F7                     __ptext3:	
  4868 ;; *************** function _OSCILLATOR_Initialize *****************
  4869 ;; Defined at:
  4870 ;;		line 91 in file "mcc_generated_files/mcc.c"
  4871 ;; Parameters:    Size  Location     Type
  4872 ;;		None
  4873 ;; Auto vars:     Size  Location     Type
  4874 ;;		None
  4875 ;; Return value:  Size  Location     Type
  4876 ;;                  1    wreg      void 
  4877 ;; Registers used:
  4878 ;;		wreg, status,2
  4879 ;; Tracked objects:
  4880 ;;		On entry : 0/0
  4881 ;;		On exit  : 0/0
  4882 ;;		Unchanged: 0/0
  4883 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
  4884 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  4885 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  4886 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  4887 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  4888 ;;Total ram usage:        0 bytes
  4889 ;; Hardware stack levels used:    1
  4890 ;; Hardware stack levels required when called:    3
  4891 ;; This function calls:
  4892 ;;		Nothing
  4893 ;; This function is called by:
  4894 ;;		_SYSTEM_Initialize
  4895 ;; This function uses a non-reentrant model
  4896 ;;
  4897                           
  4898                           
  4899                           ;psect for function _OSCILLATOR_Initialize
  4900  07F7                     _OSCILLATOR_Initialize:	
  4901                           
  4902                           ;mcc.c: 94: OSCCON1 = 0x62;
  4903                           
  4904                           ;incstack = 0
  4905                           ; Regs used in _OSCILLATOR_Initialize: [wreg+status,2]
  4906  07F7  3062               	movlw	98
  4907  07F8  0031               	movlb	17	; select bank17
  4908  07F9  008D               	movwf	13	;volatile
  4909                           
  4910                           ;mcc.c: 96: OSCCON3 = 0x00;
  4911  07FA  018F               	clrf	15	;volatile
  4912                           
  4913                           ;mcc.c: 98: OSCEN = 0x00;
  4914  07FB  0191               	clrf	17	;volatile
  4915                           
  4916                           ;mcc.c: 100: OSCFRQ = 0x02;
  4917  07FC  3002               	movlw	2
  4918  07FD  0093               	movwf	19	;volatile
  4919                           
  4920                           ;mcc.c: 102: OSCTUNE = 0x00;
  4921  07FE  0192               	clrf	18	;volatile
  4922  07FF  0008               	return
  4923  0800                     __end_of_OSCILLATOR_Initialize:	
  4924                           
  4925                           	psect	text4
  4926  0786                     __ptext4:	
  4927 ;; *************** function _I2C2_Initialize *****************
  4928 ;; Defined at:
  4929 ;;		line 198 in file "mcc_generated_files/i2c2.c"
  4930 ;; Parameters:    Size  Location     Type
  4931 ;;		None
  4932 ;; Auto vars:     Size  Location     Type
  4933 ;;		None
  4934 ;; Return value:  Size  Location     Type
  4935 ;;                  1    wreg      void 
  4936 ;; Registers used:
  4937 ;;		wreg, status,2
  4938 ;; Tracked objects:
  4939 ;;		On entry : 0/0
  4940 ;;		On exit  : 0/0
  4941 ;;		Unchanged: 0/0
  4942 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
  4943 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  4944 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  4945 ;;      Temps:          0       1       0       0       0       0       0       0       0       0       0       0       
      +0       0
  4946 ;;      Totals:         0       1       0       0       0       0       0       0       0       0       0       0       
      +0       0
  4947 ;;Total ram usage:        1 bytes
  4948 ;; Hardware stack levels used:    1
  4949 ;; Hardware stack levels required when called:    3
  4950 ;; This function calls:
  4951 ;;		Nothing
  4952 ;; This function is called by:
  4953 ;;		_SYSTEM_Initialize
  4954 ;; This function uses a non-reentrant model
  4955 ;;
  4956                           
  4957                           
  4958                           ;psect for function _I2C2_Initialize
  4959  0786                     _I2C2_Initialize:	
  4960                           
  4961                           ;i2c2.c: 200: i2c2_object.pTrHead = i2c2_tr_queue;
  4962                           
  4963                           ;incstack = 0
  4964                           ; Regs used in _I2C2_Initialize: [wreg+status,2]
  4965  0786  3061               	movlw	(low (_i2c2_tr_queue| 0))& (0+255)
  4966  0787  0020               	movlb	0	; select bank0
  4967  0788  00A0               	movwf	??_I2C2_Initialize
  4968  0789  0820               	movf	??_I2C2_Initialize,w
  4969  078A  00CC               	movwf	low ((_i2c2_object| 0+1))
  4970                           
  4971                           ;i2c2.c: 201: i2c2_object.pTrTail = i2c2_tr_queue;
  4972  078B  3061               	movlw	(low (_i2c2_tr_queue| 0))& (0+255)
  4973  078C  00A0               	movwf	??_I2C2_Initialize
  4974  078D  0820               	movf	??_I2C2_Initialize,w
  4975  078E  00CB               	movwf	_i2c2_object
  4976                           
  4977                           ;i2c2.c: 202: i2c2_object.trStatus.s.empty = 1;
  4978  078F  14CD               	bsf	_i2c2_object+2,1
  4979                           
  4980                           ;i2c2.c: 203: i2c2_object.trStatus.s.full = 0;
  4981  0790  104D               	bcf	_i2c2_object+2,0
  4982                           
  4983                           ;i2c2.c: 205: i2c2_object.i2cErrors = 0;
  4984  0791  01CF               	clrf	_i2c2_object+4
  4985                           
  4986                           ;i2c2.c: 208: SSP2STAT = 0x80;
  4987  0792  3080               	movlw	128
  4988  0793  0023               	movlb	3	; select bank3
  4989  0794  0099               	movwf	25	;volatile
  4990                           
  4991                           ;i2c2.c: 210: SSP2CON1 = 0x28;
  4992  0795  3028               	movlw	40
  4993  0796  009A               	movwf	26	;volatile
  4994                           
  4995                           ;i2c2.c: 212: SSP2CON3 = 0x00;
  4996  0797  019C               	clrf	28	;volatile
  4997                           
  4998                           ;i2c2.c: 214: SSP2ADD = 0x04;
  4999  0798  3004               	movlw	4
  5000  0799  0097               	movwf	23	;volatile
  5001                           
  5002                           ;i2c2.c: 218: PIR3bits.SSP2IF = 0;
  5003  079A  002E               	movlb	14	; select bank14
  5004  079B  110F               	bcf	15,2	;volatile
  5005                           
  5006                           ;i2c2.c: 220: PIE3bits.SSP2IE = 1;
  5007  079C  1519               	bsf	25,2	;volatile
  5008  079D  0008               	return
  5009  079E                     __end_of_I2C2_Initialize:	
  5010                           
  5011                           	psect	text5
  5012  0FDD                     __ptext5:	
  5013 ;; *************** function _EUSART_Initialize *****************
  5014 ;; Defined at:
  5015 ;;		line 55 in file "mcc_generated_files/eusart.c"
  5016 ;; Parameters:    Size  Location     Type
  5017 ;;		None
  5018 ;; Auto vars:     Size  Location     Type
  5019 ;;		None
  5020 ;; Return value:  Size  Location     Type
  5021 ;;                  1    wreg      void 
  5022 ;; Registers used:
  5023 ;;		wreg, status,2
  5024 ;; Tracked objects:
  5025 ;;		On entry : 0/0
  5026 ;;		On exit  : 0/0
  5027 ;;		Unchanged: 0/0
  5028 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
  5029 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  5030 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  5031 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  5032 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  5033 ;;Total ram usage:        0 bytes
  5034 ;; Hardware stack levels used:    1
  5035 ;; Hardware stack levels required when called:    3
  5036 ;; This function calls:
  5037 ;;		Nothing
  5038 ;; This function is called by:
  5039 ;;		_SYSTEM_Initialize
  5040 ;; This function uses a non-reentrant model
  5041 ;;
  5042                           
  5043                           
  5044                           ;psect for function _EUSART_Initialize
  5045  0FDD                     _EUSART_Initialize:	
  5046                           
  5047                           ;eusart.c: 60: BAUD1CON = 0x08;
  5048                           
  5049                           ;incstack = 0
  5050                           ; Regs used in _EUSART_Initialize: [wreg+status,2]
  5051  0FDD  3008               	movlw	8
  5052  0FDE  0022               	movlb	2	; select bank2
  5053  0FDF  009F               	movwf	31	;volatile
  5054                           
  5055                           ;eusart.c: 63: RC1STA = 0x80;
  5056  0FE0  3080               	movlw	128
  5057  0FE1  009D               	movwf	29	;volatile
  5058                           
  5059                           ;eusart.c: 66: TX1STA = 0x24;
  5060  0FE2  3024               	movlw	36
  5061  0FE3  009E               	movwf	30	;volatile
  5062                           
  5063                           ;eusart.c: 69: SP1BRGL = 0x19;
  5064  0FE4  3019               	movlw	25
  5065  0FE5  009B               	movwf	27	;volatile
  5066                           
  5067                           ;eusart.c: 72: SP1BRGH = 0x00;
  5068  0FE6  019C               	clrf	28	;volatile
  5069  0FE7  0008               	return
  5070  0FE8                     __end_of_EUSART_Initialize:	
  5071                           
  5072                           	psect	text6
  5073  05B3                     __ptext6:	
  5074 ;; *************** function _EMC1001_PrintTemp *****************
  5075 ;; Defined at:
  5076 ;;		line 67 in file "EMC1001.c"
  5077 ;; Parameters:    Size  Location     Type
  5078 ;;		None
  5079 ;; Auto vars:     Size  Location     Type
  5080 ;;  templo          1   38[BANK0 ] unsigned char 
  5081 ;;  temp            1   37[BANK0 ] char 
  5082 ;; Return value:  Size  Location     Type
  5083 ;;                  1    wreg      void 
  5084 ;; Registers used:
  5085 ;;		wreg, fsr0l, fsr0h, fsr1l, fsr1h, status,2, status,0, pclath, cstack
  5086 ;; Tracked objects:
  5087 ;;		On entry : 0/0
  5088 ;;		On exit  : 0/0
  5089 ;;		Unchanged: 0/0
  5090 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
  5091 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  5092 ;;      Locals:         0       2       0       0       0       0       0       0       0       0       0       0       
      +0       0
  5093 ;;      Temps:          0       2       0       0       0       0       0       0       0       0       0       0       
      +0       0
  5094 ;;      Totals:         0       4       0       0       0       0       0       0       0       0       0       0       
      +0       0
  5095 ;;Total ram usage:        4 bytes
  5096 ;; Hardware stack levels used:    1
  5097 ;; Hardware stack levels required when called:    6
  5098 ;; This function calls:
  5099 ;;		_EMC1001_Read
  5100 ;;		___wmul
  5101 ;;		_printf
  5102 ;; This function is called by:
  5103 ;;		_main
  5104 ;; This function uses a non-reentrant model
  5105 ;;
  5106                           
  5107                           
  5108                           ;psect for function _EMC1001_PrintTemp
  5109  05B3                     _EMC1001_PrintTemp:	
  5110                           
  5111                           ;EMC1001.c: 69: int8_t temp;
  5112                           ;EMC1001.c: 70: uint8_t templo;
  5113                           ;EMC1001.c: 72: if (EMC1001_Read(0x00, (uint8_t*)&temp)) {
  5114                           
  5115                           ;incstack = 0
  5116                           ; Regs used in _EMC1001_PrintTemp: [wreg-fsr1h+status,2+status,0+pclath+cstack]
  5117  05B3  3045               	movlw	(low (EMC1001_PrintTemp@temp| 0))& (0+255)
  5118  05B4  0020               	movlb	0	; select bank0
  5119  05B5  00C3               	movwf	??_EMC1001_PrintTemp
  5120  05B6  0843               	movf	??_EMC1001_PrintTemp,w
  5121  05B7  00A7               	movwf	EMC1001_Read@pData
  5122  05B8  3000               	movlw	0
  5123  05B9  3186  2684  3185   	fcall	_EMC1001_Read
  5124  05BC  3A00               	xorlw	0
  5125  05BD  1903               	skipnz
  5126  05BE  0008               	return
  5127                           
  5128                           ;EMC1001.c: 73: EMC1001_Read(0x02, &templo);
  5129  05BF  3046               	movlw	(low (EMC1001_PrintTemp@templo| 0))& (0+255)
  5130  05C0  0020               	movlb	0	; select bank0
  5131  05C1  00C3               	movwf	??_EMC1001_PrintTemp
  5132  05C2  0843               	movf	??_EMC1001_PrintTemp,w
  5133  05C3  00A7               	movwf	EMC1001_Read@pData
  5134  05C4  3002               	movlw	2
  5135  05C5  3186  2684  3185   	fcall	_EMC1001_Read
  5136                           
  5137                           ;EMC1001.c: 74: templo = templo >> 6;
  5138  05C8  0020               	movlb	0	; select bank0
  5139  05C9  0846               	movf	EMC1001_PrintTemp@templo,w
  5140  05CA  00C3               	movwf	??_EMC1001_PrintTemp
  5141  05CB  3006               	movlw	6
  5142  05CC                     u2285:	
  5143  05CC  36C3               	lsrf	??_EMC1001_PrintTemp,f
  5144  05CD  0B89               	decfsz	9,f
  5145  05CE  2DCC               	goto	u2285
  5146  05CF  0843               	movf	??_EMC1001_PrintTemp,w
  5147  05D0  00C4               	movwf	??_EMC1001_PrintTemp+1
  5148  05D1  0844               	movf	??_EMC1001_PrintTemp+1,w
  5149  05D2  00C6               	movwf	EMC1001_PrintTemp@templo
  5150                           
  5151                           ;EMC1001.c: 75: if (temp < 0) templo = 3-templo;
  5152  05D3  1FC5               	btfss	EMC1001_PrintTemp@temp,7
  5153  05D4  2DDB               	goto	l2391
  5154  05D5  0346               	decf	EMC1001_PrintTemp@templo,w
  5155  05D6  3AFF               	xorlw	255
  5156  05D7  3E03               	addlw	3
  5157  05D8  00C3               	movwf	??_EMC1001_PrintTemp
  5158  05D9  0843               	movf	??_EMC1001_PrintTemp,w
  5159  05DA  00C6               	movwf	EMC1001_PrintTemp@templo
  5160  05DB                     l2391:	
  5161                           
  5162                           ;EMC1001.c: 76: printf("Current Temperature:\t%d.%d C\n", temp, templo*25);
  5163  05DB  3062               	movlw	low (STR_15| (0+32768))
  5164  05DC  00AE               	movwf	printf@f
  5165  05DD  3083               	movlw	high (STR_15| (0+32768))
  5166  05DE  00AF               	movwf	printf@f+1
  5167  05DF  0845               	movf	EMC1001_PrintTemp@temp,w
  5168  05E0  00B0               	movwf	?_printf+2
  5169  05E1  01B1               	clrf	?_printf+3
  5170  05E2  1BB0               	btfsc	?_printf+2,7
  5171  05E3  03B1               	decf	?_printf+3,f
  5172  05E4  0846               	movf	EMC1001_PrintTemp@templo,w
  5173  05E5  00C3               	movwf	??_EMC1001_PrintTemp
  5174  05E6  01C4               	clrf	??_EMC1001_PrintTemp+1
  5175  05E7  0843               	movf	??_EMC1001_PrintTemp,w
  5176  05E8  00A0               	movwf	___wmul@multiplier
  5177  05E9  0844               	movf	??_EMC1001_PrintTemp+1,w
  5178  05EA  00A1               	movwf	___wmul@multiplier+1
  5179  05EB  3019               	movlw	25
  5180  05EC  00A2               	movwf	___wmul@multiplicand
  5181  05ED  3000               	movlw	0
  5182  05EE  00A3               	movwf	___wmul@multiplicand+1
  5183  05EF  3187  276A  3185   	fcall	___wmul
  5184  05F2  0020               	movlb	0	; select bank0
  5185  05F3  0821               	movf	?___wmul+1,w
  5186  05F4  00B3               	movwf	?_printf+5
  5187  05F5  0820               	movf	?___wmul,w
  5188  05F6  00B2               	movwf	?_printf+4
  5189  05F7  3180  2033         	fcall	_printf
  5190  05F9  0008               	return
  5191  05FA                     __end_of_EMC1001_PrintTemp:	
  5192                           
  5193                           	psect	text7
  5194  0194                     __ptext7:	
  5195 ;; *************** function _EMC1001_PrintInfo *****************
  5196 ;; Defined at:
  5197 ;;		line 27 in file "EMC1001.c"
  5198 ;; Parameters:    Size  Location     Type
  5199 ;;		None
  5200 ;; Auto vars:     Size  Location     Type
  5201 ;;  data            1   41[BANK0 ] unsigned char 
  5202 ;;  templo          1   40[BANK0 ] unsigned char 
  5203 ;;  temp            1   39[BANK0 ] char 
  5204 ;; Return value:  Size  Location     Type
  5205 ;;                  1    wreg      void 
  5206 ;; Registers used:
  5207 ;;		wreg, fsr0l, fsr0h, fsr1l, fsr1h, status,2, status,0, pclath, cstack
  5208 ;; Tracked objects:
  5209 ;;		On entry : 0/0
  5210 ;;		On exit  : 0/0
  5211 ;;		Unchanged: 0/0
  5212 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
  5213 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  5214 ;;      Locals:         0       5       0       0       0       0       0       0       0       0       0       0       
      +0       0
  5215 ;;      Temps:          0       2       0       0       0       0       0       0       0       0       0       0       
      +0       0
  5216 ;;      Totals:         0       7       0       0       0       0       0       0       0       0       0       0       
      +0       0
  5217 ;;Total ram usage:        7 bytes
  5218 ;; Hardware stack levels used:    1
  5219 ;; Hardware stack levels required when called:    7
  5220 ;; This function calls:
  5221 ;;		_EMC1001_Read
  5222 ;;		___wmul
  5223 ;;		_printf
  5224 ;;		_puts
  5225 ;; This function is called by:
  5226 ;;		_main
  5227 ;; This function uses a non-reentrant model
  5228 ;;
  5229                           
  5230                           
  5231                           ;psect for function _EMC1001_PrintInfo
  5232  0194                     _EMC1001_PrintInfo:	
  5233                           
  5234                           ;EMC1001.c: 29: uint8_t data;
  5235                           ;EMC1001.c: 30: int8_t temp;
  5236                           ;EMC1001.c: 31: uint8_t templo;
  5237                           ;EMC1001.c: 33: puts("Microchip EMC1001 Temperature Sensor Demo\n");
  5238                           
  5239                           ;incstack = 0
  5240                           ; Regs used in _EMC1001_PrintInfo: [wreg-fsr1h+status,2+status,0+pclath+cstack]
  5241  0194  30F6               	movlw	low (STR_2| (0+32768))
  5242  0195  0020               	movlb	0	; select bank0
  5243  0196  00A5               	movwf	puts@s
  5244  0197  3082               	movlw	high (STR_2| (0+32768))
  5245  0198  00A6               	movwf	puts@s+1
  5246  0199  318F  27E8  3181   	fcall	_puts
  5247                           
  5248                           ;EMC1001.c: 35: if (EMC1001_Read(0xfd,&data)) printf("Product ID:\t\tEMC1001%s\n", data 
      +                          ? "-1" : "");
  5249  019C  3049               	movlw	(low (EMC1001_PrintInfo@data| 0))& (0+255)
  5250  019D  0020               	movlb	0	; select bank0
  5251  019E  00C3               	movwf	??_EMC1001_PrintInfo
  5252  019F  0843               	movf	??_EMC1001_PrintInfo,w
  5253  01A0  00A7               	movwf	EMC1001_Read@pData
  5254  01A1  30FD               	movlw	253
  5255  01A2  3186  2684  3181   	fcall	_EMC1001_Read
  5256  01A5  3A00               	xorlw	0
  5257  01A6  1903               	skipnz
  5258  01A7  29BF               	goto	l2333
  5259  01A8  0020               	movlb	0	; select bank0
  5260  01A9  0849               	movf	EMC1001_PrintInfo@data,w
  5261  01AA  1D03               	btfss	3,2
  5262  01AB  29B0               	goto	l2329
  5263  01AC  30DE               	movlw	low ((STR_12+21)| (0+32768))
  5264  01AD  00C5               	movwf	_EMC1001_PrintInfo$682
  5265  01AE  3083               	movlw	high ((STR_12+21)| (0+32768))
  5266  01AF  29B3               	goto	L1
  5267  01B0                     l2329:	
  5268  01B0  302D               	movlw	low (STR_4| (0+32768))
  5269  01B1  00C5               	movwf	_EMC1001_PrintInfo$682
  5270  01B2  3084               	movlw	high (STR_4| (0+32768))
  5271  01B3                     L1:	
  5272  01B3  00C6               	movwf	_EMC1001_PrintInfo$682+1
  5273  01B4  309A               	movlw	low (STR_3| (0+32768))
  5274  01B5  00AE               	movwf	printf@f
  5275  01B6  3083               	movlw	high (STR_3| (0+32768))
  5276  01B7  00AF               	movwf	printf@f+1
  5277  01B8  0846               	movf	_EMC1001_PrintInfo$682+1,w
  5278  01B9  00B1               	movwf	(low ((?_printf| 0+2))+1)
  5279  01BA  0845               	movf	_EMC1001_PrintInfo$682,w
  5280  01BB  00B0               	movwf	low ((?_printf| 0+2))
  5281  01BC  3180  2033  3181   	fcall	_printf
  5282  01BF                     l2333:	
  5283                           
  5284                           ;EMC1001.c: 36: if (EMC1001_Read(0xfe,&data)) printf("Manufacturer ID:\t0x%X\n", data);
  5285  01BF  3049               	movlw	(low (EMC1001_PrintInfo@data| 0))& (0+255)
  5286  01C0  0020               	movlb	0	; select bank0
  5287  01C1  00C3               	movwf	??_EMC1001_PrintInfo
  5288  01C2  0843               	movf	??_EMC1001_PrintInfo,w
  5289  01C3  00A7               	movwf	EMC1001_Read@pData
  5290  01C4  30FE               	movlw	254
  5291  01C5  3186  2684  3181   	fcall	_EMC1001_Read
  5292  01C8  3A00               	xorlw	0
  5293  01C9  1903               	skipnz
  5294  01CA  29DA               	goto	l2337
  5295  01CB  30B2               	movlw	low (STR_6| (0+32768))
  5296  01CC  0020               	movlb	0	; select bank0
  5297  01CD  00AE               	movwf	printf@f
  5298  01CE  3083               	movlw	high (STR_6| (0+32768))
  5299  01CF  00AF               	movwf	printf@f+1
  5300  01D0  0849               	movf	EMC1001_PrintInfo@data,w
  5301  01D1  00C3               	movwf	??_EMC1001_PrintInfo
  5302  01D2  01C4               	clrf	??_EMC1001_PrintInfo+1
  5303  01D3  0843               	movf	??_EMC1001_PrintInfo,w
  5304  01D4  00B0               	movwf	?_printf+2
  5305  01D5  0844               	movf	??_EMC1001_PrintInfo+1,w
  5306  01D6  00B1               	movwf	?_printf+3
  5307  01D7  3180  2033  3181   	fcall	_printf
  5308  01DA                     l2337:	
  5309                           
  5310                           ;EMC1001.c: 37: if (EMC1001_Read(0xff,&data)) printf("Revision :\t\t%d\n", data);
  5311  01DA  3049               	movlw	(low (EMC1001_PrintInfo@data| 0))& (0+255)
  5312  01DB  0020               	movlb	0	; select bank0
  5313  01DC  00C3               	movwf	??_EMC1001_PrintInfo
  5314  01DD  0843               	movf	??_EMC1001_PrintInfo,w
  5315  01DE  00A7               	movwf	EMC1001_Read@pData
  5316  01DF  30FF               	movlw	255
  5317  01E0  3186  2684  3181   	fcall	_EMC1001_Read
  5318  01E3  3A00               	xorlw	0
  5319  01E4  1903               	skipnz
  5320  01E5  29F5               	goto	l2341
  5321  01E6  3016               	movlw	low (STR_7| (0+32768))
  5322  01E7  0020               	movlb	0	; select bank0
  5323  01E8  00AE               	movwf	printf@f
  5324  01E9  3084               	movlw	high (STR_7| (0+32768))
  5325  01EA  00AF               	movwf	printf@f+1
  5326  01EB  0849               	movf	EMC1001_PrintInfo@data,w
  5327  01EC  00C3               	movwf	??_EMC1001_PrintInfo
  5328  01ED  01C4               	clrf	??_EMC1001_PrintInfo+1
  5329  01EE  0843               	movf	??_EMC1001_PrintInfo,w
  5330  01EF  00B0               	movwf	?_printf+2
  5331  01F0  0844               	movf	??_EMC1001_PrintInfo+1,w
  5332  01F1  00B1               	movwf	?_printf+3
  5333  01F2  3180  2033  3181   	fcall	_printf
  5334  01F5                     l2341:	
  5335                           
  5336                           ;EMC1001.c: 39: puts("\n");
  5337  01F5  30DD               	movlw	low ((STR_12+20)| (0+32768))
  5338  01F6  0020               	movlb	0	; select bank0
  5339  01F7  00A5               	movwf	puts@s
  5340  01F8  3083               	movlw	high ((STR_12+20)| (0+32768))
  5341  01F9  00A6               	movwf	puts@s+1
  5342  01FA  318F  27E8  3181   	fcall	_puts
  5343                           
  5344                           ;EMC1001.c: 41: if (EMC1001_Read(0x04, &data)) printf("Conversion rate:\t%x\n", data);
  5345  01FD  3049               	movlw	(low (EMC1001_PrintInfo@data| 0))& (0+255)
  5346  01FE  0020               	movlb	0	; select bank0
  5347  01FF  00C3               	movwf	??_EMC1001_PrintInfo
  5348  0200  0843               	movf	??_EMC1001_PrintInfo,w
  5349  0201  00A7               	movwf	EMC1001_Read@pData
  5350  0202  3004               	movlw	4
  5351  0203  3186  2684  3181   	fcall	_EMC1001_Read
  5352  0206  3A00               	xorlw	0
  5353  0207  1903               	skipnz
  5354  0208  2A18               	goto	l2347
  5355  0209  30DF               	movlw	low (STR_9| (0+32768))
  5356  020A  0020               	movlb	0	; select bank0
  5357  020B  00AE               	movwf	printf@f
  5358  020C  3083               	movlw	high (STR_9| (0+32768))
  5359  020D  00AF               	movwf	printf@f+1
  5360  020E  0849               	movf	EMC1001_PrintInfo@data,w
  5361  020F  00C3               	movwf	??_EMC1001_PrintInfo
  5362  0210  01C4               	clrf	??_EMC1001_PrintInfo+1
  5363  0211  0843               	movf	??_EMC1001_PrintInfo,w
  5364  0212  00B0               	movwf	?_printf+2
  5365  0213  0844               	movf	??_EMC1001_PrintInfo+1,w
  5366  0214  00B1               	movwf	?_printf+3
  5367  0215  3180  2033  3181   	fcall	_printf
  5368  0218                     l2347:	
  5369                           
  5370                           ;EMC1001.c: 43: if (EMC1001_Read(0x05, (uint8_t*)&temp)) {
  5371  0218  3047               	movlw	(low (EMC1001_PrintInfo@temp| 0))& (0+255)
  5372  0219  0020               	movlb	0	; select bank0
  5373  021A  00C3               	movwf	??_EMC1001_PrintInfo
  5374  021B  0843               	movf	??_EMC1001_PrintInfo,w
  5375  021C  00A7               	movwf	EMC1001_Read@pData
  5376  021D  3005               	movlw	5
  5377  021E  3186  2684  3181   	fcall	_EMC1001_Read
  5378  0221  3A00               	xorlw	0
  5379  0222  1903               	skipnz
  5380  0223  2A5F               	goto	l2359
  5381                           
  5382                           ;EMC1001.c: 44: EMC1001_Read(0x06, &templo);
  5383  0224  3048               	movlw	(low (EMC1001_PrintInfo@templo| 0))& (0+255)
  5384  0225  0020               	movlb	0	; select bank0
  5385  0226  00C3               	movwf	??_EMC1001_PrintInfo
  5386  0227  0843               	movf	??_EMC1001_PrintInfo,w
  5387  0228  00A7               	movwf	EMC1001_Read@pData
  5388  0229  3006               	movlw	6
  5389  022A  3186  2684  3181   	fcall	_EMC1001_Read
  5390                           
  5391                           ;EMC1001.c: 45: templo = templo >> 6;
  5392  022D  0020               	movlb	0	; select bank0
  5393  022E  0848               	movf	EMC1001_PrintInfo@templo,w
  5394  022F  00C3               	movwf	??_EMC1001_PrintInfo
  5395  0230  3006               	movlw	6
  5396  0231                     u2205:	
  5397  0231  36C3               	lsrf	??_EMC1001_PrintInfo,f
  5398  0232  0B89               	decfsz	9,f
  5399  0233  2A31               	goto	u2205
  5400  0234  0843               	movf	??_EMC1001_PrintInfo,w
  5401  0235  00C4               	movwf	??_EMC1001_PrintInfo+1
  5402  0236  0844               	movf	??_EMC1001_PrintInfo+1,w
  5403  0237  00C8               	movwf	EMC1001_PrintInfo@templo
  5404                           
  5405                           ;EMC1001.c: 46: if (temp < 0) templo = 3-templo;
  5406  0238  1FC7               	btfss	EMC1001_PrintInfo@temp,7
  5407  0239  2A40               	goto	l2357
  5408  023A  0348               	decf	EMC1001_PrintInfo@templo,w
  5409  023B  3AFF               	xorlw	255
  5410  023C  3E03               	addlw	3
  5411  023D  00C3               	movwf	??_EMC1001_PrintInfo
  5412  023E  0843               	movf	??_EMC1001_PrintInfo,w
  5413  023F  00C8               	movwf	EMC1001_PrintInfo@templo
  5414  0240                     l2357:	
  5415                           
  5416                           ;EMC1001.c: 47: printf("Temperature high limit:\t%d.%d C\n", temp, templo*25);
  5417  0240  3021               	movlw	low (STR_10| (0+32768))
  5418  0241  00AE               	movwf	printf@f
  5419  0242  3083               	movlw	high (STR_10| (0+32768))
  5420  0243  00AF               	movwf	printf@f+1
  5421  0244  0847               	movf	EMC1001_PrintInfo@temp,w
  5422  0245  00B0               	movwf	?_printf+2
  5423  0246  01B1               	clrf	?_printf+3
  5424  0247  1BB0               	btfsc	?_printf+2,7
  5425  0248  03B1               	decf	?_printf+3,f
  5426  0249  0848               	movf	EMC1001_PrintInfo@templo,w
  5427  024A  00C3               	movwf	??_EMC1001_PrintInfo
  5428  024B  01C4               	clrf	??_EMC1001_PrintInfo+1
  5429  024C  0843               	movf	??_EMC1001_PrintInfo,w
  5430  024D  00A0               	movwf	___wmul@multiplier
  5431  024E  0844               	movf	??_EMC1001_PrintInfo+1,w
  5432  024F  00A1               	movwf	___wmul@multiplier+1
  5433  0250  3019               	movlw	25
  5434  0251  00A2               	movwf	___wmul@multiplicand
  5435  0252  3000               	movlw	0
  5436  0253  00A3               	movwf	___wmul@multiplicand+1
  5437  0254  3187  276A  3181   	fcall	___wmul
  5438  0257  0020               	movlb	0	; select bank0
  5439  0258  0821               	movf	?___wmul+1,w
  5440  0259  00B3               	movwf	?_printf+5
  5441  025A  0820               	movf	?___wmul,w
  5442  025B  00B2               	movwf	?_printf+4
  5443  025C  3180  2033  3181   	fcall	_printf
  5444  025F                     l2359:	
  5445                           
  5446                           ;EMC1001.c: 48: }
  5447                           ;EMC1001.c: 50: if (EMC1001_Read(0x07, (uint8_t*)&temp)) {
  5448  025F  3047               	movlw	(low (EMC1001_PrintInfo@temp| 0))& (0+255)
  5449  0260  0020               	movlb	0	; select bank0
  5450  0261  00C3               	movwf	??_EMC1001_PrintInfo
  5451  0262  0843               	movf	??_EMC1001_PrintInfo,w
  5452  0263  00A7               	movwf	EMC1001_Read@pData
  5453  0264  3007               	movlw	7
  5454  0265  3186  2684  3181   	fcall	_EMC1001_Read
  5455  0268  3A00               	xorlw	0
  5456  0269  1903               	skipnz
  5457  026A  2AA6               	goto	l2371
  5458                           
  5459                           ;EMC1001.c: 51: EMC1001_Read(0x08, &templo);
  5460  026B  3048               	movlw	(low (EMC1001_PrintInfo@templo| 0))& (0+255)
  5461  026C  0020               	movlb	0	; select bank0
  5462  026D  00C3               	movwf	??_EMC1001_PrintInfo
  5463  026E  0843               	movf	??_EMC1001_PrintInfo,w
  5464  026F  00A7               	movwf	EMC1001_Read@pData
  5465  0270  3008               	movlw	8
  5466  0271  3186  2684  3181   	fcall	_EMC1001_Read
  5467                           
  5468                           ;EMC1001.c: 52: templo = templo >> 6;
  5469  0274  0020               	movlb	0	; select bank0
  5470  0275  0848               	movf	EMC1001_PrintInfo@templo,w
  5471  0276  00C3               	movwf	??_EMC1001_PrintInfo
  5472  0277  3006               	movlw	6
  5473  0278                     u2235:	
  5474  0278  36C3               	lsrf	??_EMC1001_PrintInfo,f
  5475  0279  0B89               	decfsz	9,f
  5476  027A  2A78               	goto	u2235
  5477  027B  0843               	movf	??_EMC1001_PrintInfo,w
  5478  027C  00C4               	movwf	??_EMC1001_PrintInfo+1
  5479  027D  0844               	movf	??_EMC1001_PrintInfo+1,w
  5480  027E  00C8               	movwf	EMC1001_PrintInfo@templo
  5481                           
  5482                           ;EMC1001.c: 53: if (temp < 0) templo = 3-templo;
  5483  027F  1FC7               	btfss	EMC1001_PrintInfo@temp,7
  5484  0280  2A87               	goto	l2369
  5485  0281  0348               	decf	EMC1001_PrintInfo@templo,w
  5486  0282  3AFF               	xorlw	255
  5487  0283  3E03               	addlw	3
  5488  0284  00C3               	movwf	??_EMC1001_PrintInfo
  5489  0285  0843               	movf	??_EMC1001_PrintInfo,w
  5490  0286  00C8               	movwf	EMC1001_PrintInfo@templo
  5491  0287                     l2369:	
  5492                           
  5493                           ;EMC1001.c: 54: printf("Temperature low limit:\t%d.%d C\n", temp, templo*25);
  5494  0287  3042               	movlw	low (STR_11| (0+32768))
  5495  0288  00AE               	movwf	printf@f
  5496  0289  3083               	movlw	high (STR_11| (0+32768))
  5497  028A  00AF               	movwf	printf@f+1
  5498  028B  0847               	movf	EMC1001_PrintInfo@temp,w
  5499  028C  00B0               	movwf	?_printf+2
  5500  028D  01B1               	clrf	?_printf+3
  5501  028E  1BB0               	btfsc	?_printf+2,7
  5502  028F  03B1               	decf	?_printf+3,f
  5503  0290  0848               	movf	EMC1001_PrintInfo@templo,w
  5504  0291  00C3               	movwf	??_EMC1001_PrintInfo
  5505  0292  01C4               	clrf	??_EMC1001_PrintInfo+1
  5506  0293  0843               	movf	??_EMC1001_PrintInfo,w
  5507  0294  00A0               	movwf	___wmul@multiplier
  5508  0295  0844               	movf	??_EMC1001_PrintInfo+1,w
  5509  0296  00A1               	movwf	___wmul@multiplier+1
  5510  0297  3019               	movlw	25
  5511  0298  00A2               	movwf	___wmul@multiplicand
  5512  0299  3000               	movlw	0
  5513  029A  00A3               	movwf	___wmul@multiplicand+1
  5514  029B  3187  276A  3181   	fcall	___wmul
  5515  029E  0020               	movlb	0	; select bank0
  5516  029F  0821               	movf	?___wmul+1,w
  5517  02A0  00B3               	movwf	?_printf+5
  5518  02A1  0820               	movf	?___wmul,w
  5519  02A2  00B2               	movwf	?_printf+4
  5520  02A3  3180  2033  3181   	fcall	_printf
  5521  02A6                     l2371:	
  5522                           
  5523                           ;EMC1001.c: 55: }
  5524                           ;EMC1001.c: 58: if (EMC1001_Read(0x20, &data)) printf("Thermal limit:\t\t%d C\n", data);
  5525  02A6  3049               	movlw	(low (EMC1001_PrintInfo@data| 0))& (0+255)
  5526  02A7  0020               	movlb	0	; select bank0
  5527  02A8  00C3               	movwf	??_EMC1001_PrintInfo
  5528  02A9  0843               	movf	??_EMC1001_PrintInfo,w
  5529  02AA  00A7               	movwf	EMC1001_Read@pData
  5530  02AB  3020               	movlw	32
  5531  02AC  3186  2684  3181   	fcall	_EMC1001_Read
  5532  02AF  3A00               	xorlw	0
  5533  02B0  1903               	skipnz
  5534  02B1  2AC1               	goto	l2375
  5535  02B2  30C9               	movlw	low (STR_12| (0+32768))
  5536  02B3  0020               	movlb	0	; select bank0
  5537  02B4  00AE               	movwf	printf@f
  5538  02B5  3083               	movlw	high (STR_12| (0+32768))
  5539  02B6  00AF               	movwf	printf@f+1
  5540  02B7  0849               	movf	EMC1001_PrintInfo@data,w
  5541  02B8  00C3               	movwf	??_EMC1001_PrintInfo
  5542  02B9  01C4               	clrf	??_EMC1001_PrintInfo+1
  5543  02BA  0843               	movf	??_EMC1001_PrintInfo,w
  5544  02BB  00B0               	movwf	?_printf+2
  5545  02BC  0844               	movf	??_EMC1001_PrintInfo+1,w
  5546  02BD  00B1               	movwf	?_printf+3
  5547  02BE  3180  2033  3181   	fcall	_printf
  5548  02C1                     l2375:	
  5549                           
  5550                           ;EMC1001.c: 59: if (EMC1001_Read(0x21, &data)) printf("Thermal hysteresis:\t%d C\n", dat
      +                          a);
  5551  02C1  3049               	movlw	(low (EMC1001_PrintInfo@data| 0))& (0+255)
  5552  02C2  0020               	movlb	0	; select bank0
  5553  02C3  00C3               	movwf	??_EMC1001_PrintInfo
  5554  02C4  0843               	movf	??_EMC1001_PrintInfo,w
  5555  02C5  00A7               	movwf	EMC1001_Read@pData
  5556  02C6  3021               	movlw	33
  5557  02C7  3186  2684  3181   	fcall	_EMC1001_Read
  5558  02CA  3A00               	xorlw	0
  5559  02CB  1903               	skipnz
  5560  02CC  2ADC               	goto	l2379
  5561  02CD  3080               	movlw	low (STR_13| (0+32768))
  5562  02CE  0020               	movlb	0	; select bank0
  5563  02CF  00AE               	movwf	printf@f
  5564  02D0  3083               	movlw	high (STR_13| (0+32768))
  5565  02D1  00AF               	movwf	printf@f+1
  5566  02D2  0849               	movf	EMC1001_PrintInfo@data,w
  5567  02D3  00C3               	movwf	??_EMC1001_PrintInfo
  5568  02D4  01C4               	clrf	??_EMC1001_PrintInfo+1
  5569  02D5  0843               	movf	??_EMC1001_PrintInfo,w
  5570  02D6  00B0               	movwf	?_printf+2
  5571  02D7  0844               	movf	??_EMC1001_PrintInfo+1,w
  5572  02D8  00B1               	movwf	?_printf+3
  5573  02D9  3180  2033  3181   	fcall	_printf
  5574  02DC                     l2379:	
  5575                           
  5576                           ;EMC1001.c: 61: puts("\n");
  5577  02DC  30DD               	movlw	low ((STR_12+20)| (0+32768))
  5578  02DD  0020               	movlb	0	; select bank0
  5579  02DE  00A5               	movwf	puts@s
  5580  02DF  3083               	movlw	high ((STR_12+20)| (0+32768))
  5581  02E0  00A6               	movwf	puts@s+1
  5582  02E1  318F  27E8         	fcall	_puts
  5583  02E3  0008               	return
  5584  02E4                     __end_of_EMC1001_PrintInfo:	
  5585                           
  5586                           	psect	text8
  5587  0FE8                     __ptext8:	
  5588 ;; *************** function _puts *****************
  5589 ;; Defined at:
  5590 ;;		line 8 in file "/opt/microchip/xc8/v1.41/sources/common/puts.c"
  5591 ;; Parameters:    Size  Location     Type
  5592 ;;  s               2    5[BANK0 ] PTR const unsigned char 
  5593 ;;		 -> STR_14(2), STR_8(2), STR_2(43), 
  5594 ;; Auto vars:     Size  Location     Type
  5595 ;;		None
  5596 ;; Return value:  Size  Location     Type
  5597 ;;                  2    5[BANK0 ] int 
  5598 ;; Registers used:
  5599 ;;		wreg, fsr0l, fsr0h, status,2, status,0, pclath, cstack
  5600 ;; Tracked objects:
  5601 ;;		On entry : 0/0
  5602 ;;		On exit  : 0/0
  5603 ;;		Unchanged: 0/0
  5604 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
  5605 ;;      Params:         0       2       0       0       0       0       0       0       0       0       0       0       
      +0       0
  5606 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  5607 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  5608 ;;      Totals:         0       2       0       0       0       0       0       0       0       0       0       0       
      +0       0
  5609 ;;Total ram usage:        2 bytes
  5610 ;; Hardware stack levels used:    1
  5611 ;; Hardware stack levels required when called:    6
  5612 ;; This function calls:
  5613 ;;		_cputs
  5614 ;;		_putch
  5615 ;; This function is called by:
  5616 ;;		_EMC1001_PrintInfo
  5617 ;; This function uses a non-reentrant model
  5618 ;;
  5619                           
  5620                           
  5621                           ;psect for function _puts
  5622  0FE8                     _puts:	
  5623                           
  5624                           ;incstack = 0
  5625                           ; Regs used in _puts: [wreg-fsr0h+status,2+status,0+pclath+cstack]
  5626  0FE8  0020               	movlb	0	; select bank0
  5627  0FE9  0826               	movf	puts@s+1,w
  5628  0FEA  00A3               	movwf	cputs@s+1
  5629  0FEB  0825               	movf	puts@s,w
  5630  0FEC  00A2               	movwf	cputs@s
  5631  0FED  3187  27CE  318F   	fcall	_cputs
  5632  0FF0  300A               	movlw	10
  5633  0FF1  318F  27C7         	fcall	_putch
  5634  0FF3  0008               	return
  5635  0FF4                     __end_of_puts:	
  5636                           
  5637                           	psect	text9
  5638  07CE                     __ptext9:	
  5639 ;; *************** function _cputs *****************
  5640 ;; Defined at:
  5641 ;;		line 4 in file "/opt/microchip/xc8/v1.41/sources/common/cputs.c"
  5642 ;; Parameters:    Size  Location     Type
  5643 ;;  s               2    2[BANK0 ] PTR const unsigned char 
  5644 ;;		 -> STR_14(2), STR_8(2), STR_2(43), 
  5645 ;; Auto vars:     Size  Location     Type
  5646 ;;		None
  5647 ;; Return value:  Size  Location     Type
  5648 ;;                  1    wreg      void 
  5649 ;; Registers used:
  5650 ;;		wreg, fsr0l, fsr0h, status,2, status,0, pclath, cstack
  5651 ;; Tracked objects:
  5652 ;;		On entry : 0/0
  5653 ;;		On exit  : 0/0
  5654 ;;		Unchanged: 0/0
  5655 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
  5656 ;;      Params:         0       2       0       0       0       0       0       0       0       0       0       0       
      +0       0
  5657 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  5658 ;;      Temps:          0       1       0       0       0       0       0       0       0       0       0       0       
      +0       0
  5659 ;;      Totals:         0       3       0       0       0       0       0       0       0       0       0       0       
      +0       0
  5660 ;;Total ram usage:        3 bytes
  5661 ;; Hardware stack levels used:    1
  5662 ;; Hardware stack levels required when called:    5
  5663 ;; This function calls:
  5664 ;;		_putch
  5665 ;; This function is called by:
  5666 ;;		_puts
  5667 ;; This function uses a non-reentrant model
  5668 ;;
  5669                           
  5670                           
  5671                           ;psect for function _cputs
  5672  07CE                     _cputs:	
  5673  07CE                     l2137:	
  5674                           ;incstack = 0
  5675                           ; Regs used in _cputs: [wreg-fsr0h+status,2+status,0+pclath+cstack]
  5676                           
  5677  07CE  0020               	movlb	0	; select bank0
  5678  07CF  0822               	movf	cputs@s,w
  5679  07D0  0084               	movwf	4
  5680  07D1  0823               	movf	cputs@s+1,w
  5681  07D2  0085               	movwf	5
  5682  07D3  0012               	moviw fsr0++
  5683  07D4  1903               	btfsc	3,2
  5684  07D5  0008               	return
  5685  07D6  0020               	movlb	0	; select bank0
  5686  07D7  0822               	movf	cputs@s,w
  5687  07D8  0084               	movwf	4
  5688  07D9  0823               	movf	cputs@s+1,w
  5689  07DA  0085               	movwf	5
  5690  07DB  0800               	movf	0,w	;code access
  5691  07DC  318F  27C7  3187   	fcall	_putch
  5692  07DF  3001               	movlw	1
  5693  07E0  0020               	movlb	0	; select bank0
  5694  07E1  07A2               	addwf	cputs@s,f
  5695  07E2  3000               	movlw	0
  5696  07E3  3DA3               	addwfc	cputs@s+1,f
  5697  07E4  2FCE               	goto	l2137
  5698  07E5                     __end_of_cputs:	
  5699                           
  5700                           	psect	text10
  5701  0033                     __ptext10:	
  5702 ;; *************** function _printf *****************
  5703 ;; Defined at:
  5704 ;;		line 464 in file "/opt/microchip/xc8/v1.41/sources/common/doprnt.c"
  5705 ;; Parameters:    Size  Location     Type
  5706 ;;  f               2   14[BANK0 ] PTR const unsigned char 
  5707 ;;		 -> STR_15(30), STR_13(26), STR_12(22), STR_11(32), 
  5708 ;;		 -> STR_10(33), STR_9(21), STR_7(16), STR_6(23), 
  5709 ;;		 -> STR_3(24), STR_1(2), 
  5710 ;; Auto vars:     Size  Location     Type
  5711 ;;  idx             1   24[BANK0 ] unsigned char 
  5712 ;;  tmpval          4    0        struct .
  5713 ;;  val             2   32[BANK0 ] unsigned int 
  5714 ;;  cp              2   28[BANK0 ] PTR const unsigned char 
  5715 ;;		 -> STR_16(7), STR_5(1), STR_4(3), I2C2_ISR@i2c_address(2), 
  5716 ;;  len             2    0        unsigned int 
  5717 ;;  c               1   34[BANK0 ] char 
  5718 ;;  flag            1   31[BANK0 ] unsigned char 
  5719 ;;  ap              1   30[BANK0 ] PTR void [1]
  5720 ;;		 -> ?_printf(2), 
  5721 ;;  prec            1   27[BANK0 ] char 
  5722 ;; Return value:  Size  Location     Type
  5723 ;;                  2   14[BANK0 ] int 
  5724 ;; Registers used:
  5725 ;;		wreg, fsr0l, fsr0h, fsr1l, fsr1h, status,2, status,0, pclath, cstack
  5726 ;; Tracked objects:
  5727 ;;		On entry : 0/0
  5728 ;;		On exit  : 0/0
  5729 ;;		Unchanged: 0/0
  5730 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
  5731 ;;      Params:         0       6       0       0       0       0       0       0       0       0       0       0       
      +0       0
  5732 ;;      Locals:         0      11       0       0       0       0       0       0       0       0       0       0       
      +0       0
  5733 ;;      Temps:          0       4       0       0       0       0       0       0       0       0       0       0       
      +0       0
  5734 ;;      Totals:         0      21       0       0       0       0       0       0       0       0       0       0       
      +0       0
  5735 ;;Total ram usage:       21 bytes
  5736 ;; Hardware stack levels used:    1
  5737 ;; Hardware stack levels required when called:    5
  5738 ;; This function calls:
  5739 ;;		___lwdiv
  5740 ;;		___lwmod
  5741 ;;		_putch
  5742 ;; This function is called by:
  5743 ;;		_main
  5744 ;;		_EMC1001_PrintInfo
  5745 ;;		_EMC1001_PrintTemp
  5746 ;; This function uses a non-reentrant model
  5747 ;;
  5748                           
  5749                           
  5750                           ;psect for function _printf
  5751  0033                     _printf:	
  5752                           
  5753                           ;doprnt.c: 466: va_list ap;
  5754                           ;doprnt.c: 499: signed char c;
  5755                           ;doprnt.c: 506: signed char prec;
  5756                           ;doprnt.c: 508: unsigned char flag;
  5757                           ;doprnt.c: 523: union {
  5758                           ;doprnt.c: 524: unsigned long vd;
  5759                           ;doprnt.c: 525: double integ;
  5760                           ;doprnt.c: 526: } tmpval;
  5761                           ;doprnt.c: 528: unsigned int val;
  5762                           ;doprnt.c: 529: unsigned len;
  5763                           ;doprnt.c: 530: const char * cp;
  5764                           ;doprnt.c: 533: *ap = __va_start();
  5765                           
  5766                           ;incstack = 0
  5767                           ; Regs used in _printf: [wreg-fsr1h+status,2+status,0+pclath+cstack]
  5768  0033  3030               	movlw	(low ((?_printf| 0+2)))& (0+255)
  5769  0034  0020               	movlb	0	; select bank0
  5770  0035  00B4               	movwf	??_printf
  5771  0036  0834               	movf	??_printf,w
  5772  0037  00BE               	movwf	printf@ap
  5773  0038                     l2299:	
  5774                           ;doprnt.c: 536: while(c = *f++) {
  5775                           
  5776  0038  0020               	movlb	0	; select bank0
  5777  0039  082F               	movf	printf@f+1,w
  5778  003A  00B5               	movwf	??_printf+1
  5779  003B  082E               	movf	printf@f,w
  5780  003C  00B4               	movwf	??_printf
  5781  003D  0AAE               	incf	printf@f,f
  5782  003E  1903               	skipnz
  5783  003F  0AAF               	incf	printf@f+1,f
  5784  0040  0834               	movf	??_printf,w
  5785  0041  0084               	movwf	4
  5786  0042  0835               	movf	??_printf+1,w
  5787  0043  0085               	movwf	5
  5788  0044  0800               	movf	0,w	;code access
  5789  0045  00B6               	movwf	??_printf+2
  5790  0046  0836               	movf	??_printf+2,w
  5791  0047  00C2               	movwf	printf@c
  5792  0048  0842               	movf	printf@c,w
  5793  0049  1903               	btfsc	3,2
  5794  004A  0008               	return
  5795                           
  5796                           ;doprnt.c: 538: if(c != '%')
  5797  004B  3025               	movlw	37
  5798  004C  0642               	xorwf	printf@c,w
  5799  004D  1903               	btfsc	3,2
  5800  004E  2854               	goto	l2215
  5801                           
  5802                           ;doprnt.c: 540: {
  5803                           ;doprnt.c: 541: (putch(c) );
  5804  004F  0842               	movf	printf@c,w
  5805  0050  318F  27C7  3180   	fcall	_putch
  5806                           
  5807                           ;doprnt.c: 542: continue;
  5808  0053  2838               	goto	l2299
  5809  0054                     l2215:	
  5810                           
  5811                           ;doprnt.c: 543: }
  5812                           ;doprnt.c: 548: flag = 0;
  5813  0054  0020               	movlb	0	; select bank0
  5814  0055  01BF               	clrf	printf@flag
  5815                           
  5816                           ;doprnt.c: 635: switch(c = *f++) {
  5817  0056  2882               	goto	l2233
  5818  0057                     l378:	
  5819                           ;doprnt.c: 712: case 'X':
  5820                           
  5821                           ;doprnt.c: 698: case 'i':
  5822                           ;doprnt.c: 699: break;
  5823                           
  5824                           ;doprnt.c: 697: case 'd':
  5825                           
  5826                           ;doprnt.c: 638: goto alldone;
  5827                           
  5828                           ;doprnt.c: 637: case 0:
  5829                           
  5830                           
  5831                           ;doprnt.c: 714: flag |= 0x20;
  5832  0057  16BF               	bsf	printf@flag,5
  5833  0058                     l379:	
  5834                           ;doprnt.c: 718: case 'x':
  5835                           
  5836                           
  5837                           ;doprnt.c: 721: flag |= 0x80;
  5838  0058  17BF               	bsf	printf@flag,7
  5839                           
  5840                           ;doprnt.c: 723: break;
  5841  0059  28A2               	goto	l377
  5842  005A                     l2217:	
  5843                           ;doprnt.c: 728: case 's':
  5844                           
  5845                           
  5846                           ;doprnt.c: 734: cp = (*(const char * *)__va_arg((*(const char * **)ap), (const char *)0)
      +                          );
  5847  005A  083E               	movf	printf@ap,w
  5848  005B  0086               	movwf	6
  5849  005C  0187               	clrf	7
  5850  005D  3F40               	moviw [0]fsr1
  5851  005E  00BC               	movwf	printf@cp
  5852  005F  3F41               	moviw [1]fsr1
  5853  0060  00BD               	movwf	printf@cp+1
  5854  0061  3002               	movlw	2
  5855  0062  00B4               	movwf	??_printf
  5856  0063  0834               	movf	??_printf,w
  5857  0064  07BE               	addwf	printf@ap,f
  5858                           
  5859                           ;doprnt.c: 740: if(!cp)
  5860  0065  083C               	movf	printf@cp,w
  5861  0066  043D               	iorwf	printf@cp+1,w
  5862  0067  1D03               	btfss	3,2
  5863  0068  286D               	goto	l2229
  5864                           
  5865                           ;doprnt.c: 741: cp = "(null)";
  5866  0069  3026               	movlw	low (STR_16| (0+32768))
  5867  006A  00BC               	movwf	printf@cp
  5868  006B  3084               	movlw	high (STR_16| (0+32768))
  5869  006C  00BD               	movwf	printf@cp+1
  5870  006D                     l2229:	
  5871                           ;doprnt.c: 777: while(*cp)
  5872                           
  5873  006D  083C               	movf	printf@cp,w
  5874  006E  0084               	movwf	4
  5875  006F  083D               	movf	printf@cp+1,w
  5876  0070  0085               	movwf	5
  5877  0071  0012               	moviw fsr0++
  5878  0072  1903               	btfsc	3,2
  5879  0073  2838               	goto	l2299
  5880                           
  5881                           ;doprnt.c: 778: (putch(*cp++) );
  5882  0074  083C               	movf	printf@cp,w
  5883  0075  0084               	movwf	4
  5884  0076  083D               	movf	printf@cp+1,w
  5885  0077  0085               	movwf	5
  5886  0078  0800               	movf	0,w	;code access
  5887  0079  318F  27C7  3180   	fcall	_putch
  5888  007C  3001               	movlw	1
  5889  007D  0020               	movlb	0	; select bank0
  5890  007E  07BC               	addwf	printf@cp,f
  5891  007F  3000               	movlw	0
  5892  0080  3DBD               	addwfc	printf@cp+1,f
  5893  0081  286D               	goto	l2229
  5894  0082                     l2233:	
  5895                           ;doprnt.c: 822: }
  5896                           
  5897                           ;doprnt.c: 813: continue;
  5898                           
  5899                           ;doprnt.c: 802: default:
  5900                           
  5901                           ;doprnt.c: 779: continue;
  5902                           
  5903  0082  082F               	movf	printf@f+1,w
  5904  0083  00B5               	movwf	??_printf+1
  5905  0084  082E               	movf	printf@f,w
  5906  0085  00B4               	movwf	??_printf
  5907  0086  0AAE               	incf	printf@f,f
  5908  0087  1903               	skipnz
  5909  0088  0AAF               	incf	printf@f+1,f
  5910  0089  0834               	movf	??_printf,w
  5911  008A  0084               	movwf	4
  5912  008B  0835               	movf	??_printf+1,w
  5913  008C  0085               	movwf	5
  5914  008D  0800               	movf	0,w	;code access
  5915  008E  00C2               	movwf	printf@c
  5916                           
  5917                           ; Switch size 1, requested type "space"
  5918                           ; Number of cases is 6, Range of values is 0 to 120
  5919                           ; switch strategies available:
  5920                           ; Name         Instructions Cycles
  5921                           ; simple_byte           19    10 (average)
  5922                           ; direct_byte          248     6 (fixed)
  5923                           ; jumptable            260     6 (fixed)
  5924                           ;	Chosen strategy is simple_byte
  5925  008F  3A00               	xorlw	0	; case 0
  5926  0090  1903               	skipnz
  5927  0091  2993               	goto	l412
  5928  0092  3A58               	xorlw	88	; case 88
  5929  0093  1903               	skipnz
  5930  0094  2857               	goto	l378
  5931  0095  3A3C               	xorlw	60	; case 100
  5932  0096  1903               	skipnz
  5933  0097  28A2               	goto	l377
  5934  0098  3A0D               	xorlw	13	; case 105
  5935  0099  1903               	skipnz
  5936  009A  28A2               	goto	l377
  5937  009B  3A1A               	xorlw	26	; case 115
  5938  009C  1903               	skipnz
  5939  009D  285A               	goto	l2217
  5940  009E  3A0B               	xorlw	11	; case 120
  5941  009F  1903               	skipnz
  5942  00A0  2858               	goto	l379
  5943  00A1  2838               	goto	l2299
  5944  00A2                     l377:	
  5945                           
  5946                           ;doprnt.c: 1251: if((flag & 0x80) == 0x00)
  5947  00A2  1BBF               	btfsc	printf@flag,7
  5948  00A3  28BB               	goto	l2245
  5949                           
  5950                           ;doprnt.c: 1253: {
  5951                           ;doprnt.c: 1259: val = (int)(*(int *)__va_arg((*(int **)ap), (int)0));
  5952  00A4  083E               	movf	printf@ap,w
  5953  00A5  0086               	movwf	6
  5954  00A6  0187               	clrf	7
  5955  00A7  3F40               	moviw [0]fsr1
  5956  00A8  00C0               	movwf	printf@val
  5957  00A9  3F41               	moviw [1]fsr1
  5958  00AA  00C1               	movwf	printf@val+1
  5959  00AB  3002               	movlw	2
  5960  00AC  00B4               	movwf	??_printf
  5961  00AD  0834               	movf	??_printf,w
  5962  00AE  07BE               	addwf	printf@ap,f
  5963                           
  5964                           ;doprnt.c: 1261: if((int)val < 0) {
  5965  00AF  1FC1               	btfss	printf@val+1,7
  5966  00B0  290B               	goto	l2271
  5967                           
  5968                           ;doprnt.c: 1262: flag |= 0x03;
  5969  00B1  3003               	movlw	3
  5970  00B2  00B4               	movwf	??_printf
  5971  00B3  0834               	movf	??_printf,w
  5972  00B4  04BF               	iorwf	printf@flag,f
  5973                           
  5974                           ;doprnt.c: 1263: val = -val;
  5975  00B5  09C0               	comf	printf@val,f
  5976  00B6  09C1               	comf	printf@val+1,f
  5977  00B7  0AC0               	incf	printf@val,f
  5978  00B8  1903               	skipnz
  5979  00B9  0AC1               	incf	printf@val+1,f
  5980                           
  5981                           ;doprnt.c: 1264: }
  5982                           ;doprnt.c: 1266: }
  5983  00BA  290B               	goto	l2271
  5984  00BB                     l2245:	
  5985                           
  5986                           ;doprnt.c: 1268: else
  5987                           ;doprnt.c: 1273: {
  5988                           ;doprnt.c: 1286: val = (*(unsigned *)__va_arg((*(unsigned **)ap), (unsigned)0));
  5989  00BB  083E               	movf	printf@ap,w
  5990  00BC  0086               	movwf	6
  5991  00BD  0187               	clrf	7
  5992  00BE  3F40               	moviw [0]fsr1
  5993  00BF  00C0               	movwf	printf@val
  5994  00C0  3F41               	moviw [1]fsr1
  5995  00C1  00C1               	movwf	printf@val+1
  5996  00C2  3002               	movlw	2
  5997  00C3  00B4               	movwf	??_printf
  5998  00C4  0834               	movf	??_printf,w
  5999  00C5  07BE               	addwf	printf@ap,f
  6000                           
  6001                           ;doprnt.c: 1287: }
  6002                           ;doprnt.c: 1294: switch((unsigned char)(flag & 0x80)) {
  6003  00C6  290B               	goto	l2271
  6004  00C7                     l390:	
  6005                           ;doprnt.c: 1299: case 0x00:
  6006                           
  6007                           
  6008                           ;doprnt.c: 1305: for(c = 1 ; c != sizeof dpowers/sizeof dpowers[0] ; c++)
  6009  00C7  01C2               	clrf	printf@c
  6010  00C8  0AC2               	incf	printf@c,f
  6011  00C9                     L4:	
  6012  00C9  3005               	movlw	5
  6013  00CA  0642               	xorwf	printf@c,w
  6014  00CB  1903               	btfsc	3,2
  6015  00CC  2914               	goto	l2273
  6016                           
  6017                           ;doprnt.c: 1306: if(val < dpowers[c])
  6018  00CD  0842               	movf	printf@c,w
  6019  00CE  00B4               	movwf	??_printf
  6020  00CF  01B5               	clrf	??_printf+1
  6021  00D0  35B4               	lslf	??_printf,f
  6022  00D1  0DB5               	rlf	??_printf+1,f
  6023  00D2  30E4               	movlw	low (_dpowers| (0+32768))
  6024  00D3  0734               	addwf	??_printf,w
  6025  00D4  0084               	movwf	4
  6026  00D5  3082               	movlw	high (_dpowers| (0+32768))
  6027  00D6  3D35               	addwfc	??_printf+1,w
  6028  00D7  0085               	movwf	5
  6029  00D8  3F00               	moviw [0]fsr0
  6030  00D9  00B6               	movwf	??_printf+2
  6031  00DA  3F01               	moviw [1]fsr0
  6032  00DB  00B7               	movwf	??_printf+3
  6033  00DC  0837               	movf	??_printf+3,w
  6034  00DD  0241               	subwf	printf@val+1,w
  6035  00DE  1D03               	skipz
  6036  00DF  28E2               	goto	u2015
  6037  00E0  0836               	movf	??_printf+2,w
  6038  00E1  0240               	subwf	printf@val,w
  6039  00E2                     u2015:	
  6040  00E2  1C03               	btfss	3,0
  6041  00E3  2914               	goto	l2273
  6042                           
  6043                           ;doprnt.c: 1307: break;
  6044  00E4  3001               	movlw	1
  6045  00E5  00B4               	movwf	??_printf
  6046  00E6  0834               	movf	??_printf,w
  6047  00E7  07C2               	addwf	printf@c,f
  6048  00E8  28C9               	goto	L4
  6049  00E9                     l395:	
  6050                           ;doprnt.c: 1314: case 0x80:
  6051                           
  6052                           ;doprnt.c: 1309: break;
  6053                           
  6054                           
  6055                           ;doprnt.c: 1316: for(c = 1 ; c != sizeof hexpowers/sizeof hexpowers[0] ; c++)
  6056  00E9  01C2               	clrf	printf@c
  6057  00EA  0AC2               	incf	printf@c,f
  6058  00EB                     L5:	
  6059  00EB  3004               	movlw	4
  6060  00EC  0642               	xorwf	printf@c,w
  6061  00ED  1903               	btfsc	3,2
  6062  00EE  2914               	goto	l2273
  6063                           
  6064                           ;doprnt.c: 1317: if(val < hexpowers[c])
  6065  00EF  0842               	movf	printf@c,w
  6066  00F0  00B4               	movwf	??_printf
  6067  00F1  01B5               	clrf	??_printf+1
  6068  00F2  35B4               	lslf	??_printf,f
  6069  00F3  0DB5               	rlf	??_printf+1,f
  6070  00F4  30EE               	movlw	low (_hexpowers| (0+32768))
  6071  00F5  0734               	addwf	??_printf,w
  6072  00F6  0084               	movwf	4
  6073  00F7  3082               	movlw	high (_hexpowers| (0+32768))
  6074  00F8  3D35               	addwfc	??_printf+1,w
  6075  00F9  0085               	movwf	5
  6076  00FA  3F00               	moviw [0]fsr0
  6077  00FB  00B6               	movwf	??_printf+2
  6078  00FC  3F01               	moviw [1]fsr0
  6079  00FD  00B7               	movwf	??_printf+3
  6080  00FE  0837               	movf	??_printf+3,w
  6081  00FF  0241               	subwf	printf@val+1,w
  6082  0100  1D03               	skipz
  6083  0101  2904               	goto	u2045
  6084  0102  0836               	movf	??_printf+2,w
  6085  0103  0240               	subwf	printf@val,w
  6086  0104                     u2045:	
  6087  0104  1C03               	btfss	3,0
  6088  0105  2914               	goto	l2273
  6089                           
  6090                           ;doprnt.c: 1318: break;
  6091  0106  3001               	movlw	1
  6092  0107  00B4               	movwf	??_printf
  6093  0108  0834               	movf	??_printf,w
  6094  0109  07C2               	addwf	printf@c,f
  6095  010A  28EB               	goto	L5
  6096  010B                     l2271:	
  6097                           ;doprnt.c: 1336: }
  6098                           
  6099                           ;doprnt.c: 1320: break;
  6100                           
  6101  010B  083F               	movf	printf@flag,w
  6102  010C  3980               	andlw	128
  6103                           
  6104                           ; Switch size 1, requested type "space"
  6105                           ; Number of cases is 2, Range of values is 0 to 128
  6106                           ; switch strategies available:
  6107                           ; Name         Instructions Cycles
  6108                           ; simple_byte            7     4 (average)
  6109                           ; jumptable            260     6 (fixed)
  6110                           ;	Chosen strategy is simple_byte
  6111  010D  3A00               	xorlw	0	; case 0
  6112  010E  1903               	skipnz
  6113  010F  28C7               	goto	l390
  6114  0110  3A80               	xorlw	128	; case 128
  6115  0111  1903               	skipnz
  6116  0112  28E9               	goto	l395
  6117  0113  2914               	goto	l2273
  6118  0114                     l2273:	
  6119                           
  6120                           ;doprnt.c: 1422: {
  6121                           ;doprnt.c: 1438: if(flag & 0x03)
  6122  0114  083F               	movf	printf@flag,w
  6123  0115  3903               	andlw	3
  6124  0116  1903               	btfsc	3,2
  6125  0117  291C               	goto	l2277
  6126                           
  6127                           ;doprnt.c: 1439: (putch('-') );
  6128  0118  302D               	movlw	45
  6129  0119  318F  27C7  3180   	fcall	_putch
  6130  011C                     l2277:	
  6131                           
  6132                           ;doprnt.c: 1469: }
  6133                           ;doprnt.c: 1472: prec = c;
  6134  011C  0020               	movlb	0	; select bank0
  6135  011D  0842               	movf	printf@c,w
  6136  011E  00B4               	movwf	??_printf
  6137  011F  0834               	movf	??_printf,w
  6138  0120  00BB               	movwf	printf@prec
  6139                           
  6140                           ;doprnt.c: 1474: while(prec--) {
  6141  0121  2981               	goto	l2297
  6142  0122                     l2279:	
  6143                           ;doprnt.c: 1478: {
  6144                           ;doprnt.c: 1483: case 0x00:
  6145                           
  6146                           ;doprnt.c: 1476: switch((unsigned char)(flag & 0x80))
  6147                           
  6148                           
  6149                           ;doprnt.c: 1489: c = (val / dpowers[prec]) % 10 + '0';
  6150  0122  300A               	movlw	10
  6151  0123  00A8               	movwf	___lwmod@divisor
  6152  0124  3000               	movlw	0
  6153  0125  00A9               	movwf	___lwmod@divisor+1
  6154  0126  083B               	movf	printf@prec,w
  6155  0127  00B4               	movwf	??_printf
  6156  0128  01B5               	clrf	??_printf+1
  6157  0129  35B4               	lslf	??_printf,f
  6158  012A  0DB5               	rlf	??_printf+1,f
  6159  012B  30E4               	movlw	low (_dpowers| (0+32768))
  6160  012C  0734               	addwf	??_printf,w
  6161  012D  0084               	movwf	4
  6162  012E  3082               	movlw	high (_dpowers| (0+32768))
  6163  012F  3D35               	addwfc	??_printf+1,w
  6164  0130  0085               	movwf	5
  6165  0131  3F00               	moviw [0]fsr0
  6166  0132  00A0               	movwf	___lwdiv@divisor
  6167  0133  3F01               	moviw [1]fsr0
  6168  0134  00A1               	movwf	___lwdiv@divisor+1
  6169  0135  0841               	movf	printf@val+1,w
  6170  0136  00A3               	movwf	___lwdiv@dividend+1
  6171  0137  0840               	movf	printf@val,w
  6172  0138  00A2               	movwf	___lwdiv@dividend
  6173  0139  3186  26C0  3180   	fcall	___lwdiv
  6174  013C  0020               	movlb	0	; select bank0
  6175  013D  0821               	movf	?___lwdiv+1,w
  6176  013E  00AB               	movwf	___lwmod@dividend+1
  6177  013F  0820               	movf	?___lwdiv,w
  6178  0140  00AA               	movwf	___lwmod@dividend
  6179  0141  3186  26F5  3180   	fcall	___lwmod
  6180  0144  0020               	movlb	0	; select bank0
  6181  0145  0828               	movf	?___lwmod,w
  6182  0146  3E30               	addlw	48
  6183  0147  297A               	goto	L2
  6184  0148                     l2281:	
  6185                           ;doprnt.c: 1497: case 0x80:
  6186                           
  6187                           ;doprnt.c: 1491: break;
  6188                           
  6189                           
  6190                           ;doprnt.c: 1499: {
  6191                           ;doprnt.c: 1500: unsigned char idx = (val / hexpowers[prec]) & 0xF;
  6192  0148  083B               	movf	printf@prec,w
  6193  0149  00B4               	movwf	??_printf
  6194  014A  01B5               	clrf	??_printf+1
  6195  014B  35B4               	lslf	??_printf,f
  6196  014C  0DB5               	rlf	??_printf+1,f
  6197  014D  30EE               	movlw	low (_hexpowers| (0+32768))
  6198  014E  0734               	addwf	??_printf,w
  6199  014F  0084               	movwf	4
  6200  0150  3082               	movlw	high (_hexpowers| (0+32768))
  6201  0151  3D35               	addwfc	??_printf+1,w
  6202  0152  0085               	movwf	5
  6203  0153  3F00               	moviw [0]fsr0
  6204  0154  00A0               	movwf	___lwdiv@divisor
  6205  0155  3F01               	moviw [1]fsr0
  6206  0156  00A1               	movwf	___lwdiv@divisor+1
  6207  0157  0841               	movf	printf@val+1,w
  6208  0158  00A3               	movwf	___lwdiv@dividend+1
  6209  0159  0840               	movf	printf@val,w
  6210  015A  00A2               	movwf	___lwdiv@dividend
  6211  015B  3186  26C0  3180   	fcall	___lwdiv
  6212  015E  0020               	movlb	0	; select bank0
  6213  015F  0820               	movf	?___lwdiv,w
  6214  0160  390F               	andlw	15
  6215  0161  00B6               	movwf	??_printf+2
  6216  0162  0836               	movf	??_printf+2,w
  6217  0163  00B8               	movwf	printf@idx
  6218                           
  6219                           ;doprnt.c: 1502: c = (flag & 0x20 ? "0123456789ABCDEF" : "0123456789abcdef")[idx];
  6220  0164  1ABF               	btfsc	printf@flag,5
  6221  0165  296A               	goto	l2287
  6222  0166  3005               	movlw	low (STR_18| (0+32768))
  6223  0167  00B9               	movwf	_printf$731
  6224  0168  3084               	movlw	high (STR_18| (0+32768))
  6225  0169  296D               	goto	L3
  6226  016A                     l2287:	
  6227  016A  30F4               	movlw	low (STR_17| (0+32768))
  6228  016B  00B9               	movwf	_printf$731
  6229  016C  3083               	movlw	high (STR_17| (0+32768))
  6230  016D                     L3:	
  6231  016D  00BA               	movwf	_printf$731+1
  6232  016E  083A               	movf	_printf$731+1,w
  6233  016F  00B5               	movwf	??_printf+1
  6234  0170  0839               	movf	_printf$731,w
  6235  0171  00B4               	movwf	??_printf
  6236  0172  0838               	movf	printf@idx,w
  6237  0173  0734               	addwf	??_printf,w
  6238  0174  0084               	movwf	4
  6239  0175  0835               	movf	??_printf+1,w
  6240  0176  1803               	skipnc
  6241  0177  0A35               	incf	??_printf+1,w
  6242  0178  0085               	movwf	5
  6243  0179  0800               	movf	0,w	;code access
  6244  017A                     L2:	
  6245  017A  00B6               	movwf	??_printf+2
  6246  017B  0836               	movf	??_printf+2,w
  6247  017C  00C2               	movwf	printf@c
  6248  017D                     l2295:	
  6249                           ;doprnt.c: 1523: }
  6250                           
  6251                           ;doprnt.c: 1508: }
  6252                           ;doprnt.c: 1510: break;
  6253                           
  6254                           
  6255                           ;doprnt.c: 1524: (putch(c) );
  6256  017D  0842               	movf	printf@c,w
  6257  017E  318F  27C7  3180   	fcall	_putch
  6258  0181                     l2297:	
  6259  0181  30FF               	movlw	255
  6260  0182  0020               	movlb	0	; select bank0
  6261  0183  00B4               	movwf	??_printf
  6262  0184  0834               	movf	??_printf,w
  6263  0185  07BB               	addwf	printf@prec,f
  6264  0186  0A3B               	incf	printf@prec,w
  6265  0187  1903               	btfsc	3,2
  6266  0188  2838               	goto	l2299
  6267  0189  083F               	movf	printf@flag,w
  6268  018A  3980               	andlw	128
  6269                           
  6270                           ; Switch size 1, requested type "space"
  6271                           ; Number of cases is 2, Range of values is 0 to 128
  6272                           ; switch strategies available:
  6273                           ; Name         Instructions Cycles
  6274                           ; simple_byte            7     4 (average)
  6275                           ; jumptable            260     6 (fixed)
  6276                           ;	Chosen strategy is simple_byte
  6277  018B  3A00               	xorlw	0	; case 0
  6278  018C  1903               	skipnz
  6279  018D  2922               	goto	l2279
  6280  018E  3A80               	xorlw	128	; case 128
  6281  018F  1903               	skipnz
  6282  0190  2948               	goto	l2281
  6283  0191  297D               	goto	l2295
  6284  0192  297D               	goto	l2295
  6285  0193                     l412:	
  6286                           ;doprnt.c: 1540: return 0;
  6287                           ;	Return value of _printf is never used
  6288                           
  6289                           ;doprnt.c: 1525: }
  6290                           ;doprnt.c: 1533: }
  6291                           ;doprnt.c: 1535: alldone:
  6292                           
  6293  0193  0008               	return
  6294  0194                     __end_of_printf:	
  6295                           
  6296                           	psect	text11
  6297  0FC7                     __ptext11:	
  6298 ;; *************** function _putch *****************
  6299 ;; Defined at:
  6300 ;;		line 111 in file "mcc_generated_files/eusart.c"
  6301 ;; Parameters:    Size  Location     Type
  6302 ;;  txData          1    wreg     unsigned char 
  6303 ;; Auto vars:     Size  Location     Type
  6304 ;;  txData          1    1[BANK0 ] unsigned char 
  6305 ;; Return value:  Size  Location     Type
  6306 ;;                  1    wreg      void 
  6307 ;; Registers used:
  6308 ;;		wreg, status,2, status,0, pclath, cstack
  6309 ;; Tracked objects:
  6310 ;;		On entry : 0/0
  6311 ;;		On exit  : 0/0
  6312 ;;		Unchanged: 0/0
  6313 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
  6314 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  6315 ;;      Locals:         0       1       0       0       0       0       0       0       0       0       0       0       
      +0       0
  6316 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  6317 ;;      Totals:         0       1       0       0       0       0       0       0       0       0       0       0       
      +0       0
  6318 ;;Total ram usage:        1 bytes
  6319 ;; Hardware stack levels used:    1
  6320 ;; Hardware stack levels required when called:    4
  6321 ;; This function calls:
  6322 ;;		_EUSART_Write
  6323 ;; This function is called by:
  6324 ;;		_printf
  6325 ;;		_puts
  6326 ;;		_cputs
  6327 ;; This function uses a non-reentrant model
  6328 ;;
  6329                           
  6330                           
  6331                           ;psect for function _putch
  6332  0FC7                     _putch:	
  6333                           
  6334                           ;incstack = 0
  6335                           ; Regs used in _putch: [wreg+status,2+status,0+pclath+cstack]
  6336                           ;putch@txData stored from wreg
  6337  0FC7  0020               	movlb	0	; select bank0
  6338  0FC8  00A1               	movwf	putch@txData
  6339                           
  6340                           ;eusart.c: 113: EUSART_Write(txData);
  6341  0FC9  0821               	movf	putch@txData,w
  6342  0FCA  318F  27D3         	fcall	_EUSART_Write
  6343  0FCC  0008               	return
  6344  0FCD                     __end_of_putch:	
  6345                           
  6346                           	psect	text12
  6347  0FD3                     __ptext12:	
  6348 ;; *************** function _EUSART_Write *****************
  6349 ;; Defined at:
  6350 ;;		line 97 in file "mcc_generated_files/eusart.c"
  6351 ;; Parameters:    Size  Location     Type
  6352 ;;  txData          1    wreg     unsigned char 
  6353 ;; Auto vars:     Size  Location     Type
  6354 ;;  txData          1    0[BANK0 ] unsigned char 
  6355 ;; Return value:  Size  Location     Type
  6356 ;;                  1    wreg      void 
  6357 ;; Registers used:
  6358 ;;		wreg
  6359 ;; Tracked objects:
  6360 ;;		On entry : 0/0
  6361 ;;		On exit  : 0/0
  6362 ;;		Unchanged: 0/0
  6363 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
  6364 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  6365 ;;      Locals:         0       1       0       0       0       0       0       0       0       0       0       0       
      +0       0
  6366 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  6367 ;;      Totals:         0       1       0       0       0       0       0       0       0       0       0       0       
      +0       0
  6368 ;;Total ram usage:        1 bytes
  6369 ;; Hardware stack levels used:    1
  6370 ;; Hardware stack levels required when called:    3
  6371 ;; This function calls:
  6372 ;;		Nothing
  6373 ;; This function is called by:
  6374 ;;		_putch
  6375 ;; This function uses a non-reentrant model
  6376 ;;
  6377                           
  6378                           
  6379                           ;psect for function _EUSART_Write
  6380  0FD3                     _EUSART_Write:	
  6381                           
  6382                           ;incstack = 0
  6383                           ; Regs used in _EUSART_Write: [wreg]
  6384                           ;EUSART_Write@txData stored from wreg
  6385  0FD3  0020               	movlb	0	; select bank0
  6386  0FD4  00A0               	movwf	EUSART_Write@txData
  6387  0FD5                     l31:	
  6388                           ;eusart.c: 100: {
  6389                           
  6390                           ;eusart.c: 99: while(0 == PIR3bits.TXIF)
  6391                           
  6392  0FD5  002E               	movlb	14	; select bank14
  6393  0FD6  1E0F               	btfss	15,4	;volatile
  6394  0FD7  2FD5               	goto	l31
  6395                           
  6396                           ;eusart.c: 101: }
  6397                           ;eusart.c: 103: TX1REG = txData;
  6398  0FD8  0020               	movlb	0	; select bank0
  6399  0FD9  0820               	movf	EUSART_Write@txData,w
  6400  0FDA  0022               	movlb	2	; select bank2
  6401  0FDB  009A               	movwf	26	;volatile
  6402  0FDC  0008               	return
  6403  0FDD                     __end_of_EUSART_Write:	
  6404                           
  6405                           	psect	text13
  6406  06F5                     __ptext13:	
  6407 ;; *************** function ___lwmod *****************
  6408 ;; Defined at:
  6409 ;;		line 6 in file "/opt/microchip/xc8/v1.41/sources/common/lwmod.c"
  6410 ;; Parameters:    Size  Location     Type
  6411 ;;  divisor         2    8[BANK0 ] unsigned int 
  6412 ;;  dividend        2   10[BANK0 ] unsigned int 
  6413 ;; Auto vars:     Size  Location     Type
  6414 ;;  counter         1   13[BANK0 ] unsigned char 
  6415 ;; Return value:  Size  Location     Type
  6416 ;;                  2    8[BANK0 ] unsigned int 
  6417 ;; Registers used:
  6418 ;;		wreg, status,2, status,0
  6419 ;; Tracked objects:
  6420 ;;		On entry : 0/0
  6421 ;;		On exit  : 0/0
  6422 ;;		Unchanged: 0/0
  6423 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
  6424 ;;      Params:         0       4       0       0       0       0       0       0       0       0       0       0       
      +0       0
  6425 ;;      Locals:         0       1       0       0       0       0       0       0       0       0       0       0       
      +0       0
  6426 ;;      Temps:          0       1       0       0       0       0       0       0       0       0       0       0       
      +0       0
  6427 ;;      Totals:         0       6       0       0       0       0       0       0       0       0       0       0       
      +0       0
  6428 ;;Total ram usage:        6 bytes
  6429 ;; Hardware stack levels used:    1
  6430 ;; Hardware stack levels required when called:    3
  6431 ;; This function calls:
  6432 ;;		Nothing
  6433 ;; This function is called by:
  6434 ;;		_printf
  6435 ;; This function uses a non-reentrant model
  6436 ;;
  6437                           
  6438                           
  6439                           ;psect for function ___lwmod
  6440  06F5                     ___lwmod:	
  6441                           
  6442                           ;incstack = 0
  6443                           ; Regs used in ___lwmod: [wreg+status,2+status,0]
  6444  06F5  0020               	movlb	0	; select bank0
  6445  06F6  0828               	movf	___lwmod@divisor,w
  6446  06F7  0429               	iorwf	___lwmod@divisor+1,w
  6447  06F8  1903               	btfsc	3,2
  6448  06F9  2F1D               	goto	l1597
  6449  06FA  01AD               	clrf	___lwmod@counter
  6450  06FB  0AAD               	incf	___lwmod@counter,f
  6451  06FC                     l1587:	
  6452  06FC  1BA9               	btfsc	___lwmod@divisor+1,7
  6453  06FD  2F08               	goto	l1589
  6454  06FE  3001               	movlw	1
  6455  06FF                     u1115:	
  6456  06FF  35A8               	lslf	___lwmod@divisor,f
  6457  0700  0DA9               	rlf	___lwmod@divisor+1,f
  6458  0701  0B89               	decfsz	9,f
  6459  0702  2EFF               	goto	u1115
  6460  0703  3001               	movlw	1
  6461  0704  00AC               	movwf	??___lwmod
  6462  0705  082C               	movf	??___lwmod,w
  6463  0706  07AD               	addwf	___lwmod@counter,f
  6464  0707  2EFC               	goto	l1587
  6465  0708                     l1589:	
  6466  0708  0829               	movf	___lwmod@divisor+1,w
  6467  0709  022B               	subwf	___lwmod@dividend+1,w
  6468  070A  1D03               	skipz
  6469  070B  2F0E               	goto	u1135
  6470  070C  0828               	movf	___lwmod@divisor,w
  6471  070D  022A               	subwf	___lwmod@dividend,w
  6472  070E                     u1135:	
  6473  070E  1C03               	skipc
  6474  070F  2F14               	goto	l1593
  6475  0710  0828               	movf	___lwmod@divisor,w
  6476  0711  02AA               	subwf	___lwmod@dividend,f
  6477  0712  0829               	movf	___lwmod@divisor+1,w
  6478  0713  3BAB               	subwfb	___lwmod@dividend+1,f
  6479  0714                     l1593:	
  6480  0714  3001               	movlw	1
  6481  0715                     u1145:	
  6482  0715  36A9               	lsrf	___lwmod@divisor+1,f
  6483  0716  0CA8               	rrf	___lwmod@divisor,f
  6484  0717  0B89               	decfsz	9,f
  6485  0718  2F15               	goto	u1145
  6486  0719  3001               	movlw	1
  6487  071A  02AD               	subwf	___lwmod@counter,f
  6488  071B  1D03               	btfss	3,2
  6489  071C  2F08               	goto	l1589
  6490  071D                     l1597:	
  6491  071D  082B               	movf	___lwmod@dividend+1,w
  6492  071E  00A9               	movwf	?___lwmod+1
  6493  071F  082A               	movf	___lwmod@dividend,w
  6494  0720  00A8               	movwf	?___lwmod
  6495  0721  0008               	return
  6496  0722                     __end_of___lwmod:	
  6497                           
  6498                           	psect	text14
  6499  06C0                     __ptext14:	
  6500 ;; *************** function ___lwdiv *****************
  6501 ;; Defined at:
  6502 ;;		line 6 in file "/opt/microchip/xc8/v1.41/sources/common/lwdiv.c"
  6503 ;; Parameters:    Size  Location     Type
  6504 ;;  divisor         2    0[BANK0 ] unsigned int 
  6505 ;;  dividend        2    2[BANK0 ] unsigned int 
  6506 ;; Auto vars:     Size  Location     Type
  6507 ;;  quotient        2    5[BANK0 ] unsigned int 
  6508 ;;  counter         1    7[BANK0 ] unsigned char 
  6509 ;; Return value:  Size  Location     Type
  6510 ;;                  2    0[BANK0 ] unsigned int 
  6511 ;; Registers used:
  6512 ;;		wreg, status,2, status,0
  6513 ;; Tracked objects:
  6514 ;;		On entry : 0/0
  6515 ;;		On exit  : 0/0
  6516 ;;		Unchanged: 0/0
  6517 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
  6518 ;;      Params:         0       4       0       0       0       0       0       0       0       0       0       0       
      +0       0
  6519 ;;      Locals:         0       3       0       0       0       0       0       0       0       0       0       0       
      +0       0
  6520 ;;      Temps:          0       1       0       0       0       0       0       0       0       0       0       0       
      +0       0
  6521 ;;      Totals:         0       8       0       0       0       0       0       0       0       0       0       0       
      +0       0
  6522 ;;Total ram usage:        8 bytes
  6523 ;; Hardware stack levels used:    1
  6524 ;; Hardware stack levels required when called:    3
  6525 ;; This function calls:
  6526 ;;		Nothing
  6527 ;; This function is called by:
  6528 ;;		_printf
  6529 ;; This function uses a non-reentrant model
  6530 ;;
  6531                           
  6532                           
  6533                           ;psect for function ___lwdiv
  6534  06C0                     ___lwdiv:	
  6535                           
  6536                           ;incstack = 0
  6537                           ; Regs used in ___lwdiv: [wreg+status,2+status,0]
  6538  06C0  0020               	movlb	0	; select bank0
  6539  06C1  01A5               	clrf	___lwdiv@quotient
  6540  06C2  01A6               	clrf	___lwdiv@quotient+1
  6541  06C3  0820               	movf	___lwdiv@divisor,w
  6542  06C4  0421               	iorwf	___lwdiv@divisor+1,w
  6543  06C5  1903               	btfsc	3,2
  6544  06C6  2EF0               	goto	l1575
  6545  06C7  01A7               	clrf	___lwdiv@counter
  6546  06C8  0AA7               	incf	___lwdiv@counter,f
  6547  06C9                     l1563:	
  6548  06C9  1BA1               	btfsc	___lwdiv@divisor+1,7
  6549  06CA  2ED5               	goto	l1565
  6550  06CB  3001               	movlw	1
  6551  06CC                     u1045:	
  6552  06CC  35A0               	lslf	___lwdiv@divisor,f
  6553  06CD  0DA1               	rlf	___lwdiv@divisor+1,f
  6554  06CE  0B89               	decfsz	9,f
  6555  06CF  2ECC               	goto	u1045
  6556  06D0  3001               	movlw	1
  6557  06D1  00A4               	movwf	??___lwdiv
  6558  06D2  0824               	movf	??___lwdiv,w
  6559  06D3  07A7               	addwf	___lwdiv@counter,f
  6560  06D4  2EC9               	goto	l1563
  6561  06D5                     l1565:	
  6562  06D5  3001               	movlw	1
  6563  06D6                     u1065:	
  6564  06D6  35A5               	lslf	___lwdiv@quotient,f
  6565  06D7  0DA6               	rlf	___lwdiv@quotient+1,f
  6566  06D8  0B89               	decfsz	9,f
  6567  06D9  2ED6               	goto	u1065
  6568  06DA  0821               	movf	___lwdiv@divisor+1,w
  6569  06DB  0223               	subwf	___lwdiv@dividend+1,w
  6570  06DC  1D03               	skipz
  6571  06DD  2EE0               	goto	u1075
  6572  06DE  0820               	movf	___lwdiv@divisor,w
  6573  06DF  0222               	subwf	___lwdiv@dividend,w
  6574  06E0                     u1075:	
  6575  06E0  1C03               	skipc
  6576  06E1  2EE7               	goto	l1571
  6577  06E2  0820               	movf	___lwdiv@divisor,w
  6578  06E3  02A2               	subwf	___lwdiv@dividend,f
  6579  06E4  0821               	movf	___lwdiv@divisor+1,w
  6580  06E5  3BA3               	subwfb	___lwdiv@dividend+1,f
  6581  06E6  1425               	bsf	___lwdiv@quotient,0
  6582  06E7                     l1571:	
  6583  06E7  3001               	movlw	1
  6584  06E8                     u1085:	
  6585  06E8  36A1               	lsrf	___lwdiv@divisor+1,f
  6586  06E9  0CA0               	rrf	___lwdiv@divisor,f
  6587  06EA  0B89               	decfsz	9,f
  6588  06EB  2EE8               	goto	u1085
  6589  06EC  3001               	movlw	1
  6590  06ED  02A7               	subwf	___lwdiv@counter,f
  6591  06EE  1D03               	btfss	3,2
  6592  06EF  2ED5               	goto	l1565
  6593  06F0                     l1575:	
  6594  06F0  0826               	movf	___lwdiv@quotient+1,w
  6595  06F1  00A1               	movwf	?___lwdiv+1
  6596  06F2  0825               	movf	___lwdiv@quotient,w
  6597  06F3  00A0               	movwf	?___lwdiv
  6598  06F4  0008               	return
  6599  06F5                     __end_of___lwdiv:	
  6600                           
  6601                           	psect	text15
  6602  076A                     __ptext15:	
  6603 ;; *************** function ___wmul *****************
  6604 ;; Defined at:
  6605 ;;		line 15 in file "/opt/microchip/xc8/v1.41/sources/common/Umul16.c"
  6606 ;; Parameters:    Size  Location     Type
  6607 ;;  multiplier      2    0[BANK0 ] unsigned int 
  6608 ;;  multiplicand    2    2[BANK0 ] unsigned int 
  6609 ;; Auto vars:     Size  Location     Type
  6610 ;;  product         2    4[BANK0 ] unsigned int 
  6611 ;; Return value:  Size  Location     Type
  6612 ;;                  2    0[BANK0 ] unsigned int 
  6613 ;; Registers used:
  6614 ;;		wreg, status,2, status,0
  6615 ;; Tracked objects:
  6616 ;;		On entry : 0/0
  6617 ;;		On exit  : 0/0
  6618 ;;		Unchanged: 0/0
  6619 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
  6620 ;;      Params:         0       4       0       0       0       0       0       0       0       0       0       0       
      +0       0
  6621 ;;      Locals:         0       2       0       0       0       0       0       0       0       0       0       0       
      +0       0
  6622 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  6623 ;;      Totals:         0       6       0       0       0       0       0       0       0       0       0       0       
      +0       0
  6624 ;;Total ram usage:        6 bytes
  6625 ;; Hardware stack levels used:    1
  6626 ;; Hardware stack levels required when called:    3
  6627 ;; This function calls:
  6628 ;;		Nothing
  6629 ;; This function is called by:
  6630 ;;		_EMC1001_PrintInfo
  6631 ;;		_EMC1001_PrintTemp
  6632 ;; This function uses a non-reentrant model
  6633 ;;
  6634                           
  6635                           
  6636                           ;psect for function ___wmul
  6637  076A                     ___wmul:	
  6638                           
  6639                           ;incstack = 0
  6640                           ; Regs used in ___wmul: [wreg+status,2+status,0]
  6641  076A  0020               	movlb	0	; select bank0
  6642  076B  01A4               	clrf	___wmul@product
  6643  076C  01A5               	clrf	___wmul@product+1
  6644  076D                     l2307:	
  6645  076D  1C20               	btfss	___wmul@multiplier,0
  6646  076E  2F73               	goto	l494
  6647  076F  0822               	movf	___wmul@multiplicand,w
  6648  0770  07A4               	addwf	___wmul@product,f
  6649  0771  0823               	movf	___wmul@multiplicand+1,w
  6650  0772  3DA5               	addwfc	___wmul@product+1,f
  6651  0773                     l494:	
  6652  0773  3001               	movlw	1
  6653  0774                     u2115:	
  6654  0774  35A2               	lslf	___wmul@multiplicand,f
  6655  0775  0DA3               	rlf	___wmul@multiplicand+1,f
  6656  0776  0B89               	decfsz	9,f
  6657  0777  2F74               	goto	u2115
  6658  0778  3001               	movlw	1
  6659  0779                     u2125:	
  6660  0779  36A1               	lsrf	___wmul@multiplier+1,f
  6661  077A  0CA0               	rrf	___wmul@multiplier,f
  6662  077B  0B89               	decfsz	9,f
  6663  077C  2F79               	goto	u2125
  6664  077D  0820               	movf	___wmul@multiplier,w
  6665  077E  0421               	iorwf	___wmul@multiplier+1,w
  6666  077F  1D03               	btfss	3,2
  6667  0780  2F6D               	goto	l2307
  6668  0781  0825               	movf	___wmul@product+1,w
  6669  0782  00A1               	movwf	?___wmul+1
  6670  0783  0824               	movf	___wmul@product,w
  6671  0784  00A0               	movwf	?___wmul
  6672  0785  0008               	return
  6673  0786                     __end_of___wmul:	
  6674                           
  6675                           	psect	text16
  6676  0684                     __ptext16:	
  6677 ;; *************** function _EMC1001_Read *****************
  6678 ;; Defined at:
  6679 ;;		line 10 in file "EMC1001.c"
  6680 ;; Parameters:    Size  Location     Type
  6681 ;;  reg             1    wreg     unsigned char 
  6682 ;;  pData           1    7[BANK0 ] PTR unsigned char 
  6683 ;;		 -> EMC1001_PrintTemp@templo(1), EMC1001_PrintTemp@temp(1), EMC1001_PrintInfo@templo(1), EMC1001_PrintInfo@temp(1), 
  6684 ;;		 -> EMC1001_PrintInfo@data(1), 
  6685 ;; Auto vars:     Size  Location     Type
  6686 ;;  reg             1   10[BANK0 ] unsigned char 
  6687 ;;  status          1   11[BANK0 ] enum E14334
  6688 ;; Return value:  Size  Location     Type
  6689 ;;                  1    wreg      unsigned char 
  6690 ;; Registers used:
  6691 ;;		wreg, fsr1l, fsr1h, status,2, status,0, pclath, cstack
  6692 ;; Tracked objects:
  6693 ;;		On entry : 0/0
  6694 ;;		On exit  : 0/0
  6695 ;;		Unchanged: 0/0
  6696 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
  6697 ;;      Params:         0       1       0       0       0       0       0       0       0       0       0       0       
      +0       0
  6698 ;;      Locals:         0       2       0       0       0       0       0       0       0       0       0       0       
      +0       0
  6699 ;;      Temps:          0       2       0       0       0       0       0       0       0       0       0       0       
      +0       0
  6700 ;;      Totals:         0       5       0       0       0       0       0       0       0       0       0       0       
      +0       0
  6701 ;;Total ram usage:        5 bytes
  6702 ;; Hardware stack levels used:    1
  6703 ;; Hardware stack levels required when called:    4
  6704 ;; This function calls:
  6705 ;;		_I2C2_MasterReadTRBBuild
  6706 ;;		_I2C2_MasterTRBInsert
  6707 ;;		_I2C2_MasterWriteTRBBuild
  6708 ;; This function is called by:
  6709 ;;		_EMC1001_PrintInfo
  6710 ;;		_EMC1001_PrintTemp
  6711 ;; This function uses a non-reentrant model
  6712 ;;
  6713                           
  6714                           
  6715                           ;psect for function _EMC1001_Read
  6716  0684                     _EMC1001_Read:	
  6717                           
  6718                           ;incstack = 0
  6719                           ; Regs used in _EMC1001_Read: [wreg+fsr1l+fsr1h+status,2+status,0+pclath+cstack]
  6720                           ;EMC1001_Read@reg stored from wreg
  6721  0684  0020               	movlb	0	; select bank0
  6722  0685  00AA               	movwf	EMC1001_Read@reg
  6723                           
  6724                           ;EMC1001.c: 12: I2C2_MESSAGE_STATUS status = I2C2_MESSAGE_PENDING;
  6725  0686  3002               	movlw	2
  6726  0687  00A8               	movwf	??_EMC1001_Read
  6727  0688  0828               	movf	??_EMC1001_Read,w
  6728  0689  00AB               	movwf	EMC1001_Read@status
  6729                           
  6730                           ;EMC1001.c: 13: static I2C2_TRANSACTION_REQUEST_BLOCK trb[2];
  6731                           ;EMC1001.c: 15: I2C2_MasterWriteTRBBuild(&trb[0], &reg, 1, 0x38);
  6732  068A  302A               	movlw	(low (EMC1001_Read@reg| 0))& (0+255)
  6733  068B  00A8               	movwf	??_EMC1001_Read
  6734  068C  0828               	movf	??_EMC1001_Read,w
  6735  068D  00A0               	movwf	I2C2_MasterWriteTRBBuild@pdata
  6736  068E  01A1               	clrf	I2C2_MasterWriteTRBBuild@length
  6737  068F  0AA1               	incf	I2C2_MasterWriteTRBBuild@length,f
  6738  0690  3038               	movlw	56
  6739  0691  00A2               	movwf	I2C2_MasterWriteTRBBuild@address
  6740  0692  3000               	movlw	0
  6741  0693  00A3               	movwf	I2C2_MasterWriteTRBBuild@address+1
  6742  0694  3051               	movlw	(low (EMC1001_Read@trb| 0))& (0+255)
  6743  0695  3187  274A  3186   	fcall	_I2C2_MasterWriteTRBBuild
  6744                           
  6745                           ;EMC1001.c: 16: I2C2_MasterReadTRBBuild(&trb[1], pData, 1, 0x38);
  6746  0698  0020               	movlb	0	; select bank0
  6747  0699  0827               	movf	EMC1001_Read@pData,w
  6748  069A  00A8               	movwf	??_EMC1001_Read
  6749  069B  0828               	movf	??_EMC1001_Read,w
  6750  069C  00A0               	movwf	I2C2_MasterReadTRBBuild@pdata
  6751  069D  01A1               	clrf	I2C2_MasterReadTRBBuild@length
  6752  069E  0AA1               	incf	I2C2_MasterReadTRBBuild@length,f
  6753  069F  3038               	movlw	56
  6754  06A0  00A2               	movwf	I2C2_MasterReadTRBBuild@address
  6755  06A1  3000               	movlw	0
  6756  06A2  00A3               	movwf	I2C2_MasterReadTRBBuild@address+1
  6757  06A3  3055               	movlw	(low ((EMC1001_Read@trb| 0+4)))& (0+255)
  6758  06A4  3187  2722  3186   	fcall	_I2C2_MasterReadTRBBuild
  6759                           
  6760                           ;EMC1001.c: 17: I2C2_MasterTRBInsert(2, &trb[0], &status);
  6761  06A7  3051               	movlw	(low (EMC1001_Read@trb| 0))& (0+255)
  6762  06A8  0020               	movlb	0	; select bank0
  6763  06A9  00A8               	movwf	??_EMC1001_Read
  6764  06AA  0828               	movf	??_EMC1001_Read,w
  6765  06AB  00A0               	movwf	I2C2_MasterTRBInsert@ptrb_list
  6766  06AC  302B               	movlw	(low (EMC1001_Read@status| 0))& (0+255)
  6767  06AD  00A9               	movwf	??_EMC1001_Read+1
  6768  06AE  0829               	movf	??_EMC1001_Read+1,w
  6769  06AF  00A1               	movwf	I2C2_MasterTRBInsert@pflag
  6770  06B0  3002               	movlw	2
  6771  06B1  3185  25FA  3186   	fcall	_I2C2_MasterTRBInsert
  6772  06B4                     l1797:	
  6773                           ;EMC1001.c: 19: while(status == I2C2_MESSAGE_PENDING);
  6774                           
  6775  06B4  3002               	movlw	2
  6776  06B5  0020               	movlb	0	; select bank0
  6777  06B6  062B               	xorwf	EMC1001_Read@status,w
  6778  06B7  1903               	btfsc	3,2
  6779  06B8  2EB4               	goto	l1797
  6780                           
  6781                           ;EMC1001.c: 21: return (status == I2C2_MESSAGE_COMPLETE);
  6782  06B9  082B               	movf	EMC1001_Read@status,w
  6783  06BA  1D03               	btfss	3,2
  6784  06BB  2EBE               	goto	u1370
  6785  06BC  3001               	movlw	1
  6786  06BD  0008               	return
  6787  06BE                     u1370:	
  6788  06BE  3000               	movlw	0
  6789  06BF  0008               	return
  6790  06C0                     __end_of_EMC1001_Read:	
  6791                           
  6792                           	psect	text17
  6793  074A                     __ptext17:	
  6794 ;; *************** function _I2C2_MasterWriteTRBBuild *****************
  6795 ;; Defined at:
  6796 ;;		line 707 in file "mcc_generated_files/i2c2.c"
  6797 ;; Parameters:    Size  Location     Type
  6798 ;;  ptrb            1    wreg     PTR struct .
  6799 ;;		 -> EMC1001_Read@trb(8), I2C2_MasterWrite@trBlock(4), 
  6800 ;;  pdata           1    0[BANK0 ] PTR unsigned char 
  6801 ;;		 -> EMC1001_Read@reg(1), 
  6802 ;;  length          1    1[BANK0 ] unsigned char 
  6803 ;;  address         2    2[BANK0 ] unsigned int 
  6804 ;; Auto vars:     Size  Location     Type
  6805 ;;  ptrb            1    6[BANK0 ] PTR struct .
  6806 ;;		 -> EMC1001_Read@trb(8), I2C2_MasterWrite@trBlock(4), 
  6807 ;; Return value:  Size  Location     Type
  6808 ;;                  1    wreg      void 
  6809 ;; Registers used:
  6810 ;;		wreg, fsr1l, fsr1h, status,2, status,0
  6811 ;; Tracked objects:
  6812 ;;		On entry : 0/0
  6813 ;;		On exit  : 0/0
  6814 ;;		Unchanged: 0/0
  6815 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
  6816 ;;      Params:         0       4       0       0       0       0       0       0       0       0       0       0       
      +0       0
  6817 ;;      Locals:         0       1       0       0       0       0       0       0       0       0       0       0       
      +0       0
  6818 ;;      Temps:          0       2       0       0       0       0       0       0       0       0       0       0       
      +0       0
  6819 ;;      Totals:         0       7       0       0       0       0       0       0       0       0       0       0       
      +0       0
  6820 ;;Total ram usage:        7 bytes
  6821 ;; Hardware stack levels used:    1
  6822 ;; Hardware stack levels required when called:    3
  6823 ;; This function calls:
  6824 ;;		Nothing
  6825 ;; This function is called by:
  6826 ;;		_EMC1001_Read
  6827 ;;		_I2C2_MasterWrite
  6828 ;; This function uses a non-reentrant model
  6829 ;;
  6830                           
  6831                           
  6832                           ;psect for function _I2C2_MasterWriteTRBBuild
  6833  074A                     _I2C2_MasterWriteTRBBuild:	
  6834                           
  6835                           ;incstack = 0
  6836                           ; Regs used in _I2C2_MasterWriteTRBBuild: [wreg+fsr1l+fsr1h+status,2+status,0]
  6837                           ;I2C2_MasterWriteTRBBuild@ptrb stored from wreg
  6838  074A  0020               	movlb	0	; select bank0
  6839  074B  00A6               	movwf	I2C2_MasterWriteTRBBuild@ptrb
  6840                           
  6841                           ;i2c2.c: 713: ptrb->address = address << 1;
  6842  074C  0823               	movf	I2C2_MasterWriteTRBBuild@address+1,w
  6843  074D  00A5               	movwf	??_I2C2_MasterWriteTRBBuild+1
  6844  074E  0822               	movf	I2C2_MasterWriteTRBBuild@address,w
  6845  074F  00A4               	movwf	??_I2C2_MasterWriteTRBBuild
  6846  0750  35A4               	lslf	??_I2C2_MasterWriteTRBBuild,f
  6847  0751  0DA5               	rlf	??_I2C2_MasterWriteTRBBuild+1,f
  6848  0752  0826               	movf	I2C2_MasterWriteTRBBuild@ptrb,w
  6849  0753  0086               	movwf	6
  6850  0754  0187               	clrf	7
  6851  0755  0824               	movf	??_I2C2_MasterWriteTRBBuild,w
  6852  0756  3FC0               	movwi [0]fsr1
  6853  0757  0825               	movf	??_I2C2_MasterWriteTRBBuild+1,w
  6854  0758  3FC1               	movwi [1]fsr1
  6855                           
  6856                           ;i2c2.c: 714: ptrb->length = length;
  6857  0759  0821               	movf	I2C2_MasterWriteTRBBuild@length,w
  6858  075A  00A4               	movwf	??_I2C2_MasterWriteTRBBuild
  6859  075B  0826               	movf	I2C2_MasterWriteTRBBuild@ptrb,w
  6860  075C  3E02               	addlw	2
  6861  075D  0086               	movwf	6
  6862  075E  0187               	clrf	7
  6863  075F  0824               	movf	??_I2C2_MasterWriteTRBBuild,w
  6864  0760  0081               	movwf	1
  6865                           
  6866                           ;i2c2.c: 715: ptrb->pbuffer = pdata;
  6867  0761  0820               	movf	I2C2_MasterWriteTRBBuild@pdata,w
  6868  0762  00A4               	movwf	??_I2C2_MasterWriteTRBBuild
  6869  0763  0826               	movf	I2C2_MasterWriteTRBBuild@ptrb,w
  6870  0764  3E03               	addlw	3
  6871  0765  0086               	movwf	6
  6872  0766  0187               	clrf	7
  6873  0767  0824               	movf	??_I2C2_MasterWriteTRBBuild,w
  6874  0768  0081               	movwf	1
  6875  0769  0008               	return
  6876  076A                     __end_of_I2C2_MasterWriteTRBBuild:	
  6877                           
  6878                           	psect	text18
  6879  05FA                     __ptext18:	
  6880 ;; *************** function _I2C2_MasterTRBInsert *****************
  6881 ;; Defined at:
  6882 ;;		line 641 in file "mcc_generated_files/i2c2.c"
  6883 ;; Parameters:    Size  Location     Type
  6884 ;;  count           1    wreg     unsigned char 
  6885 ;;  ptrb_list       1    0[BANK0 ] PTR struct .
  6886 ;;		 -> EMC1001_Read@trb(8), I2C2_MasterRead@trBlock(4), I2C2_MasterWrite@trBlock(4), 
  6887 ;;  pflag           1    1[BANK0 ] PTR enum E14260
  6888 ;;		 -> EMC1001_Read@status(1), 
  6889 ;; Auto vars:     Size  Location     Type
  6890 ;;  count           1    3[BANK0 ] unsigned char 
  6891 ;; Return value:  Size  Location     Type
  6892 ;;                  1    wreg      void 
  6893 ;; Registers used:
  6894 ;;		wreg, fsr1l, fsr1h, status,2, status,0
  6895 ;; Tracked objects:
  6896 ;;		On entry : 0/0
  6897 ;;		On exit  : 0/0
  6898 ;;		Unchanged: 0/0
  6899 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
  6900 ;;      Params:         0       2       0       0       0       0       0       0       0       0       0       0       
      +0       0
  6901 ;;      Locals:         0       1       0       0       0       0       0       0       0       0       0       0       
      +0       0
  6902 ;;      Temps:          0       1       0       0       0       0       0       0       0       0       0       0       
      +0       0
  6903 ;;      Totals:         0       4       0       0       0       0       0       0       0       0       0       0       
      +0       0
  6904 ;;Total ram usage:        4 bytes
  6905 ;; Hardware stack levels used:    1
  6906 ;; Hardware stack levels required when called:    3
  6907 ;; This function calls:
  6908 ;;		Nothing
  6909 ;; This function is called by:
  6910 ;;		_EMC1001_Read
  6911 ;;		_I2C2_MasterWrite
  6912 ;;		_I2C2_MasterRead
  6913 ;; This function uses a non-reentrant model
  6914 ;;
  6915                           
  6916                           
  6917                           ;psect for function _I2C2_MasterTRBInsert
  6918  05FA                     _I2C2_MasterTRBInsert:	
  6919                           
  6920                           ;incstack = 0
  6921                           ; Regs used in _I2C2_MasterTRBInsert: [wreg+fsr1l+fsr1h+status,2+status,0]
  6922                           ;I2C2_MasterTRBInsert@count stored from wreg
  6923  05FA  0020               	movlb	0	; select bank0
  6924  05FB  00A3               	movwf	I2C2_MasterTRBInsert@count
  6925                           
  6926                           ;i2c2.c: 648: if (i2c2_object.trStatus.s.full != 1)
  6927  05FC  184D               	btfsc	_i2c2_object+2,0
  6928  05FD  2E2E               	goto	l1543
  6929                           
  6930                           ;i2c2.c: 649: {
  6931                           ;i2c2.c: 650: *pflag = I2C2_MESSAGE_PENDING;
  6932  05FE  3002               	movlw	2
  6933  05FF  00A2               	movwf	??_I2C2_MasterTRBInsert
  6934  0600  0821               	movf	I2C2_MasterTRBInsert@pflag,w
  6935  0601  0086               	movwf	6
  6936  0602  0187               	clrf	7
  6937  0603  0822               	movf	??_I2C2_MasterTRBInsert,w
  6938  0604  0081               	movwf	1
  6939                           
  6940                           ;i2c2.c: 652: i2c2_object.pTrTail->ptrb_list = ptrb_list;
  6941  0605  0820               	movf	I2C2_MasterTRBInsert@ptrb_list,w
  6942  0606  00A2               	movwf	??_I2C2_MasterTRBInsert
  6943  0607  0A4B               	incf	_i2c2_object,w
  6944  0608  0086               	movwf	6
  6945  0609  0187               	clrf	7
  6946  060A  0822               	movf	??_I2C2_MasterTRBInsert,w
  6947  060B  0081               	movwf	1
  6948                           
  6949                           ;i2c2.c: 653: i2c2_object.pTrTail->count = count;
  6950  060C  0823               	movf	I2C2_MasterTRBInsert@count,w
  6951  060D  00A2               	movwf	??_I2C2_MasterTRBInsert
  6952  060E  084B               	movf	_i2c2_object,w
  6953  060F  0086               	movwf	6
  6954  0610  0187               	clrf	7
  6955  0611  0822               	movf	??_I2C2_MasterTRBInsert,w
  6956  0612  0081               	movwf	1
  6957                           
  6958                           ;i2c2.c: 654: i2c2_object.pTrTail->pTrFlag = pflag;
  6959  0613  0821               	movf	I2C2_MasterTRBInsert@pflag,w
  6960  0614  00A2               	movwf	??_I2C2_MasterTRBInsert
  6961  0615  084B               	movf	_i2c2_object,w
  6962  0616  3E02               	addlw	2
  6963  0617  0086               	movwf	6
  6964  0618  0187               	clrf	7
  6965  0619  0822               	movf	??_I2C2_MasterTRBInsert,w
  6966  061A  0081               	movwf	1
  6967                           
  6968                           ;i2c2.c: 655: i2c2_object.pTrTail++;
  6969  061B  3003               	movlw	3
  6970  061C  00A2               	movwf	??_I2C2_MasterTRBInsert
  6971  061D  0822               	movf	??_I2C2_MasterTRBInsert,w
  6972  061E  07CB               	addwf	_i2c2_object,f
  6973                           
  6974                           ;i2c2.c: 658: if (i2c2_object.pTrTail == (i2c2_tr_queue + 1))
  6975  061F  084B               	movf	_i2c2_object,w
  6976  0620  3A64               	xorlw	(low ((_i2c2_tr_queue| 0+3)))& (0+255)
  6977  0621  1D03               	skipz
  6978  0622  2E27               	goto	l1539
  6979                           
  6980                           ;i2c2.c: 659: {
  6981                           ;i2c2.c: 661: i2c2_object.pTrTail = i2c2_tr_queue;
  6982  0623  3061               	movlw	(low (_i2c2_tr_queue| 0))& (0+255)
  6983  0624  00A2               	movwf	??_I2C2_MasterTRBInsert
  6984  0625  0822               	movf	??_I2C2_MasterTRBInsert,w
  6985  0626  00CB               	movwf	_i2c2_object
  6986  0627                     l1539:	
  6987                           
  6988                           ;i2c2.c: 662: }
  6989                           ;i2c2.c: 666: i2c2_object.trStatus.s.empty = 0;
  6990  0627  10CD               	bcf	_i2c2_object+2,1
  6991                           
  6992                           ;i2c2.c: 669: if (i2c2_object.pTrHead == i2c2_object.pTrTail)
  6993  0628  084C               	movf	low ((_i2c2_object| 0+1)),w
  6994  0629  064B               	xorwf	_i2c2_object,w
  6995  062A  1D03               	skipz
  6996  062B  2E33               	goto	l1545
  6997                           
  6998                           ;i2c2.c: 670: {
  6999                           ;i2c2.c: 672: i2c2_object.trStatus.s.full = 1;
  7000  062C  144D               	bsf	_i2c2_object+2,0
  7001                           
  7002                           ;i2c2.c: 673: }
  7003                           ;i2c2.c: 675: }
  7004  062D  2E33               	goto	l1545
  7005  062E                     l1543:	
  7006                           
  7007                           ;i2c2.c: 676: else
  7008                           ;i2c2.c: 677: {
  7009                           ;i2c2.c: 678: *pflag = I2C2_MESSAGE_FAIL;
  7010  062E  0821               	movf	I2C2_MasterTRBInsert@pflag,w
  7011  062F  0086               	movwf	6
  7012  0630  0187               	clrf	7
  7013  0631  0181               	clrf	1
  7014  0632  0A81               	incf	1,f
  7015  0633                     l1545:	
  7016                           
  7017                           ;i2c2.c: 679: }
  7018                           ;i2c2.c: 682: if (*pflag == I2C2_MESSAGE_PENDING)
  7019  0633  0821               	movf	I2C2_MasterTRBInsert@pflag,w
  7020  0634  0086               	movwf	6
  7021  0635  0187               	clrf	7
  7022  0636  3002               	movlw	2
  7023  0637  0601               	xorwf	1,w
  7024  0638  1D03               	btfss	3,2
  7025  0639  0008               	return
  7026  063A                     l1549:	
  7027                           ;i2c2.c: 683: {
  7028                           ;i2c2.c: 684: while(i2c2_state != S_MASTER_IDLE);
  7029                           
  7030  063A  0850               	movf	_i2c2_state,w
  7031  063B  1D03               	btfss	3,2
  7032  063C  2E3A               	goto	l1549
  7033                           
  7034                           ;i2c2.c: 685: {
  7035                           ;i2c2.c: 688: PIR3bits.SSP2IF = 1;
  7036  063D  002E               	movlb	14	; select bank14
  7037  063E  150F               	bsf	15,2	;volatile
  7038  063F  0008               	return
  7039  0640                     __end_of_I2C2_MasterTRBInsert:	
  7040                           
  7041                           	psect	text19
  7042  0722                     __ptext19:	
  7043 ;; *************** function _I2C2_MasterReadTRBBuild *****************
  7044 ;; Defined at:
  7045 ;;		line 694 in file "mcc_generated_files/i2c2.c"
  7046 ;; Parameters:    Size  Location     Type
  7047 ;;  ptrb            1    wreg     PTR struct .
  7048 ;;		 -> EMC1001_Read@trb(8), I2C2_MasterRead@trBlock(4), 
  7049 ;;  pdata           1    0[BANK0 ] PTR unsigned char 
  7050 ;;		 -> EMC1001_PrintTemp@templo(1), EMC1001_PrintTemp@temp(1), EMC1001_PrintInfo@templo(1), EMC1001_PrintInfo@temp(1), 
  7051 ;;		 -> EMC1001_PrintInfo@data(1), 
  7052 ;;  length          1    1[BANK0 ] unsigned char 
  7053 ;;  address         2    2[BANK0 ] unsigned int 
  7054 ;; Auto vars:     Size  Location     Type
  7055 ;;  ptrb            1    6[BANK0 ] PTR struct .
  7056 ;;		 -> EMC1001_Read@trb(8), I2C2_MasterRead@trBlock(4), 
  7057 ;; Return value:  Size  Location     Type
  7058 ;;                  1    wreg      void 
  7059 ;; Registers used:
  7060 ;;		wreg, fsr1l, fsr1h, status,2, status,0
  7061 ;; Tracked objects:
  7062 ;;		On entry : 0/0
  7063 ;;		On exit  : 0/0
  7064 ;;		Unchanged: 0/0
  7065 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
  7066 ;;      Params:         0       4       0       0       0       0       0       0       0       0       0       0       
      +0       0
  7067 ;;      Locals:         0       1       0       0       0       0       0       0       0       0       0       0       
      +0       0
  7068 ;;      Temps:          0       2       0       0       0       0       0       0       0       0       0       0       
      +0       0
  7069 ;;      Totals:         0       7       0       0       0       0       0       0       0       0       0       0       
      +0       0
  7070 ;;Total ram usage:        7 bytes
  7071 ;; Hardware stack levels used:    1
  7072 ;; Hardware stack levels required when called:    3
  7073 ;; This function calls:
  7074 ;;		Nothing
  7075 ;; This function is called by:
  7076 ;;		_EMC1001_Read
  7077 ;;		_I2C2_MasterRead
  7078 ;; This function uses a non-reentrant model
  7079 ;;
  7080                           
  7081                           
  7082                           ;psect for function _I2C2_MasterReadTRBBuild
  7083  0722                     _I2C2_MasterReadTRBBuild:	
  7084                           
  7085                           ;incstack = 0
  7086                           ; Regs used in _I2C2_MasterReadTRBBuild: [wreg+fsr1l+fsr1h+status,2+status,0]
  7087                           ;I2C2_MasterReadTRBBuild@ptrb stored from wreg
  7088  0722  0020               	movlb	0	; select bank0
  7089  0723  00A6               	movwf	I2C2_MasterReadTRBBuild@ptrb
  7090                           
  7091                           ;i2c2.c: 700: ptrb->address = address << 1;
  7092  0724  0823               	movf	I2C2_MasterReadTRBBuild@address+1,w
  7093  0725  00A5               	movwf	??_I2C2_MasterReadTRBBuild+1
  7094  0726  0822               	movf	I2C2_MasterReadTRBBuild@address,w
  7095  0727  00A4               	movwf	??_I2C2_MasterReadTRBBuild
  7096  0728  35A4               	lslf	??_I2C2_MasterReadTRBBuild,f
  7097  0729  0DA5               	rlf	??_I2C2_MasterReadTRBBuild+1,f
  7098  072A  0826               	movf	I2C2_MasterReadTRBBuild@ptrb,w
  7099  072B  0086               	movwf	6
  7100  072C  0187               	clrf	7
  7101  072D  0824               	movf	??_I2C2_MasterReadTRBBuild,w
  7102  072E  3FC0               	movwi [0]fsr1
  7103  072F  0825               	movf	??_I2C2_MasterReadTRBBuild+1,w
  7104  0730  3FC1               	movwi [1]fsr1
  7105                           
  7106                           ;i2c2.c: 702: ptrb->address |= 0x01;
  7107  0731  0826               	movf	I2C2_MasterReadTRBBuild@ptrb,w
  7108  0732  0086               	movwf	6
  7109  0733  0187               	clrf	7
  7110  0734  3001               	movlw	1
  7111  0735  0481               	iorwf	1,f
  7112  0736  3141               	addfsr 1,1
  7113  0737  3000               	movlw	0
  7114  0738  0481               	iorwf	1,f
  7115                           
  7116                           ;i2c2.c: 703: ptrb->length = length;
  7117  0739  0821               	movf	I2C2_MasterReadTRBBuild@length,w
  7118  073A  00A4               	movwf	??_I2C2_MasterReadTRBBuild
  7119  073B  0826               	movf	I2C2_MasterReadTRBBuild@ptrb,w
  7120  073C  3E02               	addlw	2
  7121  073D  0086               	movwf	6
  7122  073E  0187               	clrf	7
  7123  073F  0824               	movf	??_I2C2_MasterReadTRBBuild,w
  7124  0740  0081               	movwf	1
  7125                           
  7126                           ;i2c2.c: 704: ptrb->pbuffer = pdata;
  7127  0741  0820               	movf	I2C2_MasterReadTRBBuild@pdata,w
  7128  0742  00A4               	movwf	??_I2C2_MasterReadTRBBuild
  7129  0743  0826               	movf	I2C2_MasterReadTRBBuild@ptrb,w
  7130  0744  3E03               	addlw	3
  7131  0745  0086               	movwf	6
  7132  0746  0187               	clrf	7
  7133  0747  0824               	movf	??_I2C2_MasterReadTRBBuild,w
  7134  0748  0081               	movwf	1
  7135  0749  0008               	return
  7136  074A                     __end_of_I2C2_MasterReadTRBBuild:	
  7137                           
  7138                           	psect	intentry
  7139  0004                     __pintentry:	
  7140 ;; *************** function _INTERRUPT_InterruptManager *****************
  7141 ;; Defined at:
  7142 ;;		line 51 in file "mcc_generated_files/interrupt_manager.c"
  7143 ;; Parameters:    Size  Location     Type
  7144 ;;		None
  7145 ;; Auto vars:     Size  Location     Type
  7146 ;;		None
  7147 ;; Return value:  Size  Location     Type
  7148 ;;                  1    wreg      void 
  7149 ;; Registers used:
  7150 ;;		wreg, fsr0l, fsr0h, fsr1l, fsr1h, status,2, status,0, pclath, cstack
  7151 ;; Tracked objects:
  7152 ;;		On entry : 0/0
  7153 ;;		On exit  : 0/0
  7154 ;;		Unchanged: 0/0
  7155 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
  7156 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  7157 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  7158 ;;      Temps:          1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  7159 ;;      Totals:         1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  7160 ;;Total ram usage:        1 bytes
  7161 ;; Hardware stack levels used:    1
  7162 ;; Hardware stack levels required when called:    2
  7163 ;; This function calls:
  7164 ;;		_I2C2_BusCollisionISR
  7165 ;;		_I2C2_ISR
  7166 ;; This function is called by:
  7167 ;;		Interrupt level 1
  7168 ;; This function uses a non-reentrant model
  7169 ;;
  7170                           
  7171  0004                     _INTERRUPT_InterruptManager:	
  7172                           
  7173                           ;incstack = 0
  7174  0004  147E               	bsf	126,0	;set compiler interrupt flag (level 1)
  7175                           
  7176                           ; Regs used in _INTERRUPT_InterruptManager: [wreg-fsr1h+status,2+status,0+pclath+cstack]
  7177  0005  3180               	pagesel	$
  7178  0006  0020               	movlb	0	; select bank0
  7179  0007  087F               	movf	127,w
  7180  0008  00F6               	movwf	??_INTERRUPT_InterruptManager
  7181                           
  7182                           ;interrupt_manager.c: 54: if(INTCONbits.PEIE == 1 && PIE3bits.BCL2IE == 1 && PIR3bits.BC
      +                          L2IF == 1)
  7183  0009  1F0B               	btfss	11,6	;volatile
  7184  000A  2813               	goto	i1l200
  7185  000B  002E               	movlb	14	; select bank14
  7186  000C  1999               	btfsc	25,3	;volatile
  7187  000D  1D8F               	btfss	15,3	;volatile
  7188  000E  2813               	goto	i1l200
  7189                           
  7190                           ;interrupt_manager.c: 55: {
  7191                           ;interrupt_manager.c: 56: I2C2_BusCollisionISR();
  7192  000F  3180  2003  3180   	fcall	_I2C2_BusCollisionISR
  7193                           
  7194                           ;interrupt_manager.c: 57: }
  7195  0012  281B               	goto	i1l204
  7196  0013                     i1l200:	
  7197                           
  7198                           ;interrupt_manager.c: 58: else if(INTCONbits.PEIE == 1 && PIE3bits.SSP2IE == 1 && PIR3bi
      +                          ts.SSP2IF == 1)
  7199  0013  1F0B               	btfss	11,6	;volatile
  7200  0014  281B               	goto	i1l204
  7201  0015  002E               	movlb	14	; select bank14
  7202  0016  1919               	btfsc	25,2	;volatile
  7203  0017  1D0F               	btfss	15,2	;volatile
  7204  0018  281B               	goto	i1l204
  7205                           
  7206                           ;interrupt_manager.c: 59: {
  7207                           ;interrupt_manager.c: 60: I2C2_ISR();
  7208  0019  3184  2432         	fcall	_I2C2_ISR
  7209  001B                     i1l204:	
  7210                           ;interrupt_manager.c: 62: else
  7211                           ;interrupt_manager.c: 63: {
  7212                           
  7213                           ;interrupt_manager.c: 61: }
  7214                           
  7215  001B  0876               	movf	??_INTERRUPT_InterruptManager,w
  7216  001C  0020               	movlb	0	; select bank0
  7217  001D  00FF               	movwf	127
  7218  001E  107E               	bcf	126,0	;clear compiler interrupt flag (level 1)
  7219  001F  0009               	retfie
  7220  0020                     __end_of_INTERRUPT_InterruptManager:	
  7221                           
  7222                           	psect	text21
  7223  0432                     __ptext21:	
  7224 ;; *************** function _I2C2_ISR *****************
  7225 ;; Defined at:
  7226 ;;		line 233 in file "mcc_generated_files/i2c2.c"
  7227 ;; Parameters:    Size  Location     Type
  7228 ;;		None
  7229 ;; Auto vars:     Size  Location     Type
  7230 ;;		None
  7231 ;; Return value:  Size  Location     Type
  7232 ;;                  1    wreg      void 
  7233 ;; Registers used:
  7234 ;;		wreg, fsr0l, fsr0h, fsr1l, fsr1h, status,2, status,0, pclath, cstack
  7235 ;; Tracked objects:
  7236 ;;		On entry : 0/0
  7237 ;;		On exit  : 0/0
  7238 ;;		Unchanged: 0/0
  7239 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
  7240 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  7241 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  7242 ;;      Temps:          4       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  7243 ;;      Totals:         4       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  7244 ;;Total ram usage:        4 bytes
  7245 ;; Hardware stack levels used:    1
  7246 ;; Hardware stack levels required when called:    1
  7247 ;; This function calls:
  7248 ;;		_I2C2_FunctionComplete
  7249 ;;		_I2C2_Stop
  7250 ;; This function is called by:
  7251 ;;		_INTERRUPT_InterruptManager
  7252 ;; This function uses a non-reentrant model
  7253 ;;
  7254                           
  7255                           
  7256                           ;psect for function _I2C2_ISR
  7257  0432                     _I2C2_ISR:	
  7258                           
  7259                           ;i2c2.c: 236: static uint8_t *pi2c_buf_ptr;
  7260                           ;i2c2.c: 237: static uint16_t i2c_address = 0;
  7261                           ;i2c2.c: 238: static uint8_t i2c_bytes_left = 0;
  7262                           ;i2c2.c: 239: static uint8_t i2c_10bit_address_restart = 0;
  7263                           ;i2c2.c: 241: PIR3bits.SSP2IF = 0;
  7264                           
  7265                           ;incstack = 0
  7266                           ; Regs used in _I2C2_ISR: [wreg-fsr1h+status,2+status,0+pclath+cstack]
  7267  0432  002E               	movlb	14	; select bank14
  7268  0433  110F               	bcf	15,2	;volatile
  7269                           
  7270                           ;i2c2.c: 245: if(SSP2CON1bits.WCOL)
  7271  0434  0023               	movlb	3	; select bank3
  7272  0435  1F9A               	btfss	26,7	;volatile
  7273  0436  2D60               	goto	i1l1957
  7274                           
  7275                           ;i2c2.c: 246: {
  7276                           ;i2c2.c: 248: SSP2CON1bits.WCOL = 0;
  7277  0437  139A               	bcf	26,7	;volatile
  7278                           
  7279                           ;i2c2.c: 249: i2c2_state = S_MASTER_IDLE;
  7280  0438  0020               	movlb	0	; select bank0
  7281  0439  01D0               	clrf	_i2c2_state
  7282                           
  7283                           ;i2c2.c: 250: *(p_i2c2_current->pTrFlag) = I2C2_MESSAGE_FAIL;
  7284  043A  087A               	movf	_p_i2c2_current,w
  7285  043B  3E02               	addlw	2
  7286  043C  0086               	movwf	6
  7287  043D  0187               	clrf	7
  7288  043E  0801               	movf	1,w
  7289  043F  0086               	movwf	6
  7290  0440  0187               	clrf	7
  7291  0441  0181               	clrf	1
  7292  0442  0A81               	incf	1,f
  7293                           
  7294                           ;i2c2.c: 253: p_i2c2_current = (0);
  7295  0443  01FA               	clrf	_p_i2c2_current
  7296                           
  7297                           ;i2c2.c: 255: return;
  7298  0444  0008               	return
  7299  0445                     i1l100:	
  7300                           ;i2c2.c: 260: {
  7301                           ;i2c2.c: 261: case S_MASTER_IDLE:
  7302                           
  7303                           ;i2c2.c: 256: }
  7304                           ;i2c2.c: 259: switch(i2c2_state)
  7305                           
  7306                           
  7307                           ;i2c2.c: 263: if(i2c2_object.trStatus.s.empty != 1)
  7308  0445  18CD               	btfsc	_i2c2_object+2,1
  7309  0446  0008               	return
  7310                           
  7311                           ;i2c2.c: 264: {
  7312                           ;i2c2.c: 266: p_i2c2_current = i2c2_object.pTrHead;
  7313  0447  084C               	movf	low ((_i2c2_object| 0+1)),w
  7314  0448  00F2               	movwf	??_I2C2_ISR
  7315  0449  0872               	movf	??_I2C2_ISR,w
  7316  044A  00FA               	movwf	_p_i2c2_current
  7317                           
  7318                           ;i2c2.c: 267: i2c2_trb_count = i2c2_object.pTrHead->count;
  7319  044B  084C               	movf	low ((_i2c2_object| 0+1)),w
  7320  044C  0086               	movwf	6
  7321  044D  0187               	clrf	7
  7322  044E  0801               	movf	1,w
  7323  044F  00F2               	movwf	??_I2C2_ISR
  7324  0450  0872               	movf	??_I2C2_ISR,w
  7325  0451  00FC               	movwf	_i2c2_trb_count
  7326                           
  7327                           ;i2c2.c: 268: p_i2c2_trb_current = i2c2_object.pTrHead->ptrb_list;
  7328  0452  084C               	movf	low ((_i2c2_object| 0+1)),w
  7329  0453  0086               	movwf	6
  7330  0454  0187               	clrf	7
  7331  0455  3F41               	moviw [1]fsr1
  7332  0456  00FB               	movwf	_p_i2c2_trb_current
  7333                           
  7334                           ;i2c2.c: 270: i2c2_object.pTrHead++;
  7335  0457  3003               	movlw	3
  7336  0458  00F2               	movwf	??_I2C2_ISR
  7337  0459  0872               	movf	??_I2C2_ISR,w
  7338  045A  07CC               	addwf	low ((_i2c2_object| 0+1)),f
  7339                           
  7340                           ;i2c2.c: 273: if(i2c2_object.pTrHead == (i2c2_tr_queue + 1))
  7341  045B  084C               	movf	low ((_i2c2_object| 0+1)),w
  7342  045C  3A64               	xorlw	(low ((_i2c2_tr_queue| 0+3)))& (0+255)
  7343  045D  1D03               	skipz
  7344  045E  2C63               	goto	i1l1845
  7345                           
  7346                           ;i2c2.c: 274: {
  7347                           ;i2c2.c: 276: i2c2_object.pTrHead = i2c2_tr_queue;
  7348  045F  3061               	movlw	(low (_i2c2_tr_queue| 0))& (0+255)
  7349  0460  00F2               	movwf	??_I2C2_ISR
  7350  0461  0872               	movf	??_I2C2_ISR,w
  7351  0462  00CC               	movwf	low ((_i2c2_object| 0+1))
  7352  0463                     i1l1845:	
  7353                           
  7354                           ;i2c2.c: 277: }
  7355                           ;i2c2.c: 281: i2c2_object.trStatus.s.full = 0;
  7356  0463  104D               	bcf	_i2c2_object+2,0
  7357                           
  7358                           ;i2c2.c: 284: if(i2c2_object.pTrHead == i2c2_object.pTrTail)
  7359  0464  084C               	movf	low ((_i2c2_object| 0+1)),w
  7360  0465  064B               	xorwf	_i2c2_object,w
  7361  0466  1903               	btfsc	3,2
  7362                           
  7363                           ;i2c2.c: 285: {
  7364                           ;i2c2.c: 287: i2c2_object.trStatus.s.empty = 1;
  7365  0467  14CD               	bsf	_i2c2_object+2,1
  7366                           
  7367                           ;i2c2.c: 288: }
  7368                           ;i2c2.c: 291: SSP2CON2bits.SEN = 1;
  7369  0468  0023               	movlb	3	; select bank3
  7370  0469  141B               	bsf	27,0	;volatile
  7371                           
  7372                           ;i2c2.c: 294: i2c2_state = S_MASTER_SEND_ADDR;
  7373  046A  3002               	movlw	2
  7374  046B  00F2               	movwf	??_I2C2_ISR
  7375  046C  0872               	movf	??_I2C2_ISR,w
  7376  046D  0020               	movlb	0	; select bank0
  7377  046E  00D0               	movwf	_i2c2_state
  7378                           
  7379                           ;i2c2.c: 295: }
  7380                           ;i2c2.c: 297: break;
  7381  046F  0008               	return
  7382  0470                     i1l105:	
  7383                           ;i2c2.c: 299: case S_MASTER_RESTART:
  7384                           
  7385                           
  7386                           ;i2c2.c: 304: SSP2CON2bits.RSEN = 1;
  7387  0470  0023               	movlb	3	; select bank3
  7388  0471  149B               	bsf	27,1	;volatile
  7389                           
  7390                           ;i2c2.c: 307: i2c2_state = S_MASTER_SEND_ADDR;
  7391  0472  3002               	movlw	2
  7392  0473  00F2               	movwf	??_I2C2_ISR
  7393  0474  0872               	movf	??_I2C2_ISR,w
  7394  0475  0020               	movlb	0	; select bank0
  7395  0476  00D0               	movwf	_i2c2_state
  7396                           
  7397                           ;i2c2.c: 309: break;
  7398  0477  0008               	return
  7399  0478                     i1l106:	
  7400                           ;i2c2.c: 311: case S_MASTER_SEND_ADDR_10BIT_LSB:
  7401                           
  7402                           
  7403                           ;i2c2.c: 313: if(SSP2CON2bits.ACKSTAT)
  7404  0478  0023               	movlb	3	; select bank3
  7405  0479  1F1B               	btfss	27,6	;volatile
  7406  047A  2C84               	goto	i1l1857
  7407                           
  7408                           ;i2c2.c: 314: {
  7409                           ;i2c2.c: 315: i2c2_object.i2cErrors++;
  7410  047B  3001               	movlw	1
  7411  047C  00F2               	movwf	??_I2C2_ISR
  7412  047D  0872               	movf	??_I2C2_ISR,w
  7413  047E  0020               	movlb	0	; select bank0
  7414  047F  07CF               	addwf	_i2c2_object+4,f
  7415                           
  7416                           ;i2c2.c: 316: I2C2_Stop(I2C2_MESSAGE_ADDRESS_NO_ACK);
  7417  0480  3004               	movlw	4
  7418  0481  3187  27B6         	fcall	_I2C2_Stop
  7419                           
  7420                           ;i2c2.c: 317: }
  7421  0483  0008               	return
  7422  0484                     i1l1857:	
  7423                           
  7424                           ;i2c2.c: 318: else
  7425                           ;i2c2.c: 319: {
  7426                           ;i2c2.c: 321: SSP2BUF = (i2c_address >> 1) & 0x00FF;
  7427  0484  0020               	movlb	0	; select bank0
  7428  0485  0865               	movf	I2C2_ISR@i2c_address+1,w
  7429  0486  00F3               	movwf	??_I2C2_ISR+1
  7430  0487  0864               	movf	I2C2_ISR@i2c_address,w
  7431  0488  00F2               	movwf	??_I2C2_ISR
  7432  0489  36F3               	lsrf	??_I2C2_ISR+1,f
  7433  048A  0CF2               	rrf	??_I2C2_ISR,f
  7434  048B  0872               	movf	??_I2C2_ISR,w
  7435  048C  0023               	movlb	3	; select bank3
  7436  048D  0096               	movwf	22	;volatile
  7437                           
  7438                           ;i2c2.c: 324: if(i2c_address & 0x01)
  7439  048E  0020               	movlb	0	; select bank0
  7440  048F  1C64               	btfss	I2C2_ISR@i2c_address,0
  7441  0490  2C96               	goto	i1l1863
  7442                           
  7443                           ;i2c2.c: 325: {
  7444                           ;i2c2.c: 328: i2c2_state = S_MASTER_10BIT_RESTART;
  7445  0491  300B               	movlw	11
  7446  0492  00F2               	movwf	??_I2C2_ISR
  7447  0493  0872               	movf	??_I2C2_ISR,w
  7448  0494  00D0               	movwf	_i2c2_state
  7449                           
  7450                           ;i2c2.c: 329: }
  7451  0495  0008               	return
  7452  0496                     i1l1863:	
  7453                           
  7454                           ;i2c2.c: 330: else
  7455                           ;i2c2.c: 331: {
  7456                           ;i2c2.c: 333: i2c2_state = S_MASTER_SEND_DATA;
  7457  0496  3003               	movlw	3
  7458  0497  00F2               	movwf	??_I2C2_ISR
  7459  0498  0872               	movf	??_I2C2_ISR,w
  7460  0499  00D0               	movwf	_i2c2_state
  7461                           
  7462                           ;i2c2.c: 334: }
  7463                           ;i2c2.c: 335: }
  7464                           ;i2c2.c: 337: break;
  7465  049A  0008               	return
  7466  049B                     i1l111:	
  7467                           ;i2c2.c: 339: case S_MASTER_10BIT_RESTART:
  7468                           
  7469                           
  7470                           ;i2c2.c: 341: if(SSP2CON2bits.ACKSTAT)
  7471  049B  0023               	movlb	3	; select bank3
  7472  049C  1F1B               	btfss	27,6	;volatile
  7473  049D  2CA7               	goto	i1l112
  7474                           
  7475                           ;i2c2.c: 342: {
  7476                           ;i2c2.c: 343: i2c2_object.i2cErrors++;
  7477  049E  3001               	movlw	1
  7478  049F  00F2               	movwf	??_I2C2_ISR
  7479  04A0  0872               	movf	??_I2C2_ISR,w
  7480  04A1  0020               	movlb	0	; select bank0
  7481  04A2  07CF               	addwf	_i2c2_object+4,f
  7482                           
  7483                           ;i2c2.c: 344: I2C2_Stop(I2C2_MESSAGE_ADDRESS_NO_ACK);
  7484  04A3  3004               	movlw	4
  7485  04A4  3187  27B6         	fcall	_I2C2_Stop
  7486                           
  7487                           ;i2c2.c: 345: }
  7488  04A6  0008               	return
  7489  04A7                     i1l112:	
  7490                           
  7491                           ;i2c2.c: 346: else
  7492                           ;i2c2.c: 347: {
  7493                           ;i2c2.c: 350: SSP2CON2bits.RSEN = 1;
  7494  04A7  149B               	bsf	27,1	;volatile
  7495                           
  7496                           ;i2c2.c: 354: i2c_address = 0x00F0 | ((i2c_address >> 8) & 0x0006);
  7497  04A8  0020               	movlb	0	; select bank0
  7498  04A9  0865               	movf	I2C2_ISR@i2c_address+1,w
  7499  04AA  00F3               	movwf	??_I2C2_ISR+1
  7500  04AB  0864               	movf	I2C2_ISR@i2c_address,w
  7501  04AC  00F2               	movwf	??_I2C2_ISR
  7502  04AD  0873               	movf	??_I2C2_ISR+1,w
  7503  04AE  00F2               	movwf	??_I2C2_ISR
  7504  04AF  01F3               	clrf	??_I2C2_ISR+1
  7505  04B0  3006               	movlw	6
  7506  04B1  0572               	andwf	??_I2C2_ISR,w
  7507  04B2  00F4               	movwf	??_I2C2_ISR+2
  7508  04B3  3000               	movlw	0
  7509  04B4  0573               	andwf	??_I2C2_ISR+1,w
  7510  04B5  00F5               	movwf	??_I2C2_ISR+3
  7511  04B6  30F0               	movlw	240
  7512  04B7  0474               	iorwf	??_I2C2_ISR+2,w
  7513  04B8  00E4               	movwf	I2C2_ISR@i2c_address
  7514  04B9  3000               	movlw	0
  7515  04BA  0475               	iorwf	??_I2C2_ISR+3,w
  7516  04BB  00E5               	movwf	I2C2_ISR@i2c_address+1
  7517                           
  7518                           ;i2c2.c: 357: i2c_address |= 0x0001;
  7519  04BC  1464               	bsf	I2C2_ISR@i2c_address,0
  7520                           
  7521                           ;i2c2.c: 360: i2c_10bit_address_restart = 1;
  7522  04BD  01F7               	clrf	I2C2_ISR@i2c_10bit_address_restart
  7523  04BE  0AF7               	incf	I2C2_ISR@i2c_10bit_address_restart,f
  7524                           
  7525                           ;i2c2.c: 363: i2c2_state = S_MASTER_SEND_ADDR;
  7526  04BF  3002               	movlw	2
  7527  04C0  00F2               	movwf	??_I2C2_ISR
  7528  04C1  0872               	movf	??_I2C2_ISR,w
  7529  04C2  00D0               	movwf	_i2c2_state
  7530                           
  7531                           ;i2c2.c: 364: }
  7532                           ;i2c2.c: 366: break;
  7533  04C3  0008               	return
  7534  04C4                     i1l1877:	
  7535                           ;i2c2.c: 368: case S_MASTER_SEND_ADDR:
  7536                           
  7537                           
  7538                           ;i2c2.c: 381: if(i2c_10bit_address_restart != 1)
  7539  04C4  0377               	decf	I2C2_ISR@i2c_10bit_address_restart,w
  7540  04C5  1903               	btfsc	3,2
  7541  04C6  2CD8               	goto	i1l1897
  7542                           
  7543                           ;i2c2.c: 382: {
  7544                           ;i2c2.c: 384: i2c_address = p_i2c2_trb_current->address;
  7545  04C7  087B               	movf	_p_i2c2_trb_current,w
  7546  04C8  0086               	movwf	6
  7547  04C9  0187               	clrf	7
  7548  04CA  3F40               	moviw [0]fsr1
  7549  04CB  00E4               	movwf	I2C2_ISR@i2c_address
  7550  04CC  3F41               	moviw [1]fsr1
  7551  04CD  00E5               	movwf	I2C2_ISR@i2c_address+1
  7552                           
  7553                           ;i2c2.c: 385: pi2c_buf_ptr = p_i2c2_trb_current->pbuffer;
  7554  04CE  087B               	movf	_p_i2c2_trb_current,w
  7555  04CF  0086               	movwf	6
  7556  04D0  0187               	clrf	7
  7557  04D1  3F43               	moviw [3]fsr1
  7558  04D2  00F9               	movwf	I2C2_ISR@pi2c_buf_ptr
  7559                           
  7560                           ;i2c2.c: 386: i2c_bytes_left = p_i2c2_trb_current->length;
  7561  04D3  087B               	movf	_p_i2c2_trb_current,w
  7562  04D4  0086               	movwf	6
  7563  04D5  0187               	clrf	7
  7564  04D6  3F42               	moviw [2]fsr1
  7565  04D7  00F8               	movwf	I2C2_ISR@i2c_bytes_left
  7566  04D8                     i1l1897:	
  7567                           ;i2c2.c: 407: }
  7568                           ;i2c2.c: 408: }
  7569                           
  7570                           ;i2c2.c: 406: i2c_10bit_address_restart = 0;
  7571                           
  7572                           ;i2c2.c: 404: i2c2_state = S_MASTER_ACK_ADDR;
  7573                           
  7574                           ;i2c2.c: 400: else
  7575                           ;i2c2.c: 401: {
  7576                           ;i2c2.c: 403: SSP2BUF = i2c_address;
  7577                           
  7578                           ;i2c2.c: 399: }
  7579                           
  7580                           ;i2c2.c: 398: i2c2_state = S_MASTER_SEND_ADDR_10BIT_LSB;
  7581                           
  7582                           ;i2c2.c: 393: {
  7583                           ;i2c2.c: 397: SSP2BUF = 0xF0 | ((i2c_address >> 8) & 0x0006);
  7584                           
  7585                           ;i2c2.c: 391: {
  7586                           ;i2c2.c: 392: if (0 == i2c_10bit_address_restart)
  7587                           
  7588                           ;i2c2.c: 387: }
  7589                           ;i2c2.c: 390: if(!1 && (0x0 != i2c_address))
  7590                           
  7591                           
  7592                           ;i2c2.c: 409: else
  7593                           ;i2c2.c: 410: {
  7594                           ;i2c2.c: 412: SSP2BUF = i2c_address;
  7595  04D8  0864               	movf	I2C2_ISR@i2c_address,w
  7596  04D9  0023               	movlb	3	; select bank3
  7597  04DA  0096               	movwf	22	;volatile
  7598                           
  7599                           ;i2c2.c: 413: if(i2c_address & 0x01)
  7600  04DB  0020               	movlb	0	; select bank0
  7601  04DC  1C64               	btfss	I2C2_ISR@i2c_address,0
  7602  04DD  2CE3               	goto	i1l1903
  7603                           
  7604                           ;i2c2.c: 414: {
  7605                           ;i2c2.c: 416: i2c2_state = S_MASTER_ACK_ADDR;
  7606  04DE  3005               	movlw	5
  7607  04DF  00F2               	movwf	??_I2C2_ISR
  7608  04E0  0872               	movf	??_I2C2_ISR,w
  7609  04E1  00D0               	movwf	_i2c2_state
  7610                           
  7611                           ;i2c2.c: 417: }
  7612  04E2  0008               	return
  7613  04E3                     i1l1903:	
  7614                           
  7615                           ;i2c2.c: 418: else
  7616                           ;i2c2.c: 419: {
  7617                           ;i2c2.c: 421: i2c2_state = S_MASTER_SEND_DATA;
  7618  04E3  3003               	movlw	3
  7619  04E4  00F2               	movwf	??_I2C2_ISR
  7620  04E5  0872               	movf	??_I2C2_ISR,w
  7621  04E6  00D0               	movwf	_i2c2_state
  7622                           
  7623                           ;i2c2.c: 422: }
  7624                           ;i2c2.c: 423: }
  7625                           ;i2c2.c: 424: break;
  7626  04E7  0008               	return
  7627  04E8                     i1l122:	
  7628                           ;i2c2.c: 426: case S_MASTER_SEND_DATA:
  7629                           
  7630                           
  7631                           ;i2c2.c: 429: if(SSP2CON2bits.ACKSTAT)
  7632  04E8  0023               	movlb	3	; select bank3
  7633  04E9  1F1B               	btfss	27,6	;volatile
  7634  04EA  2CF6               	goto	i1l1911
  7635                           
  7636                           ;i2c2.c: 430: {
  7637                           ;i2c2.c: 432: i2c2_object.i2cErrors++;
  7638  04EB  3001               	movlw	1
  7639  04EC  00F2               	movwf	??_I2C2_ISR
  7640  04ED  0872               	movf	??_I2C2_ISR,w
  7641  04EE  0020               	movlb	0	; select bank0
  7642  04EF  07CF               	addwf	_i2c2_object+4,f
  7643                           
  7644                           ;i2c2.c: 435: SSP2CON2bits.ACKSTAT = 0;
  7645  04F0  0023               	movlb	3	; select bank3
  7646  04F1  131B               	bcf	27,6	;volatile
  7647                           
  7648                           ;i2c2.c: 438: I2C2_Stop(I2C2_DATA_NO_ACK);
  7649  04F2  3005               	movlw	5
  7650  04F3  3187  27B6         	fcall	_I2C2_Stop
  7651                           
  7652                           ;i2c2.c: 440: }
  7653  04F5  0008               	return
  7654  04F6                     i1l1911:	
  7655                           
  7656                           ;i2c2.c: 441: else
  7657                           ;i2c2.c: 442: {
  7658                           ;i2c2.c: 444: if(i2c_bytes_left-- == 0U)
  7659  04F6  3001               	movlw	1
  7660  04F7  02F8               	subwf	I2C2_ISR@i2c_bytes_left,f
  7661  04F8  0A78               	incf	I2C2_ISR@i2c_bytes_left,w
  7662  04F9  1D03               	btfss	3,2
  7663  04FA  2D0F               	goto	i1l1919
  7664                           
  7665                           ;i2c2.c: 445: {
  7666                           ;i2c2.c: 449: p_i2c2_trb_current++;
  7667  04FB  3004               	movlw	4
  7668  04FC  00F2               	movwf	??_I2C2_ISR
  7669  04FD  0872               	movf	??_I2C2_ISR,w
  7670  04FE  07FB               	addwf	_p_i2c2_trb_current,f
  7671                           
  7672                           ;i2c2.c: 452: if(--i2c2_trb_count == 0)
  7673  04FF  3001               	movlw	1
  7674  0500  02FC               	subwf	_i2c2_trb_count,f
  7675  0501  1D03               	btfss	3,2
  7676  0502  2D07               	goto	i1l126
  7677                           
  7678                           ;i2c2.c: 453: {
  7679                           ;i2c2.c: 454: I2C2_Stop(I2C2_MESSAGE_COMPLETE);
  7680  0503  3000               	movlw	0
  7681  0504  3187  27B6         	fcall	_I2C2_Stop
  7682                           
  7683                           ;i2c2.c: 455: }
  7684  0506  0008               	return
  7685  0507                     i1l126:	
  7686                           
  7687                           ;i2c2.c: 456: else
  7688                           ;i2c2.c: 457: {
  7689                           ;i2c2.c: 464: SSP2CON2bits.RSEN = 1;
  7690  0507  0023               	movlb	3	; select bank3
  7691  0508  149B               	bsf	27,1	;volatile
  7692                           
  7693                           ;i2c2.c: 467: i2c2_state = S_MASTER_SEND_ADDR;
  7694  0509  3002               	movlw	2
  7695  050A  00F2               	movwf	??_I2C2_ISR
  7696  050B  0872               	movf	??_I2C2_ISR,w
  7697  050C  0020               	movlb	0	; select bank0
  7698  050D  00D0               	movwf	_i2c2_state
  7699                           
  7700                           ;i2c2.c: 469: }
  7701                           ;i2c2.c: 470: }
  7702  050E  0008               	return
  7703  050F                     i1l1919:	
  7704                           
  7705                           ;i2c2.c: 471: else
  7706                           ;i2c2.c: 472: {
  7707                           ;i2c2.c: 474: SSP2BUF = *pi2c_buf_ptr++;
  7708  050F  0879               	movf	I2C2_ISR@pi2c_buf_ptr,w
  7709  0510  0086               	movwf	6
  7710  0511  0187               	clrf	7
  7711  0512  0801               	movf	1,w
  7712  0513  0023               	movlb	3	; select bank3
  7713  0514  0096               	movwf	22	;volatile
  7714  0515  3001               	movlw	1
  7715  0516  00F2               	movwf	??_I2C2_ISR
  7716  0517  0872               	movf	??_I2C2_ISR,w
  7717  0518  07F9               	addwf	I2C2_ISR@pi2c_buf_ptr,f
  7718                           
  7719                           ;i2c2.c: 475: }
  7720                           ;i2c2.c: 476: }
  7721                           ;i2c2.c: 477: break;
  7722  0519  0008               	return
  7723  051A                     i1l129:	
  7724                           ;i2c2.c: 479: case S_MASTER_ACK_ADDR:
  7725                           
  7726                           
  7727                           ;i2c2.c: 482: if(SSP2CON2bits.ACKSTAT)
  7728  051A  0023               	movlb	3	; select bank3
  7729  051B  1F1B               	btfss	27,6	;volatile
  7730  051C  2D28               	goto	i1l130
  7731                           
  7732                           ;i2c2.c: 483: {
  7733                           ;i2c2.c: 486: i2c2_object.i2cErrors++;
  7734  051D  3001               	movlw	1
  7735  051E  00F2               	movwf	??_I2C2_ISR
  7736  051F  0872               	movf	??_I2C2_ISR,w
  7737  0520  0020               	movlb	0	; select bank0
  7738  0521  07CF               	addwf	_i2c2_object+4,f
  7739                           
  7740                           ;i2c2.c: 489: I2C2_Stop(I2C2_MESSAGE_ADDRESS_NO_ACK);
  7741  0522  3004               	movlw	4
  7742  0523  3187  27B6         	fcall	_I2C2_Stop
  7743                           
  7744                           ;i2c2.c: 492: SSP2CON2bits.ACKSTAT = 0;
  7745  0525  0023               	movlb	3	; select bank3
  7746  0526  131B               	bcf	27,6	;volatile
  7747                           
  7748                           ;i2c2.c: 493: }
  7749  0527  0008               	return
  7750  0528                     i1l130:	
  7751                           
  7752                           ;i2c2.c: 494: else
  7753                           ;i2c2.c: 495: {
  7754                           ;i2c2.c: 496: SSP2CON2bits.RCEN = 1;
  7755  0528  159B               	bsf	27,3	;volatile
  7756                           
  7757                           ;i2c2.c: 497: i2c2_state = S_MASTER_ACK_RCV_DATA;
  7758  0529  3008               	movlw	8
  7759  052A  00F2               	movwf	??_I2C2_ISR
  7760  052B  0872               	movf	??_I2C2_ISR,w
  7761  052C  0020               	movlb	0	; select bank0
  7762  052D  00D0               	movwf	_i2c2_state
  7763                           
  7764                           ;i2c2.c: 498: }
  7765                           ;i2c2.c: 499: break;
  7766  052E  0008               	return
  7767  052F                     i1l1931:	
  7768                           ;i2c2.c: 501: case S_MASTER_RCV_DATA:
  7769                           
  7770                           
  7771                           ;i2c2.c: 506: i2c2_state = S_MASTER_ACK_RCV_DATA;
  7772  052F  3008               	movlw	8
  7773  0530  00F2               	movwf	??_I2C2_ISR
  7774  0531  0872               	movf	??_I2C2_ISR,w
  7775  0532  00D0               	movwf	_i2c2_state
  7776                           
  7777                           ;i2c2.c: 509: SSP2CON2bits.RCEN = 1;
  7778  0533  0023               	movlb	3	; select bank3
  7779  0534  159B               	bsf	27,3	;volatile
  7780                           
  7781                           ;i2c2.c: 511: break;
  7782  0535  0008               	return
  7783  0536                     i1l1935:	
  7784                           ;i2c2.c: 513: case S_MASTER_ACK_RCV_DATA:
  7785                           
  7786                           
  7787                           ;i2c2.c: 516: *pi2c_buf_ptr++ = SSP2BUF;
  7788  0536  0023               	movlb	3	; select bank3
  7789  0537  0816               	movf	22,w	;volatile
  7790  0538  00F2               	movwf	??_I2C2_ISR
  7791  0539  0879               	movf	I2C2_ISR@pi2c_buf_ptr,w
  7792  053A  0086               	movwf	6
  7793  053B  0187               	clrf	7
  7794  053C  0872               	movf	??_I2C2_ISR,w
  7795  053D  0081               	movwf	1
  7796  053E  3001               	movlw	1
  7797  053F  00F2               	movwf	??_I2C2_ISR
  7798  0540  0872               	movf	??_I2C2_ISR,w
  7799  0541  07F9               	addwf	I2C2_ISR@pi2c_buf_ptr,f
  7800                           
  7801                           ;i2c2.c: 519: if(--i2c_bytes_left)
  7802  0542  3001               	movlw	1
  7803  0543  02F8               	subwf	I2C2_ISR@i2c_bytes_left,f
  7804  0544  1903               	btfsc	3,2
  7805  0545  2D4D               	goto	i1l134
  7806                           
  7807                           ;i2c2.c: 520: {
  7808                           ;i2c2.c: 526: SSP2CON2bits.ACKDT = 0;
  7809  0546  129B               	bcf	27,5	;volatile
  7810                           
  7811                           ;i2c2.c: 529: i2c2_state = S_MASTER_RCV_DATA;
  7812  0547  3006               	movlw	6
  7813  0548  00F2               	movwf	??_I2C2_ISR
  7814  0549  0872               	movf	??_I2C2_ISR,w
  7815  054A  0020               	movlb	0	; select bank0
  7816  054B  00D0               	movwf	_i2c2_state
  7817                           
  7818                           ;i2c2.c: 530: }
  7819  054C  2D50               	goto	i1l1947
  7820  054D                     i1l134:	
  7821                           
  7822                           ;i2c2.c: 531: else
  7823                           ;i2c2.c: 532: {
  7824                           ;i2c2.c: 536: SSP2CON2bits.ACKDT = 1;
  7825  054D  169B               	bsf	27,5	;volatile
  7826                           
  7827                           ;i2c2.c: 538: I2C2_FunctionComplete();
  7828  054E  3187  27E5         	fcall	_I2C2_FunctionComplete
  7829  0550                     i1l1947:	
  7830                           
  7831                           ;i2c2.c: 539: }
  7832                           ;i2c2.c: 542: SSP2CON2bits.ACKEN = 1;
  7833  0550  0023               	movlb	3	; select bank3
  7834  0551  161B               	bsf	27,4	;volatile
  7835                           
  7836                           ;i2c2.c: 543: break;
  7837  0552  0008               	return
  7838  0553                     i1l1949:	
  7839                           ;i2c2.c: 545: case S_MASTER_RCV_STOP:
  7840                           
  7841                           
  7842                           ;i2c2.c: 546: case S_MASTER_SEND_STOP:
  7843                           ;i2c2.c: 549: I2C2_Stop(I2C2_MESSAGE_COMPLETE);
  7844  0553  3000               	movlw	0
  7845  0554  3187  27B6         	fcall	_I2C2_Stop
  7846                           
  7847                           ;i2c2.c: 550: break;
  7848  0556  0008               	return
  7849  0557                     i1l1951:	
  7850                           ;i2c2.c: 552: default:
  7851                           
  7852                           
  7853                           ;i2c2.c: 556: i2c2_object.i2cErrors++;
  7854  0557  3001               	movlw	1
  7855  0558  00F2               	movwf	??_I2C2_ISR
  7856  0559  0872               	movf	??_I2C2_ISR,w
  7857  055A  0020               	movlb	0	; select bank0
  7858  055B  07CF               	addwf	_i2c2_object+4,f
  7859                           
  7860                           ;i2c2.c: 557: I2C2_Stop(I2C2_LOST_STATE);
  7861  055C  3006               	movlw	6
  7862  055D  3187  27B6         	fcall	_I2C2_Stop
  7863                           
  7864                           ;i2c2.c: 560: }
  7865                           
  7866                           ;i2c2.c: 558: break;
  7867  055F  0008               	return
  7868  0560                     i1l1957:	
  7869  0560  0020               	movlb	0	; select bank0
  7870  0561  0850               	movf	_i2c2_state,w
  7871                           
  7872                           ; Switch size 1, requested type "space"
  7873                           ; Number of cases is 11, Range of values is 0 to 11
  7874                           ; switch strategies available:
  7875                           ; Name         Instructions Cycles
  7876                           ; direct_byte           30     6 (fixed)
  7877                           ; simple_byte           34    18 (average)
  7878                           ; jumptable            260     6 (fixed)
  7879                           ;	Chosen strategy is direct_byte
  7880  0562  0084               	movwf	4
  7881  0563  300C               	movlw	12
  7882  0564  0204               	subwf	4,w
  7883  0565  1803               	skipnc
  7884  0566  2D57               	goto	i1l1951
  7885  0567  3187               	movlp	high i1S2453
  7886  0568  3504               	lslf	4,w
  7887  0569  3E9E               	addlw	low i1S2453
  7888  056A  0082               	movwf	2
  7889  056B  0008               	return
  7890  056C                     __end_of_I2C2_ISR:	
  7891                           
  7892                           	psect	swtext1
  7893  079E                     __pswtext1:	
  7894  079E                     i1S2453:	
  7895  079E  3184  2C45         	ljmp	i1l100
  7896  07A0  3184  2C70         	ljmp	i1l105
  7897  07A2  3184  2CC4         	ljmp	i1l1877
  7898  07A4  3184  2CE8         	ljmp	i1l122
  7899  07A6  3185  2D53         	ljmp	i1l1949
  7900  07A8  3185  2D1A         	ljmp	i1l129
  7901  07AA  3185  2D2F         	ljmp	i1l1931
  7902  07AC  3185  2D53         	ljmp	i1l1949
  7903  07AE  3185  2D36         	ljmp	i1l1935
  7904  07B0  3185  2D57         	ljmp	i1l1951
  7905  07B2  3184  2C78         	ljmp	i1l106
  7906  07B4  3184  2C9B         	ljmp	i1l111
  7907                           
  7908                           	psect	text22
  7909  07B6                     __ptext22:	
  7910 ;; *************** function _I2C2_Stop *****************
  7911 ;; Defined at:
  7912 ;;		line 581 in file "mcc_generated_files/i2c2.c"
  7913 ;; Parameters:    Size  Location     Type
  7914 ;;  completion_c    1    wreg     enum E14260
  7915 ;; Auto vars:     Size  Location     Type
  7916 ;;  completion_c    1    1[COMMON] enum E14260
  7917 ;; Return value:  Size  Location     Type
  7918 ;;                  1    wreg      void 
  7919 ;; Registers used:
  7920 ;;		wreg, fsr1l, fsr1h, status,2, status,0
  7921 ;; Tracked objects:
  7922 ;;		On entry : 0/0
  7923 ;;		On exit  : 0/0
  7924 ;;		Unchanged: 0/0
  7925 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
  7926 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  7927 ;;      Locals:         1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  7928 ;;      Temps:          1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  7929 ;;      Totals:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  7930 ;;Total ram usage:        2 bytes
  7931 ;; Hardware stack levels used:    1
  7932 ;; This function calls:
  7933 ;;		Nothing
  7934 ;; This function is called by:
  7935 ;;		_I2C2_ISR
  7936 ;; This function uses a non-reentrant model
  7937 ;;
  7938                           
  7939                           
  7940                           ;psect for function _I2C2_Stop
  7941  07B6                     _I2C2_Stop:	
  7942                           
  7943                           ;incstack = 0
  7944                           ; Regs used in _I2C2_Stop: [wreg+fsr1l+fsr1h+status,2+status,0]
  7945                           ;I2C2_Stop@completion_code stored from wreg
  7946  07B6  00F1               	movwf	I2C2_Stop@completion_code
  7947                           
  7948                           ;i2c2.c: 584: SSP2CON2bits.PEN = 1;
  7949  07B7  0023               	movlb	3	; select bank3
  7950  07B8  151B               	bsf	27,2	;volatile
  7951                           
  7952                           ;i2c2.c: 587: if (p_i2c2_current->pTrFlag != (0))
  7953  07B9  087A               	movf	_p_i2c2_current,w
  7954  07BA  3E02               	addlw	2
  7955  07BB  0086               	movwf	6
  7956  07BC  0187               	clrf	7
  7957  07BD  0801               	movf	1,w
  7958  07BE  1903               	btfsc	3,2
  7959  07BF  2FCB               	goto	i1l1633
  7960                           
  7961                           ;i2c2.c: 588: {
  7962                           ;i2c2.c: 590: *(p_i2c2_current->pTrFlag) = completion_code;
  7963  07C0  0871               	movf	I2C2_Stop@completion_code,w
  7964  07C1  00F0               	movwf	??_I2C2_Stop
  7965  07C2  087A               	movf	_p_i2c2_current,w
  7966  07C3  3E02               	addlw	2
  7967  07C4  0086               	movwf	6
  7968  07C5  0187               	clrf	7
  7969  07C6  0801               	movf	1,w
  7970  07C7  0086               	movwf	6
  7971  07C8  0187               	clrf	7
  7972  07C9  0870               	movf	??_I2C2_Stop,w
  7973  07CA  0081               	movwf	1
  7974  07CB                     i1l1633:	
  7975                           
  7976                           ;i2c2.c: 591: }
  7977                           ;i2c2.c: 594: i2c2_state = S_MASTER_IDLE;
  7978  07CB  0020               	movlb	0	; select bank0
  7979  07CC  01D0               	clrf	_i2c2_state
  7980  07CD  0008               	return
  7981  07CE                     __end_of_I2C2_Stop:	
  7982                           
  7983                           	psect	text23
  7984  07E5                     __ptext23:	
  7985 ;; *************** function _I2C2_FunctionComplete *****************
  7986 ;; Defined at:
  7987 ;;		line 563 in file "mcc_generated_files/i2c2.c"
  7988 ;; Parameters:    Size  Location     Type
  7989 ;;		None
  7990 ;; Auto vars:     Size  Location     Type
  7991 ;;		None
  7992 ;; Return value:  Size  Location     Type
  7993 ;;                  1    wreg      void 
  7994 ;; Registers used:
  7995 ;;		wreg, status,2, status,0
  7996 ;; Tracked objects:
  7997 ;;		On entry : 0/0
  7998 ;;		On exit  : 0/0
  7999 ;;		Unchanged: 0/0
  8000 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
  8001 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  8002 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  8003 ;;      Temps:          1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  8004 ;;      Totals:         1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  8005 ;;Total ram usage:        1 bytes
  8006 ;; Hardware stack levels used:    1
  8007 ;; This function calls:
  8008 ;;		Nothing
  8009 ;; This function is called by:
  8010 ;;		_I2C2_ISR
  8011 ;; This function uses a non-reentrant model
  8012 ;;
  8013                           
  8014                           
  8015                           ;psect for function _I2C2_FunctionComplete
  8016  07E5                     _I2C2_FunctionComplete:	
  8017                           
  8018                           ;i2c2.c: 567: p_i2c2_trb_current++;
  8019                           
  8020                           ;incstack = 0
  8021                           ; Regs used in _I2C2_FunctionComplete: [wreg+status,2+status,0]
  8022  07E5  3004               	movlw	4
  8023  07E6  00F0               	movwf	??_I2C2_FunctionComplete
  8024  07E7  0870               	movf	??_I2C2_FunctionComplete,w
  8025  07E8  07FB               	addwf	_p_i2c2_trb_current,f
  8026                           
  8027                           ;i2c2.c: 570: if(--i2c2_trb_count == 0)
  8028  07E9  3001               	movlw	1
  8029  07EA  02FC               	subwf	_i2c2_trb_count,f
  8030  07EB  1D03               	btfss	3,2
  8031  07EC  2FF3               	goto	i1l141
  8032                           
  8033                           ;i2c2.c: 571: {
  8034                           ;i2c2.c: 572: i2c2_state = S_MASTER_SEND_STOP;
  8035  07ED  3004               	movlw	4
  8036  07EE  00F0               	movwf	??_I2C2_FunctionComplete
  8037  07EF  0870               	movf	??_I2C2_FunctionComplete,w
  8038  07F0  0020               	movlb	0	; select bank0
  8039  07F1  00D0               	movwf	_i2c2_state
  8040                           
  8041                           ;i2c2.c: 573: }
  8042  07F2  0008               	return
  8043  07F3                     i1l141:	
  8044                           
  8045                           ;i2c2.c: 574: else
  8046                           ;i2c2.c: 575: {
  8047                           ;i2c2.c: 576: i2c2_state = S_MASTER_RESTART;
  8048  07F3  0020               	movlb	0	; select bank0
  8049  07F4  01D0               	clrf	_i2c2_state
  8050  07F5  0AD0               	incf	_i2c2_state,f
  8051  07F6  0008               	return
  8052  07F7                     __end_of_I2C2_FunctionComplete:	
  8053                           
  8054                           	psect	text24
  8055  0003                     __ptext24:	
  8056 ;; *************** function _I2C2_BusCollisionISR *****************
  8057 ;; Defined at:
  8058 ;;		line 728 in file "mcc_generated_files/i2c2.c"
  8059 ;; Parameters:    Size  Location     Type
  8060 ;;		None
  8061 ;; Auto vars:     Size  Location     Type
  8062 ;;		None
  8063 ;; Return value:  Size  Location     Type
  8064 ;;                  1    wreg      void 
  8065 ;; Registers used:
  8066 ;;		None
  8067 ;; Tracked objects:
  8068 ;;		On entry : 0/0
  8069 ;;		On exit  : 0/0
  8070 ;;		Unchanged: 0/0
  8071 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
  8072 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  8073 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  8074 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  8075 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  8076 ;;Total ram usage:        0 bytes
  8077 ;; Hardware stack levels used:    1
  8078 ;; This function calls:
  8079 ;;		Nothing
  8080 ;; This function is called by:
  8081 ;;		_INTERRUPT_InterruptManager
  8082 ;; This function uses a non-reentrant model
  8083 ;;
  8084                           
  8085                           
  8086                           ;psect for function _I2C2_BusCollisionISR
  8087  0003                     _I2C2_BusCollisionISR:	
  8088                           
  8089                           ;incstack = 0
  8090                           ; Regs used in _I2C2_BusCollisionISR: []
  8091  0003  0008               	return
  8092  0004                     __end_of_I2C2_BusCollisionISR:	
  8093  007E                     btemp	set	126	;btemp
  8094  007E                     int$flags	set	126
  8095  007E                     wtemp0	set	126


Data Sizes:
    Strings     316
    Constant    18
    Data        0
    BSS         33
    Persistent  0
    Stack       0

Auto Spaces:
    Space          Size  Autos    Used
    COMMON           14      7      13
    BANK0            80     43      70
    BANK1            80      0       0
    BANK2            80      0       0
    BANK3            80      0       0
    BANK4            80      0       0
    BANK5            80      0       0
    BANK6            80      0       0
    BANK7            80      0       0
    BANK8            80      0       0
    BANK9            80      0       0
    BANK10           80      0       0
    BANK11           80      0       0
    BANK12           48      0       0

Pointer List with Targets:

    i2c2_tr_queue.ptrb_list.pbuffer	PTR unsigned char  size(1) Largest target is 1
		 -> EMC1001_PrintTemp@templo(BANK0[1]), EMC1001_PrintTemp@temp(BANK0[1]), EMC1001_PrintInfo@templo(BANK0[1]), EMC1001_PrintInfo@temp(BANK0[1]), 
		 -> EMC1001_PrintInfo@data(BANK0[1]), EMC1001_Read@reg(BANK0[1]), 

    EMC1001_Read@trb.pbuffer	PTR unsigned char  size(1) Largest target is 1
		 -> EMC1001_PrintTemp@templo(BANK0[1]), EMC1001_PrintTemp@temp(BANK0[1]), EMC1001_PrintInfo@templo(BANK0[1]), EMC1001_PrintInfo@temp(BANK0[1]), 
		 -> EMC1001_PrintInfo@data(BANK0[1]), EMC1001_Read@reg(BANK0[1]), 

    i2c2_tr_queue.pTrFlag	PTR enum E14260 size(1) Largest target is 1
		 -> EMC1001_Read@status(BANK0[1]), 

    i2c2_tr_queue.ptrb_list	PTR struct . size(1) Largest target is 10
		 -> EMC1001_Read@trb(BANK0[8]), I2C2_MasterRead@trBlock(BANK0[4]), I2C2_MasterWrite@trBlock(BANK0[4]), 

    cputs@s	PTR const unsigned char  size(2) Largest target is 43
		 -> STR_14(CODE[2]), STR_8(CODE[2]), STR_2(CODE[43]), 

    puts@s	PTR const unsigned char  size(2) Largest target is 43
		 -> STR_14(CODE[2]), STR_8(CODE[2]), STR_2(CODE[43]), 

    printf$731	PTR const unsigned char  size(2) Largest target is 17
		 -> STR_18(CODE[17]), STR_17(CODE[17]), 

    printf@f	PTR const unsigned char  size(2) Largest target is 33
		 -> STR_15(CODE[30]), STR_13(CODE[26]), STR_12(CODE[22]), STR_11(CODE[32]), 
		 -> STR_10(CODE[33]), STR_9(CODE[21]), STR_7(CODE[16]), STR_6(CODE[23]), 
		 -> STR_3(CODE[24]), STR_1(CODE[2]), 

    printf@cp	PTR const unsigned char  size(2) Largest target is 7
		 -> STR_16(CODE[7]), STR_5(CODE[1]), STR_4(CODE[3]), I2C2_ISR@i2c_address(BANK0[2]), 

    printf@ap	PTR void [1] size(1) Largest target is 2
		 -> ?_printf(BANK0[2]), 

    EMC1001_PrintInfo$682	PTR const unsigned char  size(2) Largest target is 3
		 -> STR_5(CODE[1]), STR_4(CODE[3]), 

    EMC1001_Read@pData	PTR unsigned char  size(1) Largest target is 1
		 -> EMC1001_PrintTemp@templo(BANK0[1]), EMC1001_PrintTemp@temp(BANK0[1]), EMC1001_PrintInfo@templo(BANK0[1]), EMC1001_PrintInfo@temp(BANK0[1]), 
		 -> EMC1001_PrintInfo@data(BANK0[1]), 

    I2C2_MasterWriteTRBBuild@pdata	PTR unsigned char  size(1) Largest target is 1
		 -> EMC1001_Read@reg(BANK0[1]), 

    I2C2_MasterWriteTRBBuild@ptrb.pbuffer	PTR unsigned char  size(1) Largest target is 1
		 -> EMC1001_PrintTemp@templo(BANK0[1]), EMC1001_PrintTemp@temp(BANK0[1]), EMC1001_PrintInfo@templo(BANK0[1]), EMC1001_PrintInfo@temp(BANK0[1]), 
		 -> EMC1001_PrintInfo@data(BANK0[1]), EMC1001_Read@reg(BANK0[1]), 

    I2C2_MasterWriteTRBBuild@ptrb	PTR struct . size(1) Largest target is 10
		 -> EMC1001_Read@trb(BANK0[8]), I2C2_MasterWrite@trBlock(BANK0[4]), 

    I2C2_MasterReadTRBBuild@pdata	PTR unsigned char  size(1) Largest target is 1
		 -> EMC1001_PrintTemp@templo(BANK0[1]), EMC1001_PrintTemp@temp(BANK0[1]), EMC1001_PrintInfo@templo(BANK0[1]), EMC1001_PrintInfo@temp(BANK0[1]), 
		 -> EMC1001_PrintInfo@data(BANK0[1]), 

    I2C2_MasterReadTRBBuild@ptrb.pbuffer	PTR unsigned char  size(1) Largest target is 1
		 -> EMC1001_PrintTemp@templo(BANK0[1]), EMC1001_PrintTemp@temp(BANK0[1]), EMC1001_PrintInfo@templo(BANK0[1]), EMC1001_PrintInfo@temp(BANK0[1]), 
		 -> EMC1001_PrintInfo@data(BANK0[1]), EMC1001_Read@reg(BANK0[1]), 

    I2C2_MasterReadTRBBuild@ptrb	PTR struct . size(1) Largest target is 10
		 -> EMC1001_Read@trb(BANK0[8]), I2C2_MasterRead@trBlock(BANK0[4]), 

    i2c2_object.pTrTail.ptrb_list.pbuffer	PTR unsigned char  size(1) Largest target is 1
		 -> EMC1001_PrintTemp@templo(BANK0[1]), EMC1001_PrintTemp@temp(BANK0[1]), EMC1001_PrintInfo@templo(BANK0[1]), EMC1001_PrintInfo@temp(BANK0[1]), 
		 -> EMC1001_PrintInfo@data(BANK0[1]), EMC1001_Read@reg(BANK0[1]), 

    i2c2_object.pTrTail.pTrFlag	PTR enum E14260 size(1) Largest target is 1
		 -> EMC1001_Read@status(BANK0[1]), 

    i2c2_object.pTrTail.ptrb_list	PTR struct . size(1) Largest target is 10
		 -> EMC1001_Read@trb(BANK0[8]), I2C2_MasterRead@trBlock(BANK0[4]), I2C2_MasterWrite@trBlock(BANK0[4]), 

    I2C2_MasterTRBInsert@ptrb_list	PTR struct . size(1) Largest target is 10
		 -> EMC1001_Read@trb(BANK0[8]), I2C2_MasterRead@trBlock(BANK0[4]), I2C2_MasterWrite@trBlock(BANK0[4]), 

    I2C2_MasterTRBInsert@pflag	PTR enum E14260 size(1) Largest target is 1
		 -> EMC1001_Read@status(BANK0[1]), 

    F14372.pbuffer	PTR unsigned char  size(1) Largest target is 1
		 -> EMC1001_PrintTemp@templo(BANK0[1]), EMC1001_PrintTemp@temp(BANK0[1]), EMC1001_PrintInfo@templo(BANK0[1]), EMC1001_PrintInfo@temp(BANK0[1]), 
		 -> EMC1001_PrintInfo@data(BANK0[1]), EMC1001_Read@reg(BANK0[1]), 

    F14367.pbuffer	PTR unsigned char  size(1) Largest target is 1
		 -> EMC1001_PrintTemp@templo(BANK0[1]), EMC1001_PrintTemp@temp(BANK0[1]), EMC1001_PrintInfo@templo(BANK0[1]), EMC1001_PrintInfo@temp(BANK0[1]), 
		 -> EMC1001_PrintInfo@data(BANK0[1]), EMC1001_Read@reg(BANK0[1]), 

    I2C2_ISR@pi2c_buf_ptr	PTR unsigned char  size(1) Largest target is 2
		 -> EMC1001_PrintTemp@templo(BANK0[1]), EMC1001_PrintTemp@temp(BANK0[1]), EMC1001_PrintInfo@templo(BANK0[1]), EMC1001_PrintInfo@temp(BANK0[1]), 
		 -> EMC1001_PrintInfo@data(BANK0[1]), EMC1001_Read@reg(BANK0[1]), I2C2_ISR@i2c_address(BANK0[2]), NULL(NULL[0]), 

    S87$pbuffer	PTR unsigned char  size(1) Largest target is 1
		 -> EMC1001_PrintTemp@templo(BANK0[1]), EMC1001_PrintTemp@temp(BANK0[1]), EMC1001_PrintInfo@templo(BANK0[1]), EMC1001_PrintInfo@temp(BANK0[1]), 
		 -> EMC1001_PrintInfo@data(BANK0[1]), EMC1001_Read@reg(BANK0[1]), 

    p_i2c2_trb_current.pbuffer	PTR unsigned char  size(1) Largest target is 1
		 -> EMC1001_PrintTemp@templo(BANK0[1]), EMC1001_PrintTemp@temp(BANK0[1]), EMC1001_PrintInfo@templo(BANK0[1]), EMC1001_PrintInfo@temp(BANK0[1]), 
		 -> EMC1001_PrintInfo@data(BANK0[1]), EMC1001_Read@reg(BANK0[1]), 

    p_i2c2_trb_current	PTR struct . size(1) Largest target is 10
		 -> EMC1001_Read@trb(BANK0[8]), I2C2_MasterRead@trBlock(BANK0[4]), I2C2_MasterWrite@trBlock(BANK0[4]), NULL(NULL[0]), 

    i2c2_object.pTrHead.pTrFlag	PTR enum E14260 size(1) Largest target is 1
		 -> EMC1001_Read@status(BANK0[1]), 

    i2c2_object.pTrHead.ptrb_list	PTR struct . size(1) Largest target is 10
		 -> EMC1001_Read@trb(BANK0[8]), I2C2_MasterRead@trBlock(BANK0[4]), I2C2_MasterWrite@trBlock(BANK0[4]), 

    S99$pTrFlag	PTR enum E14260 size(1) Largest target is 1
		 -> EMC1001_Read@status(BANK0[1]), 

    p_i2c2_current.pTrFlag	PTR enum E14260 size(1) Largest target is 1
		 -> EMC1001_Read@status(BANK0[1]), 

    S99$ptrb_list	PTR struct . size(1) Largest target is 10
		 -> EMC1001_Read@trb(BANK0[8]), I2C2_MasterRead@trBlock(BANK0[4]), I2C2_MasterWrite@trBlock(BANK0[4]), 

    p_i2c2_current.ptrb_list	PTR struct . size(1) Largest target is 10
		 -> EMC1001_Read@trb(BANK0[8]), I2C2_MasterRead@trBlock(BANK0[4]), I2C2_MasterWrite@trBlock(BANK0[4]), 

    p_i2c2_current	PTR struct . size(1) Largest target is 5
		 -> i2c2_tr_queue(BANK0[3]), NULL(NULL[0]), 

    S110$pTrHead	PTR struct . size(1) Largest target is 5
		 -> i2c2_tr_queue(BANK0[3]), 

    i2c2_object.pTrHead	PTR struct . size(1) Largest target is 5
		 -> i2c2_tr_queue(BANK0[3]), 

    S110$pTrTail	PTR struct . size(1) Largest target is 5
		 -> i2c2_tr_queue(BANK0[3]), 

    i2c2_object.pTrTail	PTR struct . size(1) Largest target is 5
		 -> i2c2_tr_queue(BANK0[3]), 


Critical Paths under _main in COMMON

    None.

Critical Paths under _INTERRUPT_InterruptManager in COMMON

    _INTERRUPT_InterruptManager->_I2C2_ISR
    _I2C2_ISR->_I2C2_Stop

Critical Paths under _main in BANK0

    _main->_EMC1001_PrintInfo
    _SYSTEM_Initialize->_I2C2_Initialize
    _SYSTEM_Initialize->_PIN_MANAGER_Initialize
    _EMC1001_PrintTemp->_printf
    _EMC1001_PrintInfo->_printf
    _puts->_cputs
    _cputs->_putch
    _printf->___lwmod
    _putch->_EUSART_Write
    ___lwmod->___lwdiv
    _EMC1001_Read->_I2C2_MasterReadTRBBuild
    _EMC1001_Read->_I2C2_MasterWriteTRBBuild

Critical Paths under _INTERRUPT_InterruptManager in BANK0

    None.

Critical Paths under _main in BANK1

    None.

Critical Paths under _INTERRUPT_InterruptManager in BANK1

    None.

Critical Paths under _main in BANK2

    None.

Critical Paths under _INTERRUPT_InterruptManager in BANK2

    None.

Critical Paths under _main in BANK3

    None.

Critical Paths under _INTERRUPT_InterruptManager in BANK3

    None.

Critical Paths under _main in BANK4

    None.

Critical Paths under _INTERRUPT_InterruptManager in BANK4

    None.

Critical Paths under _main in BANK5

    None.

Critical Paths under _INTERRUPT_InterruptManager in BANK5

    None.

Critical Paths under _main in BANK6

    None.

Critical Paths under _INTERRUPT_InterruptManager in BANK6

    None.

Critical Paths under _main in BANK7

    None.

Critical Paths under _INTERRUPT_InterruptManager in BANK7

    None.

Critical Paths under _main in BANK8

    None.

Critical Paths under _INTERRUPT_InterruptManager in BANK8

    None.

Critical Paths under _main in BANK9

    None.

Critical Paths under _INTERRUPT_InterruptManager in BANK9

    None.

Critical Paths under _main in BANK10

    None.

Critical Paths under _INTERRUPT_InterruptManager in BANK10

    None.

Critical Paths under _main in BANK11

    None.

Critical Paths under _INTERRUPT_InterruptManager in BANK11

    None.

Critical Paths under _main in BANK12

    None.

Critical Paths under _INTERRUPT_InterruptManager in BANK12

    None.

Call Graph Tables:

 ---------------------------------------------------------------------------------
 (Depth) Function   	        Calls       Base Space   Used Autos Params    Refs
 ---------------------------------------------------------------------------------
 (0) _main                                                 1     1      0   16050
                                             42 BANK0      1     1      0
                  _EMC1001_PrintInfo
                  _EMC1001_PrintTemp
                  _SYSTEM_Initialize
                             _printf
 ---------------------------------------------------------------------------------
 (1) _SYSTEM_Initialize                                    0     0      0      34
                  _EUSART_Initialize
                    _I2C2_Initialize
              _OSCILLATOR_Initialize
             _PIN_MANAGER_Initialize
 ---------------------------------------------------------------------------------
 (2) _PIN_MANAGER_Initialize                               1     1      0      34
                                              0 BANK0      1     1      0
 ---------------------------------------------------------------------------------
 (2) _OSCILLATOR_Initialize                                0     0      0       0
 ---------------------------------------------------------------------------------
 (2) _I2C2_Initialize                                      1     1      0       0
                                              0 BANK0      1     1      0
 ---------------------------------------------------------------------------------
 (2) _EUSART_Initialize                                    0     0      0       0
 ---------------------------------------------------------------------------------
 (1) _EMC1001_PrintTemp                                    4     4      0    6089
                                             35 BANK0      4     4      0
                       _EMC1001_Read
                             ___wmul
                             _printf
 ---------------------------------------------------------------------------------
 (1) _EMC1001_PrintInfo                                    7     7      0    7258
                                             35 BANK0      7     7      0
                       _EMC1001_Read
                             ___wmul
                             _printf
                               _puts
 ---------------------------------------------------------------------------------
 (2) _puts                                                 2     0      2     528
                                              5 BANK0      2     0      2
                              _cputs
                              _putch
 ---------------------------------------------------------------------------------
 (3) _cputs                                                3     1      2     204
                                              2 BANK0      3     1      2
                              _putch
 ---------------------------------------------------------------------------------
 (1) _printf                                              27    21      6    2669
                                             14 BANK0     21    15      6
                            ___lwdiv
                            ___lwmod
                             ___wmul (ARG)
                              _putch
 ---------------------------------------------------------------------------------
 (2) _putch                                                1     1      0      62
                                              1 BANK0      1     1      0
                       _EUSART_Write
 ---------------------------------------------------------------------------------
 (3) _EUSART_Write                                         1     1      0      31
                                              0 BANK0      1     1      0
 ---------------------------------------------------------------------------------
 (2) ___lwmod                                              6     2      4     287
                                              8 BANK0      6     2      4
                            ___lwdiv (ARG)
 ---------------------------------------------------------------------------------
 (2) ___lwdiv                                              8     4      4     418
                                              0 BANK0      8     4      4
 ---------------------------------------------------------------------------------
 (2) ___wmul                                               6     2      4     598
                                              0 BANK0      6     2      4
 ---------------------------------------------------------------------------------
 (2) _EMC1001_Read                                         5     4      1    2581
                                              7 BANK0      5     4      1
            _I2C2_MasterReadTRBBuild
               _I2C2_MasterTRBInsert
           _I2C2_MasterWriteTRBBuild
 ---------------------------------------------------------------------------------
 (3) _I2C2_MasterWriteTRBBuild                             7     3      4     576
                                              0 BANK0      7     3      4
 ---------------------------------------------------------------------------------
 (3) _I2C2_MasterTRBInsert                                 4     2      2     516
                                              0 BANK0      4     2      2
 ---------------------------------------------------------------------------------
 (3) _I2C2_MasterReadTRBBuild                              7     3      4     598
                                              0 BANK0      7     3      4
 ---------------------------------------------------------------------------------
 Estimated maximum stack depth 3
 ---------------------------------------------------------------------------------
 (Depth) Function   	        Calls       Base Space   Used Autos Params    Refs
 ---------------------------------------------------------------------------------
 (6) _INTERRUPT_InterruptManager                           1     1      0      22
                                              6 COMMON     1     1      0
               _I2C2_BusCollisionISR
                           _I2C2_ISR
 ---------------------------------------------------------------------------------
 (7) _I2C2_ISR                                             4     4      0      22
                                              2 COMMON     4     4      0
              _I2C2_FunctionComplete
                          _I2C2_Stop
 ---------------------------------------------------------------------------------
 (8) _I2C2_Stop                                            2     2      0      22
                                              0 COMMON     2     2      0
 ---------------------------------------------------------------------------------
 (8) _I2C2_FunctionComplete                                1     1      0       0
                                              0 COMMON     1     1      0
 ---------------------------------------------------------------------------------
 (7) _I2C2_BusCollisionISR                                 0     0      0       0
 ---------------------------------------------------------------------------------
 Estimated maximum stack depth 8
 ---------------------------------------------------------------------------------

 Call Graph Graphs:

 _main (ROOT)
   _EMC1001_PrintInfo
     _EMC1001_Read
       _I2C2_MasterReadTRBBuild
       _I2C2_MasterTRBInsert
       _I2C2_MasterWriteTRBBuild
     ___wmul
     _printf
       ___lwdiv
       ___lwmod
         ___lwdiv (ARG)
       ___wmul (ARG)
       _putch (ARG)
         _EUSART_Write
     _puts
       _cputs
         _putch
           _EUSART_Write
       _putch
         _EUSART_Write
   _EMC1001_PrintTemp
     _EMC1001_Read
       _I2C2_MasterReadTRBBuild
       _I2C2_MasterTRBInsert
       _I2C2_MasterWriteTRBBuild
     ___wmul
     _printf
       ___lwdiv
       ___lwmod
         ___lwdiv (ARG)
       ___wmul (ARG)
       _putch (ARG)
         _EUSART_Write
   _SYSTEM_Initialize
     _EUSART_Initialize
     _I2C2_Initialize
     _OSCILLATOR_Initialize
     _PIN_MANAGER_Initialize
   _printf
     ___lwdiv
     ___lwmod
       ___lwdiv (ARG)
     ___wmul (ARG)
     _putch (ARG)
       _EUSART_Write

 _INTERRUPT_InterruptManager (ROOT)
   _I2C2_BusCollisionISR
   _I2C2_ISR
     _I2C2_FunctionComplete
     _I2C2_Stop

 Address spaces:
Name               Size   Autos  Total    Cost      Usage
BIGRAM             3F0      0       0       0        0.0%
EEDATA             100      0       0       0        0.0%
NULL                 0      0       0       0        0.0%
CODE                 0      0       0       0        0.0%
BITCOMMON            E      0       0       1        0.0%
BITSFR0              0      0       0       1        0.0%
SFR0                 0      0       0       1        0.0%
COMMON               E      7       D       2       92.9%
BITSFR1              0      0       0       2        0.0%
SFR1                 0      0       0       2        0.0%
BITSFR2              0      0       0       3        0.0%
SFR2                 0      0       0       3        0.0%
STACK                0      0       0       3        0.0%
BITBANK0            50      0       0       4        0.0%
BITSFR3              0      0       0       4        0.0%
SFR3                 0      0       0       4        0.0%
BANK0               50     2B      46       5       87.5%
BITSFR4              0      0       0       5        0.0%
SFR4                 0      0       0       5        0.0%
BITBANK1            50      0       0       6        0.0%
BITSFR5              0      0       0       6        0.0%
SFR5                 0      0       0       6        0.0%
BANK1               50      0       0       7        0.0%
BITSFR6              0      0       0       7        0.0%
SFR6                 0      0       0       7        0.0%
BITBANK2            50      0       0       8        0.0%
BITSFR7              0      0       0       8        0.0%
SFR7                 0      0       0       8        0.0%
BANK2               50      0       0       9        0.0%
BITSFR8              0      0       0       9        0.0%
SFR8                 0      0       0       9        0.0%
BITBANK3            50      0       0      10        0.0%
BITSFR9              0      0       0      10        0.0%
SFR9                 0      0       0      10        0.0%
BANK3               50      0       0      11        0.0%
BITSFR10             0      0       0      11        0.0%
SFR10                0      0       0      11        0.0%
BITBANK4            50      0       0      12        0.0%
BITSFR11             0      0       0      12        0.0%
SFR11                0      0       0      12        0.0%
BANK4               50      0       0      13        0.0%
BITSFR12             0      0       0      13        0.0%
SFR12                0      0       0      13        0.0%
BITBANK5            50      0       0      14        0.0%
BITSFR13             0      0       0      14        0.0%
SFR13                0      0       0      14        0.0%
BANK5               50      0       0      15        0.0%
BITSFR14             0      0       0      15        0.0%
SFR14                0      0       0      15        0.0%
BITBANK6            50      0       0      16        0.0%
BITSFR15             0      0       0      16        0.0%
SFR15                0      0       0      16        0.0%
BANK6               50      0       0      17        0.0%
BITSFR16             0      0       0      17        0.0%
SFR16                0      0       0      17        0.0%
BITBANK7            50      0       0      18        0.0%
BITSFR17             0      0       0      18        0.0%
SFR17                0      0       0      18        0.0%
BANK7               50      0       0      19        0.0%
BITSFR18             0      0       0      19        0.0%
SFR18                0      0       0      19        0.0%
BITSFR19             0      0       0      20        0.0%
SFR19                0      0       0      20        0.0%
ABS                  0      0      53      20        0.0%
BITBANK8            50      0       0      21        0.0%
BITSFR20             0      0       0      21        0.0%
SFR20                0      0       0      21        0.0%
BANK8               50      0       0      22        0.0%
BITSFR21             0      0       0      22        0.0%
SFR21                0      0       0      22        0.0%
BITBANK9            50      0       0      23        0.0%
BITSFR22             0      0       0      23        0.0%
SFR22                0      0       0      23        0.0%
BANK9               50      0       0      24        0.0%
BITSFR23             0      0       0      24        0.0%
SFR23                0      0       0      24        0.0%
BITBANK10           50      0       0      25        0.0%
BITSFR24             0      0       0      25        0.0%
SFR24                0      0       0      25        0.0%
BANK10              50      0       0      26        0.0%
BITSFR25             0      0       0      26        0.0%
SFR25                0      0       0      26        0.0%
BITBANK11           50      0       0      27        0.0%
BITSFR26             0      0       0      27        0.0%
SFR26                0      0       0      27        0.0%
BANK11              50      0       0      28        0.0%
BITSFR27             0      0       0      28        0.0%
SFR27                0      0       0      28        0.0%
BITBANK12           30      0       0      29        0.0%
BITSFR28             0      0       0      29        0.0%
SFR28                0      0       0      29        0.0%
BANK12              30      0       0      30        0.0%
BITSFR29             0      0       0      30        0.0%
SFR29                0      0       0      30        0.0%
BITSFR30             0      0       0      31        0.0%
SFR30                0      0       0      31        0.0%
DATA                 0      0      53      31        0.0%
BITSFR31             0      0       0      32        0.0%
SFR31                0      0       0      32        0.0%


Microchip Technology PIC Macro Assembler V1.41 build -162212810 
Symbol Table                                                                                   Wed Mar 29 17:30:33 2017

                                  pc 0002                          __CFG_CP$OFF 0000  
              ?_I2C2_MasterTRBInsert 0020                                   l31 0FD5  
                ___wmul@multiplicand 0022       I2C2_MasterReadTRBBuild@address 0022  
                        __CFG_LVP$ON 0000                          __CFG_ZCD$ON 0000  
                                l412 0193                                  l390 00C7  
                                l377 00A2                                  l378 0057  
                                l395 00E9                                  l379 0058  
                                l494 0773                                  _GIE 005F  
                       __CFG_CPD$OFF 0000                    EMC1001_Read@pData 0027  
              __size_of_EMC1001_Read 003C                         __CFG_BORV$LO 0000  
                                wreg 0009                     __end_of_I2C2_ISR 056C  
                               l2215 0054                                 l2217 005A  
                               l2233 0082                                 l2137 07CE  
                               l2307 076D                                 l2245 00BB  
                               l2229 006D                                 l2341 01F5  
                               l2333 01BF                                 l2421 067B  
                               l1543 062E                                 l2271 010B  
                               l2407 064A                                 l1545 0633  
                               l2281 0148                                 l2273 0114  
                               l2337 01DA                                 l2329 01B0  
                               l2417 066A                                 l2409 0655  
                               l1539 0627                                 l1571 06E7  
                               l1563 06C9                                 l2371 02A6  
                               l2347 0218                                 l2419 0671  
                               l1549 063A                                 l1565 06D5  
                               l2277 011C                                 l2357 0240  
                               l1575 06F0                                 l2287 016A  
                               l2295 017D                                 l2279 0122  
                               l2375 02C1                                 l2359 025F  
                               l2391 05DB                                 l1593 0714  
                               l2297 0181                                 l2369 0287  
                               l1587 06FC                                 l2299 0038  
                               l2379 02DC                                 l1589 0708  
                               l1597 071D                                 l1797 06B4  
                               STR_1 0430                                 STR_2 02F6  
                               STR_3 039A                                 STR_4 042D  
                               STR_5 03DE                                 STR_6 03B2  
                               STR_7 0416                                 STR_8 03DD  
                               STR_9 03DF                                 u1115 06FF  
                               u1045 06CC                                 u1135 070E  
                               u2015 00E2                                 u1065 06D6  
                               u1145 0715                                 u2115 0774  
                               u1075 06E0                                 u2300 0653  
                               u2125 0779                                 u1085 06E8  
                               u2045 0104                                 u2205 0231  
                               _LATA 0016                                 _LATB 0017  
                               _LATC 0018                                 u2320 0668  
                               u1370 06BE                                 u2235 0278  
                               u2340 066F                                 u2360 0679  
                               u2285 05CC                                 u1930 05B1  
                               u2387 067F                                 _WPUA 0F39  
                               _WPUB 0F44                                 _WPUC 0F4F  
                               _WPUE 0F65                         __CFG_WRT$OFF 0000  
                      __CFG_FCMEN$ON 0000                                 _main 0640  
                               fsr0h 0005                                 fsr1h 0007  
                               indf0 0000                                 fsr0l 0004  
                               indf1 0001                                 fsr1l 0006  
                               btemp 007E                                 _puts 0FE8  
        I2C2_MasterReadTRBBuild@ptrb 0026                        __CFG_BOREN$ON 0000  
                               start 0020                   EMC1001_Read@status 002B  
                      __CFG_CSWEN$ON 0000                        __CFG_MCLRE$ON 0000  
                       _EMC1001_Read 0684                           _i2c2_state 0050  
                      ?_EUSART_Write 0070       __size_of_OSCILLATOR_Initialize 0009  
      __end_of_OSCILLATOR_Initialize 0800              _I2C2_MasterReadTRBBuild 0722  
                              ?_main 0070                                STR_10 0321  
                              STR_11 0342                                STR_12 03C9  
                              STR_13 0380                                STR_14 03DD  
                              STR_15 0362                                STR_16 0426  
                              STR_17 03F4                        __CFG_WDTE$OFF 0000  
                              STR_18 0405                    __end_of_I2C2_Stop 07CE  
                              ?_puts 0025                      __end_of___lwdiv 06F5  
                              i1l100 0445                                i1l111 049B  
                              i1l112 04A7                                i1l200 0013  
                              i1l105 0470                                i1l130 0528  
                              i1l122 04E8                                i1l106 0478  
                              i1l204 001B                                i1l141 07F3  
     __size_of_I2C2_FunctionComplete 0012                                i1l134 054D  
                              i1l126 0507                                i1l129 051A  
                    __end_of___lwmod 0722        __end_of_I2C2_FunctionComplete 07F7  
                              _OSCEN 0891                                _TRISA 0011  
                              _TRISB 0012                                _TRISC 0013  
                    __end_of_dpowers 02EE                                _cputs 07CE  
                              _putch 0FC7         I2C2_MasterReadTRBBuild@pdata 0020  
                              puts@s 0025                                status 0003  
                              wtemp0 007E              EMC1001_PrintInfo@templo 0048  
                  ??_I2C2_Initialize 0020                      __initialization 0022  
                       __end_of_main 0684               ??_I2C2_MasterTRBInsert 0022  
                       __end_of_puts 0FF4                       ??_EUSART_Write 0020  
        ?_INTERRUPT_InterruptManager 0070     __end_of_I2C2_MasterWriteTRBBuild 076A  
                             ??_main 004A                          _i2c2_object 004B  
                             ??_puts 0027                               ?_cputs 0022  
                             i1S2453 079E                               _ANSELA 0F38  
                             ?_putch 0070                               _ANSELB 0F43  
                             _ANSELC 0F4E                   __CFG_RSTOSC$HFINT1 0000  
                             _RC1REG 0119                               _RC0PPS 0F20  
                             _RC1STA 011D                               _RC3PPS 0F23  
                             _RC4PPS 0F24         __end_of_I2C2_BusCollisionISR 0004  
                             _ODCONA 0F3A                               _ODCONB 0F45  
                             _ODCONC 0F50                               i1l1633 07CB  
                             i1l1911 04F6                               i1l1903 04E3  
                             i1l1931 052F                               i1l1845 0463  
                             i1l1951 0557                               i1l1935 0536  
                             i1l1919 050F                               i1l1863 0496  
                             i1l1857 0484                               i1l1947 0550  
                             i1l1949 0553                               i1l1877 04C4  
                             i1l1957 0560                               i1l1897 04D8  
                     __CFG_WDTCCS$SC 0000                               _OSCFRQ 0893  
                             _TX1REG 011A                               _TX1STA 011E  
                     __CFG_PWRTE$OFF 0000                               ___wmul 076A  
                     _p_i2c2_current 007A                       __CFG_STVREN$ON 0000  
          ??_I2C2_MasterReadTRBBuild 0024                            ??___lwdiv 0024  
                          ??___lwmod 002C                            ?_I2C2_ISR 0070  
           I2C2_Stop@completion_code 0071                               _printf 0033  
      I2C2_MasterReadTRBBuild@length 0021                               cputs@s 0022  
                  _SYSTEM_Initialize 0FF4              __end_of__initialization 002F  
                 ?_SYSTEM_Initialize 0070                      EMC1001_Read@reg 002A  
                    EMC1001_Read@trb 0051              EMC1001_PrintTemp@templo 0046  
                     __pcstackCOMMON 0070                  ??_SYSTEM_Initialize 0021  
                      __end_of_cputs 07E5                       _i2c2_trb_count 007C  
                      __end_of_putch 0FCD                           ??_I2C2_ISR 0072  
           _I2C2_MasterWriteTRBBuild 074A         I2C2_MasterWriteTRBBuild@ptrb 0026  
                            ??_cputs 0024            __end_of_SYSTEM_Initialize 1000  
                            ??_putch 0021                _EMC1001_PrintInfo$682 0045  
                         __pbssBANK0 004B                 __end_of_EUSART_Write 0FDD  
                         __pmaintext 0640                              ?___wmul 0020  
                    __CFG_PPS1WAY$ON 0000                           __pintentry 0004  
                     _SSP2DATPPSbits 0EC9                 _I2C2_BusCollisionISR 0003  
                            ?_printf 002E                              _SP1BRGH 011C  
                            _SP1BRGL 011B    I2C2_ISR@i2c_10bit_address_restart 0077  
                            _OSCCON1 088D                              _OSCCON3 088F  
                          _I2C2_Stop 07B6                       _SSP2CLKPPSbits 0EC8  
                            _OSCTUNE 0892                              _SSP2ADD 0197  
                            _PPSLOCK 0E8F                              _SSP2BUF 0196  
                    _I2C2_Initialize 0786               I2C2_MasterRead@trBlock 0059  
                  _EMC1001_PrintInfo 0194                    _EMC1001_PrintTemp 05B3  
                 ?_EMC1001_PrintInfo 0070                   ?_EMC1001_PrintTemp 0070  
               __CFG_SCANE$available 0000                      __size_of___wmul 001C  
                            ___lwdiv 06C0                              ___lwmod 06F5  
              ?_I2C2_BusCollisionISR 0070            I2C2_MasterTRBInsert@count 0023  
                            __ptext1 0FF4                              __ptext2 056C  
                            __ptext3 07F7                              __ptext4 0786  
                            __ptext5 0FDD                              __ptext6 05B3  
                            __ptext7 0194                              __ptext8 0FE8  
                            __ptext9 07CE                  ??_EMC1001_PrintInfo 0043  
          I2C2_MasterTRBInsert@pflag 0021                  ??_EMC1001_PrintTemp 0043  
                    __size_of_printf 0161                    __end_of_hexpowers 02F6  
                            _dpowers 02E4                _OSCILLATOR_Initialize 07F7  
           ??_PIN_MANAGER_Initialize 0020                           ?_I2C2_Stop 0070  
              _I2C2_FunctionComplete 07E5           __size_of_SYSTEM_Initialize 000C  
                            clrloop0 0FCE                 end_of_initialization 002F  
          __end_of_EMC1001_PrintInfo 02E4            __end_of_EMC1001_PrintTemp 05FA  
                  _EUSART_Initialize 0FDD                   ?_EUSART_Initialize 0070  
                 _p_i2c2_trb_current 007B                              printf@c 0042  
                            printf@f 002E               I2C2_ISR@i2c_bytes_left 0078  
                       __pstringtext 02E4                           _printf$731 0039  
      __size_of_I2C2_MasterTRBInsert 0046                __CFG_WDTCPS$WDTCPS_31 0000  
                ??_EUSART_Initialize 0020                            _PORTAbits 000C  
                  __size_of_I2C2_ISR 013A              __end_of_I2C2_Initialize 079E  
              __size_of_EUSART_Write 000A                     __CFG_FEXTOSC$OFF 0000  
          __end_of_EUSART_Initialize 0FE8               ??_I2C2_BusCollisionISR 0070  
         ??_I2C2_MasterWriteTRBBuild 0024                       __end_of___wmul 0786  
                       _EUSART_Write 0FD3               ?_OSCILLATOR_Initialize 0070  
                     __end_of_printf 0194               ?_I2C2_FunctionComplete 0070  
                start_initialization 0022                          ??_I2C2_Stop 0070  
    __size_of_PIN_MANAGER_Initialize 0047                          putch@txData 0021  
         __size_of_EMC1001_PrintInfo 0150           __size_of_EMC1001_PrintTemp 0047  
    I2C2_MasterWriteTRBBuild@address 0022             ?_I2C2_MasterReadTRBBuild 0020  
                   __CFG_LPBOREN$OFF 0000                        ?_EMC1001_Read 0027  
                           ??___wmul 0024        I2C2_MasterWriteTRBBuild@pdata 0020  
               I2C2_ISR@pi2c_buf_ptr 0079                             ??_printf 0034  
                        __pbssCOMMON 0077                     ?_I2C2_Initialize 0070  
                          ___latbits 0002                        __pcstackBANK0 0020  
                      _i2c2_tr_queue 0061           __size_of_EUSART_Initialize 000B  
                   ___lwdiv@dividend 0022               _PIN_MANAGER_Initialize 056C  
                     ??_EMC1001_Read 0028                             ?___lwdiv 0020  
                           ?___lwmod 0028                             _I2C2_ISR 0432  
       ??_INTERRUPT_InterruptManager 0076                            __pswtext1 079E  
                           _BAUD1CON 011F                            _hexpowers 02EE  
                   ___lwdiv@quotient 0025                       __size_of_cputs 0017  
                     __size_of_putch 0006      __end_of_I2C2_MasterReadTRBBuild 074A  
                     ___wmul@product 0024                             _LATAbits 0016  
                          clear_ram0 0FCD                             _PIE3bits 0719  
__size_of_INTERRUPT_InterruptManager 001C                             _PIR3bits 070F  
                           _SSP2CON1 019A                             _SSP2CON3 019C  
                           _SSP2STAT 0199        I2C2_MasterTRBInsert@ptrb_list 0020  
                  ___wmul@multiplier 0020                           printf@flag 003F  
                         printf@prec 003B         __end_of_I2C2_MasterTRBInsert 0640  
              EMC1001_PrintInfo@data 0049                EMC1001_PrintInfo@temp 0047  
     I2C2_MasterWriteTRBBuild@length 0021              ??_OSCILLATOR_Initialize 0020  
                   __size_of___lwdiv 0035                     __size_of___lwmod 002D  
              EMC1001_PrintTemp@temp 0045              ??_I2C2_FunctionComplete 0070  
                    ___lwdiv@divisor 0020                      ___lwdiv@counter 0027  
                           __ptext10 0033                             __ptext11 0FC7  
                           __ptext12 0FD3                             __ptext21 0432  
                           __ptext13 06F5                             __ptext22 07B6  
                           __ptext14 06C0                             __ptext23 07E5  
                           __ptext15 076A                             __ptext24 0003  
                           __ptext16 0684                             __ptext17 074A  
                           __ptext18 05FA                             __ptext19 0722  
               __end_of_EMC1001_Read 06C0                         _SSP2CON1bits 019A  
                       _SSP2CON2bits 019B                        __size_of_main 0044  
                      __size_of_puts 000C                 __CFG_WDTCWS$WDTCWS_7 0000  
                         _RC1STAbits 011D                             int$flags 007E  
 __end_of_INTERRUPT_InterruptManager 0020           _INTERRUPT_InterruptManager 0004  
                          printf@idx 0038                            printf@val 0040  
            I2C2_MasterWrite@trBlock 005D        __size_of_I2C2_BusCollisionISR 0001  
        PIN_MANAGER_Initialize@state 0020     __size_of_I2C2_MasterReadTRBBuild 0028  
                         _INTCONbits 000B    __size_of_I2C2_MasterWriteTRBBuild 0020  
          ?_I2C2_MasterWriteTRBBuild 0020                             intlevel1 0000  
                   ___lwmod@dividend 002A                  I2C2_ISR@i2c_address 0064  
            ?_PIN_MANAGER_Initialize 0070                    __CFG_CLKOUTEN$OFF 0000  
                        _PPSLOCKbits 0E8F                             printf@ap 003E  
                           printf@cp 003C                 _I2C2_MasterTRBInsert 05FA  
                    ___lwmod@divisor 0028                      ___lwmod@counter 002D  
                 EUSART_Write@txData 0020       __end_of_PIN_MANAGER_Initialize 05B3  
           __size_of_I2C2_Initialize 0018                   __size_of_I2C2_Stop 0018  
